CHANGES
=======

18.2.0
------

* Fix resetting non-persistent fields when saving obj
* Update instance.availability\_zone during live migration
* pass endpoint interface to Ironic client
* Allow utime call to fail on qcow2 image base file
* Handle templated cell mappings in nova-status
* Handle missing exception in instance creation code
* Fix WeighedHost logging regression
* Check hosts have no instances for AZ rename
* Fix an error when generating a host ID
* Fix resource tracker updates during instance evacuation
* ironic: check fresh data when sync\_power\_state doesn't line up
* ironic: stop hammering ironic API in power sync loop
* Fix race in test\_volume\_swap\_server\_with\_error
* fix up numa-topology live migration hypervisor check
* Move legacy-grenade-dsvm-neutron-multinode-live-migration in-tree
* Fix legacy-grenade-dsvm-neutron-multinode-live-migration
* Avoid BadRequest error log on volume attachment
* Don't emit warning when ironic properties are zero
* Lock detach\_volume
* Fix a missing policy in test policy data
* Provide a useful error message when trying to update non-compute services
* Ignore VolumeAttachmentNotFound exception in compute.manager
* tox: Don't write byte code (maybe)
* Avoid redundant initialize\_connection on source post live migration
* Fix InstanceMapping to always default queued\_for\_delete=False
* PCI: do not force remove allocated devices
* Use X-Forwarded-Proto as origin protocol if present
* Don't call begin\_detaching when detaching volume from shelved vm
* Fix port dns\_name reset
* Skip checking of target\_dev for vhostuser
* Fix overcommit for NUMA-based instances
* Fix typo
* Fix using template cell urls with nova-manage
* Convert port to str when validate console port
* Fix incompatible version handling in BuildRequest
* Send context.global\_id on neutron calls
* libvirt: Add workaround to cleanup instance dir when using rbd
* Restore nova-consoleauth to install docs
* Add links to summit videos in user/cells.rst
* Removing pip-missing-reqs from default tox jobs
* Imported Translations from Zanata
* Ensure rbd auth fallback uses matching credentials
* Fix destination\_type attribute in the bdm\_v2 documentation
* Fix a broken link
* Exclude build request marker from server listing
* Fix a broken-link in nova doc
* Fix a broken-link in nova doc
* Fix an inaccurate link in nova doc
* Document using service user tokens for long running operations
* Handle unbound vif plug errors on compute restart
* Update port device\_owner when unshelving
* Fail to live migration if instance has a NUMA topology

18.1.0
------

* Remove GROUP BY clause from CellMapping.get\_by\_project\_id
* Add secret=true to fixed\_key configuration parameter
* Make compute rpcapi version calculation check all cells
* Handle tags in \_bury\_in\_cell0
* Only warn about not having computes nodes once in rpcapi
* Ignore MoxStubout deprecation warnings
* Create BDMs/tags in cell with instance when over-quota
* Add functional regression test for bug 1806064
* Note the aggregate allocation ratio restriction in scheduler docs
* Fix InstanceNotFound during \_destroy\_evacuated\_instances
* Add functional regression test for bug 1794996
* Add a bug tag for nova doc
* Remove unnecessary redirect
* Add description of custom resource classes
* Migrate nova v2.0 legacy job to zuulv3
* Use long\_rpc\_timeout in select\_destinations RPC call
* Imported Translations from Zanata
* Don't use private interface in oslo.service
* Default embedded instance.flavor.is\_public attribute
* Make supports\_direct\_io work on 4096b sector size
* Consider root id is None in the database case
* Add recreate test for bug 1799892
* Handle unicode characters in migration params
* Mention meta key suffix in tenant isolation with placement docs
* Harden placement init under wsgi

18.0.3
------

* Properly track local root disk usage during moves
* Add regression test for bug 1796737
* Provide allocation\_ratio/reserved amounts from update\_provider\_tree()
* Add functional recreate test for bug 1799727
* Add nova-status upgrade check for consoles
* Explain cpu\_model\_extra\_flags and nested guest support
* Add rolling upgrade info to enable\_consoleauth workaround reno
* libvirt: Avoid setting MTU during live migration if unset
* Add tests for bug #1800511
* Fix os-simple-tenant-usage result order
* Fix up compute rpcapi version for pike release
* Ensure attachment cleanup on failure in driver.pre\_live\_migration
* Move live\_migration.pre.start to the start of the method
* conductor: Recreate volume attachments during a reschedule
* Add regression test for bug#1784353
* fixtures: Track volume attachments within CinderFixtureNewAttachFlow
* Update resources once in update\_available\_resource
* Don't persist RequestSpec.requested\_destination
* Add regression test for bug 1797580
* Handle online\_data\_migrations exceptions
* Ignore uuid if already set in ComputeNode.update\_from\_virt\_driver
* Fix NoneType error in \_notify\_volume\_usage\_detach
* Fix formatting non-templated cell URLs with no config
* Use unique consumer\_id when doing online data migration
* Add recreate test for bug 1798163
* Handle volume API failure in \_post\_live\_migration
* Use nova-consoleauth only if workaround enabled
* Handle IndexError in \_populate\_neutron\_binding\_profile
* Replace usage of get\_legacy\_facade() with get\_engine()
* Time how long select\_destinations() takes in conductor
* [stable-only] Add report\_ironic\_standard\_resource\_class\_inventory option
* Imported Translations from Zanata
* Set defult value of num\_nvme\_discover\_tries=5
* Handle missing marker during online data migration
* De-dupe subnet IDs when calling neutron /subnets API
* Not set instance to ERROR if set\_admin\_password failed

18.0.2
------

* Fix stacktraces with redis caching backend
* Null out instance.availability\_zone on shelve offload
* nova-manage - fix online\_data\_migrations counts
* Use INFO for logging no allocation candidates
* placement: Always reset conf.CONF when starting the wsgi app
* Ignore VirtDriverNotReady in \_sync\_power\_states periodic task
* Enforce case-sensitive hostnames in aggregate host add
* Revert "Make host\_aggregate\_map dictionary case-insensitive"
* Explicitly fail if trying to attach SR-IOV port
* Wait for network-vif-plugged on resize revert
* Validate transport\_url in nova-manage cell\_v2 commands
* nova-status - don't count deleted compute\_nodes
* Optimize AZ lookup during schedule\_and\_build\_instances
* Delete instance\_id\_mappings record in instance\_destroy
* Filter deleted computes from get\_all\_by\_uuids()

18.0.1
------

* XenAPI/Stops the migration of volume backed VHDS
* libvirt: Use os.stat and os.path.getsize for RAW disk inspection
* Fix soft deleting vm fails after "nova resize" vm
* hyperv: Cleans up live migration Planned VM
* Fix service list for disabled compute using MC driver
* Refix disk size during live migration with disk over-commit
* Update RequestSpec.flavor on resize\_revert
* [placement] split gigantor SQL query, add logging
* Follow devstack-plugin-ceph job rename
* import zuul job settings from project-config
* Do not dump all instances in the scheduler
* Configure placement DB context manager for nova-manage/status
* placement: use simple code paths when possible
* Fix a failure to format config sample
* Make scheduler.utils.setup\_instance\_group query all cells
* Fix nova-status "\_check\_resource\_providers" check
* Fix DB archiver AttributeError due to wrong table name attribute used
* Add functional test for affinity with multiple cells
* Document unset/reset wrinkle for \*\_allocation\_ratio options
* Don't persist zero allocation ratios in ResourceTracker
* libvirt: skip setting rx/tx queue sizes for not virto interfaces
* libvirt: Always escape IPv6 addresses when used in migration URI
* hardware: fix memory check usage for small/large pages
* Don't use '\_TransactionContextManager.\_async'
* Move conductor wait\_until\_ready() delay before manager init
* Fix image-defined numa claims during evacuate
* Delete instance\_group\_member records from API DB during archive
* Restart scheduler in TestNovaManagePlacementHealAllocations
* Fix a broken conf file description in networking doc

18.0.0
------

* Remove noisy DEBUG log
* Correct the release notes related to nova-consoleauth
* libvirt: Don't react to VIR\_DOMAIN\_EVENT\_SUSPENDED\_MIGRATED events
* Handle binding\_failed vif plug errors on compute restart
* Filter out instances without a host when populating AZ
* Update ssh configuration doc

18.0.0.0rc2
-----------

* Use placement microversion 1.26 in update\_from\_provider\_tree
* Add zvm CI information
* Add zvm admin intro and hypervisor information
* add zvm into support matrix
* placement: ignore policy scope check failures if not enforcing scope
* Revert "libvirt: slow live-migration to ensure network is ready"
* block\_device: Rollback volumes to in-use on DeviceDetachFailed
* Update UPPER\_CONSTRAINTS\_FILE for stable/rocky
* Update .gitreview for stable/rocky

18.0.0.0rc1
-----------

* Add a prelude release note for the 18.0.0 Rocky GA
* Trivial fix on migration doc
* [placement] api-ref: add description for 1.29
* Update the parameter explain when updating a volume attachment
* Update nova network info when doing rebuild for evacuate operation
* Docs: Add guide to migrate instance with snapshot
* Add the guideline to write API reference
* get provider IDs once when building summaries
* Remove Neutron MetaAPIProxy from cellsv2-layout
* [placement] Avoid rp.get\_by\_uuid in allocation\_candidates
* Fix host validity check for live-migration
* libvirt: Reduce calls to qemu-img during update\_available\_resource
* Refactor cell\_type in compute/api.py
* Add explicit functional-py36 tox target
* xx\_instance\_type\_id in list\_migrations should be integer
* Fix bad links for admin-guide
* api-ref: Add descriptions for rebuild
* Add microversion info in the os-server-groups API samples
* doc: mark the max microversion for rocky
* Fix resize revert to use non-legacy alloc handling
* api-ref: fix min\_version for parent\_provider\_uuid in responses
* [placement] Add version directives in the history doc
* Use common functions in granular fixture
* Fix none-ascii char in doc
* Define irrelevant-files for tempest-full-py3 job
* Add tempest-slow job to run the tempest slow tests
* Not use project table for user table
* Adds a test for getting allocations API
* [placement] ensure\_rc\_cache only at start of process
* Remove unused flavor\_delete\_info() method
* Reno for notification-transformation-rocky
* Deprecate upgrade\_levels options for deprecated/removed services
* [placement] Move resource\_class\_cache into placement hierarchy
* [placement] Debug log per granular request group
* Remove unused request API sample template
* Grease some more tests hitting RetryDecorator
* Scrub hw:cpu\_model from API samples
* Grease test\_try\_deallocate\_network\_retry\_direct
* Improve NeutronFixture and remove unncessary stubbing
* Remove unused stubbing function from test
* doc: fix resize user guide link
* tox: Ensure reused envdirs share the same deps
* Fix a typo in comment in resource\_provider.py
* Refactor AllocationFixture in placement test
* Increase max\_unit in placement test fixture
* Use common functions in NonSharedStorageFixture
* Hook resource\_tracker to remove stale node information
* Make ResourceTracker.stats node-specific
* Add recreate test for RT.stats bug 1784705
* Reload oslo\_context after calling monkey\_patch()
* Fix comments in \_anchors\_for\_sharing\_providers and related test
* Ensure the order of AllocationRequestResources
* libvirt: Remove usage of migrateToURI{2} APIs
* Remove unnecessary PlacementFixture setups
* Don't poison Host.\_init\_events if it's already mocked
* Remove redundant join in \_anchors\_for\_sharing\_providers
* [placement] Retry allocation writes server side
* [placement] api-ref: add traits parameter
* Retry decorator fix for instances which go into ERROR state during bulk delete
* Fix formatting for vcpu\_pin\_set and reserved\_huge\_pages
* Updated AggregateImagePropertiesIsolation filter illustration
* [placement] Use a simplified WarningsFixture
* [placement] Use a non-nova log capture fixture
* [placement] Use oslotest CaptureOutput fixture
* [placement] Use own set\_middleware\_defaults
* Extract \_update\_to\_placement method in resource tracker
* Set default of oslo.privsep.daemon logging to INFO level
* Remove superfluous network stubbing in func test
* Add additional functional tests for NUMA networks
* Add description for placement 1.26

18.0.0.0b3
----------

* Add functional test for forced live migration rollback allocs
* Assorted cleanups from numa-aware-vswitches series
* libvirt: Revert non-reporting DISK\_GB if sharing
* Pass source vifs to driver.cleanup in \_post\_live\_migration
* Fix create\_all() to replace\_all() in comments
* compute node local\_gb\_used include swap disks
* Use source vifs when unplugging on source during post live migrate
* Fix all invalid obj\_make\_compatible test case
* Change deprecated policies to policy
* api-ref: document user\_data length restriction
* Fix accumulated nits from port binding for live migration series
* [placement] Use base test in placement functional tests
* Fix signature of \_FakeImageService.download
* [placement] Extract base functional test case from test\_direct
* Use vif.vif\_name in \_set\_config\_VIFGeneric
* doc: add missing permission for the vCenter service account
* Hyper-V + OVS: plug vifs before starting VMs
* Use placement context in placement functional tests
* ironic: Report resources as reserved when needed
* doc: remove rocky-specific nova-scheduler min placement version
* scheduler: Start utilizing RequestSpec.network\_metadata
* Consider network NUMA affinity for move operations
* Add nova-manage placement sync\_aggregates
* Add functional tests for numa-aware-vswitches
* libvirt: Start populating NUMACell.network\_metadata field
* conf: Add '[neutron] physnets' and related options
* tox: Silence psycopg2 warnings
* FakeLibvirtFixture: mock get\_fs\_info
* Add method to get cpu traits
* Blacklist greenlet 0.4.14
* Enhance doc to guide user to use nova user
* doc: link to AZ talk from the Rocky summit
* doc: link to CERN summit video about upgrading from cells v1 to v2
* Update queued-for-delete from the ComputeAPI during deletion/restoration
* Online data migration for queued\_for\_delete flag
* ironic: add instance\_uuid before any other spawn activity
* Use consumer generation in \_heal\_allocations\_for\_instance
* Cache is\_bfv check in ResourceTracker
* Add shelve/unshelve wrinkle to volume-backed disk func test
* Fix wonky reqspec handling in conductor.unshelve\_instance
* Heal RequestSpec.is\_bfv for legacy instances during moves
* Report 0 root\_gb in resource tracker if instance is bfv
* Docs: Add Placement to Nova system architecture
* libvirt: Remove reference to transient domain when detaching devices
* Add queued\_for\_delete field to InstanceMapping object
* Rename auth\_uri to www\_authenticate\_uri
* Func test for improper cn local DISK\_GB reporting
* perform reshaper operations in single transaction
* docs: add nova host-evacuate command to evacuate documentation
* compute: Ensure pre-migrating instances are destroyed during init\_host
* In Python3.7 async is a keyword [1]
* Check provider generation and retry on conflict
* Fix missing print format error
* Remove stevedore extensions server\_create method
* Update RequestSpec.instance\_uuid during scheduling
* Add regression test for bug 1781710
* Skip test\_resize\_server\_revert\_with\_volume\_attached in nova-lvm
* Disable limits if force\_hosts or force\_nodes is set
* conductor: use port binding extended API in during live migrate
* Port binding based on events during live migration
* Annotate flows and handle PortBindingDeletionFailed in ComputeManager
* Implement migrate\_instance\_start method for neutron
* libvirt: use dest host vif migrate details for live migration
* libvirt: use dest host port bindings during pre\_live\_migration
* libvirt: factor out pre\_live\_migration plug\_vifs call
* Add VIFMigrateData.get\_dest\_vif
* Add VIFMigrateData object for live migration
* [placement] disallow additional fields in allocations
* Fix ServerMigrationSampleJsonTests to use sample files from version dir
* Remove "DEPRECATED" tag from Obsolete APIs
* Remove support for /os-floating-ip-dns REST API
* Remove support for /os-floating-ips-bulk REST API
* Avoid requesting DISK\_GB allocation for root\_gb on BFV instances
* [placement] cover bad content-length header
* [placement] Add gabbi coverage for inv of missing rp
* [placement] Add gabbi coverage for an inventory change
* clarify usage of upgrade\_levels group
* Fix confusing log message in scheduler
* Fix the incorrect description and sample
* Transform metrics.update notification
* update tox venv env to install all requirements
* Fix "XLibvirt KVM (ppc64)" typo in feature support matrix docs
* Call generate\_image\_url only for legacy notification
* Add unshelve instance error info to fault table
* Address nit in 79dac41fee178dabb547f4d7bc10609630767131
* Escalate UUID validation warning to error in test
* Fix a newly introduced UUID warning in the unit test
* Move legacy-tempest-dsvm-nova-os-vif in repo
* API: add support to abort queued live migration in microversion 2.65
* Fix ServerMigrationSampleJsonTestsV2\_24 to use its own sample file
* Compute: add support to abort queued live migration
* Use ThreadPoolExecutor for max\_concurrent\_live\_migrations
* Update HostState.instances during \_consume\_selected\_host
* Replace support matrix ext with common library
* Add UUID validation for consumer\_uuid
* Address nits in server group policy series
* Adjust log style and remove ocata support
* z/VM Driver: add get console output
* z/VM Driver: add power actions
* z/VM Driver: add snapshot function
* z/VM Driver: Spawn and destroy function of z/VM driver
* z/VM Driver: Initial change set of z/VM driver
* Transform instance.live\_migration\_force\_complete notification
* Transform aggregate.update\_prop notification
* Add note about reschedules and num\_attempts in filter\_properties
* Add another up-call to the cells v2 caveats list
* Stop using HostAPI.service\_delete
* Handle HostMappingNotFound when deleting a compute service
* Skip more rebuild tests for cells v1 job
* Refactor \_heal\_instances\_in\_cell
* Heal allocations with incomplete consumer information
* fix cellv2 delete\_host
* Imported Translations from Zanata
* ironic: Log an error when API version is not available
* Microversion 2.64 - Use new format policy in server group
* virt/ironic: Implement rescue and unrescue
* ironic: provide facilities to gracefully navigate versions
* do not assume 1 consumer in AllocList.delete\_all()
* Update process doc to be more generic about point of contact
* Follow up for Ie49d605c66062d2548241d7e04f5a2a6b98c011e
* Mention osc-placement for managing traits in docs
* Handle rebuild of instances with image traits
* Complete the api-ref of security group rule
* Adapt \_validate\_instance\_group\_policy to new policy model
* Change the ServerGroupAntiAffinityFilter to adapt to new policy
* Add policy field to ServerGroup notification object
* Add policy to InstanceGroup object
* Add nova-status upgrade check for request spec migrations
* Add placement.concurrent\_udpate to generation pre-checks
* Delete orphan compute nodes before updating resources
* Test for unsanitized consumer UUID
* Revert "docs: Disable smartquotes"
* [placement] add error.code on a ConcurrentUpdateDetected
* Fix TypeError in prep\_resize allocation cleanup
* Use hard coded values in schema than reference
* Update some placement docs to reflect modern times
* Remove unused variable in migration
* Address nits from consumer generation
* update project/user for consumer in allocation
* Use nova.db.api directly
* Update root providers in same tree
* hardware: fix hugepages memory usage per intances
* Add queued for delete to instance\_mappings table
* Remove duplicate parameter in API sample documents
* placement: delete auto-created consumers on fail
* delete consumers which no longer have allocations
* make incomplete\_consumer\_project\_id a valid UUID
* Refactor policies to policy in InstanceGroup DB model
* Add rules column to instance\_group\_policy table
* objects: Add RequestSpec.network\_metadata
* api-ref: Example verification for servers.inc
* hardware: Start accounting for networks in NUMA fitting
* objects: Add NUMATopologyLimits.network\_metadata
* Transform instance.rebuild\_scheduled notification
* Remove irrelevant comment
* Avoid joins in \_server\_group\_count\_members\_by\_user
* Fix server\_group\_members quota check
* Add functional regressions tests for server\_group\_members OverQuota
* Handle compare in test\_pre\_live\_migration\_volume\_backed\* directly
* Resource\_provider API handler does not return specific error codes
* Remove mox in unit/network/test\_neutronv2.py (2)
* Add documentation for emulator threads policy
* Fix whitespace damage
* Use valid UUID in the placement gabbits
* Transform instance.live\_migration\_post notification
* Transform instance.live\_migration\_rollback\_dest notification
* Update install guide for placement database configuration
* move lookup of provider from \_new\_allocations()
* Time how long pre\_live\_migration() takes
* Add action initiator attribute to the instance payload
* Default embedded instance.flavor.disabled attribute
* objects: Add NUMACell.network\_metadata
* network: Retrieve tunneled status in '\_get\_physnet\_info'
* network: Always retrieve network information if available
* Stop setting glance\_api\_version in cinder.conf in nova-live-migration
* Wait for vif plugging during live migration job
* cover migration cases with functional tests
* Fix unbound local when saving an unchanged RequestSpec
* Prevent updating an RP's parent to form a loop
* Handle nested serialized json entries in assertJsonEqual
* libvirt: add qemu version check when configuring mtu for network
* conf: Resolve Sphinx errors
* Remove unnecessary execute permissions of a file
* Convert 'placement\_api\_docs' into a Sphinx extension
* Regression test for bug 1779635
* Regression test for bug 1779818
* Update admin/flavors document
* Fix missing versioned notification examples
* [doc] enhance admin/configuration/api.rst
* Use 'version2' when syncing placement db
* [placement] fix allocation handler docstring typo
* Fix placement incompatible with webob 1.7
* manage: Remove dead code
* Define common variables for irrelevant-files
* Fix nits in placement-return-all-resources series
* Add microversion for nested allocation candidate
* libvirt: Fix the rescue race for vGPU instances
* More config drive docs updates
* Remove file injection from config drive sample docs
* Use ironic-tempest-dsvm-ipa-wholedisk-bios-agent\_ipmitool-tinyipa in tree
* Mention PowerVM support of config drive
* tox: Reuse envdirs
* Update xenapi\_disable\_agent config option usage in docs
* conf: Correct documentation for '[pci] passthrough\_whitelist'
* tox: Document and dedupe mostly everything
* trivial: Remove 'tools/releasenotes\_tox.sh'
* Add regression test for bug #1764883
* Remove mox in sec group test and functional tests
* Use nova.test.TestingException
* libvirt: Add missing encryption\_secret\_uuid tests for pre\_live\_migration
* Mention server status in api-ref when rebuild
* Remove mox in unit/network/test\_neutronv2.py (1)
* Make nova-lvm run in check on libvirt changes and compute API tests
* Allow templated cell\_mapping URLs
* Remove remaining legacy DB API instance\_group\* methods
* Remove unused DB API instance\_group\_member\* methods
* Remove unused DB API instance\_group\_delete method
* Remove compatibility code for instance groups
* [placement] demonstrate part of bug 1778591 with a gabbi test
* Handle CannotDeleteParentResourceProvider to 409 Conflict
* Fix unit test modifying global state
* [placement] Fix capacity tracking in POST /allocations
* Update scheduler to use image-traits
* [placement] Add test demonstrating bug 1778743
* conf: libvirt: Make \`/dev/urandom\` the default for 'rng\_dev\_path'
* Skip ServerShowV247Test.test\_update\_rebuild\_list\_server in nova-cells-v1 job
* Fix CLI docs for nova-manage api\_db commands
* Update API reference for os-floating-ip-pools
* Fix API reference for os-floating-ip-dns
* Fix API reference for os-floating-ips-bulk
* Remove support for /os-fixed-ips REST API
* Fix the duplicated config options of api\_database and placement\_database
* network: Rename 'create\_pci\_requests\_for\_sriov\_ports'
* network: Rename '\_get\_phynet\_info'
* Make nova list and migration-list ignore down cells
* Add instance.unlock notification
* [placement] Demonstrate bug in consumer generation handling
* Delete port bindings in setup\_networks\_on\_host if teardown=True
* Add "activate\_port\_binding" neutron API method
* Add "delete\_port\_binding" network API method
* Add "bind\_ports\_to\_host" neutron API method
* Test alloc\_cands with indirectly sharing RPs
* Switch to oslo\_messaging.ConfFixture.transport\_url
* network: Unchain '\_get\_phynet\_info' from '\_get\_port\_vnic\_info'
* Adapter raise\_exc=False by default
* Bump keystoneauth1 minimum to 3.9.0
* conf: Deprecate 'network\_manager'
* Fix bug to filter\_scheduler
* Fix bug to api-ref
* [placement] Extract create\_allocation\_list
* libvirt: Log breadcrumb for known encryption bug
* Remove mox in test\_conductor.py (2)
* Remove mox in test\_conductor.py (1)
* api-ref: Fix parameters about trusted certificate IDs
* Remove mox in nova/tests/unit/virt/xenapi/stubs.py
* Fix nits from change Ia7cf4414feb335b3c2e863b4c8b4ff559b275c34
* Implement discard for file backed memory
* Fix nits from change I676291ec0faa1dea0bd5050ef8e3426d171de4c6
* placement: s/None/null/ in consumer conflict msg
* objects: Remove legacy '\_to\_dict' functions
* objects: Remove NUMATopologyLimits.obj\_from\_db\_obj
* Cleanup nits in placement database changes
* Add instance.lock notification
* fix PowerVM get\_bootdisk\_path docstring
* Implement file backed memory for instances in libvirt
* Comment proposed ironic fix for removal of ironic driver workaround
* Ironic update\_provider\_tree: restore traits override
* Fix nits from change Id609789ef6b4a4c745550cde80dd49cabe03869a
* Add a microversion for consumer generation support
* Be graceful about vif plugging in early ironic driver startup
* Mention nova-status upgrade check CLI in upgrade doc
* Add information of deprecation nova-network in system-admin.rst
* Add check if neutron "binding-extended" extension is available
* Wait for network-vif-plugged before starting live migration
* Don't heal allocations for deleted servers
* Convert ironic virt driver to update\_provider\_tree
* Fix regression when listing build\_requests with marker and ip filter
* Ensure that os-traits sync is attempted only at start of process
* Isolate placement database config
* Add full traceback to ExceptionPayload in versioned notifications
* Optimize member\_of check for nested providers
* Resource tracker: improve resource tracker periodic task
* Clarify placement DB schema migration
* Fix MigrateData object tests for compat routines
* Nix unused raise\_if\_custom\_resource\_class\_pre\_v1\_1
* Skip ServerShowV263Test.test\_show\_update\_rebuild\_list\_server for cellsv1
* Simplify instance name generation
* ironic: bugfix: ensure a host is set for volume connectors
* Revert "Re-using the code of os brick cinder"
* placement: Make API history doc more consistent
* Make host\_aggregate\_map dictionary case-insensitive
* Return all nested providers in tree
* Add osprofiler config options to generated reference
* Fix retrying lower bound in requirements.txt
* unquiesce instance after quiesce failure
* Add policy rule to block image-backed servers with 0 root disk flavor
* Enforce placement minimum in nova.cmd.status
* Update the disk\_cachemodes to mention an rbd detail
* Add trusted certs to feature support matrix docs
* Fix nits from trusted certs notification change
* Remove max\_size parameter from fake\_libvirt\_utils.fetch\_\*image methods
* Add PLACEMENT\_DB\_ENABLED=True to the nova-next job
* Optional separate database for placement API
* Add supplementary info for simple\_cell\_setup cmd
* Add certificate validation docs
* Add troubleshooting item about ignored microversions
* Make check\_can\_live\_migrate\_destination use long\_rpc\_timeout
* [placement] Add status and links fields to version document at /
* Add notification support for trusted\_certs
* Fix execute mock for test\_convert\_image\_with\_errors
* rework allocation handler \_allocations\_dict()
* placement: Allocation.consumer field
* Ignore UserWarning for scope checks during test runs
* Add trusted\_image\_certificates to REST API
* Powervm configuration cleanup
* [placement] replace deprecated accept.best\_match
* Update nova-status & docs: require placement 1.25
* Remove network info stubbing in functional test
* XenAPI: update the document related to vdi streaming
* XenAPI: define a new image handler to use vdi streaming
* api-ref: expand on various bdm parameters
* Add enhanced KVM storage QoS quotas
* Plumb trusted\_certs through the compute service
* add consumers generation field
* Implement certificate\_utils
* Provide a direct interface to placement
* libvirt: Don't report DISK\_GB if sharing
* Remove nova dependencies from test\_resource\_provider
* Adjust db using allocation unit tests
* Move db using provider unit tests to functional
* Update links in README
* Remove unnecessary parameters from create volume API
* VMware: remove reading resourcePool data
* VMware: save VC reads for information that is static
* Use oslo.messaging per-call monitoring
* Refactor libvirt get\_memory\_used\_mb()
* xenapi: drop deprecated vif\_driver config option
* placement: always create consumer records
* Document the internal online\_migrations function behaviors
* libvirt: remove unused get\_ovs\_interfaceid()
* doc follow https://review.openstack.org/#/c/572195
* Extract part of PlacementFixture to placement
* fix tox python3 overrides
* Remove mox in libvirt/test\_driver.py (4)
* Remove mox in test\_compute\_api.py (3)

18.0.0.0b2
----------

* Fix bug to doc:nova-status
* Fix the file name of development-environment.rst
* Fix issues in nova-show-usage-statistics-for-hosts-instances.rst
* Change consecutive build failure limit to a weigher
* Do not use nova.test in placement.test\_deploy
* Do not use nova.test in placement.test\_microversion
* Do not use nova.test in placement.test\_handler
* Do not use nova.test in placement.test\_fault\_wrap
* Do not use nova.test in placement.test\_requestlog
* Do not use nova.test in placement.handlers.test\_aggregate
* Do not use nova.test in placement.test\_util
* sync\_guest\_time: use the proper errno
* Remove support for /os-virtual-interfaces REST API
* add mtu to libvirt xml for ethernet and bridge types
* Fix doc nit
* Ensure resource class cache when listing usages
* api-ref: mention that you can't re-parent a resource provider
* Transform instance.exists notification
* Enhance api-guide general info some updates
* Fix some wrong urls in doc
* Trivial: let internal use only func has \_ prefix
* Fix bug to doc
* Re-base placement object unit tests on NoDBTestCase
* [placement] Do not import oslo\_service for log\_options
* Fix bug for hypervisors
* Fix typo in enable\_certificate\_validation config option help
* Fix some inconsistencies in doc
* Only run placement request filters when Placement will be called
* Downgrade overquota warning
* Remove unused \_disk\_qcow2\_to\_raw
* Add nova-manage placement heal\_allocations CLI
* Trim the fat on HostState.instances
* Restrict CONF.quota.driver to DB and noop quota drivers
* Consider hostdev devices when building metadata
* Refactor \_build\_device\_metadata
* Fix invalid raise in test\_compute\_mgr
* Mention running rootwrap in daemon mode if hitting vif plug timeouts
* Match ComputeNode.uuid to ironic node uuid in RT
* network: update pci request spec to handle trusted tags
* metadata: add vf\_trusted field to device metadata
* Skip ServerShowV254Test.test\_rebuild\_server in cells v1 job
* libvirt:  add vf\_trusted field for network metadata
* libvirt: configure trust mode for vfs
* mirror nova host aggregate members to placement
* Use instance project/user when creating RequestSpec during resize reschedule
* add parameter docstring for 'params' to libvirt.guest.Guest.migrate()
* Set scope for remaining placement policy rules
* Update overriden to overridden
* pci: don't consider case when match tags specs
* Remove mox in libvirt/test\_driver.py (3)
* Adding NVMEoF for libvirt driver
* Fix doc mistakes
* Remove unused function
* Re-using the code of os brick cinder
* Fix nits in nested provider allocation candidates(2)
* Return all resources in provider\_summaries
* placement: Use INNER JOIN for requied traits
* Delete duplicate functions in placement test
* Use list instead of set for duplicate check
* Support nested alloc cands with sharing providers
* Fix nits in nested provider allocation candidates
* Follow up changes to granular placement policy reviews
* Add granular policy rules for allocation candidates
* Add granular policy rules for placement allocations
* Add granular policy rules for traits in placement
* Add granular placement policy rules for aggregates
* Add granular policy rules for usages
* Change exception type while deattaching root device
* libvirt: Deprecate support for monitoring Intel CMT \`perf\` events
* Remove mox in tests/unit/api/openstack/compute
* PowerVM Driver: vSCSI Fibre Channel volume adapter
* Honor availability\_zone hint via placement
* Remove the remaining of the removed option
* Convert libvirt's RBD storage to using processutils.execute()
* libvirt: Skip fetching the virtual size of block devices
* Add traits check in nested provider candidates
* Return nested providers in get\_by\_request
* Expand tests for multiple shared resources case
* Pushing image traits to ironic node
* Update placement upgrade docs for nova-api dependency on placement
* Avoid unnecessary joins in HostManager.\_get\_instances\_by\_host
* Placement: allow to set reserved value equal to total for inventory
* Update PowerVM hypervisor docs
* Update nova-status and docs for required placement 1.24
* Granular requests to get\_allocation\_candidates
* libvirt: get\_inventory => update\_provider\_tree
* Normalize inventory from update\_provider\_tree
* ProviderTree.has\_inventory\_changed for new fields
* PowerVM Driver: Localdisk
* Expose instance\_get\_all\_uuids\_by\_host() from DB API and use it
* Make instance.refresh() avoid recursion better
* Make instance able to lazy-load almost everything
* Fix interpretation of max\_attempts for scheduling alternates
* Update the deprecate os\_region\_name option
* libvirt: place emulator threads on CONF.compute.cpu\_shared\_set
* Fix inconsistency in docs
* Remove mox in libvirt/test\_driver.py (2)
* Fakelibvirt migrateToURI3 should provide args according to libvirt doc
* Metadata-API fails to retrieve avz for instances created before Pike
* PowerVM snapshot cleanup
* Add granular policy rules for resource providers inventories
* Add granular policy rules for /resource\_classes\*
* Implement granular policy rules for placement
* Deduplicate config/policy reference docs from main index
* Make nova service-list use scatter-gather routine
* Fix auth\_url example in hypervisor-hyper-v.rst
* Drop API compat handling for old compute error cases
* PowerVM Driver: DiskAdapter parent class
* Remove deprecated monkey\_patch config options
* Debug logs for allocation\_candidates filters
* Cleanup ugly stub in TestLocalDeleteAllocations
* Deprecate running API services under eventlet
* Add retrying to requirements.txt
* [placement] default to accept of application/json when \*/\*
* We don't need utils.trycmd any more
* Move image conversion to privsep
* Update auth\_url in install docs
* Add INVENTORY\_INUSE to DELETE /rp/{u}/inventories
* placement: Fix HTTP error generation
* Remove unnecessary 'to\_primitive' call
* Remove mox in test\_xenapi.py (3)
* Remove mox in tests/unit/api/\*/test\_volumes.py
* Remove mox in test\_live\_migrate.py
* Remove mox in libvirt/test\_driver.py (1)
* Added ability to configure default architecture for ImagePropertiesFilter
* \_\_str\_\_ methods for RequestGroup, ResourceRequest
* add lower-constraints job
* XenAPI: Pass expected return codes to resize2fs
* Make scheduler client allow multiple member\_of query parameters
* Add contributor docs on deprecating and removing compute REST APIs
* Suppress UUID warning in map\_instance unit tests
* Don't reschedule on RequestedVRamTooHigh errors
* Flexibly test keystonmiddleware in placement stack
* Fix HTTP500 error of changes-since on v2.0 API
* libvirt: Report the virtual size of RAW disks
* Fix irrelevant-files in nova-dsvm-multinode-base
* Remove '\_apply\_instance\_name\_template'
* Add connection\_parameters to list of items copied from database
* XenAPI: deprecate the config for image handler class path
* Remove mox in test\_compute\_api.py (2)
* api-ref: Fix parameters for os-volume-attachments.inc
* Avoid warning log when image not exist
* update scheduler to use image-traits
* Remove support for /os-fping REST API
* Add test\_set\_device\_mtu\_default back in
* Move set\_vf\_interface\_vlan to the new utility module
* Move create\_tap\_dev to the new utility module
* Address feedback from instance\_list smart-cell behavior
* trivial: Explain how the marker works for instance-cell mapping
* Add random sleep between retry calls to placement
* Remove remaning log translation in scheduler
* Remove mox in test\_xenapi.py (2)
* Make get\_instance\_objects\_sorted() be smart about cells
* Add CellMapping.get\_by\_project\_id() query method
* Skip ServerActionsTestJSON.test\_rebuild\_server for cells v1 job
* [doc] Add soft\_deleted flag
* Expose driver\_block\_device fields consistently
* Fix detach\_volume calls when rolling back a failed attach
* remove IVS plug/unplug as they're moved to separate plugin
* Followup for multiple member\_of qparams support
* [Doc]Link policies file into api
* libvirt: always pass emulator threads policy
* compute: introduce cpu\_shared\_set option
* Add docs for hw\_video:ram\_max\_mb flavor extra spec
* Use .. deprecated:: theme for deprecations
* doc: Don't confuse CPU pinning/NUMA as Hyper-V only
* Add tests for alloc cands with poor local disk
* placement: Granular GET /allocation\_candidates
* libvirt: remove old rbd snapshot removal error handling
* libvirt: check image type before removing snapshots in \_cleanup\_resize
* Remove unused methods in nova/compute/utils.py
* Remove mox in test\_xenapi.py (1)
* Migrate tempest-dsvm-multinode-live-migration job in-tree
* Fix typos in Host aggregates documentation
* Remove mox in unit/virt/xenapi/test\_vmops.py
* Remove mox in test\_compute\_api.py (1)
* Changing scheduler sync event from INFO to DEBUG
* placement: Object changes for granular
* Use helpers in test\_resource\_provider (func)
* Use test\_base symbols directly
* Base test module/class for functional placement db
* Fix being able to hard reboot a pausing instance
* Handle @safe\_connect returns None side effect in \_ensure\_resource\_provider
* Deprecate the nova-consoleauth service
* Update layout docs for running console proxies
* Convert websocketproxy to use db for token validation
* Remove [scheduler]/host\_manager config option
* doc: Start using openstackdoctheme's extlink extension
* support multiple member\_of qparams
* doc: Don't use single backticks in man pages
* trivial: Fix file permissions
* [doc]remove nova-cert leftover in doc
* Add multi-cell negative test for cold migration with target host
* Fix the request context in ServiceFixture
* Get anchors for sharing providers
* Remove IronicHostManager and baremetal scheduling options
* libvirt: Drop MIN\_LIBVIRT\_REALTIME\_VERSION
* libvirt: Drop MIN\_QEMU\_POSTCOPY\_VERSION
* libvirt: Drop BAD\_LIBVIRT\_CPU\_POLICY\_VERSIONS
* Convert configdrive to use processutils
* Make association\_refresh configurable
* Convert certificate generation to processutils
* Convert xenapi's xvp console to processutils
* Convert fping API to processutils.execute()
* Replace Chinese punctuation with English punctuation
* libvirt: fix setting tx\_queue\_size when rx\_queue\_size is not set
* Remove stale pip-missing-reqs tox test
* Fix shelving a paused instance
* libvirt: Lift the restriction of choices for \`cpu\_model\_extra\_flags\`
* libvirt: Make \`cpu\_model\_extra\_flags\` case-insensitive for real
* Add user\_id to RequestSpec
* Remove ExactCoreFilter ExactDiskFilter ExactRamFilter
* libvirt: Fix misleading debug msg "Instance is running"
* libvirt: Drop BAD\_LIBVIRT\_NUMA\_VERSIONS
* Handle PortNotFoundClient exception when getting ports
* libvirt: Drop MIN\_LIBVIRT\_NUMA\_VERSION\_PPC
* libvirt: Drop MIN\_LIBVIRT\_BLOCK\_LM\_WITH\_VOLUMES\_VERSION
* log stale allocations as WARNING instead of DEBUG
* Make host\_manager use scatter-gather and ignore down cells
* Make service all-cells min version helper use scatter-gather
* Fix tox -e docs
* placement: resource requests for nested providers
* Add host/hostId to instance action events API
* Simplify BDM boot index checking
* Remove explicit instance.info\_cache.delete()
* Handle deprecation of inspect.getargspec
* ServerActionsSampleJsonTest refactor
* Fix dropped check for boot\_index 0 in \_validate\_bdm
* PowerVM Driver: Snapshot
* libvirt: fix hard reboot issue with mdevs
* Bump pypowervm minimum to 1.1.15
* Make accept-language tests work with webob 1.8.x
* Fix invalid UUIDs in test
* Functional test: cold migrate to compute down
* Use os.rename, not mv
* Proxy is\_volume through DriverBlockDevice
* Use ConsoleAuthToken object to generate authorizations
* Address issues raised in adding member\_of to GET /a-c
* docs: link to volume multi-attach demo recording
* api-ref: mark block\_device\_mapping\_v2.boot\_index as required
* doc: add note about xenapi aggregate upcall being resolved
* Remove vestigial system\_metadata param from info\_from\_instance()
* Drop MIN\_LIBVIRT\_SET\_ADMIN\_PASSWD
* libvirt: Bump MIN\_{LIBVIRT,QEMU}\_VERSION for "Rocky"
* libvirt: add support for virtio-net rx/tx queue sizes
* libvirt: fix wrong driver name for vhostuser interface
* libvirt: Add a debug log entry before / after invoking migrate()
* xenapi: Documents update for XAPI pool shared SR migration
* Remove deprecated [placement] opts
* Fix link in placement contributor doc

18.0.0.0b1
----------

* Add \`hide\_hypervisor\_id\` flavor extra\_spec
* Mention that users need noVNC >= 0.6
* xenapi: handle InstanceNotFound in detach\_interface()
* fix a typo
* Update docs for [keystone\_authtoken] changes since Queens
* Move some tests into nova.tests.unit.notifications.objects.test\_instance
* Leave a hint when populate\_schema fails
* Add request\_id to instance action notifications
* Add root and parent provider uuid to group by clause
* Improve check capacity sql
* Rename recreate to evacuate in driver signatures
* Deduplicate notification samples Rocky - 7
* Add periodic task to clean expired console tokens
* xenapi: Use XAPI pool instead of aggregate pool for shared SR migration
* Remove mox in unit/api/openstack/compute/test\_hosts.py
* Cleanup RP and HM records while deleting a compute service
* Delete allocations from API if nova-compute is down
* Block deleting compute services which are hosting instances
* Add functional test for deleting a compute service
* mock utils.execute() in qemu-img unit test
* Add CPUWeigher
* Fix docs for confirmResize action
* Remove placement config check
* Parse forbidden in extra\_specs
* Deduplicate notification samples Rocky - 6
* Deduplicate notification samples Rocky - 5
* Deduplicate notification samples Rocky - 4
* doc: BFV instances and IsolatedHostsFilter
* Remove redundant \_do\_check\_can\_live\_migrate\_destination
* Improve performance when list instances with IP filter
* Remove mox in test\_serversV21.py (2)
* Remove mox in test\_serversV21.py (1)
* libvirt: Report the allocated size of preallocated file based disks
* Document how to disable notifications
* tests for alloc candidates with nested and traits
* Add config drive link to api-guide
* Move update\_task\_state out of try/except
* Fix doc link for api
* Address nits in I00d29e9fd80e6b8f7ba3bbd8e82dde9d4cb1522f
* Extract generate\_hostid method into utils.py
* Record the host info in EventReporter
* Deduplicate notification samples Rocky - 3
* Deduplicate notification samples Rocky - 2
* Deduplicate notification samples Rocky - 1
* Provide framework for setting placement error codes
* Update os\_compute\_api:os-flavor-extra-specs:index docs for 2.61
* Update os\_compute\_api:os-flavor-extra-specs:index docs for 2.47
* [placement] Support forbidden traits in API
* [placement] Filter allocation candidates by forbidden traits in db
* [placement] Filter resource providers by forbidden traits in db
* [placement] Parse forbidden traits in query strings
* doc: cleanup API guide about instance faults
* Address nits in Idf57fb5fbc611abb83943bd7e36d3cebf03b3977
* tests: Fix how context managers are mocked
* Cleanup patch for the cell-disable series
* libvirt: refactor get\_base\_config to accept host arg
* libvirt: move version to string in utils
* Update link of metadata
* Move xenapi partition copies to privsep
* Sync xenapi and libvirt on what flags to pass e2fsck
* Move xenapi disk resizing to privsep
* Use Queens UCA for nova-multiattach job
* Skip placement on rebuild in same host
* Remove the branch specifier from the nova-multiattach job
* Make the nova-multiattach job non-voting temporarily
* Give volume DriverBlockDevice classes a common prefix
* remove ec2 in service and cmd
* Remove mox in test\_neutron\_security\_groups.py
* Remove RequestContext.instance\_lock\_checked
* Fix race fail in test\_resize\_with\_reschedule\_then\_live\_migrate
* Remove :return from update\_provider\_tree docstring
* uncap eventlet in nova
* xenapi: Support live migration in pooled multi-nodes environment
* trivial: fix a comment typo
* Add microversion to support extra\_specs in flavor API
* Imported Translations from Zanata
* Remove mox in tests/unit/test\_utils.py
* api-ref: Fix parameter order in rebuild
* api-ref: Parameter verification for servers.inc (3/3)
* api-ref: Parameter verification for servers.inc (2/3)
* Remove mox in test\_virt\_drivers.py
* Make ResourceClass.normalize\_name handle sharp S
* Test case: ResourceClass.normalize\_name with ß
* PowerVM: Add proc\_units\_factor conf option
* Update wording in @safe\_connect placement warnings
* Expose shutdown retry interval as config setting
* Pick next minimum libvirt / QEMU versions for "Stein"
* Remove mox in unit/virt/xenapi/test\_vm\_utils.py (3)
* Remove mox in unit/virt/xenapi/test\_vm\_utils.py (2)
* Remove mox in unit/virt/xenapi/test\_vm\_utils.py (1)
* make metadata doc up to date
* Log a warning and add nova-status check for old API service versions
* Avoid dumping stack on BuildAbortException
* Fix comments at the 'save' method of objects.Instance
* libvirt: Block swapping to an encrypted volume when using QEMU to decrypt
* Remove mox in unit/api/\*/test\_server\_metadata.py
* Remove mox in unit/api/\*/test\_server\_password.py
* Replace mox stubs with stub\_out in test\_extended\_volumes.py
* Remove mox in unit/api/\*/test\_instance\_actions.py
* Remove mox in test\_user\_data.py
* Don't persist RequestSpec.retry
* Add regression test for persisted RequestSpec.retry from failed resize
* Move test\_report\_client out of placement namespace
* Log a more useful error when cinder auth isn't configured
* doc: add a link in the install guides about configuring neutron
* Cleanup \_get\_request\_spec\_for\_select\_destinations for live migrate
* Clarify/correct the ordering of API and Cell database schema updates
* Rename network.utils to network.linux\_utils
* Update ImageMetaProp object to expose traits
* Use a pythonic delete, with a retry
* [placement] Fix incorrect exception import
* Update the cells FAQs and scheduler maintenance docs
* Log a more useful error when neutron isn't configured
* Update the Cell filters section of the scheduler docs
* update\_provider\_tree devref and docstring updates
* libvirt: Allow to specify granular CPU feature flags
* Support extending attached ScaleIO volumes
* Transform aggregate.update\_metadata notification
* Add nova-status check for ironic flavor migration
* Add \_\_repr\_\_ for NovaException
* Add --enable and --disable options to  nova-manage update\_cell
* Noauth should also use request\_id from compute\_req\_id.py
* Avoid unnecessary port update during live migration
* DRY up test\_rollback\_live\_migration\_set\_migration\_status
* Default to py3 for the pep8 tox env because it's stricter
* Avoid showing password in log
* Remove a outdated warning
* Move xenapi xenstore\_read's to privsep
* Move configurable mkfs to privsep
* Request only instance\_uuid in ironic node list
* Include only required fields in ironic node cache
* network: add command to configure trusted mode for VFs
* [placement] api-ref: Fix parameters
* [Trivial]Add missing blank space in conf description
* Add tests for \_get\_trees\_matching\_all() function
* Fix cancel\_all\_events event name parsing
* Get rid of 406 paths in report client
* Move pypowervm requirement to 1.1.12
* Use an independent transaction for \_trait\_sync
* Test case: traits don't sync if first access fails
* Expand member\_of functional test cases
* Fix member\_of with sharing providers
* Add tests for alloc\_cands with member\_of
* Fix a missing white space in exception message
* Make generation optional in ProviderTree
* Fix nits in update\_provider\_tree series
* Use update\_provider\_tree from resource tracker
* SchedulerReportClient.update\_from\_provider\_tree
* Complement tests in allocation candidates
* trivial: Fix nits in code comments
* [placement] Add test for provider summaries
* Fix unit tests to work with new oslo.config
* Allow scheduling only to enabled cells (Filter Scheduler)
* Teardown networking when rolling back live migration even if shared disk
* Remove unnecessary code encoding specification
* [placement] Add to contributor docs about handler testing
* Add trusted\_certs object
* Add trusted\_certs to instance\_extra
* Move get\_stashed\_volume\_connector to compute.utils
* Documentation for tenant isolation with placement
* [placement] Fix bad management of \_TRAITS\_SYNCED flag
* Fix N332 api\_version decorator hacking check
* Use ksa session for cinder microversion check
* vmware: Fixes \_detach\_instance\_volumes method
* PowerVM Driver: Network interface attach/detach
* Fix issue for pep8 on py3
* Add require\_tenant\_aggregate request filter
* Add AggregateList.get\_by\_metadata() query method
* Add an index on aggregate\_metadata.value
* Make get\_allocation\_candidates() honor aggregate restrictions
* Move two more generic network utilities to a move obvious place
* Start untangling network utilities
* Add aggregates list to Destination object
* Add request filter functionality to scheduler
* tox: Make everything work with Python 3
* VMware: add log message for VIF info details
* Fix spelling mistake of HTTPNotFound exception
* tests: fixes mock autospec usage
* Use a pythonic delete
* Remove duplicative implementation of temporary directories
* api-ref: add a note about volume-backed rescue not being supported
* Scheduling Optimization: Remove cell0 from the list of candidates
* api-ref: Parameter verification for servers.inc (1/3)
* Add host to API and Conductor
* doc: Upgrade placement first
* Fix allocation\_candidates not to ignore shared RPs
* remove unnecessary short cut in placement
* Fix comments in get\_all\_with\_shared()
* Unit test framework: common FakeResponse
* tox: Remove unnecessary configuration
* tox: Fix indentation
* Standardize '\_get\_XXX\_constraint' functions
* Updated from global requirements
* Fix api-ref: nova image-meta is deprecated from 2.39
* Docs: modernise links
* Updated from global requirements
* Modify nova-manage cell\_v2 list\_cells to display "disabled" column
* Add disabled option to create\_cell command
* Move \_make\_instance\_list call outside of DB transaction context
* Stop using mox in virt/xenapi/image/test\_vdi\_through\_dev.py
* Use microversion parse 0.2.1
* Add the version description for InstanceActionEventList
* Updated from global requirements
* Add host field to InstanceActionEvent
* remove a comment about ec2
* Add functional regression test for bug 1746509
* Always deallocate networking before reschedule if using Neutron
* Change compute mgr placement check to region\_name
* make PowerVM capabilities explicit
* Move placement test cases from db to placement
* List instances performace optimization
* Add CellMappingList.get\_by\_disabled() query method
* libvirt: move vpu\_realtime\_scheduler in designer
* libvirt: move get\_numa\_memnode in designer module
* Remove translate and a TODO
* Add more functional test for placement.usage
* deprecate fping\_path config option
* Remove useless run\_periodic\_tasks call in ClientRouter
* Handle EndpointNotFound when building image\_ref\_url in notifications
* Don't log a warning for InstanceNotFound with deleted VIFs
* Preserve multiattach flag when refreshing connection\_info
* ironic: stop lying to the RT when ironic is down
* Clarify log in RT.\_update\_usage\_from\_migration
* Add disabled field to CellMapping object
* libvirt: handle DiskNotFound during update\_available\_resource
* only increment disk address unit for scsi devices
* Fix message for unexpected external event
* Fix typos in release notes
* libvirt: slow live-migration to ensure network is ready
* Remove version/date from CLI documentation
* Move placement exceptions into the placement package
* Report client: Remove version discovery comment
* add check before adding cpus to cpuset\_reserved
* trivial: omit condition evaluations
* remove \_cleanup\_running\_deleted\_instances repeat detach volume
* [libvirt] Add \_get\_XXXpin\_cpuset()
* [libvirt] Add \_get\_numa\_memnode()
* Add disabled column to cell\_mappings table
* Add placeholder migrations for Queens backports
* Updated from global requirements
* Add --by-service to discover\_hosts
* api-ref: add a note in DELETE /os-services about deleting computes
* conf: Remove 'db\_driver' config opt
* Add 'member\_of' param to GET /allocation\_candidates
* Follow the new PTI for document build
* docs: Disable smartquotes
* Updated from global requirements
* Stop assuming initial provider generation is 0
* ProviderTree.{add|remove}\_{traits|aggregates}
* Unmap compute nodes when deleting host mappings in delete cell operation
* Cleanup tempest-dsvm-cells-rc blacklist
* Make nova-cells-v1 run with neutron
* ironic: Get correct inventory for deployed node
* Marker reset option for nova-manage map\_instances
* placement: Return new provider from POST /rps
* placement: generation in provider aggregate APIs
* Change TestNewtonCellsCheck to not rely on objects
* Revert "Refine waiting for vif plug events during \_hard\_reboot"
* Revert "Make the InstanceMapping marker UUID-like"
* Update contributor/placement.rst to contemporary reality
* Updated from global requirements
* Make archive\_deleted\_rows handle a missing CONF.api\_database.connection
* Transform live\_migration.post.dest notifications
* Reparent placement objects to oslo\_versionedobjects
* Move resource provider objects into placement hierarchy
* Move resource class fields
* Updated from global requirements
* Fix N358 hacking check
* New-style \_set\_inventory\_for\_provider
* conf: Fix indentation of database options
* conf: Remove deprecated 'allow\_instance\_snapshots' opt
* conf: Remove deprecated 'multi\_instance\_display\_name\_template' opt
* conf: Remove '[conductor] topic' opt
* Update deprecated log-config option in docs
* Updated from global requirements
* remove unnecessary conf imports
* Fix indentation in doc/source/cli/\*
* Make nova build reproducible
* Raise a proper exception in unit test
* Rename '\_numa\_get\_constraints\_XXX' functions
* Migrate tempest-dsvm-cells job to an in-tree job definition
* Make nova-manage db purge take --all-cells
* hardware: Rework get\_number\_of\_serial\_ports
* hardware: Rework '\_get\_cpu\_topology\_constraints'
* Add --purge helper flag to archive\_deleted\_rows
* Re-work the metadata service docs
* conf: Remove 'nova.crypto' opts
* ca: Remove 'nova/CA' directory
* crypto: Remove unused functions
* Allow to configure amount of PCIe ports
* ironic: Clean up resources after unprovision fails
* Update the nova-manage db archive\_deleted\_rows description
* Deprecate sparse LVs
* Rename the 'recreate' param in rebuild\_instance to 'evacuate'
* Add simple db purge command
* Run post-test archive against cell1
* XenAPI: XCP2.1+ Swallow VDI\_NOT\_IN\_MAP Exception
* conf: Deprecate 'keymap' options
* Removed unnecessary parantheses in yield statements
* Handle IpAddressAlreadyAllocated exception
* Update contributor guide for Rocky
* Handle not found error on taking snapshot
* Save admin password to sysmeta in libvirt driver
* Refactor WSGI apps and utils to limit imports
* Transform servergroup.addmember notification
* Add more functional test for placement.aggregates
* Fix version cap when no nova-compute started
* Check for multiattach before removing connections
* Updated from global requirements
* VMware: fix TypeError while get console log
* Make the nova-next job voting and gating
* Fix the notification devref location in exception
* Updated from global requirements
* Updated from global requirements
* Pass user context to virt driver when detaching volume
* Updated from global requirements
* Move db MAX constants to own file
* [placement] use simple FaultWrapper
* Allow 'network' in RequestContext service\_catalog
* Stop using mox in api/openstack/fakes.py
* Move makefs to privsep
* Convert users of tune2fs to privsep
* libvirt: mask InjectionInfo.admin\_pass
* Remove unused LOG variables
* Clarify wording in listing instance actions for deleted instances
* Add check for redundant import aliases
* Make \_get\_sharing\_providers more efficient
* Update noVNC deployment docs to mention non-US keymap fix in 1.0.0
* Check for leaked server resource allocations in post\_test\_hook
* rp: GET /resource\_providers?required=<traits>
* compute: Cleans up allocations after failed resize
* Clarify \`resources\` query param for /r\_p and /a\_c
* Handle spawning error on unshelving
* Ensure attachment\_id always exists for block device mapping
* Avoid exploding if guest refuses to detach a volume
* [placement] api-ref: Fix a missing response code
* Add functional test for deleting BFV server with old attach flow
* Only attempt a rebuild claim for an evacuation to a new host
* Detach volumes when deleting a BFV server pre-scheduling
* Add functional recreate test of deleting a BFV server pre-scheduling
* Clean up ports and volumes when deleting ERROR instance
* libvirt: disconnect volume from host during detach
* Functional test: evacuate with no compute
* Extending delete\_cell --force to delete instance\_mappings
* Return 400 when compute host is not found
* Fix PatternPropertiesTestCase for py 3.6
* [placement] Add functional tests for traits API
* Scheduler multiple workers support
* Imported Translations from Zanata
* Updated from global requirements
* Remove single quotes from posargs on stestr run commands
* Clarify update\_provider\_tree docstring
* Only pull associated \*sharing\* providers
* Fix error handling in compute API for multiattach errors
* Trivial: Update help of enabled\_filters
* Add a nova-caching-scheduler job to the experimental queue
* api-ref: Further clarify placement aggregates
* Enable native mode for ScaleIO volumes
* trivial: Move \_\_init\_\_ function
* Add admin guide doc on volume multiattach support
* Detach volumes when VM creation fails
* Python 3 fix for sphinx doc
* doc: Clarify how to create your own filter
* Add functional tests to ensure BDM removal on delete
* Store block device mappings in cell0
* Drop extra loop which modifies Cinder volume status
* Remove deprecated aggregate DB compatibility
* Remove old flavor\_create db api method
* Remove old flavor\_get\_all db api method
* Remove old flavor\_get db api method
* Remove old flavor\_get\_by\_name db api method
* Remove old flavor\_get\_by\_flavor\_id db api method
* Remove old flavor\_destroy db api method
* Remove old flavor\_access\_get\_by\_flavor\_id db api method
* Test websocketproxy with TLS in the nova-next job
* Updated from global requirements
* libvirt: add Linux distribution guest only description for inject\_xxx options
* libvirt: remove TODO on validation of scsi model
* Avoid inventory DELETE API (no conflict detection)
* install-guide: Wrap long console command
* install-guide: Make formatting of console consistent
* Cleanup the manage-volumes admin doc
* Remove warning in feature support matrix page
* Use correct arguments in task inits
* Remove the deprecated scheduler\_driver\_task\_period option
* Clarify the help text for [scheduler]periodic\_task\_interval
* Fix and update compute schedulers config guide
* Lazy-load instance attributes with read\_deleted=yes
* Fix warn api\_class is deprecated, use backend
* Drop compute RPC 4.x compatibility
* Don't JSON encode instance\_info.traits for ironic
* Move the nova-next job in-tree and update it
* Use dict.get() when accessing capabilities dict
* Fix typo in NUMATopologyFilter docs
* [libvirt] Add \_get\_vcpu\_realtime\_scheduler()
* [placement] annotate loadapp as public interface
* Replace Chinese quotes to English quotes
* Fix docs for IsolatedHostsFilter
* Handle volume-backed instances in IsolatedHostsFilter
* Add regression test for BFV+IsolatedHostsFilter failure
* doc: merge numa.rst to cpu-topologies.rst
* [placement] Add sending global request ID in get
* [placement] Add sending global request ID in put (3)
* Ensure resource classes correctly
* Provide basic data for AArch64 support matrix/functionality
* TrivialFix: Add a space between messages
* Fix grammar error
* Update reno for stable/queens
* Refine waiting for vif plug events during \_hard\_reboot

17.0.0.0rc1
-----------

* doc: mention that --on-shared-storage is not needed with nova evacuate
* doc: fix the link for the evacuate cli
* Check quota before creating volume snapshots
* Add the ability to get absolute limits from Cinder
* unquiesce instance on volume snapshot failure
* VGPU: Modify the example of vgpu white\_list set
* [placement] Move body examples to an isolated directory
* Remove MigrationPreCheckClientException
* Encode libvirt domain XML in UTF-8
* Clean up reservations in migrate\_task call path
* Compute RPC client bump to 5.0
* Bump compute RPC API to version 5.0
* Bindep does not catch missing libpcre3-dev on Ubuntu
* Fixed auto-convergence option name in doc
* Workaround glanceclient bug when CONF.glance.api\_servers not set
* Remove a duplicate colon
* Use with method to consistent oslo timeutils usage
* Add log for snapshot an instance
* TrivialFix: Add a blankline
* trivial: Fix microversion number in test comment
* Remove unnecessary arguments in notification methods
* Remove unnecessary variables
* XenAPI: Provide support matrix and doc for VGPU
* Make the InstanceMapping marker UUID-like
* fix link
* Make bdms querying in multi-cell use scatter-gather and ignore down cell
* update docstring param description
* Add a prelude release note for the 17.0.0 Queens GA
* Address comments from I51adbbdf13711e463b4d25c2ffd4a3123cd65675
* Add late server group policy check to rebuild
* Add regression test for bug 1735407
* Remove microversion fallback code from report client
* Fix wrong link for "Manage Flavors" in CPU topologies doc
* Make sure that we have usable input for graphical console
* update the description of hypervisor statistics response
* fix misspelling of 'projectUser'
* Test case: new standard resource class unusable
* Clarify CONF.scheduler.max\_attempts
* Add release note for Aggregate[Core|Ram|Disk]Filter change
* placement doc: Conflict caveat for DELETE APIs
* Trivial fix a missleading comment
* Provide support matrix and doc for VGPU
* doc: update the GPU passthrough HPC feature entry
* [placement] Add sending global request ID in put (2)
* [placement] Add sending global request ID in put (1)
* [placement] Add sending global request ID in post
* Update cells v2 layout doc caveats for Queens
* Not use thread alloc policy for emulator thread
* Zuul: Remove project name
* Doc: Nix os-traits link from POST resource\_classes
* Only log during pop retry phase
* docs: Add booting from an encrypted volume
* libvirt: fix native luks encryption failure to find volume\_id
* Don't wait for vif plug events during \_hard\_reboot
* Don't rely on parse.urlencode in url comparisons
* Reset the \_RC\_CACHE between tests
* Fix invalid UUIDs in test\_compute.py
* Fix the wrong description
* doc: placement upgrade notes for queens
* Add functional tests for traits-based scheduling
* Ensure the JSON-Schema covers the legacy v2 API
* Cleanup launch instance and manage IPs docs
* Migrate "launch instance" user guide docs
* Pass limit to /allocation\_requests
* doc: mark the max microversions for queens
* test\_compute\_mgr: fix couple of unit tests
* Updated from global requirements
* trivial: Fix few policy doc
* Query all cells for service version in \_validate\_bdm
* Remove old flavor\_access\_add db api methods
* Remove old flavor\_access\_remove db api method
* Remove old flavor\_extra\_specs\_get db api method
* Remove old flavor\_extra\_specs\_delete db api method
* Remove old flavor\_access\_get\_by\_flavor\_id db api method
* add "--until-complete" option for nova-manage db archive\_deleted\_rows
* Mention required traits in the flavors user docs
* Fix nits in support traits changes
* Log options at debug when starting API services under wsgi
* set\_{aggregates|traits}\_for\_provider: tolerate set
* ProviderTree.get\_provider\_uuids: Top-down ordering
* SchedulerReportClient.\_delete\_provider
* ComputeDriver.update\_provider\_tree()
* report client: get\_provider\_tree\_and\_ensure\_root
* Remove unused method \_parse\_node\_instance\_info
* Add resource\_class to fields in ironic node cache
* Update docstring for get\_traits virt driver method
* trivial: Fix typos in release notes
* Allow force-delete even if task\_state is not None
* Invalid query parameter could lead to HTTP 500
* [Placement] Invalid query parameter could lead to HTTP 500
* Use util.validate\_query\_params in list\_traits
* Add functional tests for virt driver get\_traits() method
* Implement get\_traits() for the ironic virt driver
* Add get\_traits() method to ComputeDriver
* [placement] Separate API schemas (resource\_provider)
* Remove compute nodes arg from ProviderTree init
* Fix invalid UUIDs in remaining tests
* Don't modify objects directly
* trivial: Resolve "X is renamed to Y" warnings
* trivial: Don't use 'Test' prefix for non-TestCase classes
* Remove unused tempest-dsvm-lxc-rc
* ProviderTree.new\_child: parent is either uuid or name
* trivialfix: cleanup \_pack\_instance\_onto\_cores()
* Always pass 'NUMACell.siblings' to \_pack\_instance\_onto\_cores'
* Ensure emulator threads are always calculated
* tests: refactors and cleans up test\_rbd.py
* Don't filter out sibling sets with one core
* Add server filters whitelist in server api-ref
* reno for notification-transformation-queens
* Add the nova-multiattach job
* api-ref: provide more detail on what a provider aggregate is
* Remove redundant call to add\_instance\_fault\_from\_exc in rebuild\_instance
* Collapse duplicate error handling in rebuild\_instance
* Rollback instance.image\_ref on failed rebuild
* hyper-v: Logs tips on PortBindingFailed
* Add unit tests for EmulatorThreadsTestCase
* [libvirt] Filter hypervisor\_type by virt\_type
* Updated from global requirements
* SchedulerReportClient.set\_aggregates\_for\_provider
* Fix a comment in a notification functional test
* Bumping functional test job timeouts
* Remove deprecated policy items from fake\_policy
* Reduce policy deprecation warnings in test runs
* Handle network-changed event for a specific port
* Fix the incorrect RST convention
* Fix SUSE Install Guide: Placement port
* Log the events we timed out waiting for while plugging vifs
* Reduce complexity of \_from\_db\_object

17.0.0.0b3
----------

* Ironic: Get IP address for volume connector
* Add release note for QEMU native LUKS decryption
* Fix missing 'if\_notifications\_enabled' decorator
* Fix missing marker functions
* Fix bug case by none token context
* Transform instance.resize\_prep notification
* Move remaining uses of parted to privsep
* Avoid suspending guest with attached vGPUs
* placement: enable required traits from the flavor extra specs
* placement: using the dict format for the allocation in claim\_resources
* Update VMWare vSphere link address
* Handle TZ change in iso8601 >=0.1.12
* Updated from global requirements
* Fix the order of target host checks
* Add the Nova libvirt StorPool attachment driver
* Expand on when you might want to set --max-count for map\_instances
* libvirt: pass the mdevs when rebooting the guest
* Set server status to ERROR if rebuild failed
* Fix nits in allocation candidate limit handling
* libvirt: QEMU native LUKS decryption for encrypted volumes
* Replace curly quotes with straight quotes
* Fix 'all\_tenants' & 'all\_projects' type in api-ref
* Use neutron port\_list when filtering instance by ip
* Start moving users of parted to privsep
* Add PowerVM to feature-classification
* Fix update\_cell to ignore existing identical cells
* Change compute RPC to use alternates for resize
* Report Client: PUT empty (not None) JSON data
* Send traits to ironic on server boot
* PowerVM Driver: SEA
* Recreate mediated devices on reboot
* [api] Allow multi-attach in compute api
* doc: Document TLS security setup for noVNC proxy
* placement: support traits in allocation candidates API
* Do not multiply megabytes with 1024 to get gigabytes
* api-ref: Fix parameter type in server-migrations.inc
* Transform instance-evacuate notification
* [placement] Add sending global request ID in delete (3)
* Add index(instance\_uuid, updated\_at) on instance\_actions table
* Fix 500 in test\_resize\_server\_negative\_invalid\_state
* Generalize DB conf group copying
* Track tree-associated providers in report client
* ProviderTree.populate\_from\_iterable
* Raise on API errors getting aggregates/traits
* Updated from global requirements
* Remove redundant swap\_volume tests
* Track associated sharing RPs in report client
* SchedulerReportClient.set\_traits\_for\_provider
* ProviderTree.data => ProviderData
* Cleanup redundant want\_version assignment
* Fix format in flavors.rst
* libvirt: Introduce disk encryption config classes
* libvirt: Collocate encryptor and volume driver calls
* libvirt: create vGPU for instance
* Deduplicate service status notification samples
* libvirt: don't attempt to live snapshot paused instances
* Pass multiattach flag to reserve\_block\_device\_name
* Handle swapping to a multiattach volume
* [libvirt] Allow multiple volume attachments
* trivial: Remove crud from 'conf.py'
* Fix openstackdocstheme options for api-ref
* Updated from global requirements
* [placement] Add functional tests for resource class API
* correct referenced url in comments
* Transform instance.resize\_confirm notification
* placement: \_get\_trees\_matching\_all\_resources()
* Account for deprecation of personality files
* PowerVM driver: ovs vif
* add \_has\_provider\_trees() utility function
* func tests for nested providers in alloc candidate
* Deduplicate aggregate notification samples
* Fix accumulated nits
* Make sure that functional test triggered on sample changes
* Add taskflow to requirements
* Updated from global requirements
* Enable py36 unit tests in tox
* Stop globally caching host states in scheduler HostManager
* make unit tests compatible with os-vif 1.8.0
* Remove unnecessary execute permissions in files
* Update plugs Contrail methods to work with privsep
* [placement] Fix resource provider delete
* Transform rescue/unrescue instance notifications
* conf: Do not inherit image signature props with snapshots
* Track provider traits in report client
* Fix missing rps in allocation candidates
* Add aggregates check in allocation candidates
* Fix accumulated nits in refactor series
* Test helper: validate provider summaries
* Revert "Deduplicate service status notification samples"
* console: Provide an RFB security proxy implementation
* console: introduce the VeNCrypt RFB authentication scheme
* console: introduce framework for RFB authentication
* console: Send bytes to sockets
* Update links in documents
* Add a warning in 'nova-manage cell\_v2 delete\_cell'
* Modify the test case of get\_disk\_mapping\_rescue\_with\_config
* Rename block\_device\_info\_get\_root
* Address nits in change I7e01f95d7173d9217f76e838b3ea71555151ef56
* trivial: Resolve 'oslo.context' deprecation warnings
* Increase notification wait timeout in functional tests
* [placement] Add sending global request ID in delete (2)
* Fix comment in MigrationSortContext
* Add index(updated\_at) on migrations table
* Add pagination and Changes-since filter support for os-migrations
* Deduplicate service status notification samples
* Add exception to no-upcall note of cells doc
* Fix typo in release note
* Add cross cell sort support for get\_migrations
* libvirt: add tests to check multipath in iscsi/fc volume connectors
* libvirt: test to make sure volume\_use\_multipath is properly used
* libvirt: use 'host-passthrough' as default on AArch64
* Add reference to policy sample
* Add an additional description for 'token\_ttl'
* Updated from global requirements
* Qualify the Placement 1.15 release note
* Add migration db and object pagination support
* Add regression test for resize failing during retries
* Fix race condition in retrying migrations
* libvirt: Provide VGPU inventory for a single GPU type
* Fix OpenStack capitalization
* Update FAQs about listing hosts in cellv2
* Add ConsoleAuthToken object
* Optionalize instance\_uuid in console\_auth\_token\_get\_valid()
* Add index on token\_hash and instance\_uuid for console\_auth\_tokens
* Add access\_url\_base to console\_auth\_tokens table
* Add debug output for selected page size
* Use method validate\_integer from oslo.utils
* conf: hyperv: fix a comment typo
* Remove a duplicate line in a unit test
* Use volume shared\_targets to lock during attach/detach
* Handle no allocations during migrate
* Add regression test for resizing failing when using CachingScheduler
* zuul: Move legacy jobs to project
* Imported Translations from Zanata
* log test: use fixtures.StandardLogging in setUp
* Fix up formatting for deprecate-api-extensions-policies release note
* Fix documentation nits in set\_and\_clear\_allocations
* Document lack of side-effects in AllocationList.create\_all()
* VMware: add support for different firmwares
* hyper-v: Deprecates support for Windows / Hyper-V Server 2012
* Use UEFI as the default boot for AArch64
* Don't log a warning for InstanceNotFound in detach\_interface
* manager: more detailed info of unsupported compute driver
* Add test for assignment of uuid to a deleted BDM
* Fix fake libvirt XML generation for disks
* Handle glance exception during rotating instance backup
* Move aggregates from report client to ProviderTree
* Only call numa\_fit\_instance\_to\_host if necessary
* Expose BDM uuid to drivers
* DriverBlockDevice: make subclasses inherit \_proxy\_as\_attr
* Add an online migration for BDM.uuid
* Address nits in I46d483f9de6776db1b025f925890624e5e682ada
* Add support for getting volume details with a specified microversion
* XenAPI: Unit tests must mock os\_xenapi calls
* Revert "Modify \_poll\_shelved\_instances periodic task call \_shelve\_offload\_instance()"
* Remove 'nova-manage host' and 'nova-manage agent'
* Remove 'nova-manage logs' command
* setup.cfg: Explicitly set [build\_sphinx] builder
* conf: Remove deprecated 'remap\_vbd\_dev' option
* api-ref: Fix incorrect parameter name
* [placement] Add sending global request ID in delete
* trivial: conf: libvirt: remove a redundant space
* Fix the formatting for 2.58 in the compute REST API history doc
* trivial: Modify signature of \_filter\_non\_requested\_pfs
* Add PCI NUMA policies
* Document testing guide for new API contributions
* trivial: use cn instead of rp
* Updated from global requirements
* Test allocation candidates: multiple aggregates
* Fix functional tests for USE\_NEUTRON
* Make conductor pass and use host\_lists
* Don't try to delete build request during a reschedule
* libvirt: don't log snapshot success unless it actually happens
* Add retry\_on\_deadlock decorator to action\_event\_start
* conf: libvirt: Cleanup CPU modelling related options
* Remove dead parameter from '\_create\_domain\_and\_network'
* Handle images with no data
* tests: Use correct response type in tests
* Remove the inherits parameter for the Resource object
* Remove the LoadedExtensionInfo object
* Initialize osprofiler in WSGI application
* doc: update supported drivers for cpu topology
* Do not set allocation.id in AllocationList.create\_all()
* [placement] Fix getting placement request ID
* [placement] Enable limiting GET /allocation\_candidates
* Pass RequestSpec to ConductorTaskAPI.build\_instances
* Fix an error in \_get\_host\_states when deleting a compute node
* Provide example for placement last-modified header of now
* objects: Add PCI NUMA policy fields
* Workaround missing RequestSpec.project\_id when moving an instance
* Use instance.project\_id when creating request specs for old instances
* Fix duplicate allocation candidates
* trivial: conf: libvirt: fix a typo
* Remove extensions module
* Fix 4 doc typos
* Fix false positive server group functional tests
* Updated from global requirements
* XenAPI: create vGPU for instance
* update\_cell allows more than once cell to have the same db/transport url
* [placement] Add x-openstack-request-id in API ref
* [placement] Separate API schemas (allocation\_candidate)
* [placement] Separate API schemas (allocation)
* Implement set\_and\_clear\_allocations in report client
* Make BlockDeviceMapping object support uuid
* Add uuid column to BlockDeviceMapping
* Remove unused argument from LibvirtDriver.\_disconnect\_volume
* Removed unused argument from LibvirtDriver.\_connect\_volume
* Fix unit test failures when direct IO not supported
* [placement] Separate API schemas (resource\_class)
* Updated from global requirements
* Deduplicate functional test code
* Aggregate ops on ProviderTree
* Implement query param schema for migration index
* Make request\_spec.spec MediumText
* Fix the formatting for 2.56 in the compute REST API history doc
* Delete the TypeAffinityFilter
* live-mig: keep disk device address same
* Traits ops on ProviderTree
* SchedulerReportClient.\_get\_providers\_in\_aggregates
* [placement] Separate API schemas (inventory)
* [placement] Separate API schemas (aggregate)
* [placement] Separate API schemas (trait)
* [placement] Separate API schemas (usage)
* Fix the bug report link of API Guide
* Extract instance allocation removal code
* Test alloc\_cands with one RP shared between two RPs
* Test alloc\_cands with non overlapping sharing RPs
* handle traits with sharing providers
* Fix possible TypeError in VIF.fixed\_ips
* Add pagination and changes-since for instance-actions
* Updated common create server sample request because of microversion 2.57
* Fix some typos in nova doc
* Retry \_trait\_sync on deadlock
* Remove unnecessary connector stash in attachment\_update
* Pass mountpoint to volume attachment\_create with connector
* Pass bdms to versioned notifications during finish\_revert\_resize
* Update and complete volume attachments during resize
* Pass mountpoint to volume attachment\_update
* Don't persist could-be-stale InstanceGroup fields in RequestSpec
* Update nova-status and docs for nova-compute requiring placement 1.14
* Wait for live\_migration\_rollback.end notification
* Some nit fix in multi\_cell\_list
* Raise MarkerNotFound if BuildRequestList.get\_by\_filters doesn't find marker
* Move flushing block devices to privsep
* Convert ext filesystem resizes to privsep
* [placement] Add info about last-modified to contrib docs
* [placement] Add cache headers to placement api requests
* Stabilize test\_live\_migration\_abort func test
* doc: add note about fixing admin-only APIs without a microversion
* Deprecate file injection
* VMware: implement get\_inventory() driver method
* VMware: expose max vCPUs and max memory per ESX host
* VMware: fix memory stats
* api-ref: Fix a description for 'guest\_format'
* Move the claim\_resources method to scheduler utils
* Change RPC for select\_destinations()
* Re-use existing ComputeNode on ironic rebalance
* placement: skip authentication on root URI
* Add instance action db and obj pagination support
* Update Instance action's updated\_at when action event updated
* Make live migration hold resources with a migration allocation
* Add instance action record for snapshot instances
* Add quiesce and unquiesce in support matrix
* libvirt: throw NotImplementedError if qga is not responsive when setting password
* [placement] Fix API reference for microversion 1.14
* Unmap compute nodes when deleting host mapping
* Follow up on removing old-style quotas code
* Add API and nova-manage tests that use the NoopQuotaDriver
* Add instance action record for backup instances
* Don't launch guestfs in a thread pool if guestfs.debug is enabled
* Remove confusing comment in compute\_node\_get API method
* [placement] add name to resource provider create error
* Improve error message on invalid BDM fields
* doc: link in some Sydney summit content
* trivial: more suitable log in set\_admin\_password
* Add support for listing hosts in cellv2
* [placement] Add 'Location' parameters in API ref
* [placement] Object changes to support last-modified headers

17.0.0.0b2
----------

* Implement new attach Cinder flow
* Add new style volume attachment support to block\_device.py
* SchedulerReportClient.\_get\_providers\_in\_tree
* Modify select\_destinations() to return objects and alts
* Move the to\_dict() method to the Selection object
* Return Selection objects from the scheduler driver
* Refactor the code to check for sufficient hosts
* Fix 'force' parameter in os-quota-sets PUT schema
* Reformat \_get\_all\_with\_shared
* Updated from global requirements
* Deprecate configurable Hide Server Address Feature
* XenAPI: update the picture in Xen hypervisor document
* Deprecate API extensions policies
* Avoid stashed connector lookup for new style detach
* placement: update client to set parent provider
* Scheduler set\_inventory\_for\_provider does nested
* placement: adds REST API for nested providers
* placement: allow filter providers in tree
* XenAPI: Don't use nicira-iface-id for XenServer VIF
* archive\_deleted\_instances is not atomic for insert/delete
* Remove the unused request\_id filter from api-paste.ini
* Add a new check to volume attach
* Add instance action record for shelve\_offload instances
* Modify \_poll\_shelved\_instances periodic task call \_shelve\_offload\_instance()
* Add Selection objects
* Fix doubling allocations on rebuild
* Add PowerVM to compute\_driver options
* Updated from global requirements
* Fix wrong argument order in functional test
* [placement] Fix an error message in API validation
* Transform instance.resize\_revert notification
* Mention API behavior change when over quota limit
* [placement] Fix foreign key constraint error
* [placement] Add aggregate link note in API ref
* Fail fast if changing image on a volume-backed server rebuild
* Get original image\_id from volume for volume-backed instance rebuild
* Add regression test for rebuilding a volume-backed server
* ProviderTree.get\_provider\_uuids()
* Fix cellsv1 messaging test
* Make \_Provider really private
* Split instance\_list into instance and multi\_cell
* Genericify the instance\_list stuff
* Remove 'nova-manage account' and 'nova-manage project'
* Remove 'nova-manage shell' command
* Updated from global requirements
* Fixes 'Not enough available memory' log message
* Only log not correcting allocation once per period
* Add description for resource class creation
* Trivial: Nix duplicate PlacementFixture() in test
* Check the return code when forcing TCG mode with libguestfs
* [placement] re-use existing conf with auth token middleware
* Fix disk size during live migration with disk over-commit
* Use ksa adapter for keystone conf & requests
* Downgrade log for keystone verify client fail
* [placement]Enhance doc for placement allocation list
* Update description of Rebuild in server\_concepts.rst
* Use oslo\_db Session in resource\_provider.py
* VMware: Handle concurrent registrations of the VC extension
* Proper error handling by \_ensure\_resource\_provider
* Refactor placement version check
* Nix log translations from scheduler.client.report
* Remove old-style quotas code
* Remove direct usage of glance.generate\_image\_url
* remove glance usage inside compute
* Assert that we restrict cold migrations to the same cell
* [placement] Fix format in placement API ref
* Enable cold migration with target host(2/2)
* qemu-img do not use cache=none if no O\_DIRECT support
* remove reserve\_quota\_delta
* Raise specific exception when swapping migration allocations fails
* Remove vestigial extra\_info update in PciDevice.save()
* Fix ValueError when loading old pci device record
* Updated from global requirements
* Remove the objects for describing the extension for v2.1 API
* Remove the objects which related to the old v2 API implementation
* Updated from global requirements
* Save updated libvirt domain XML after swapping volume
* placement: add nested resource providers
* Deprecate the IronicHostManager
* Fix some incorrect option references for scheduler filters
* Remove deprecated TrustedFilter
* Fix NoneType error when [service\_user] is misconfigured
* check query param for server groups function
* Deduplicate instance.create notification samples
* Nits from Ic3ab7d60e4ac12b767fe70bef97b327545a86e74
* [placement] Fix GET PUT /allocations nits
* [placement] POST /allocations to set allocations for >1 consumers
* Add instance action record for lock/unlock instances
* XenAPI: provide vGPU inventory in compute node
* XenAPI: get vGPU stats from hypervisor
* Add 'all\_tenants' for GET sec group api ref
* Update the documentation links
* Add instance action record for attach/detach/swap volumes
* Add regression test for rebuild with new image doubling allocations
* Refined fix for validating image on rebuild
* Address nits from service create/destroy notification review
* Versioned notifications for service create and delete
* Remove unnecessary self.flags and ConfPatcher
* Implement query param schema for delete assisted vol
* Add ProviderSummary.resource\_class\_names @property
* required traits for no sharing providers
* Fix invalid minRam error message
* finish refactor AllocCandidates.\_get\_by\_filters()
* PowerVM support matrix update
* Fix the format file name
* Simplify BDM boot index checking
* Remove unused global variables
* Updated from global requirements
* Implement query param schema for flavor index
* Implement query param schema for fping index
* Implement query param schema for sec group APIs
* Finish stestr migration
* Fix incorrect known vcpuset when CPUPinningUnknown raised
* Enable cold migration with target host(1/2)
* Update server query section in the API concept doc
* [placement] Add 'CUSTOM\_' prefix description in API ref
* [placement] Fix parameter order in placement API ref
* Remove 'nova-manage quota refresh' command
* Api-guide: Address TODOs in user\_concepts section
* Update server status api guide
* Api guide:add Server Consoles
* Update Metadata api section of api guide
* Implement query param schema for simple\_tenant\_usage
* Transform instance-live\_migration\_pre notification
* Use FakeLiveMigrateDriver in notification test
* Change live\_migrate tests to use fakedriver
* Test resource allocation during soft delete
* factor out compute service start in ServerMovingTest
* Moving more utils to ProviderUsageBaseTestCase
* Don't overwrite binding-profile
* Fix TypeError of \_get\_project\_id when project\_id is None
* Regenerate and pass configdrive when rebuild Ironic nodes
* Update bindep.txt for doc builds
* [placement] Symmetric GET and PUT /allocations/{consumer\_uuid}
* Service token is not experimental
* Use ksa adapter for neutron client
* Get auth from context for glance endpoint
* vgpu: add enabled white list
* cleanup mapping/reqspec after archive instance
* Fix the usage of instance.snapshot notification sample
* Update document related to host aggregate
* api-ref: Add a description of 'key\_name' in rebuild
* api-ref: Fix an example in "Delete Assisted Volume Snapshot"
* Use the RequestSpec when getting scheduler\_hints in compute
* Add migration\_get\_by\_uuid in db api
* Add instance action record for attach/detach interface
* placement: Document request headers in api-ref
* Deduplicate keypair notification samples
* Include project\_id and user\_id in AllocationList.get\_all\_by\_consumer\_id
* Clean up exception caught in \_validate\_and\_build\_base\_options
* Implement query param schema for volume, snapshot API
* Implement query param schema for quota set APIs
* api-ref: fix the type on the block\_device\_mapping\_v2 parameter
* placement: Document \`in:\` prefix for ?member\_of=
* libvirt: Re-initialise volumes, encryptors, and vifs on hard reboot
* VMware: serial console log (completed)
* PowerVM Driver: config drive
* Fix TypeError in nova-manage db archive\_deleted\_rows
* Remove setting of version/release from releasenotes
* Fix the formatting for the 2.54 microversion REST API version history
* doc: Adds Hyper-V PCI passthrough details
* hyper-v: Do not allow instances with pinned CPUs to spawn
* Updated from global requirements
* Add microversion to allow setting flavor description
* Fix docstring for GET /os-migrations and related DB API
* Add a note about versioned notification samples being per-release
* Document the real behavior of notify\_on\_state\_change
* Use NoDBTestCase for powervm driver tests
* create allocation request for single provider
* build alloc request resources for shared resources
* build ProviderSummary objects in sep function
* begin refactor AllocCandidates.\_get\_by\_filters()
* Add security release note for OSSA-2017-005
* Add error message on metadata API
* api-ref: make a note about os:scheduler\_hints being a top-level key
* doc: fix link to creating unit tests in contributor guide
* Validate new image via scheduler during rebuild
* Add FlavorPayload.description for versioned notifications
* placement: AllocCands.get\_by\_{filters => requests}
* Deduplicate server\_group samples
* Correct log message when removing a security group
* Updated from global requirements
* Enable reset keypair while rebuilding instance
* Test allocation\_candidates with only sharing RPs
* Test alloc candidates with same RC in cn & shared
* rt: Make resource tracker always invoking get\_inventory()
* Revert "Don't overwrite binding-profile"
* Cleanup build\_request\_spec
* Refactor test\_allocation\_candidates
* block\_device\_mapping\_v2.bus\_type is missing from api-ref
* Remove incorrect comment about instance.locked
* Don't overwrite binding-profile
* Do not use “-y” for package install
* [placement] set accept to application/json if accept not set
* [placement] Fix a wrong redirection in placement doc
* Handle InstanceNotFound when setting password via metadata
* Extract allocation candidates functional tests
* Deduplicate instance.reboot notification samples
* Deduplicate instance.live\_migration notification samples
* Deduplicate instance.interface\_attach samples
* Deduplicate instance.power-off notification samples
* Transform instance-live\_migration\_abort notification
* Deduplicated instance.(un)pause notification samples
* Factor out duplicated notification sample data (2)
* Move last\_bytes into the path module
* Fix test\_get\_volume\_config method
* Fix missing versioned notification sample
* Clean up allocations if instance deleted during build
* Avoid deleting allocations for instances being built
* libvirt: remove old code in post\_live\_migration\_at\_destination
* Using --option ARGUMENT
* Add Flavor.description attribute
* Modify incorrect debug meaasge in \_inject\_data
* Avoid redundant security group queries in GET /servers/{id}/os-security-groups
* Update contributor microversion doc for compute
* Updated from global requirements
* Granularize resources\_from\_{flavor|request\_spec}
* Parse granular resources/traits from extra\_specs
* placement: Parse granular resources & traits
* RequestGroup class for placement & consumers
* Factor out duplicated notification sample data
* libvirt: Don't VIR\_MIGRATE\_NON\_SHARED\_INC without migrate\_disks
* libvirt: do unicode conversion for error messages
* Fix return type in FilterScheduler.\_legacy\_find\_hosts
* Implement power\_off/power\_on for the FakeDriver
* Remove instance.keypairs migration code
* conf: Validate '[api] vendordata\_providers' options
* conf: Remove 'vendordata\_driver' opt
* Trivial grammar fix
* Fix warning on {'cell\_id': 1} is an invalid UUID
* Move contrail vif plugging to privsep
* Move plumgrid vif plugging to privsep
* Move midonet vif plugging to privsep
* Move infiniband vif plugging to privsep
* Remove compatibility method from FlavorPayload
* placement: Contributor doc microversion checklist
* libvirt: do not remove inst\_base when volume-backed during resize
* Refactor claim\_resources() to use retries decorator
* Make put\_allocations() retry on concurrent update
* [placement] avoid case issues microversions in gabbits
* Fix format in live-migration-usage.rst
* Don't update RT in \_allocate\_network
* Transform keypair.import notification
* api-ref: document caveats with scheduler hints
* add whereto for testing redirect rules
* rp: break functions out of \_set\_traits()
* Use Migration object in ComputeManagerMigrationTestCase
* check query param for used\_limits function
* VMware: add support for graceful shutdown of instances
* Pass requested\_destination in filter\_properties
* Functional regression test for evacuate with a target
* Fix indent in configuring-migrations.rst
* XenAPI: resolve VBD unplug failure with VM\_MISSING\_PV\_DRIVERS error
* libvirt: properly decode error message from qemu guest agent
* Use ksa adapter for placement conf & requests
* Only filter/weigh hosts once if scheduling a single instance
* Update placement api-ref: allocations link in 1.11
* rt: Implement XenAPI get\_inventory() method
* Fix instance lookup in hide\_server\_addresses extension
* libvirt: remove extraneous retry assignment in cleanup method
* libvirt: Don't disregard cache mode for instance boot disks
* Fix live migration grenade ceph setup
* Pass the correct image to build\_request\_spec in conductor.rebuild\_instance
* rp: remove \_HasAResourceProvider mixin
* rp: move RP.\_set\_traits() to module scope
* rp: Remove RP.get\_traits() method
* [placement] Limit number of attempts to delete allocations
* [placement] Allow \_set\_allocations to delete allocations
* conf: Move additional nova-net opts to 'network'
* Do not attempt volume swap when guest is stopped/suspended
* Convert IVS VIF plugging / unplugging to privsep
* Move blkid calls to privsep
* trivial: Rename 'policy\_check' -> 'policy'
* test: Store the OutputStreamCapture fixture
* Accept all standard resource classes in flavor extra specs
* Fix AttributeError in BlockDeviceMapping.obj\_load\_attr
* Move project\_id and user\_id to Allocation object
* VGPU: Define vgpu resource class
* Make migration uuid hold allocations for migrating instances
* Fix wrapping of neutron forbidden error
* Import user-data page from openstack-manuals
* Import the config drive docs from openstack-manuals
* Move kpartx calls to privsep
* Move nbd commands to privsep
* Move loopback setup and removal to privsep
* Move the idmapshift binary into privsep
* Include /resource\_providers/uuid/allocations link
* xenapi: cached images should be cleaned up by time
* Add test so we remember why CUSTOM\_ prefix added
* Move xend existence probes to privsep
* Move shred to privsep
* Add alternate hosts
* Implement query param schema for host index
* conf: Remove deprecated 'null\_kernel' opt
* Adds 'sata' as a valid disk bus for qemu and kvm hypervisors
* propagate OSError to MigrationPreCheckError
* Trivial: fix spelling of allocation\_request
* Transform instance.trigger\_crash\_dump notification
* Add debug information to metadata requests

17.0.0.0b1
----------

* placement: integrate ProviderTree to report client
* [Trivial] Fix up a docstring
* Remove duplicate error info
* [placement] Clean up TODOs in allocations.yaml gabbit
* Add attachment\_get to refresh\_connection\_info
* Add 'delete\_host' command in 'nova-manage cell\_v2'
* Keep updating allocations for Ironic
* docs: Explain the flow of the "serial console" feature
* Send Allocations to spawn
* Move lvm handling to privsep
* Cleanup mount / umount and associated rmdir calls
* Update live migration to use v3 cinder api
* placement: set/check if inventory change in tree
* Move restart\_compute\_service to a common place
* Fix nova-manage commands that do not exist
* fix cleaning up evacuated instances
* doc: Fix command output in scheduler document
* Refactor resource tracker to account for migration allocations
* Revert allocations by migration uuid
* Split get\_allocations\_for\_instance() into useful bits
* Regenerate context during targeting
* Pick ironic nodes without VCPU set
* Don't use mock.patch.stopall
* Move test\_uuid\_sentinels to NoDBTestCase
* [placement] Confirm that empty resources query causes 400
* [placement] add coverage for update of standard resource class
* api-ref: add warning about force evacuate for ironic
* Add snapshot id to the snapshot notifications
* Reproduce bug 1721652 in the functional test env
* Add 'done' to migration\_get\_in\_progress\_by\_host\_and\_node filter
* Update "SHUTOFF" description in API guide
* api-ref: fix server status values in GET /servers docs
* Fix connection info refresh for reboot
* rp: rework AllocList.get\_all\_by\_consumer\_id()
* rp: fix up AllocList.get\_by\_resource\_provider\_uuid
* rp: remove ability to delete 1 allocation record
* rp: remove dead code in Allocation.\_create\_in\_db()
* rp: streamline InventoryList.get\_all\_by\_rp\_uuid()
* rp: remove CRUD operations on Inventory class
* Make expected notifications output easier to read in tests
* Elevate existing RequestContext to get bandwidth usage
* Fix target\_cell usage for scatter\_gather\_cells
* Nix bug msg from ConfGroupForServiceTypeNotFound
* nova-manage map\_instances is not using the cells info from the API database
* Updated from global requirements
* Update cinder in RequestContext service catalog
* Target context for build notification in conductor
* Don't fix protocol-less glance api\_servers anymore
* Move user\_data max length check to schema
* Remove unnecessary BDM destroy during instance delete
* rp: Move RP.\_get|set\_aggregates() to module scope
* rp: de-ORM ResourceProvider.get\_by\_uuid()
* use already loaded BDM in instance.create
* use already loaded BDM in instance.<action> (2)
* use already loaded BDM in instance.<action>
* Remove dead code of api.fault notification sending
* Fix sending legacy instance.update notification
* doc: Rework man pages
* Fix typo in test\_prep\_resize\_errors\_migration
* Fix minor input items from previous patches
* nova.utils.get\_ksa\_adapter()
* De-duplicate \_numa\_get\_flavor\_XXX\_map\_list
* hardware: Flatten functions
* Update libvirt volume drivers to use os-brick constants
* Always put 'uuid' into sort\_keys for stable instance lists
* Fix instance\_get\_by\_sort\_filters() for multiple sort keys
* Deprecate allowed\_direct\_url\_schemes and nova.image.download.modules
* Add error notification for instance.interface\_attach
* Note TrustedFilter deprecation in docs
* Make setenv consistent for unit, func, and api-samples
* Blacklist test\_extend\_attached\_volume from cells v1 job
* Pre-create migration object
* Remove metadata/system\_metadata filter handling from get\_all
* fix unstable shelve offload functional tests
* TrivialFix: Fix the incorrect test case
* stabilize test\_resize\_server\_error\_and\_reschedule\_was\_failed
* api-ref: note that project\_id filter only works with all\_tenants
* Avoid redundant BDM lookup in check\_can\_live\_migrate\_source
* Only query BDMs once in API during rebuild
* Make allocation cleanup honor new by-migration rules
* Modernize set\_vm\_state\_and\_notify
* Remove system\_metadata loading in Instance.\_load\_flavor
* Stop joining on system\_metadata when listing instances
* Remove old compat code from servers ViewBuilder.\_get\_metadata
* Remove unused get\_all\_instance\_\*metadata methods
* doc: Add documentation for cpu\_realtime, cpu\_realtime\_mask
* Remove 400 as expected error
* Remove doc todo related to bug/1506667
* api-ref: add note about rebuild not replacing volume-backed root disk
* api-ref: remove redundant preserve\_ephemeral mention from rebuild docs
* [placement] gabbi tests for shared custom resource class
* Update RT aggregate map less frequently
* libvirt: add method to configure migration speed
* Set migration object attributes for source/dest during live migrate
* Refactor duplicate code for looking up the compute node name
* Fix CellDatabases fixture swallowing exceptions
* Use improved instance\_list module in compute API
* Fix a pagination logic bug in test\_bug\_1689692
* Add hints to what the Migration attribute values are
* Move cell0 marker test to Cellsv1DeprecatedTestMixIn
* Ensure instance can migrate when launched concurrently
* console: introduce basic framework for security proxying
* [placement] Update the placement deployment instructions
* Move allocation manipulation out of drop\_move\_claim()
* Do not monkey patch eventlet in unit tests
* Do not setup conductor in BaseAPITestCase
* Make etree.tostring() emit unicode everywhere
* Fix inconsistency of 'NOTE:' description
* Don't shell out to mkdir, use ensure\_tree()
* Read from console ptys using privsep
* Move ploop commands to privsep
* Set group\_members when converting to legacy request spec
* Support qemu >= 2.10
* Fix policy check performance in 2.47+
* doc: make host aggregates examples more discoverable
* Remove dest node allocations during live migration rollback
* Fix race in delete allocation in ServerMovingTests
* xenapi: pass migrate\_data to recover\_method if live migrate fails
* \_rollback\_live\_migration in live-migration seqdiag
* Log consumer uuid when retrying claims in the scheduler
* Add recreate test for live migrate rollback not cleaning up dest allocs
* Add slowest command to tox.ini
* Make TestRPC inherit from the base nova TestCase
* Ensure errors\_out\_migration errors out migration
* use context mgr in instance.delete
* Implement query param schema for GET hypervisor(2.33)
* Remove SCREEN\_LOGDIR from devstack install setting
* Fix --max-count handling for nova-manage cell\_v2 map\_instances
* Set the Pike release version for scheduler RPC
* Add functional for live migrate delete
* Fix IoOpsFilter test case class name
* Add get\_node\_uuid() helper to ResourceTracker
* Live Migration sequence diagram
* Deprecate idle\_timeout in api\_database
* cleanup test-requirements
* Add 400 as error code for resource class delete
* Implement query param schema for agent index
* fix nova accepting invalid availability zone name with ':'
* check query param for service's index function
* Remove useless periodic task that expires quota reservations
* Add attachment\_get call to volume/cinder\_api
* Add functional migrate force\_complete test
* Copy some tests to a cellsv1 mixin
* Add get\_instance\_objects\_sorted()
* Make 'fault' a valid joined query field for Instance
* Change livesnapshot to true by default
* docs: Rename cellsv2\_layout -> cellsv2-layout
* Add datapath type information to OVS vif objects
* libvirt: Make 'get\_domain' private
* Fix 500 if list servers called with empty regex pattern
* Vzstorage: synchronize volume connect
* Add \_wait\_for\_action\_fail\_completion to InstanceHelperMixin
* Remove allocations when unshelve fails on host
* Updated from global requirements
* Add instance.interface\_detach notification
* Add default configuration files to data\_files
* Remove method "\_get\_host\_ref\_from\_name"
* Add a regression test for bug 1718455
* Add recreate test for unshelve offloaded instance spawn fail
* Add PowerVM hypervisor configuration doc
* Add tests to validate instance\_list handles faults correctly
* Add fault-filling into instance\_get\_all\_by\_filters\_sort()
* Support pagination in instance\_list
* Add db.instance\_get\_by\_sort\_filters()
* Make instance\_list honor global query limit
* Add base implementation for efficient cross-cell instance listing
* Fix hyperlinks in document
* api-ref: fix default sort key when listing servers
* Add instance.interface\_attach notification
* libvirt: bandwidth param should be set in guest migrate
* Updated from global requirements
* Add connection pool size to vSphere settings
* Add live.migration.force.complete to the legacy notification whitelist
* Restore '[vnc] vnc\_\*' option support
* neutron: handle binding:profile=None during migration
* doc: Add documentation for emulator\_thread\_policy
* doc: Split flavors docs into admin and user guides
* VMware: Factor out relocate\_vm()
* remove re-auth logic for ironic client wrapper
* hyperv: report disk\_available\_least field
* Allow shuffling hosts with the same best weight
* Enable custom certificates for keystone communication
* Fix the ocata config-reference URLs
* Fix a typo
* Account for compute.metrics.update in legacy notification whitelist
* use unicode in tests to avoid SQLA warning
* Move libvirts dmcrypt support to privsep
* Squash dacnet\_admin privsep context
* Squash dac\_admin privsep context
* Move the dac\_admin privsep code to a new location
* Use symbolic names for capabilities, expand sys\_admin context
* stabilize test\_resize\_server\_error\_and\_reschedule\_was\_failed
* Updated from global requirements
* Drop support for the Cinder v2 API
* Remove 400 as expected error
* Set error state after failed evacuation
* Add @targets\_cell for live\_migrate\_instance method in conductor
* [placement] Removing versioning from resource\_provider objects
* doc: rename the Indices and Tables section
* doc: Further cleanup of doc contributor guide
* [placement] Unregister the ResourceProvider object
* [placement] Unregister the ResourceProviderList object
* [placement] Unregister the Inventory object
* [placement] Unregister the InventoryList object
* [placement] Unregister the Allocation object
* [placement] Unregister the AllocationList object
* [placement] Unregister the Usage object
* [placement] Unregister the UsageList object
* [placement] Unregister the ResourceClass object
* [placement] Unregister the ResourceClassList object
* [placement] Unregister the Trait object
* [placement] Unregister the TraitList object
* Add '\_has\_qos\_queue\_extension' function
* Add '\_has\_dns\_extension' function
* Assume neutron auto\_allocate extension's enabled
* Add single quotes for posargs on jobs
* Add nova-manage db command for ironic flavor migrations
* enhance api-ref for os-server-external-events
* Have one list of reboot task\_states
* Call terminate\_connection when shelve\_offloading
* Revert "Enable test\_iscsi\_volume in live migration job"
* Target context when setting instance to ERROR when over quota
* Cleanup running of osprofiler tests
* Fix test runner config issues with os-testr 1.0.0
* Fix missed chown call
* Updated from global requirements
* Tweak connection\_info translation for the new Cinder attach/detach API
* Add attachment\_complete call to volume/cinder.py
* Remove dest node allocation if evacuate MoveClaim fails
* Add a test to make sure failed evacuate cleans up dest allocation
* Add recreate test for evacuate claim failure
* Create allocations against forced dest host during evacuate
* fake\_notifier: Refactor wait\_for\_versioned\_notification
* Transform instance.resize.error notifications
* Update docs to include standardization of VM diagnostics
* Refactor ServerMovingTests for non-move tests
* Remove deprecated keymgr code
* Move execs of tee to privsep
* Add ComputeNodeList.get\_by\_hypervisor\_type()
* Split out the core of the ironic flavor migration
* Fix binary name
* Revert "Revert "Fix AZ related API docs""
* [placement] Correct a comment in \_set\_allocations
* Remove Xen networking plugin
* Revert "Fix AZ related API docs"
* [placement] correct error on bad resource class in allocation
* api-ref: note the microversions for GET /resource\_providers query params
* doc: fix flavor notes
* Fix AZ related API docs
* Transform aggregate.remove\_host notification
* Transform servergroup.delete notification
* Transform aggregate.add\_host notification
* Cleanup unused get\_iscsi\_initiator
* Remove two testing stubs which aren't really needed
* Typo error about help resource\_classes.inc
* Transform servergroup.create notification
* Set regex flag on ostestr command for osprofiler tests
* Transform keypair.delete notification
* Move execs of touch to privsep
* Move libvirt usages of chown to privsep
* Enable test\_iscsi\_volume in live migration job
* Refactor out claim\_resources\_on\_destination into a utility
* Fix broken URLs
* Ensure instance mapping is updated in case of quota recheck fails
* Track which cell each instance is created in and use it consistently
* Make ConductorTaskTestCase run with 2 cells
* xenapi: Exception Error logs shown in Citrix XenServer CI
* Update contributor guide for Queens
* Allow setting up multiple cells in the base TestCase
* Fix test\_rpc\_consumer\_isolation for oslo.messaging 5.31.0
* Fix broken link
* First attempt at adding a privsep user to nova itself
* Provide hints when nova-manage db sync fails to sync cell0
* Add release note for force live migration allocations
* Handle exception on adding secgroup
* doc: Add configuration index page
* doc: Add user index page
* spelling mistake
* Fix ValueError if invalid max\_rows passed to db purge
* Remove usage of kwarg retry\_on\_request in API
* Add release note for requiring shred 8.22 or above
* Make xen unit tests work with os-xenapi>=0.3.0
* Skip more racy rebuild failing tests with cells v1
* Add some inline code docs tracing the cold migrate flow
* Mark LXC as missing for swap volume support
* Remove compatibility code for flavors
* rbd: Remove unnecessary 'encode' calls
* Updated from global requirements
* Pass config object to oslo\_reports
* Replace http with https for doc links in nova
* Put base policy rules at first
* Amend uuid4 hacking rule
* conf: Rename two VNC options
* Correct examples in "Manage Compute services" documentation
* Handle deleted instances when refreshing the info\_cache
* Remove qpid description in doc
* Replace dd with shred for zeroing lvm volumes
* Update docs for \_destroy\_evacuated\_instances
* doc: link to versioned notification samples from main index
* doc: link to placement api-ref and history docs from main index
* doc: fix online\_data\_migrations option in upgrades doc
* Add recreate test for forced host evacuate not setting dest allocations
* add online\_data\_migrations to nova docs
* Glance download: only fsync files
* Functional test for regression bug #1713783
* doc: fix show-hide sample in notification devref
* Default the service version in the notification tests
* api-ref: add warnings about forcing the host for live migrate/evacuate
* HyperV: Perform proper cleanup after failed instance spawns
* [placement] Update user doc with api-ref link
* [placement] api-ref GET /traits name:startswith
* Add video type virtio for AArch64
* Document tagged attach in the feature support matrix
* [placement] Require at least one resource class in allocation
* Enhance doc for nova services
* Update doc to indicate nova-network deprecated
* Updated from global requirements
* [placement] Add test for empty resources in allocation
* Refactor LiveMigrationTask.\_find\_destination
* Cleanup allocations on invalid dest node during live migration
* Hyper-V: Perform proper cleanup after cold migration
* Test InstanceNotFound handling in 'nova usage'
* Typo fix in admin doc ssh-configuration.html
* iso8601.is8601.Utc No Longer Exists
* Fix nova assisted volume snapshots
* Fix \_delete\_inventory log message in report client
* Add functional recreate test for live migration pre-check fails
* doc: Remove deprecated call to sphinx.util.compat
* Remove unneeded attributes from context
* Updates to scheduling workflow doc
* Add uuid online migration for migrations
* Add uuid to migration object and migrate-on-load
* Add uuid to migration table
* Add placeholder migrations for Pike backports
* Clarify the field usage guidelines
* Optimize MiniDNS for fewer syscalls
* [Trivial] docstrings, typos, minor refactoring
* Update PCI passthrough doc for moved options
* tests: De-duplicate some graphics tests
* Reduce code complexity - linux\_net.py
* Refactor init\_instance:resume\_guests\_state
* conf: Allow users to unset 'keymap' options
* Change default for [notifications]/default\_publisher\_id to $host
* Deprecate CONF.monkey\_patch
* Add device tag support info in support matrix
* Prevent blank line at start of migration placeholders
* Remove useless error handling in prep\_resize
* De-duplicate two delete\_allocation\_for\_\* methods
* Move hash ring initialization to init\_host() for ironic
* Fix bug on vmware driver attach volume failed
* fix a typo in format\_cpu\_spec doc
* Cleanup allocations in failed prep\_resize
* Add functional test for rescheduling during a migration
* Remove allocation when booting instance rescheduled or aborted
* Fix sample configuration generation for compute-related options
* Add formatting to scheduling activity diagram
* Monkey patch the blockdiag extension
* docs: Document the scheduler workflow
* Updated from global requirements
* Delete instance allocations when the instance is deleted
* How about not logging errors every time we shelve offload?
* Add missing tests for \_remove\_deleted\_instances\_allocations
* nova-manage: Deprecate 'cell' commands
* Add missing unit tests for FilterScheduler.\_get\_all\_host\_states
* api-ref: fix key\_name note formatting
* Assume neutron port\_binding extensions enabled
* libvirt: Fix getting a wrong guest object
* pci: Validate behavior of empty devname
* Tests: Add cleanup of 'instances' directory
* Remove the section about extensions from the API concept doc
* Restrict live migration to same cell
* Remove source node allocation after live migration completes
* Allocate resources on forced dest host during live migration
* Add language for compute node configuration
* trivial: Remove some single use function from utils
* Add functional live migrate test
* Add functional force live migrate test
* doc: Address review comments for main index
* trivial: Remove dead function, variable
* tests: Remove useless test
* Remove plug\_ovs\_hybrid, unplug\_ovs\_hybrid
* Correct statement in api-ref
* Fix a typo in code comment
* Refactor libvirt.utils.execute() away
* Fix quobyte test\_validate\_volume\_no\_mtab\_entry
* Updated from global requirements
* update comment for dropping support
* Move common definition into common layer
* Remove host filter for \_cleanup\_running\_deleted\_instances periodic task
* Fix contributor documentation
* replace chance with filter scheduler in func tests
* Clean up resources at shelve offload
* test shelve and shelve offload with placement
* Amend the code review guide for microversion API
* delete allocation of evacuated instance
* Make scheduler.utils.merge\_resources ignore zero values
* Fix a wrong link
* Fix reporting inventory for provisioned nodes in the Ironic driver
* Avoid race in test\_evacuate
* Reset client session when placement endpoint not found
* Update api doc with latest updates in api framework
* doc: Extend nfv feature matrix with pinning/NUMA
* Always use application/json accept header in report client
* Fix messages in functional tests
* Handle addition of new nodes/instances in ironic flavor migration
* Skip test\_rebuild\_server\_in\_error\_state for cells v1
* test server evacuation with placement
* doc: add superconductor up-call caveat for cross\_az\_attach=False
* doc: add another up-call caveat for cells v2 for xenapi aggregates
* Update reno for stable/pike
* Deprecate bare metal filters

16.0.0.0rc1
-----------

* Remove "dhcp\_options\_for\_instance"
* Clarifying node\_uuid usage in ironic driver
* doc: address review comments in stable-api guide updates
* Resource tracker compatibility with Ocata and Pike
* placement: avoid returning duplicated alloc\_reqs when no sharing rp
* Imported Translations from Zanata
* [placement] Make placement\_api\_docs.py failing
* [placement] Add api-ref for allocation\_candidates
* Clarify that vlan feature means nova-network support
* [placement] Add api-ref for RP usages
* Remove ram/disk sched filters from default list
* Remove provider allocs in confirm/revert resize
* placement: refactor healing of allocations in RT
* remove log message with potential stale info
* doc: Address review comments for contributor index
* Require Placement 1.10 in nova-status upgrade check
* Mark Chance and Caching schedulers as deprecated
* [placement] Add api-ref for usages
* Clean up \*most\* ec2 / euca2ools references
* Add documentation for documentation contributions
* Structure cli page
* doc: Import configuration reference
* Add release note for shared storage known issue
* Improve stable-api doc with current API state
* update policy UT fixtures
* Bulk import all config reference figures
* rework index intro to describe nova
* Mark max microversion for Pike in history doc
* Add a prelude section for Pike
* doc: provide more details on scheduling with placement
* Add functional test for local delete allocations
* Document service layout for consoles with cells
* Add For Operators section to front page
* Create For End Users index section
* doc: code review considerations for online data migrations
* Add track\_instance\_changes note in disable\_group\_policy\_check\_upcall
* Cleanup release note about ignoring allow\_same\_net\_traffic
* no instance info cache update if instance deleted
* Add format\_dom for PCI device addresses
* doc: Add additional content to admin guide
* Create reference subpage
* Raise NoValidHost if no allocation candidates
* Fix all >= 2 hit 404s
* Handle ironicclient failures in Ironic driver
* Fix migrate single instance when it was created concurrently
* trivial: Remove files from 'tools'
* trivial: Remove "vif" script
* tools/xenserver: Remove 'cleanup\_sm\_locks'
* Test resize with too big flavor
* [placement] Add api-ref for RP allocations
* placement: filtering the resource provider id when delete trait association
* Updated from global requirements
* Add resource utilities to scheduler utils
* Add Contributor Guide section page
* Fix getting instance bdms in multiple cells
* Update install guide to clearly define between package installs
* doc: Import administration guide
* doc: Import installation guide
* Complete dostring of live\_migration related methods
* Add a caveat section about cellsv2 upcalls
* doc: Start using oslo\_policy.sphinxext
* policies: Fix Sphinx issues
* doc: Start using oslo\_config.sphinxext
* doc: Rework README to reflect new doc URLs
* doc: Remove dead files
* nova-manage: Deprecate '--version' parameters
* imagebackend: cleanup constructor args to Rbd
* Sum allocations in the scheduler when resizing to the same host
* doc: Make use of definition lists, literals
* hardware offload support for openvswitch
* reflow rpc doc to 80 columns
* fix list rendering in policy-enforcement
* Fix scope of errors\_out\_migration in finish\_resize
* Fix scope of errors\_out\_migration in resize\_instance
* Split Compute.errors\_out\_migration into a separate contextmanager
* fix list rendering in cells
* fix list rendering in aggregates
* Fix list rendering in bdm doc
* fix list rendering in rpc doc
* Fix list rendering in code-review.rst
* Fix whitespace in rest\_api\_version\_history
* Fix lists in process doc
* [placement] Avoid error log on 405 response
* Keep the code consistent
* Filter out stale migrations in resource audit
* Test resize to same host with placement api
* fix rpc broken rst comment
* sort redirectmatch lines
* add top 404 redirect
* [placement] Require at least one allocation when PUT
* Add redirect for api-microversion-history doc
* Fix 409 handling in report client when deleting inventory
* Detach device from live domain even if not found on persistent
* Cleanup unnecessary logic in os-volume\_attachments controller code
* Adopt new pypowervm power\_off APIs
* placement: remove existing allocs when set allocs
* Additional assertions to resize tests
* Accept any scheduler driver entrypoint
* add redirects for existing broken docs urls
* Add some more cellsv2 doc goodness
* Test resize with placement api
* Deprecate cells v1
* Add release note for PUT /os-services/\* for non-compute services
* Updated from global requirements
* Don't warn on expected network-vif-unplugged events
* do not pass proxy env variables by tox
* Show quota detail when inject file quota exceeds
* rootwrap.d cleanup mislabeled files
* always show urls in list\_cells
* api-ref: requested security groups are not applied to pre-existing ports
* api-ref: fix security\_groups response parameter in os-security-groups
* Clean variable names and docs around neutron allocate\_for\_instance
* explain payload inheritance in notification devref
* Update SSL cert used in testing
* Remove RamFilter and DiskFilter in default filter
* Enhance support matrix document
* remove extension param and usage
* Add description on maximum placement API version
* Updated from global requirements
* Add cinder keystone client opts to config reference
* Updated from global requirements
* fix test\_rebuild\_server\_exc instability
* [placement] quash unicode warning with shared provider
* add a redirect for the old cells landing page
* Remove unnecessary code

16.0.0.0b3
----------

* claim resources in placement API during schedule()
* placement: account for move operations in claim
* add description about key\_name
* doc: add FAQ entry for cells v1 config options
* Add oslo\_concurrency=INFO to default log levels for nova-manage
* stabilize test\_create\_delete\_server functional test
* Ensure we unshelve in the cell the instance is mapped
* Fix example in \_serialize\_allocations\_for\_consumer
* deprecate \`\`wsgi\_log\_format\`\` config variable
* Move the note about '/os-volume\_boot' to the correct place
* Remove the useless fake ExtensionManager from API unittests
* Netronome SmartNIC Enablement
* Updated from global requirements
* Enhance support matrix document
* add cli to support matrix
* add a retry on DBDeadlock to \_set\_allocations()
* docstring and unused code removal
* libvirt: Post-migration, set cache value for Cinder volume(s)
* use os\_traits.MISC\_SHARES\_VIA\_AGGREGATE
* style-only: s/context/ctx/
* Instance remains in migrating state forever
* Add helper method for waiting migrations in functional tests
* Improve assertJsonEqual error reporting
* Translate the return value of attachment\_create and \_update
* Move the last\_bytes util method to libvirt
* Do not import nova.conf into nova/exception.py
* Set IronicNodeState.uuid in \_update\_from\_compute\_node
* Add VIFHostDevice support to libvirt driver
* Remove redundant free\_vcpus logging in \_report\_hypervisor\_resource\_view
* Remove the useless extension block\_device\_mapping\_v1 object
* Remove the useless FakeExt
* Remove the code related to extension loading from APIRouterV21
* Add 'updated\_at' field to InstancePayload in notifications
* Use wsgi-intercept in OSAPIFixture
* API ref: associate floating IP requires Active status
* Suppress some test warnings
* Use enum value instead of string service name
* rename binary to source in versioned notifications
* Trim the fat from InstanceInfo
* [placement] Use wsgi\_intercept in PlacementFixture
* Replaces uuid.uuid4 with uuidutils.generate\_uuid()
* Ironic: Support boot from Cinder volume
* [placement] Flush RC\_CACHE after each gabbit sequence
* Stop using mox stubs in cast\_as\_call.py
* Add online migration to move quotas to API database
* Migrate Ironic Flavors
* Add tags to instance.create Notification
* request\_log addition for running under uwsgi
* Stop using mox stubs in test\_console\_auth\_tokens.py
* Increase cpu time for image conversion
* Remove an unnecessary argument in \_prep\_resize
* Updated from global requirements
* Using plain routes for the microversions test
* Updated from global requirements
* Updated from global requirements
* placement: add retry tight loop claim\_resources()
* Dump versioned notifications when test\_create\_delete\_server
* retry on authentication failure in api\_client
* Change default policy to view quota details
* Implement interface attach/detach in ironic virt driver
* Update policy description for 'instance\_actions'
* Update ironic feature matrix
* Updated from global requirements
* doc: Switch to openstackdocstheme
* Don't cast cinderclient microversions to float
* Remove the unittest for plugin framework
* Use plain routes list for versions instead of stevedore
* Removed unused 'wrap' property
* Make Quotas object favor the API database
* Remove check\_detach
* Remove improper LOG.exception() calls in placement
* VMware: Handle missing volume vmdk during detach
* Use \_error\_out\_instance\_on\_exception in finish\_resize
* placement: proper JOIN order for shared resources
* placement: alloc candidates only shared resources
* Allow wrapping of closures
* Updated from global requirements
* provide interface-scoped nameserver information
* Only setup iptables for metadata if using nova-net
* Fix and optimize external\_events for multiple cells
* Add policy granularity to the Flavors API
* Deprecate useless quota\_usage\_refresh from nova-manage
* add dict of allocation requests to select\_dests()
* Handle None returned from get\_allocation\_candidates due to connect failure
* Updated from global requirements
* Update URL home-page in documents according to document migration
* api-ref: Fix an expand button in os-quota-sets
* Correct the description of 'disable-log-reason' api-ref
* Consider instance flavor resource overrides in allocations
* Do not mention that tags are case sensitive in docs
* api-ref: fix max\_version for deprecated os-quota-class-sets parameters
* Handle uuids in os-hypervisors API
* Use uuid for id in os-services API
* Remove 'reserved' count from used limits
* Make security\_group\_rules use check\_deltas() for quota
* Make key\_pairs use check\_deltas() for quota
* Count instances to check quota
* Use plain routes list for extension\_info instead of stevedore
* Use plain routes list for os-snapshots instead of stevedore
* Use plain routes list for os-volume-attachments instead of stevedore
* doc: Populate the 'user' section
* doc: Populate the 'reference' section
* doc: Populate the 'contributor' section
* doc: Populate the 'configuration' section
* Add log info in scheduler to mark start of scheduling
* [placement] Add api-ref for allocations
* [placement] Add api-ref for RP traits
* [placement] Add api-ref for traits
* Remove translation of log messages
* Fix indentation in policy doc
* conf: remove \*\_topic config opts
* Stop using mox stubs in test\_remote\_consoles.py
* api-ref: Verify parameters in os-migrations.inc
* Use URIOpt
* Convert HostState.limits['numa\_topology'] to primitive
* Log compute node uuid when the record is created
* Remove key\_manager.api\_class hack
* Update policy descriptions for base
* Consistent policies
* Support tag instances when boot(4/4)
* Fix instance evacuation with PCI devices
* [placement] fix 500 error when allocating to bad class
* [placement] Update allocation-candidates.yaml for gabbi 1.35
* fix test\_volume\_swap\_server instability
* XenAPI: Fix ValueError in test\_slave\_asks\_master\_to\_add\_slave\_to\_pool
* api-ref: mention disk size limitations in resize flavor
* [placement] cover deleting a custom resource class in use
* [placement] cover deleting standard trait
* Updated from global requirements
* fix unshelve notification test instability
* scheduler: isolate \_get\_sorted\_hosts()
* Set wsgi.keep\_alive=False globally for tests
* Dump tracked version notifications when swap volume tests fail
* Default reservations=None in Cells v1 and conductor APIs
* Avoid false positives of Jinja2 in Bandit scan
* Updated from global requirements
* Remove 'create\_rule\_default'
* Use oslo.polcy DocumentedRuleDefault
* trivial: Remove unnecessary function
* doc: Populate the 'cli' section
* Fix the releasenote and api-ref for quota-class API
* Fix typo
* Stop counting hw\_video:ram\_max\_mb against quota
* Add ability to signal and perform online volume size change
* api-ref: mark instance action events parameter as optional
* Add BDM to InstancePayload
* placement: add claim\_resources() to report client
* doc: Enable pep8 on doc generation code
* doc: Remove dead plugin
* Use plain routes list for os-volumes instead of stevedore
* Use plain routes list for os-baremetal-nodes endpoint instead of stevedore
* Use plain routes list for os-security-group-default-rules instead of stevedore
* Use plain routes list for os-security-group-rules instead of stevedore
* Use plain routes list for server-security-groups instead of stevedore
* Use plain routes list for os-security-groups instead of stevedore
* Use plain routes list for image-metadata instead of stevedore
* Use plain routes list for images instead of stevedore
* Remove the test for the route '/resources.:(format)'
* doc: Use consistent author, section for man pages
* Use plain routes list for os-networks instead of stevedore
* doc: Remove cruft from conf.py
* Fix wrong log parm
* Query deleted instance records during \_destroy\_evacuated\_instances
* Skip boot from encrypted volume on Xen+libvirt
* improve notification short-circuit
* Use PCIAddressField in oslo.versionedobjects
* Fix quota class set APIs
* api-ref: Add X-Openstack-Request-Id description
* Fix a missing classifier
* api-ref: Add missing parameters in limits.inc
* api-ref: Fix parameters in server-security-groups
* Stop using deprecated 'message' attribute in Exception
* Adjust error msg for ImageNUMATopologyAsymmetric
* placement: scheduler uses allocation candidates
* Trivial: Remove unnecessary format specifier
* Handle Cinder 3.27 style attachments in swap\_volume
* Support tag instances when boot(3/4)
* Remove reverts\_task\_state decorator from swap\_volume
* Pre-load instance.device\_metadata in InstanceMetadata
* Updated from global requirements
* [placement] Improve allocation\_candidates coverage
* xenapi: avoid unnecessary BDM query when building device metadata
* Add release note for xenapi virt device tagging support
* Make notification publisher\_id consistent
* Modify some comments for virt driver
* Fix parameters and description for os-volume\_attachments
* Remove nova.api.extensions.server.extensions usage
* Fix error message when support matrix entry is missing a driver
* Fix comment for API binary name in WSGIService
* Fix arguments in calling \_delete\_nic\_metadata
* Fix incorrect docstrings in neutron network API
* Add 'networks' quota in quota sample files
* Reset the traits sync flag in the placement fixtures
* Add api-ref for os-quota-class-set APIs
* trivial: Use valid UUIDs in test\_admin\_password
* placement: filter usage records by resource provider id
* Fix 'project-id' 'user-id' as required in server group
* Reduce (notification) test duplication
* Use plain routes list for os-cells endpoint instead of stevedore
* Hyper-V: fix live migration with CSVs
* placement: support GET /allocation\_candidates
* Handle keypair not found from metadata server using cells
* Don't delete neutron port when attach failed
* Removes getfattr from Quobyte Nova driver
* libvirt: update the logic to configure volume with scsi controller
* libvirt: update logic to configure device for scsi controller
* Updated from global requirements
* conf: fix netconf, my\_ip and host are unclear
* Remove wsdl\_location configuration option
* hyperv: Fixes log message in livemigrationops
* hyperv: stop serial console workers while deleting vm files
* hyperv: Fixes Generation 2 VMs volume boot order
* Ensure the JSON-Schema covers the legacy v2 API
* API support for tagged device attachment
* Delete disk metadata when detaching volume
* Add scatter gather utilities for cells
* Sanitize instance in InstanceMetadata to avoid un-pickleable context
* remove the very old unmaintained wsgi scripts
* Extract custom resource classes from flavors
* Fix the log information argument mistake
* Remove mox from nova.tests.unit.virt.xenapi.test\_vm\_utils.py
* Handle version for PUT and POST in PlacementFixture
* Add a reset for traits DB sync
* Strengthen the warning on the old broken WSGI script
* Add key\_name field to InstancePayload
* Add keypairs field to InstanceCreatePayload
* api-ref: Fix missing parameters in API Versions
* placement: refactor driver select\_destinations()
* Updated from global requirements
* VStorage: changed default log path
* Add python 3.5 in classifier
* Delete nic metadata when detaching interface
* Remove mox from nova.tests.unit.api.openstack.compute.test\_limits
* Add get\_count\_by\_vm\_state() to InstanceList object
* move resources\_from\_request\_spec() to utils
* return 400 Bad Request when empty string resources
* placement: adds ProviderTree for nested resources
* Add missing microversion documentation
* Remove mox in test\_availability\_zone.py
* Stop using mox stubs in test\_keypairs.py
* Plumbing for tagged nic attachment
* Remove code that produces warning in modern Python
* Plumbing for tagged volume attachment
* Fix misuse of assertIsNone
* Simplify a condition
* Support paging over compute nodes with a uuid marker
* Update api-ref to indicate swap param
* \_schedule\_instances() supporting a RequestSpec object
* Removes potentially bad exit value from accepted list in Quobyte volume driver
* Switch Nova Quobyte volume driver to mount via systemd-run
* Clean up volumes on boot failure
* Explain why API services are filtered out of GET /os-services
* Fix redundant BDM lookups during rebuild
* Delete all inventory has its own method DELETE
* Remove translation of log messages
* hypervisor\_hostname must match get\_available\_nodes
* Fix using targeted cell context when finding services in cells
* [doc] Updated sqlalchemy URL in migrate readme
* placement: separate normalize\_resources\_qs\_param
* Updated from global requirements
* Use more specific asserts in tests
* Transform instance.soft\_delete notifications
* Fix the note at the end of allocate\_for\_instance
* Count floating ips to check quota
* Add FloatingIPList.get\_count\_by\_project()
* Count fixed ips to check quota
* Add FixedIPList.get\_count\_by\_project()
* Count security groups to check quota
* Add SecurityGroupList.get\_counts()
* Count networks to check quota
* Provide a hint when \_verify\_response fails
* Provide error message in MismatchError for api-samples tests
* placement: produce set of allocation candidates
* Reduce code duplication
* Use plain routes list for os-remote-consoles instead of stevedore
* Remove multiple create from stevedore
* Use plain routes list for os-tenant-networks instead of stevedore
* Use plain routes list for os-cloudpipe endpoint instead of stevedore
* Use plain routes list for os-quota-classes endpoint instead of stevedore
* Consolidate index and detail methods in HypervisorsController
* Handle uuid in HostAPI.compute\_node\_get
* api-ref: fix unshelve asynchronous postconditions typo
* add missing notification samples to dev ref
* Fix regression preventing reporting negative resources for overcommit
* Add separate instance.create payload type
* placement: Add GET /usages to placement API
* placement project\_id, user\_id in PUT /allocations
* api-ref: fix hypervisor\_hostname description for Ironic
* Updated from global requirements
* Provide original fault message when BFV fails
* Add PowerVM to nova support matrix
* remove null\_safe\_int from module scope
* Fix a wrong comment
* Stop caching compute nodes in the request
* Centralize compute\_node\_search\_by\_hypervisor in os-hypervisors
* api-ref: cleanup PUT /os-hypervisors/statistics docs
* Make compute\_node\_statistics() work across cells
* Only auto-disable new nova-compute services
* Cleanup the plethora of libvirt live migration options
* [placement] Update placement devref to modern features
* Make all timestamps formats equal
* Transform keypair.create notification
* remove mox from unit/virt/vmwareapi/test\_driver\_api.py
* XenAPI: device tagging
* Updated from global requirements
* api-ref: fix misleading description in PUT /os-services/disable
* Remove service control from feature support matrix
* Indicate Hyper-v supports fibre channel in support matrix
* Use CONF.host for powervm nodename
* Pull out code that builds VIF in \_build\_network\_info\_model
* Use plain routes list for os-server-groups endpoint instead of stevedore
* Use plain routes list for user\_data instead of stevedore
* remove get\_nw\_info\_for\_instance from compute.utils
* remove ugly local import
* Add missing query filter params for GET /os-services API
* XenAPI: Create linux bridge in dest host during live migration
* Remove translation of log messages
* Count server group members to check quota
* Add bool\_from\_string for force-down action
* Remove old service version check for mitaka
* Clarify conf/compute.py help text for ListOpts
* Use plain routes list for block\_device\_mapping instead of stevedore
* Use plain routes list for os-consoles, os-console-auth-tokens endpoint instead of stevedore
* [placement] Increase test coverage
* Remove unused variable
* pci: add uuid field to PciDevice object
* libvirt: dump debug info when interface detach times out
* Amend api-ref for multiple networks request
* Remove translation of log messages
* Calculate stopped instance's disk sizes for disk\_available\_least
* Transform instance.live\_migration\_rollback notification
* Add InstanceGroup.\_remove\_members\_in\_db

16.0.0.0b2
----------

* Fix lookup of instance mapping in metadata set-password
* libvirt: Extract method \_guest\_add\_spice\_channel
* libvirt: Extract method \_guest\_add\_memory\_balloon
* libvirt: Extract method \_guest\_add\_watchdog\_action
* libvirt: Extract method \_guest\_add\_pci\_devices
* libvirt: Extract method \_guest\_add\_video\_device
* libvirt: fix alternative\_device\_name for detaching interfaces
* [placement] Add api-ref for aggregates
* Add docstring for test\_limit\_check\_project\_and\_user\_zero\_values
* Skip microversion discovery check for update/delete volume attachments
* Use 3.27 microversion when creating new style volume attachments
* Use microversions for new style volume attachments
* libvirt: handle missing rbd\_secret\_uuid from old connection info
* Log a warning if there is only one cell when listing instances
* [placement] Use util.extract\_json in allocations handler
* [placement] Disambiguate resource provider conflict message
* raise exception if create Virtuozzo container with swap disk
* Convert additional disassociate tests to mock
* Remove useless API tests
* Remove \*\*kwargs passing in payload \_\_init\_\_
* Prefer non-PCI host nodes for non-PCI instances
* Add PCIWeigher
* XenAPI: Remove bittorrent.py which is already deprecated
* Count server groups to check quota
* Default to 0 when merging values in limit check
* api-ref: fix type for hypervisor\_marker
* Fix html\_last\_updated\_fmt for Python3
* nfs fix for xenial images
* Remove unused CONF import from placement/auth.py
* xen: pass Xen console in cmdline
* Add earliest-version tags for stable branch renos
* Fix the race condition with novnc
* Add service\_token for nova-glance interaction
* Adopts keystoneauth with glance client
* placement: use separate tables for projects/users
* Move rebuild notification tests into separate method
* contrail: add vrouter VIF plugin type support
* Fix cell0 naming when QS params on the connection
* libvirt: Check if domain is persistent before detaching devices
* Fix device metadata service version check for multiple cells
* Remove cells topic configuration option
* Add get\_minimum\_version\_all\_cells() helper for service
* libvirt: rearange how scsi controller is defined
* libvirt: set full description of the controller used by disk
* libvirt: update LibvirtConfigGuestDeviceAddress to provide XML
* Use plain routes list for os-services endpoint instead of stevedore
* use plain routes list for os-virtual-interfaces
* use plain routes list for hypervisor endpoint instead of stevedore
* Use plain routes list for hosts endpoint instead of stevedore
* Use plain routes list for os-fping endpoint
* Use plain routes list for instance actions endpoint
* Use plain routes list for server ips endpoint
* XenAPI: use os-xenapi 0.2.0 in nova
* Add InstanceGroupList.get\_counts()
* Reset the \_TRAITS\_SYNCED global in Traits tests
* Revert "Remove Babel from requirements.txt"
* Avoid unnecessary lazy-loads in mutated\_migration\_context
* libvirt: log vm and task state when vif plugging times out
* Send out notifications when instance tags changed
* Catch neutronclient.NotFound on floating deletion
* Move notifications/objects/test\_base.py
* Fixed some nits for microversion 2.48
* code comments incorrectness
* Remove Babel from requirements.txt
* Sync os-traits to Traits database table
* Support tag instances when boot(2/4)
* ComputeDriver.get\_info not limited to inst name
* Replace messaging.get\_transport with get\_rpc\_transport
* Be more tolerant of keystone catalog configuration
* Send request\_id on glance calls
* Updated from global requirements
* [placement] Add api-ref for resource classes
* Standardization of VM diagnostics info API
* Remove unused exceptions
* Refactor a test method including 7 test cases
* Fix missing marker functions
* Completed implementation of instance diagnostics for Xen
* Updated from global requirements
* Use VIR\_DOMAIN\_BLOCK\_REBASE\_COPY\_DEV when rebasing
* show flavor info in server details
* placement: Specific error for inventory in use
* Updated from global requirements
* Add database migration and model for consumers
* add new test fixture flavor with extra\_specs
* Updated from global requirements
* Connecting Nova to DRBD storage nodes directly
* Update server create networks API reference description for tags
* libvirt: fix call args to destroy() during live migration rollback
* Pass a list of instance UUIDs to scheduler
* Fix call to driver\_detach in remove\_volume\_connection
* Use plain routes list for server diagnostics endpoint
* Use plain routes list for os-server-external-events endpoint
* Use plain routes list for server-migrations endpoint instead of stevedore
* Use plain routes list for server-tags instead of stevedore
* Use plain routes list for os-interface endpoint instead of stevedore
* Remove usage of parameter enforce\_type
* placement: test for agg association not sharing
* placement: test non-shared out of inventory
* placement: tests for non-shared with shared
* placement: shared resources when finding providers
* Fix live migration devstack hook for multicell environment
* Target cell on local delete
* Updated from global requirements
* Fix default\_availability\_zone docs
* Send request\_id on neutron calls
* Update policy description for os-volumes
* Fix doc job with correct ref link
* Remove oslo.config deprecated parameter enforce\_type
* Completely remove mox from unit/network/test\_linux\_net.py
* Add configuration options for certificate validation
* Do not rely on dogpile internals for mocks
* XenAPI: nova-compute cannot restart after manually delete VM
* Add policy description for os-networks
* Changing deleting stale allocations warning to debug
* Replace diagnostics objects with Nova diagnostics objects
* Added nova objects for intance diagnostics
* [placement] adjust resource provider links by microversion
* Add \`img\_hide\_hypervisor\_id\` image property
* Catch InstanceNotFound when deleting allocations
* Remove mox from nova/tests/unit/virt/xenapi/test\_xenapi.py[1]
* [placement] Add api-ref for DELETE resource provider
* [placement] Add api-ref for PUT resource provider
* [placement] Add api-ref for GET resource provider
* [placement] Add api-ref for POST resource provider
* [placement] Add api-ref for DELETE RP inventory
* [placement] Add api-ref for PUT RP inventory
* [placement] Add api-ref for GET RP inventory
* [placement] Add api-ref for DELETE RP inventories
* [placement] Add api-ref for PUT RP inventories
* Add check\_deltas() and limit\_check\_project\_and\_user() to Quotas
* Enhancement comments on CountableResource
* Deprecate TypeAffinityFilter
* [placement] Add api-ref for GET RP inventories
* Optimize creating security\_group
* Limit the min length of string for integer JSON-Schema
* Avoid lazy-loading instance.id when cross\_az\_attach=False
* Use plain routes list for os-migrations endpoint instead of stevedore
* Updated from global requirements
* Migrate to oslo request\_id middleware - mv 2.46
* Ensure the value of filter parameter is unicode
* XenAPI: Deprecate nicira-iface-id for XenServer VIF
* Don't run ssh validation in cells v1 job
* Fix MarkerNotFound when paging and marker was found in cell0
* Add recreate functional test for regression bug 1689692
* cinder: add attachment\_update method
* cinder: add attachment\_create method
* Use targeted context when burying instances in cell0
* Send request\_id on cinder calls
* Remove unused migrate\_data kwarg from virt driver destroy() method
* Fix the display of updated\_at time when using memcache driver
* Check instance existing before check in mapping
* Remove mox from unit/cells/test\_cells\_messaging.py
* make sure to rebuild claim on recreate
* Nix redundant dict in set\_inventory\_for\_provider
* PowerVM Driver: SSP emphemeral disk support
* Avoid lazy-load error when getting instance AZ
* Handle conflict from neutron when addFloatingIP fails
* re-Allow adding computes with no ComputeNodes to aggregates
* Libvirt volume driver for Veritas HyperScale
* Make the method to put allocations public
* Don't delete allocation if instance being scheduled
* Exclude deleted service records when calling hypervisor statistics
* Modify incorrect comment on return\_reservation\_id
* Remove incorrect comments in multiple\_create
* Have nova.context use super from\_context
* Handle new hosts for updating instance info in scheduler
* [Trivial] Hyper-V: accept Glance vhdx images
* Add strict option to discover\_hosts
* make route and controller in alpha sequence
* [placement] Fix placement-api-ref check tool
* Use plain routes list for limits endpoint instead of stevedore
* Updated from global requirements
* Handle uuid in HostAPI.\_find\_service
* doc: add cells v2 FAQ on mapping instances
* doc: add cells v2 FAQ on refreshing global cells cache
* doc: start a FAQs section for cells v2
* De-complicate some of the instance delete path
* doc: add links to summit videos on cells v2
* Make target\_cell() yield a new context
* Move to proper target\_cell calling convention
* Updated from global requirements
* Repair links in Nova documentation
* api-ref: Fix parameter order in os-services.inc
* fix typo
* Deprecate unused policy from policy doc
* trivial: Remove dead code
* convert unicode to string before we connect to rados
* Use plain routes list for os-quota-sets endpoint instead of stevedore
* Use plain routes list for os-certificates endpoint instead of stevedore
* Remove mox from cells/test\_cells\_rpc\_driver.py
* api-ref: Example verification for servers-actions.inc
* Updated from global requirements
* nova-manage: Deprecate 'log' commands
* nova-manage: Deprecate 'host' commands
* nova-manage: Deprecate 'project', 'account' commands
* libvirt: remove glusterfs volume driver
* libvirt: remove scality volume driver
* Deprecate scheduler trusted filter
* XenAPI: remove hardcode dom0 plugin version in unit test
* Change log level from ERROR to DEBUG for NotImplemented
* Skip policy rules on attach\_network for none network allocation
* Skip ceph in grenade live migration job due to restart failures
* Correct \_ensure\_console\_log\_for\_instance implementation
* Cache database and message queue connection objects
* Correct the error message for query parameter validation
* correctly log port id in neutron api
* Fix uuid replacement in aggregate notification test
* Remove DeviceIsBusy exception
* Catch exception.OverQuota when create image for volume backed instance
* Add policy description for os-host
* Libvirt support for tagged volume attachment
* Libvirt support for tagged nic attachment
* Updated from global requirements
* Add policy description for 'os-hide-server-addresses'
* Add policy description for os-fixed-ips
* Add policy description for networks\_associate
* Add policy description for server\_usage
* Modify the description of flat\_injected in nova.conf
* Add policy description for multinic
* Add policy description for 'limits'
* Use plain routes list for server-password endpoint instead of stevedore
* libvirt: expand checks for SubclassSignatureTestCase
* fix InvalidSharedStorage exception message
* Fix decoding of encryption key passed to dmcrypt
* Make compute auto-disable itself if builds are failing
* Make discover\_hosts only query for unmapped ComputeNode records
* api-ref: Fix examples for add/removeFixedIp action
* Fix a typo in code comment
* Updated from global requirements
* [BugFix] Change the parameter of the exception error message
* Handle special characters in database connection URL netloc
* fix typo in parameter type definition
* Move null\_safe funcs to module level
* do not log error for missing \_save\_tags
* Add more description to policies in the keypairs.py
* Add description to policies in extended\_status and extended\_volumes
* Address comments when moving volume detach to block\_device.py
* Updated from global requirements
* Add a functional test for 'removeFloatingIp' action
* Correct the wording about filter options
* libvirt: Fix races with nfs volume mount/umount
* libvirt: Pass instance to connect\_volume and disconnect\_volume
* Remove the can\_host column
* Totally freeze the extension\_info API
* Trivial fix typo in document
* Add missing rootwrap filter for cryptsetup
* Add Cinder v3 detach to shutdown\_instance
* Make NovaException format errors fatal for tests
* Fix unit test exception KeyErrors
* [BugFix] Release the memory quota for video ram when deleting an instance
* Remove the rebuild extension help methods
* service: use restart\_method='mutate' for all services
* Verify project id for flavor access calls
* Add a convenience attribute for reportclient
* Add uuid to service.update notification payload
* objects: add ComputeNode.get\_by\_uuid method
* objects: add Service.get\_by\_uuid method
* db api: add service\_get\_by\_uuid
* Add online data migration for populating services.uuid
* placement: get providers sharing capacity
* Remove cloudpipe APIs
* Replace newton to release\_name in upgrade.rst
* Fix a typo
* neutron: retrieve physical network name from a multi-provider network
* Use six.text\_type() when logging Instance object
* Fix typo in wsgi applications release note
* Catching OverQuota Exception
* Add description to policies in extended\_az and extend\_ser\_attrs
* Add policy description for os-quota-classes
* Add policy description for instance actions
* Add policy description for fping
* Updated from global requirements
* Ensure sample policy help text correctly wrapped
* Add policy description for extensions
* Use plain routes list for server-metadata endpoint instead of stevedore
* Transform instance.volume\_detach notification
* Transform instance.volume\_attach.error notification
* Transform instance.volume\_attach notification
* Fix units for description of "flavor\_swap" parameter
* Don't lazy-load flavor.projects during destroy()
* devref and reno for nova-{api,metadata}-wsgi scripts
* Add pbr-installed wsgi application for metadata api
* Update devref with vendordata changes
* remove unused functions
* Use systemctl to restart services
* Remove nova-cert leftovers
* Add policy description for image size
* Add policy description for instance-usage-audit-log
* Add policy description for Servers IPs
* Add policy description for config\_drive
* XenAPI: update support matrix to support detach interface
* Remove unnecessary execute permissions
* Use plain routes list for os-fixed-ips endpoint instead of stevedore
* Use plain routes list for os-availability-zone endpoint instead of stevedore
* Use plain routes list for os-assisted-volume-snapshots endpoint
* Use plain routes list for os-agents endpoint instead of stevedore
* Use plain routes list for os-floating-ip-dns endpoint instead of stevedore
* Add compute\_nodes\_uuid\_idx unique index
* Use plain routes list for os-floating-ips-bulk endpoint instead of stevedore
* Use plain routes list for os-floating-ip-pools endpoint instead of stevedore
* Use plain routes list for os-floating-ips endpoint instead of stevedore
* api-ref: Fix unnecessary description in servers-admin-action
* api-ref: Fix parameters in servers-action-console-output
* api-ref: Use 'note' directive
* use plain routes list for os-simple-tenant-usage
* Use plain routes list for os-instance-usage-audit-log  endpoint instead of stevedore
* Support tag instances when boot(1)
* Add Cinder v3 detach call to \_terminate\_volume\_connections
* placement: implement get\_inventory() for libvirt
* nova-manage: Deprecate 'agent' commands
* Add reserved\_host\_cpus option
* Update description to policies in remaining flavor APIs
* Add description to policies in migrations.py
* Trivial fix: fix broken links
* Remove nova-cert
* Fixed a broken link in API Plugins document
* Stop using mox int unit/virt/xenapi/image/test\_utils.py
* Add ability to query for ComputeNodes by their mapped value
* Add ComputeNode.mapped field
* Updated from global requirements
* Add a note to \*\_allocation\_ratio options about Ironic hardcode
* Remove legacy v2.0 code from test\_flavor\_access
* Do not log live migration success when it actually failed
* Expose StandardLogging fixture for use
* Add Cinder v3 detach to local\_cleanup
* Don't check for file type in \_find\_base\_file
* Rename \_handle\_base\_image to \_mark\_in\_use
* Add context comments to \_handle\_base\_image
* Add mock check and fix uuid's use in test
* Revert "Prevent delete cell0 in nova-manage command"
* Improve comment for PCI port binding update
* Parse algorithm from cipher for ephemeral disk encryption
* Add description to policies in floating\_ip files
* Add description to policies in migrate\_server.py
* Remove all discoverable policy rules
* PowerVM Driver: console
* Update doc/source/process.rst
* 2.45: Remove Location header from createImage and createBackup responses
* Clean up ClientRouter debt
* api-ref: move createBackup to server-actions
* Deprecate Multinic, floatingip action and os-virtual-interface API
* Register osapi\_compute when nova-api is wsgi
* disable keepalive for functional tests
* Use plain routes list for '/os-aggregates' endpoint instead of stevedore
* Use plain routes list for '/os-keypairs' endpoint instead of stevedore
* Use plain routes list for flavors-access endpoint instead of stevedore
* Use plain routes list for flavors-extraspecs endpoint instead of stevedore
* Use plain routes list for flavor endpoint instead of stevedore[1]
* Use plain routes list for '/servers' endpoint instead of stevedore
* encryptors: Switch to os-brick encryptor classes
* Fix unnecessary code block in a release note
* Remove redundant code
* api-ref: Fix a parameter description in servers.inc
* api-ref: Parameter verification for servers-actions (4/4)
* api-ref: Parameter verification for servers-actions (3/4)
* Refactor a test method including 3 test cases
* Sort CellMappingList.get\_all() for safety
* Add workaround to disable group policy check upcall
* Make server groups api aware of multiple cells for membership
* libvirt: remove redundant and broken iscsi volume test
* Remove BuildRequest.block\_device\_mapping clone workaround
* libvirt: Always disconnect\_volume after rebase failures
* Rework descriptions in os-hypervisors
* Trivial Fix a typo
* api-ref: Parameter verification for servers-actions (2/4)
* Updated from global requirements
* PowerVM Driver: spawn/destroy #4: full flavor
* Remove archaic reference to QEMU errors during post live migration
* Tell people that the nova-cells man page is for cells v1
* Add release note and update cell install guide for multi-cell limitations
* PowerVM Driver: spawn/destroy #3: TaskFlow
* Allow CONTENT\_LENGTH to be present but empty
* libvirt: Remove is\_job\_complete polling after pivot
* Adding auto\_disk\_config field to InstancePayload
* add tags field to instance.update notification
* Add description to policies in hypervisors.py
* Explicitly define enum type as string in schema
* PowerVM Driver: power\_on/off and reboot
* Using max api version in notification sample test
* PowerVM Driver: spawn/destroy #2: functional
* Warn the user about orphaned extra records during keypair migration
* Deprecate os-hosts API
* Update resource tracker to PUT custom resource classes
* [placement] Idempotent PUT /resource\_classes/{name}
* Update detach to use V3 Cinder API
* conf: Move 'floating\_ips' opts into 'network'
* conf: Deprecate 'default\_floating\_pool'
* conf: Add neutron.default\_floating\_pool
* libvirt: Use config types to parse XML for root disk
* libvirt: Add missing tests for utils.find\_disk
* libvirt: Use config types to parse XML for instance disks
* Updated from global requirements
* Mock timeout in test\_\_get\_node\_console\_with\_reset\_wait\_timeout
* Add test ensure all the microversions are sequential in placement API
* fix overridden error
* fix typos
* Add interfaces functional negative tests
* Remove unused os-pci API
* Fix mitaka online migration for PCI devices
* Fix port update exception when unshelving an instance with PCI devices
* Fix docstring in \_validate\_requested\_port\_ids
* Fix the evacuate API without json-schema validation in 2.13
* api-ref: Fix response code and parameters in evacuate
* Remove json-schema extension variable for resize
* Update etherpad url
* Use deepcopy when process filters in db api
* Add regression test for server filtering by tags bug 1682693
* remove unused parameter in rpc call
* Remove usage of parameter enforce\_type
* Remove test\_init\_nonexist\_schedulerdriver
* Spelling error "paramenter"
* api-ref: Parameter verification for servers-actions (1/4)
* Revert "Make server\_groups determine deleted-ness from InstanceMappingList"

16.0.0.0b1
----------

* Fix hypervisors api missing HostMappingNotFound handlers
* Updated from global requirements
* Fix HTTP 500 raised for getConsoleLog for stopped instance
* Remove backend dependency for key types
* Fix libvirt group selection in live migration test
* Update network metadata type field for IPv6
* Add description to policies in servers.py
* Add description to policies in security\_groups.py
* api-ref: Nova Update Compute services Link
* api-ref: Fix parameters in os-hosts.inc
* Add uuid to Service model
* Modify PciPassthroughFilter to accept lists
* Deprecate CONF.api.allow\_instance\_snapshots
* Read NIC features in libvirt
* Fix api-ref for create servers response
* placement: Add Traits API to placement service
* Remove aggregate uuid generation on load from DB
* Document and provide useful error message for volume-backed backup
* PowerVM Driver: spawn/delete #1: no-ops
* Refactor: Move post method to APIValidationTestCase base class
* remove log translation tags from nova.cells
* Get BDMs when we need to in \_handle\_cell\_delete
* Remove dead db api code
* Add description to policies in server\_password.py
* remove flake8-import-order
* Expand help text for [libvirt]/disk\_cachemodes
* Updated from global requirements
* Add description to policies in remote\_consoles.py
* api-ref: fix os-extended-volumes:volumes\_attached in servers responses
* Image meta min\_disk should be int in fake\_request\_spec
* Optimize the link address
* Add description to policies in quota\_sets.py
* Fix joins in instance\_get\_all\_by\_host
* Fix test\_instance\_get\_all\_by\_host
* Remove the stevedore extension point for server create
* Remove the json-schema extension point of server create
* Remove the extension check for os-networks in servers API
* Make server\_groups determine deleted-ness from InstanceMappingList
* Add get\_by\_instance\_uuids() to InstanceMappingList
* Remove Mitaka-era service version check
* Teach HostAPI about cells
* Make scheduler target cells to get compute node instance info
* Deprecate the Cinder API v2 support
* Limit exposure of network device types to the guest
* Remove a fallacy in scheduler.driver config option help text
* [placement] Allow PUT and POST without bodies
* Use physical utilisation for cached images
* Remove config opts for extension black/white list
* Remove the usage of extension black/white list opt in scheduler hints
* Cleanup wording on compute service version checks in API
* Fix test\_no\_migrations\_have\_downgrade
* Perform old-style local delete for shelved offloaded instances
* Regression test for local delete with an attached volume
* Set size/status during image create with FakeImageService
* Commit usage decrement after destroying instance
* Add regression test for quota decrement bug 1678326
* Short-circuit local delete path for cells v2 and InstanceNotFound
* api-ref: make it clear that os-cells is for cells v1
* Add description to policies in security\_group\_default\_rules.py
* Remove the usage of extension black/white list opt in user data
* Add empty flavor object info in server api-ref
* placement: Enable attach traits to ResourceProvider
* docs: update description for AggregateInstanceExtraSpecsFilter
* nova-net: remove get\_instance\_nw\_info from API subclass
* API: accept None as content-length in HTTP requests
* Switch from pip\_missing\_reqs to pip\_check\_reqs
* nova-manage: Deprecate 'shell' commands
* doc: Separate the releasenotes guide from the code-review section
* Distinguish between cells v1 and v2 in upgrades doc
* Use HostAddressOpt for opts that accept IP and hostnames
* Stop using ResourceProvider in scheduler and RT
* Updated from global requirements
* Remove unnecessary tearDown function in testcase
* Ensure reservation\_expire actually expires reservations
* Remove unnecessary duplicated NOTE
* Add description to policies in server\_diagnostics.py
* Add description to policies in server\_external\_events.py
* Add server-action-removefloatingip.json file and update servers-actions.inc
* api-ref: networks is mandatory in Create Server
* Trivial: Remove unused method
* Make metadata doc more readable
* Remove the usage of extension black/white list opt in AZ
* Remove the usage of extension black/white list opt in config drive
* Remove the usage of extension black/white list opts in multi-create
* Remove the usage of extension black/white list opts in BDM tests
* Rename the model object ResourceProviderTraits to ResourceProviderTrait
* Short circuit notifications when not enabled
* Add description to policies in services.py
* compute: Move detach logic from manager into driver BDM
* doc: Move code-review under developer policies
* Add description to policies in servers\_migrations.py
* Remove mox from nova/tests/unit/consoleauth/test\_consoleauth.py
* Remove unnecessary setUp function in testcase
* api-ref: Fix wrong HTTP response codes
* Make conductor ask scheduler to limit migrates to same cell
* Updated from global requirements
* Consolidate unit tests for shelve API
* Remove \_wait\_for\_state\_change() calls from notification (action)tests
* Fix calling super function in setUp method
* Remove namespace check in creating traits
* Add description for /consoles
* Ensure instance is in active state after notification test
* Add description to policies in used\_limits
* Add description to policies in lock\_server.py
* Add description to policies in server\_metadata.py
* Add description to policies in evacuate.py and rescue.py
* Add description to policies in server\_groups.py
* Use cursive for signature verification
* Fix api-ref for adminPass behavior
* Fix 'server' and 'instance' occurrence in api-ref
* Add description to policies in flavor\_extra\_specs.py
* code comment redundant
* Add exclusion list for tempest for a libvirt+xen job
* Add description to policies in cells\_scheduler.py
* Add description to policies in aggregates.py
* Add description to policies in pause\_server.py
* Add description to policies in simple\_tenant\_usage.py
* Add description to policies in keypairs.py
* Remove unused policy rule in admin\_actions.py
* Add description to policies in admin\_actions
* Add description to policies in certificates.py
* libvirt: Remove dead code
* Add description to policies in console\_output.py
* tox: Stop calling config/policy generators twice
* There is a error on annotation about related options
* Remove mox from nova.tests.unit.objects.test\_instance.py
* fixed typos and reword stable api doc
* Fix some reST field lists in docstrings
* Add description to nova/policies/shelve.py
* [placement] Split api-ref topics per file
* Add description to policies in tenant\_networks.py
* placement: Add Trait and TraitList objects
* Remove legacy regeneration of RequestSpec in MigrationTask
* remove i18n log markers from nova.api.\*
* [placement] add api-ref for GET /resource\_providers
* Structure for simply managing placement-api-ref
* 'uplug' word spelling mistake
* Make xenapi driver compatible with assert\_can\_migrate
* Remove mox from nova/tests/unit/api/openstack/compute/test\_virtual\_interfaces.py
* Remove mox from nova/tests/unit/api/openstack/compute/test\_quotas.py
* Remove mox from nova/tests/unit/api/openstack/compute/test\_migrations.py
* Fix wrong unit test about config option enabled\_apis
* Do not attempt to load osinfo if we do not have os\_distro
* Add confirm resized server functional negative tests
* remove mox from unit/api/openstack/compute/test\_disk\_config.py
* Revert "libvirt: Pass instance to connect\_volume and ..."
* Add descripiton to policies in virtual\_interfaces.py
* Add description to policies to availability\_zone
* Add description to policies in suspend\_server.py
* api-ref: fix description of volumeAttachment for attach/swap-volume
* Get instance availability\_zone without hitting the api db
* Set instance.availability\_zone whenever we schedule
* [placement] Don't use floats in microversion handling
* tests: fix uefi testcases
* libvirt: make emulator threads to run on the reserved pCPU
* libvirt: return a CPU overhead if isolate emulator threads requested
* virt: update overhead to take into account vCPUs
* numa: update numa usage to include reserved CPUs
* numa: take into account cpus reserved
* numa: fit instance NUMA node with cpus reserved onto host NUMA node
* remove mox from unit/api/openstack/compute/test\_flavor\_manage.py
* remove mox from unit/compute/test\_compute\_utils.py
* api-ref: Complete all the verifications of remote consoles
* remove mox from unit/virt/xenapi/image/test\_bittorrent.py
* Fix some reST field lists in docstrings
* Add lan9118 as valid nic for hw\_vif\_model property for qemu
* Add description to policies in deferred\_delete.py
* Add description to policies in create\_backup.py
* Add description to policies in consoles.py
* Add description to policies in cloudpipe.py
* Add description to policies in console\_auth\_tokens.py
* Add description to policies in baremetal\_nodes.py
* conf: Final cleanups in conf/network
* conf: Deprecate 'allow\_same\_net\_traffic'
* libvirt: Ignore 'allow\_same\_net\_traffic' for port filters
* conf: Deprecate 'use\_ipv6'
* netutils: Ignore 'use\_ipv6' for network templates
* Add check for invalid inventory amounts
* Add check for invalid allocation amounts
* Remove the Allocation.create() method
* Add release note for CVE-2017-7214
* Add description to policies in cells.py
* Tests: remove .testrepository/times.dbm in tox.ini (functional)
* Pre-add functional tests stub to notification testing
* libvirt: conditionally set script path for ethernet vif types
* Add description to policies in agents.py
* Add description to policies in admin\_password.py
* libvirt: mark some Image backend methods as abstract
* Add description to policies in assisted\_volume\_snapshots.py
* Change os-server-tags default policy
* Ironic: hardcode min\_unit for standard resources to 1
* Refactor: remove \_items() in nova/api/openstack/compute/attach\_interfaces.py
* delete more i18n log markers
* remove log translation from nova.api.metadata
* update i18n guide for nova
* Add description to policies in attach\_interfaces.py
* Add description to policies in volumes\_attachments.py
* Add description to policies in volumes.py
* Fix rest\_api\_version\_history (2.40)
* fix os-volume\_attachments policy checks
* libvirt: Ignore 'use\_ipv6' for port filters
* conf: Fix indentation in conf/netconf
* Remove unused VIFModel.\_get\_legacy method
* Add helper method to add additional data about policy rule
* DELETE all inventory for a resource provider
* nova-status: don't coerce version numbers to floats for comparison
* remove mox from unit/api/openstack/compute/test\_flavors.y
* Improve descriptions for hostId, host, and hypervisor\_hostname
* compute: Only destroy BDMs after successful detach call
* Remove old oslo.messaging transport aliases
* Updated from global requirements
* do not include context to exception notification
* Add api-ref for filter/sort whitelist
* Fix functional regression/recreate test for bug 1671648
* api-ref: fix description in os-services
* flake8: Specify 'nova' as name of app
* objects: Add attachment\_id to BlockDeviceMapping
* db: Add attachment\_id to block\_device\_mapping
* Updated from global requirements
* Clarify os-stop API description
* remove flake8-import-order for test requirements
* Avoid lazy-loading projects during flavor notification
* libvirt: add debug logging in detach\_device\_with\_retry
* Transform instance.reboot.error notification
* Transform instance.reboot notifications
* remove hacking rule that enforces log translation
* doc: configurable versioned notifications topics
* Replace obsolete vanity openstack.org URLs
* Add populate\_retry to schedule\_and\_build\_instances
* Add a functional regression/recreate test for bug 1671648
* virt: implement get\_inventory() for Ironic
* Fix the help for the disk\_weight\_multiplier option
* Add a note about force\_hosts only ever having a single value
* Make os-availability-zones know about cells
* Introduce fast8 tox target
* Duplicate JSON line ending check to pep8
* trivial: Remove \r\n line endings from JSON sample
* [placement] Raising http codes on old microversion
* Updated from global requirements
* doc: add some documentation around quotas
* Make versioned notifications topics configurable
* Use proper user and tenant in the owner section of libvirt.xml
* Prevent delete cell0 in nova-manage command
* Refactor InstancePayload creation
* nova-status: require placement >= 1.4
* Temporarily untarget context when deleting from cell0
* Decrement quota usage when deleting an instance in cell0
* VMware: use WithRetrieval in ds\_util module
* VMware: use WithRetrieval in get\_network\_with\_the\_name
* Remove VMware driver \_get\_vm\_ref\_from\_uuid method
* trivial: Add a note about 'cells\_api'
* Add description for Image location in snapshot
* Typo fix in releasenotes: deprecate network options
* api-ref: Fix parameters and examples in aggregate API
* Transform instance.rebuild.error notification
* Transform instance.rebuild notification
* Add regression test for bug 1670627
* No API cell up-call to delete consoleauth tokens
* Add identity helper property to CellMapping
* Correctly set up deprecation warning
* Add cell field to Destination object
* Change MQ targeting to honor only what is in the context
* Remove duplicate attributes in sample files
* api-ref: Fix keypair API parameters
* Fix missing instance.delete notification
* conf: Fix formatting of network options
* Teach simple\_tenant\_usage about cells
* Teach os-migrations about cells
* Teach os-aggregates about cells
* Stop using mox in unit/virt/disk/test\_api.py
* Avoid using fdatasync() when fetching images
* Fix API doc about server attributes (2.3 API)
* Refactor cell loading in compute/api
* Target cell in super conductor operations
* Ensure image conversion flushes output data to disk
* fdatasync() downloaded images before use
* conf: fix default values reporting infra worker
* Error message should not include SQL command
* Make consoleauth target the proper cell
* Enlighten server tags API about cells
* Update docstrings for legacy notification methods
* conf: Deprecate most 'network' option
* Use Cinder API v3 as default
* get\_model method missing for Ploop image
* trivial: Standardize naming of variables
* trivial: Standardize indentation of test\_vif
* autospec the virt driver mock in test\_resource\_tracker
* Add functional test for bad res class in set\_inventory\_for\_provider
* Remove unused placement\_database config options
* libvirt: pass log\_path to \_create\_pty\_device for non-kvm/qemu
* virt: add get\_inventory() virt driver API method
* conf: remove console\_driver opt
* Use flake8-import-order
* numa: add numa constraints for emulator threads policy
* Remove mox from nova.tests.unit.api.openstack.compute.test\_block\_device\_mapping
* Revert "Add some metadata logging to root cause ssh failure"
* Add comment to instance\_destroy()
* Remove GlanceImageService
* Use Sphinx 1.5 warning-is-error
* Add warning on setting secure\_proxy\_ssl\_header
* handle uninited fields in notification payload
* Fix api-ref with Sphinx 1.5
* Imported Translations from Zanata
* Reno for additional-notification-fields-for-searchlight
* Default firewall\_driver to nova.virt.firewall.NoopFirewallDriver
* Handle conflicts for os-assisted-volume-snapshots
* Remove mox from nova.tests.unit.api.openstack.compute.test\_create\_backup
* Log with cell.uuid if cell.name is not set
* Updated from global requirements
* re-orphan flavor after rpc deserialization
* Stop using mox stubs in nova.tests.unit.api.openstack.compute.test\_serversV21
* Skip unit tests for SSL + py3
* Add functional test for ip filtering with regex
* Add resize server functional negative tests
* conf: resolved final todos in libvirt conf
* Only create vendordata\_dynamic ksa session if needed
* Check for 204 case in DynamicVendorData
* Add some metadata logging to root cause ssh failure
* Remove unused variable
* Remove domains \*-log-\* from compile\_catalog
* Updated from global requirements
* Updated from global requirements
* [placement] Add Traits related table to the api database
* Remove mox from nova/tests/unit/db/test\_db\_api.py
* Complete verification of servers-action-fixed-ip.inc
* Remove mox in nova/tests/unit/compute/test\_shelve.py (3)
* libvirt: Pass instance to connect\_volume and disconnect\_volume
* Stop using mox in compute/test\_hypervisors.py
* Add device\_id when creating ports
* Make compute/api instance get set target cell on context
* Remove mox from nova.tests.unit.virt.xenapi.test\_vmops[1]
* Tests: remove .testrepository/times.dbm in tox.ini
* Updated from global requirements
* Remove invalid tests-py3 whitelist item
* Ignore deleted services in minimum version calculation
* Add RPC version aliases for Ocata
* Remove mox from nova/tests/unit/test\_configdrive2.py
* Remove usage of config option verbose
* Remove check\_attach
* Handle VolumeBDMIsMultiAttach in os-assisted-volume-snapshots
* api/metadata/vendordata\_dynamic: don't import Requests for its constants
* Fix typos detected by toolkit misspellings
* remove a TODO as all set for tags
* Clean up metadata param in doc
* Remove extension in API layer
* Correct some spelling errors
* Fix typo in config drive support matrix docs
* doc: Don't put comments inside toctree
* Fix doc generation warnings
* Remove run\_tests.sh
* Fix spice channel type
* Updated from global requirements
* libvirt: drop MIN\_LIBVIRT\_HUGEPAGE\_VERSION
* libvirt: drop MIN\_LIBVIRT\_NUMA\_VERSION
* libvirt: drop MIN\_QEMU\_NUMA\_HUGEPAGE\_VERSION
* libvirt: Fix misleading error in Ploop imagebackend
* More usage of ostestr and cleanup an unused dependency
* Ensure that instance directory is removed after success migration/resize
* api-ref: Body verification for os-hypervisors.inc
* Make conductor create InstanceAction in the proper cell
* Allow nova-status to work with custom ca for placement
* libvirt: Handle InstanceNotFound exception
* Make scheduler get hosts from all cells
* Make servers API use cell-targeted context
* Make CellDatabases fixture work over RPC
* Use the keystone session loader in the placement reporting
* Verify project\_id when quotas are checked
* Remove mox from nova/tests/unit/virt/vmwareapi/test\_vif.py
* conf: Fix invalid rST comments
* Revert "fix usage of opportunistic test cases with enginefacade"
* Placement api: set custom json\_error\_formatter in resource\_class
* Enable coverage report
* Make server\_external\_events cells-aware
* Remove service version check for Ocata/Newton placement decisions
* Remove a dead cinder v1 check
* Raise correct error instead of class exist in Placement API
* Remove mox from nova/tests/unit/objects/test\_service.py
* Skip soft-deleted records in 330\_enforce\_mitaka\_online\_migrations
* Stop using mox from tests/unit/test\_service.py
* Update placement\_dev with info about new decorator
* Remove unused logging import
* Deprecate xenserver.vif\_driver config option and change default
* Fix live migrate with XenServer
* Fix novncproxy for python3
* Remove mox stubs in api/openstack/compute/test\_server\_reset\_state.py
* Fix some typo errors
* Enable defaults for cell\_v2 update\_cell command
* Remove dead code: \_safe\_destroy\_instance\_residue
* Updated from global requirements
* Make eventlet hub use a monotonic clock
* Tolerate WebOb===1.7.1
* Tolerate jsonschema==2.6.0
* Stop using mox in test\_compute\_cells.py
* Stop using mox in virt/xenapi/image/test\_glance.py
* Remove mox from unit/api/openstack/compute/test\_aggregates.py
* Remove mox from api/openstack/compute/test\_deferred\_delete.py
* Typo fix: degredation => degradation
* api-ref: Fix deprecated proxy API parameters
* api-ref: note that boot ignores bdm:device\_name
* Skip test\_stamp\_pattern in cells v1 job
* Fix misuse of assertTrue
* Fix improper prompt when update RC with existed one's name
* Remove mox from nova/tests/unit/virt/vmwareapi/test\_configdrive.py
* Placement api: set custom json\_error\_formatter in root
* Cleanup some issues with CONF.placement.os\_interface
* Placement api: set custom json\_error\_formatter in aggregate and usage
* Fix suggested database migration command
* Placement api: set custom json\_error\_formatter in resource\_provider
* api-ref: Fix network\_label parameter type
* Fix incorrect example for querying resource for RP
* Use ListOfIntegersField in oslo.versionedobjects
* libvirt: drop MIN\_QEMU\_PPC64\_VERSION
* libvirt: drop MIN\_LIBVIRT\_AUTO\_CONVERGE\_VERSION
* libvirt: drop MIN\_QEMU\_DISCARD\_VERSION
* libvirt: drop MIN\_LIBVIRT\_HYPERV\_TIMER\_VERSION
* libvirt: drop MIN\_LIBVIRT\_UEFI\_VERSION
* libvirt: drop MIN\_LIBVIRT\_FSFREEZE\_VERSION
* libvirt: drop MIN\_LIBVIRT\_BLOCKJOB\_RELATIVE\_VERSION
* Bump minimum required libvirt/qemu versions for Pike
* api-ref: fix instance action 'message' description
* Placement api: set custom json\_error\_formatter in inventory
* conf/libvirt: remove invalid TODOs
* conf/compute: remove invalid TODOs
* Remove straggling use of main db flavors in cellsv1 code
* Add Cells V1 -> Cells V2 step-by-step example
* nova-manage: Update deprecation timeline
* Enable global hacking checks and removed local checks
* Update hacking version
* Use min parameter to restrict live-migration config options
* Fix typo in nova/network/neutronv2/api.py
* libvirt: wait for interface detach from the guest
* libvirt: fix and break up \_test\_attach\_detach\_interface
* api-ref: mark id as optional in POST /flavors
* Fix nova-manage cell\_v2 metavar strings
* Remove unused validation code from block\_device
* Prepare for using standard python tests
* Placement api: set custom json\_error\_formatter in allocations
* [3/3]Replace six.iteritems() with .items()
* conf: Deprecate 'firewall\_driver'
* conf: Deprecate 'ipv6\_backend'
* libvirt: set vlan tag for macvtap on SR-IOV VFs
* Removed unnecessary parantheses and fixed formation
* Fix the spelling mistake in host.py
* Allow None for block\_device\_mapping\_v2.boot\_index
* Edits for Cells V2 step-by-step examples
* api-ref: fix delete server async postcondition docs
* libvirt: check if we can quiesce before volume-backed snapshot
* Default live\_migration\_progress\_timeout to off
* libvirt: Remove redundant bdm serial mangling and saving during swap\_volume
* Consider startup scenario in \_get\_compute\_nodes\_in\_db
* libvirt: Introduce Guest.get\_config method
* libvirt: Parse basic attributes of LibvirtConfigGuest from xml
* libvirt: Parse filesystem elements of guest config
* libvirt: Parse virt\_type attribute of LibvirtConfigGuest from xml
* libvirt: Parse os attributes of LibvirtConfigGuest from xml
* libvirt: Remove unused disk\_info parameter
* libvirt: Simplify internal usage of get\_instance\_disk\_info
* Stop failed live-migrates getting stuck migrating
* Stop \_undefine\_domain erroring if domain not found
* tests: fix vlan test type from int to str
* Add an update\_cell command to nova-manage
* allocations.consumer\_id is not used in query
* api-ref: document the 'tenant\_id' query parameter
* TrivialFix: replace list comprehension with 'for'
* Reserve migration placeholders for Ocata backports
* Update the upgrades part of devref
* Cleanup the caches when deleting a resource provider
* vomiting
* Clarify the deployment of placement for cellsv1 users
* conf: remove deprecated image url options
* conf: add min parameter to scheduler opts
* Add step-by-step examples for Cells V2 setup
* Add nodename to \_claim\_test log messages
* Update reno for stable/ocata

15.0.0.0rc1
-----------

* Add placement request id to log when GET or POST rps
* Add placement request id to log when GET aggregates
* Add more debug logging on RP inventory delete failures
* Add more debug logging on RP inventory update failures
* Delete a compute node's resource provider when node is deleted
* Remove mox from unit/virt/libvirt/test\_imagebackend.py (end)
* Mark compute/placement REST API max microversions for Ocata
* Add release note for filter/sort whitelist
* Clarify the language in the apache wsgi sample
* Stop swap allocations being wrong due to MB vs GB
* Clarify the [cells] config option help
* Add offset & limit docs & tests
* Report reserved\_host\_disk\_mb in GB not KB
* Fix access\_ip\_v4/6 filters params for servers filter
* Fix typo in cells v2 ocata reno
* doc: add upgrade notes to the placement devref
* Simplify uses of assert\_has\_calls
* Fix typo in help for discover\_hosts\_in\_cells\_interval
* Handle NotImplementedError in \_process\_instance\_vif\_deleted\_event
* Fix the terminated\_at field in the server query params schema
* Add release note for nova-status upgrade check CLI
* Add prelude section for Ocata
* Collected release notes for Ocata CellsV2
* reno for notification-transformation-ocata
* Allow scheduler to run cell host discovery periodically
* doc: update the man page entry for nova-manage db sync
* doc: refer to the cell\_v2 man pages from the cells v2 doc
* doc: add some detail to the map\_cell0 man page
* Remove pre-cellsv2 short circuit in instance get
* Continue processing build requests even if one is gone already
* Allow placement endpoint interface to be set
* Ensure build request exists before creating instance
* placement-api: fix ResourceProviderList query
* tests: Remove duplicate NumaHostInfo
* tests: Combine multiple NUMA-generation functions
* tests: Don't reinvent \_\_init\_\_
* Explain how allow\_resize\_to\_same\_host is useful
* nova-status: relax the resource providers check
* Read instances from API cell for cells v1
* [placement] Use modern attributes of oslo\_context
* Fix map\_cell\_and\_hosts help
* Fresh resource provider in RT must have generation 0
* libvirt: Limit destroying disks during cleanup to spawn
* Use is\_valid\_cidr and is\_valid\_ipv6\_cidr from oslo\_utils
* Ignore IOError when creating 'console.log'
* Fix unspecified bahavior on GET /servers/detail?tenant\_id=X as admin
* Remove unused exceptions from nova.exception
* nova-manage docs: cell\_v2 delete\_cell
* nova-manage docs: cell\_v2 list\_cells
* nova-manage docs: cell\_v2 discover\_hosts
* nova-manage docs: cell\_v2 create\_cell
* nova-manage docs: cell\_v2 verify\_instance
* nova-manage docs: cell\_v2 map\_cell\_and\_hosts
* Fix tag attribute disappearing in 2.33 and 2.37
* Scheduler calling the Placement API
* Block starting compute unless placement conf is provided
* Added instance.reboot.error to the legacy notifications
* Avoid redundant call to update\_resource\_stats from RT
* api-ref: Fix path parameters in os-hypervisors.inc
* libvirt: fix vCPU usage reporing for LXC/QEMU guests
* Adding vlans field to Device tagging metadata
* libvirt: expose virtual interfaces with vlans to metadata
* objects: vlan field to NetworkInterfaceMetadata object
* Move instance creation to conductor
* Updated from global requirements
* Fix server group functional test by using all filters
* Hyper-V PCI Passthrough
* Change exponential function to linear
* Fixed indentation in virt/libvirt/driver.py
* Cache boot time roles for vendordata
* Optionally make dynamic vendordata failures fatal
* Use a service account to make vendordata requests
* libvirt: ephemeral disk support for virtuozzo containers

15.0.0.0b3
----------

* ironic: Add trigger crash dump support to ironic driver
* Only warn about hostmappings during ocata upgrade
* nova-manage docs: cell\_v2 map\_instances
* nova-manage docs: cell\_v2 map\_cell0
* nova-manage docs: cell\_v2 simple\_cell\_setup
* Add new configuration option live\_migration\_scheme
* Fix race condition in instance.update sample test
* libvirt: Use the mirror element to detect job completion
* libvirt: Mock is\_job\_complete in test\_driver
* adding debug info for pinning calculation
* PCI: Check pci\_requests object is empty before passing to support\_requests
* Ironic: Add soft power off support to Ironic driver
* Add sort\_key white list for server list/detail
* Trivial-fix: replace "json" with "yaml" in policy README
* Release PCI devices on drop\_move\_claim()
* objects: add new field cpuset\_reserved in NUMACell
* Make api\_samples tests use simple cell environment
* Assign mac address to vf netdevice when using macvtap port
* conf: Deprecate 'console\_driver'
* libvirt: avoid generating script with empty path
* placement: minor refactor \_allocate\_for\_instance()
* placement: report client handle InventoryInUse
* Multicell support for instance listing
* scheduler: Don't modify RequestSpec.numa\_topology
* Fix and add some notes to the cells v2 first time setup doc
* Add deleting log when config drive was imported to rbd
* Updated from global requirements
* Amend the PlacementFixture
* Prevent compute crash on discovery failure
* Ironic: Add soft reboot support to ironic driver
* os-vif: convert libvirt driver to use os-vif for fast path vhostuser
* Updated from global requirements
* Add a PlacementFixture
* Set access\_policy for messaging's dispatcher
* libvirt: make coherent logs when reboot success
* Add ComputeNodeList.get\_all\_by\_uuids method
* Fix typo in 216\_havana.py
* placement: create aggregate map in report client
* Support Ironic interface attach/detach in nova virt
* Generate necessary network metadata for ironic port groups
* Ensure we mark baremetal links as phy links
* os-vif-util: set vif\_name for vhostuser ovs os-vif port
* Move migration\_downtime\_steps to libvirt/migration
* libvirt: fix nova can't delete the instance with nvram
* Remove mox in libvirt destory tests
* VMWare: Move constant power state strings to the constant.py
* Remove references to Python 3.4
* hyperv: make sure to plug OVS VIFs after resize/migrate
* Strict pattern match query parameters
* Raise InvalidInput exception
* Fix Nova to allow using cinder v3 endpoint
* [py35] Fixes to get more tempest tests working
* Move to tooz hash ring implementation
* api-ref: Fix a parameter in os-availability-zone.inc
* objects: remove cpu\_topology from \_\_init\_\_ of InstanceNUMATopology
* Integrate OSProfiler and Nova
* Remove mox from unit/virt/libvirt/test\_imagebackend.py (5)
* Enable virt.vmwareapi test cases on Python
* Enable virt.test\_virt\_drivers.AbstractDriverTestCase on Python 3
* Port compute.test\_user\_data.ServersControllerCreateTest to Python 3
* Add revert resized server functional negative tests
* XenAPI: Fix vif plug problem during VM rescue/unrescue
* Handle oslo.serialization type error and binascii error
* Remove invalid URL in gabbi tests
* nova-manage cell\_v2 map\_cell0 exit 0
* Add query parameters white list for server list/detail
* nova-manage docs: add cells commands prep
* Add --verbose option to discover\_hosts command
* Add more details when test\_create\_delete\_server\_with\_instance\_update fails
* Updated from global requirements
* Add some cellsv2 setup docs
* Fix the generated cell0 default database name
* rt: use a single ResourceTracker object instance
* Add nova-manage cell\_v2 delete\_cell command
* Add InstanceMappingList.get\_by\_cell\_id
* Create HostMappingList object
* Add nova-manage cell\_v2 list\_cells command
* Add nova-manage cell\_v2 create\_cell command
* Add rudimentary CORS support to placement API
* libvirt: workaround findmnt behaviour change
* api-ref: Fix parameters whose values are 'null'
* Fix broken link of Doc
* api-ref: Fix parameters and response in os-quota-sets.inc
* Remove nova-manage image from man pages
* Updated from global requirements
* Fixes to get all functional tests working on py35
* [placement] Add a bit about extraction plans to placement\_dev
* [placement] Add an "Adding a Handler" section to placement\_dev
* [placement] placement\_dev info for testing and gabbi
* [placement] placement\_dev info for microversion handling
* Updated from global requirements
* placement: validate member\_of values are uuids
* Make metadata server know about cell mappings
* Remove redundant arg check in nova-manage cell\_v2 verify\_instance
* Expose a REST API for a specific list of RPs
* copy pasta error
* Set sysinfo\_serial="none" in LibvirtDriverTestCase
* [py35] Fixes to get rally scenarios working
* Fix missing RP generation update
* Add service\_token for nova-neutron interaction
* rt: explicitly pass compute node to \_update()
* Make unit tests work with os-vif 1.4.0
* Updated from global requirements
* libvirt: make live migration possible with Virtuozzo
* Small improvements to placement.rst
* Better black list for py35 tests
* Fix class type error in attach\_interface() function
* Hyper-V: Adds vNUMA implementation
* Don't bypass cellsv1 replication if cellsv2 maps are in place
* Adds Hyper-V OVS ViF driver
* docs - Connect to placement service & retries
* Improve flavor sample in notification sample tests
* xenapi: support the hotplug of a neutron port
* Update notification for flavor
* Add service\_token for nova-cinder interaction
* Make allocate\_for\_instance take consistent args
* XenAPI Remove useless files when use os-xenapi lib
* XenAPI Use os-xenapi lib for nova
* Make placement client keep trying to connect
* releasenotes: Add missing releasenote for encryption provider constants
* Stop using mox stubs in test\_attach\_interfaces.py
* Remove mox from api/openstack/compute/test\_floating\_ip\_dns.py
* Remove mox in nova/tests/unit/compute/test\_shelve.py (end)
* Remove mox in unit/api/openstack/test\_wsgi.py
* Document testing process for zero downtime upgrade
* Remove mox in nova/tests/unit/compute/test\_shelve.py (2)
* Notifications for flavor operations
* Add debug possibility for nova-manage command
* conf: Deprecate yet more nova-net options
* conf: Resolve formatting issues with 'quota'
* [2/3]Replace six.iteritems() with .items()
* Port xenapi test\_vm\_utils to Python 3
* docs: sort the Architecture Concepts index
* Make the SingleCellSimple fixture a little more comprehensive
* Fix non-parameterized service id in hypervisors sample tests
* Fix TypeError in \_update\_from\_compute\_node race
* Trivial indentation fix
* Add missing CLI commands in support-matrix.ini
* tests: Replace use of CONF with monkey patching
* correct misleading wording
* Fix a typo in documents
* Don't translate exceptions w/ no message
* Fix ksa mocking in test\_cinderclient\_unsupported\_v1
* [placement] fix typo in call to create auth middleware
* HTTP interface for resource providers by aggregates
* Return uuid attribute for aggregates
* Update docstring of \_schema\_validation\_helper
* api-ref: use the examples with paging links
* Port libvirt.test\_vif to Python 3
* Port libvirt.test\_firewall to Python 3
* Move quota options to a config group
* Handle Unauthorized exception in report client's safe\_connect()
* Remove mox from unit/virt/libvirt/test\_imagebackend.py (4)
* Remove mox from unit/virt/libvirt/test\_imagebackend.py (3)
* Remove mox from unit/virt/libvirt/test\_imagebackend.py (2)
* Do not post allocations that are zero
* Remove mox from unit/compute/test\_compute\_api.py (1)
* Add aggregate notification related enum values
* Transform aggregate.delete notification
* Transform aggregate.create notification
* Added missing decorator for instance.create.error
* Enable Neutron by default
* Port virt.libvirt.test\_imagebackend to Python 3
* move gate hooks to gate/
* tools: Remove 'colorizer'
* tools: Remove 'with\_venv'
* tools: Remove 'install\_venv', 'install\_venv\_common'
* tools: Remove 'clean-vlans'
* tools: Remove 'enable-pre-commit-hook'
* Use JSON-Schema to validate query parameters for keypairs API
* Adds support for versioned schema validation for query parameters
* Remove mox from api/openstack/compute/test\_extended\_hypervisors.py
* Stop using mox in compute/test\_server\_actions.py
* Remove mox from unit/api/openstack/compute/test\_cloudpipe.py
* Add support matrix for attach and detach interfaces
* Make last remaining unit tests work with Neutron by default
* Make test\_metadata pass with CONF.use\_neutron=True by default
* Make test\_nova\_manage pass with CONF.use\_neutron=True by default
* Stub out os\_vif.unplug in libvirt instance destroy tests
* Make test\_attach\_interfaces work with use\_neutron=True by default
* Make test\_floating\_ip\* pass with CONF.use\_neutron=True by default
* Make several API unit tests pass with CONF.use\_neutron=True by default
* Make test\_server\_usage work with CONF.use\_neutron=True by default
* Make test\_security\_group\_default\_rules work with use\_neutron=True by default
* Make test\_tenant\_networks pass with CONF.use\_neutron=True by default
* Make test\_security\_groups work with CONF.use\_neutron=True by default
* Make test\_virtual\_interfaces work with CONF.use\_neutron=True by default
* Make test\_user\_data and test\_multiple\_create work with use\_neutron=True
* Make test\_quota work with CONF.use\_neutron=True by default
* Make test\_compute pass with CONF.use\_neutron=True by default
* api-ref: Fix parameters in os-server-groups.inc
* Remove mox in test\_block\_device\_mapping\_v1.py
* placement: Do not save 0-valued inventory
* Add 'disabled' to WatchdogAction field
* Remove more deprecated nova-manage commands
* Make servers api view load instance fault from proper cell
* Add support for setting boot order in Hyper-V
* Create schema generation for NetworkModel
* conf: added notifications group
* Missing usage next links in api-ref
* [placement] start a placement\_dev doc
* Stop handling differences in registerCloseCallback
* Enable TestOSAPIFixture.test\_responds\_to\_version on Python 3
* pci: Clarify SR-IOV ports vs direct passthrough ports
* nova-status: check for compute resource providers
* doc: add recomendation for delete notifications
* Move FlavorPayload to a seperate file
* Remove Rules.load\_json warning
* Handle unicode when dealing with duplicate aggregate errors during migration
* Handle unicode when dealing with duplicate flavors during online migrations
* Actually test online flavor migrations
* Remove unused init\_only kwarg from wsgi app init
* api-ref: add notes about POST/DELETE errors for os-tenant-networks
* Remove unnecessary attrs from TenantNetworksDeprecationTest
* api-ref: microversion 2.40 overview
* Fix assertion in test\_instance\_fault\_get\_by\_instance
* Add more field's in InstancePayload
* api-ref: cleanup os-server-groups 'policies' parameter description
* objects: add new field cpu\_emulator\_threads\_policy
* Support filtering resource providers by aggregate membership
* Resource tracker doesn't free resources on confirm resize
* Stop using mox stubs in nova/tests/unit/cells
* Add release note to PCI passthrough whitelist regex support
* api-ref: Fix parameter type in servers-admin-action.inc
* Port security group related tests to Python 3
* Add create image functional negative tests
* Don't apply multi-queue to SRIOV ports
* Avoid multiple initializations of Host class
* placement: correct improper test case inheritance
* Remove mox in tests/unit/objects/test\_instance\_info\_cache
* Port compute unit tests to Python 3
* Fix urllib.urlencode issue in functional tests on Python 3
* Trival fix typo
* Enble network.test\_neutronv2.TestNeutronv2 on Python 3
* Enble compute.test\_compute\_mgr.ComputeManagerUnitTestCase on Python 3
* Port api.openstack.compute.test\_disk\_config to Python 3
* Updated from global requirements
* Ignore 404s when deleting allocation records
* nova-status: return 255 for unexpected errors
* VMware: Update supported OS types for ESX 6.5
* Replace "Openstack" with "OpenStack"
* Use bdm destination type allowed values hard coded
* Fix BDM JSON-Schema validation
* [TrivialFix] Fix comment and function name typo error
* [TrivialFix] Fix comment typo error
* Fix python3 issues with devstack
* [1/3]Replace six.iteritems() with .items()
* Fix typo
* Fix misleading port delete description
* conf: remove deprecated barbican options
* conf: Remove 'virt' file
* Trival fix typos in api-ref
* make 2.31 microversion wording better
* Add soft delete wrinkle to api-ref
* Add document update for get console usage
* Trivial: add ability to define action description
* Added missed "raises:" docstrings into numa\_get\_constraints() method
* Removes unnecessary utf-8 encoding
* Port test\_matchers.TestDictMatches.test\_\_str\_\_ to Python 3
* Skip network.test\_manager.LdapDNSTestCase on Python 3
* Remove mox in tests/unit/objects/test\_security\_group
* Remove v2.40 from URL string in usage API docs
* nova-status: add basic placement status checking
* nova-status: check for cells v2 upgrade readiness
* Add nova-status upgrade check command framework
* rt: remove fluff from test\_resource\_tracker
* rt: pass the nodename to public methods
* conf: make 'default' upper case
* conf: move few console opts to xenserver group
* conf: remove deprecated ironic options
* conf: refactor conf\_fixture.py
* Add unit test for extract\_snapshot with compression enabled
* Refactor the code to add generic schema validation helper
* Updated from global requirements
* Fix error if free\_disk\_gb is None in CellStateManager
* nova-manage: squash oslo\_policy debug logging
* Pre-load info\_cache when handling external events and handle NotFound
* Make nova-manage cell\_v2 discover\_hosts tests use DBs
* Fix nova-manage cell\_v2 discover\_hosts RequestContext
* Make nova-manage emit a traceback when things blow up
* XenAPI: Remove ovs\_integration\_bridge default value
* rt: pass nodename to internal methods
* Failing test (mac osx) - test\_cache\_ephemeral
* Catch VolumeEncryptionNotSupported during spawn
* Updated from global requirements
* Fix exception message formatting error in test
* osapi\_max\_limit -> max\_limit
* Add more detail to help text for reclaim\_instance\_interval option
* Added PRSM to HVType class for support PR/SM hypervisor
* conf: Deprecate more nova-net options

15.0.0.0b2
----------

* [test]Change fake image info to fit instance xml
* Cleanup Newton Release Notes
* Port libvirt.storage.test\_rbd to Python 3
* VMware: ensure that provider networks work for type 'portgroup'
* libvirt: Stop misusing NovaException
* Fix the file permissions of test\_compute\_mgr.py
* Add detail to cellsv2-related release notes
* Revert "Use liberty-eol tag for liberty release notes"
* Fix some release notes in preparation for the o-2 beta release
* Add schedule\_and\_build\_instances conductor method
* libvirt: Detach volumes from a domain before detaching any encryptors
* libvirt: Flatten 'get\_domain' function
* fakelibvirt: Remove unused functions
* libvirt: Remove slowpath listing of instances
* Only return latest instance fault for instances
* Remove dead begin/end code from InstanceUsageAuditLogController
* Use liberty-eol tag for liberty release notes
* api-ref: Fix description of os-instance-usage-audit-log
* conf: fix formatting in base
* Stop allowing tags as empty string
* libvirt: remove hack for dom.vcpus() returning None
* Add Python 3.5 functional tests in tox.ini
* Simple tenant usage pagination
* Modify mistake of scsi adapter type class
* Remove the EC2 compatible API tags filter related codes
* Port virt vmwareapi tests to Python 3
* Mark sibling CPUs as 'used' for cpu\_thread\_policy = 'isolated'
* Added missed "raises:" docstrings into numa\_get\_constraints() method
* Changed NUMACell to InstanceNUMACell in test\_stats.py
* TrivialFix: changed log message
* api-ref: Fix 'id' (attachment\_id) parameters
* Move tags validation code to json schema
* Let nova-manage cell\_v2 commands use transport\_url from CONF
* Make test\_create\_delete\_server\_with\_instance\_update deterministic
* restore locking in notification tests
* Remove mox from unit/compute/test\_compute\_api.py(2)
* Deprecate compute options
* Remove support for the Cinder v1 API
* Make simple\_cell\_setup fully idempotent
* Corrects the type of a base64 encoded string
* Fix instructions for running simple\_cell\_setup
* Quiet unicode warnings in functional test\_resource\_provider
* conf: Detail the 'injected\_network\_template' opt
* Add more description for rx and tx param
* move rest\_api\_version\_history.rst to compute layer
* Enhance PCI passthrough whitelist to support regex
* Better wording for micorversion 2.36
* Port test\_servers to py3
* Catch InstanceNotFound exception
* Remove mox in tests/unit/objects/test\_compute\_node
* Refactor REGEX filters to eliminate 500 errors
* Fix crashing during guest config with pci\_devices=None
* Provide an online data migration to cleanup orphaned build requests
* Add SecurityGroup.identifier to prefer uuid over name
* Setup CellsV2 environment in base test
* conf: add warning for vm's max delete attempts
* Cleanup after any failed libvirt spawn
* Guestfs handle no passwd or group in image
* Return 400 when name is more than 255 characters
* Check that all JSON files don't have \r\n in line
* Enable test\_bdm.BlockDeviceMappingEc2CloudTestCase on Python 3
* network id is uuid instead of id
* fix for auth during live-migration
* Don't trace on ImageNotFound in delete\_image\_on\_error
* Cascade deletes of RP aggregate associations
* Make resource provider objects not remotable
* Bump prlimit cpu time for qemu from 2 to 8
* test: drop unused config option fake\_manager
* conf: Remove config option compute\_ manager
* Extend get\_all\_by\_filters to support resource criteria
* Port test\_virt\_drivers to Python 3
* Don't use 'updated\_at' to check service's status
* libvirt: Fix initialising of LVM ephemeral disks
* Remove extra ^M for json file
* Port virt.disk.mount.test\_nbd to Python 3
* Remove unnecessary comment of BDM validation
* Update ironic driver get\_available\_nodes docstring
* api-ref: note that os-virtual-interfaces is nova-network only
* Fix up non-cells-aware context managers in test\_db\_api
* Add SingleCellSimple fixture
* [proxy-api] microversion 2.39 deprecates image-metadata proxy API
* Make RPCFixture support multiple connections
* tests: avoid starting compute service twice in sriov functional test
* tests: generate correct pci addresses for fake pci devices
* Fix nova-serialproxy when registering cli options
* Updated from global requirements
* Revert "reduce pep8 requirements to just hacking"
* conf: Improve help text for network options
* conf: Deprecate all nova-net related opts
* libvirt: Mock imagebackend template funcs in ImageBackendFixture
* libvirt: Combine injection info in InjectionInfo
* Fix misuse of assertTrue
* Return 400 when name is more than 200 characters
* Replace the assertEqual(None,A) with assertIsNone(A)
* Rename few tests as per new config options
* Handle MarkerNotFound from cell0 database
* Removed unused ComputeNode create/update\_inventory methods
* Fix a typo in a comment in microversion history
* Handle ImageNotFound exception during instance backup
* Add a CellDatabases test fixture
* Pass context as kwarg instead of positional arg to get\_engine
* Transform instance.snapshot notifications
* libvirt: virtlogd: use virtlogd for char devices
* libvirt: create consoles in an understandable/extensible way
* Add more log when delete orphan node
* libvirt: Add comments in \_hard\_reboot
* Update cors-to-versions-pipeline release note
* Unity the comparison of hw\_qemu\_guest\_agent
* Add metadata functional negative tests
* Require cellsv2 setup before migrating to Ocata
* Improving help text for xenapi\_vmops\_opts
* convert libvirt driver to use os-vif for vhost-user with ovs
* Handle ComputeHostNotFound when listing hypervisors
* Improve the error message for failed RC deletion
* refactor: move down \`\`dev\_number\`\` in xenapi
* Fix placement API version history 1.1 title
* placement: Perform build list of standard classes once
* placement: REST API for resource classes
* Add a retry loop to ResourceClass creation
* conf: Remove deprecated service manager opts
* support polling free notification testing
* conf: Standardize formatting of virt
* Updated from global requirements
* Remove invalid tests for config option osapi\_compute\_workers
* placement: adds ResourceClass.save()
* Add CORS filter to versions pipeline
* Create hyperv fake images under proper directory
* Some improvement to the process doc
* libvirt: Improve \_is\_booted\_from\_volume implementation
* libvirt: Delete duplicate check when live-migrating
* Add block\_device\_mapping\_v2.uuid to api-ref
* Correct the sorting of datetimes for migrations
* Fix pci\_alias that include white spaces
* Raise DeviceNotFound detaching volume from persistent domain
* Always use python2.7 for docs target
* objects: Removes base code that already exists in o.vo
* libvirt: Don't re-resize disks in finish\_migration()
* libvirt: Never copy a swap disk during cold migration
* libvirt: Rename Backend snapshot and image
* libvirt: Cleanup test\_create\_configdrive
* libvirt: Test disk creation in test\_hard\_reboot
* libvirt: Rewrite \_test\_finish\_migration
* guestfs: Don't report exception if there's read access to kernel
* Fix for live-migration job
* Handle maximum limit in schema for int and float type parameters
* Port compute.test\_extended\_ip\* to Python 3
* Remove more tests from tests-py3.txt
* Support detach interface with same MAC from instance
* placement: adds ResourceClass.destroy()
* Make test\_shelve work with CONF.use\_neutron=True by default
* Restrict test\_compute\_cells to nova-network
* Make test\_compute\_mgr work with CONF.use\_neutron=True by default
* Make test\_compute\_api work with CONF.use\_neutron=True by default
* Make nova.tests.unit.virt pass with CONF.use\_neutron=True by default
* Make xenapi tests work with CONF.use\_neutron=True by default
* Make libvirt unit tests work with CONF.use\_neutron=True by default
* Make vmware unit tests work with CONF.use\_neutron=True
* Explicitly use nova-network in nova-network network tests
* Make test\_serversV21 tests work with neutron by default
* neutron: handle no\_allocate in create\_pci\_requests\_for\_sriov\_ports
* Add a releasenote for bug#1633518
* libvirt: prefer cinder rbd auth values over nova.conf
* libvirt: cleanup network volume driver auth config
* Fix wait for detach code to handle 'disk not found error'
* [api-ref] Minor text clean-up, formatting
* Convert live migration uri back to string
* conf: improve libvirt lvm
* conf: Trivial fix of indentation in 'api'
* config options: improve libvirt utils
* Never pass boolean deleted to instance\_create()
* Port xenapi test\_xenapi to Python 3
* Port libvirt test\_driver to Python 3
* conf: Deprecate 'torrent\_' options
* hacking: Use uuidutils or uuidsentinel to generate UUID
* Replace uuid4() with uuidsentinel
* Replace uuid4() with uuidsentinel
* Replace uuid4() with uuidsentinel
* Add os-start/stop functional negative tests
* Port ironic unit tests to Python 3
* Port test\_keypairs to Python 3
* Port test\_metadata to Python 3
* Fix expected\_attrs kwarg in server\_external\_events
* Check deleted flag in Instance.create()
* Revert "Revert "Make n-net refuse to start unless using CellsV1""
* Revert "Log a warning when starting nova-net in non-cellsv1 deployments"
* Default deleted if the instance from BuildRequest is not having it
* docs: cleanup wording for 'SOFT\_DELETED' in api-guide
* libvirt: Acquire TCP ports for console during live migration
* conf: Deprecate 'remap\_vbd\_dev' option
* conf: Covert StrOpt -> PortOpt
* Check Config Options Consistency  for xenserver.py
* Add description for 2.9 microversion
* Remove AdminRequired usage in flavor
* Optional name in Update Server description in api-ref
* List support for force-completing a live migration in Feature support matrix
* Remove mox from nova/tests/unit/compute/test\_virtapi.py
* Remove mox from nova/tests/unit/virt/test\_virt.py
* Catch ImageNotAuthorized during boot instance
* Remove require\_admin\_context
* remove NetworkDuplicated exception
* InstanceGroupPolicyNotFound not used anymore
* UnsupportedBDMVolumeAuthMethod is not used
* Port virt.xenapi.client.test\_session to Python 3
* vif: allow for creation of multiqueue taps in vrouter
* conf: Move api options to a group
* [scheduler][tests]: Fix incorrect aggr mock values
* objects: Move 'vm\_mode' to 'fields.VMMode'
* objects: Move 'hv\_type' to 'fields.HVType'
* objects: Move 'cpumodel' to 'fields.CPU\*'
* objects: Move 'arch' to 'fields.Architecture'
* Show team and repo badges on README
* Remove config option snapshot\_name\_template
* Remove deprecated compute\_available\_monitors option
* Improve help text for interval\_opts
* config options: improve libvirt remotefs
* Improve consistency in libvirt
* Fix root\_device\_name for Xen
* Move tag schema to parameter\_types.py
* Remove tests from tests-py3.txt
* hardware: Flatten functions
* add host to vif.py set\_config\_\* functions
* linux\_net: allow for creation of multiqueue taps
* Fix notification doc generator
* Config options: improve libvirt help text (2)
* Placement api: Add informative message to 404 response
* Remove sata bus for virtuozzo hypervisor
* Fix a typo in nova/api/openstack/compute/volumes.py
* Fix race in test\_volume\_swap\_server\_with\_error
* libvirt: Call host connection callbacks asynchronously
* conf: remove deprecated cert\_topic option
* Return build\_requests instead of instances
* conf: remove deprecated exception option
* doc: Add guidline about notification payload
* Port libvirt test\_imagecache to Python 3
* Port test\_serversV21 to Python 3
* encryptors: Introduce encryption provider constants
* Add TODO for returning a 202 from the volume attach API
* Fix typo in image\_meta.py & checks.py & flavor.py
* Refactor two nearly useless secgroup tests
* Transform instance.finish\_resize notifications
* Remove redundant VersionedObject Fields
* Transform instance.create.error notification
* Transform instance.create notification
* api-ref: add missing os-server-groups parameters
* libvirt: prepare domain XML update for serial ports
* [placement] increase gabbi coverage of handlers.resource\_provider
* [placement] increase gabbi coverage of handlers.inventory
* [placement] increase gabbi coverage of handlers.allocation
* libvirt: do not return serial address if disabled on destination
* Remove mox from api/openstack/compute/test\_fping.py
* Add index on instances table across project\_id and updated\_at
* Complete verification for os-floating-ips
* libvirt: handle os-brick InvalidConnectorProtocol on init
* placement: adds ResourceClass.get\_by\_name()
* placement: adds ResourceClass.create()
* Improve help text for libvirt options
* Use byte string or utf8 depending on python version for wsgi
* Separate CRUD policy for server\_groups
* Stop using mox stubs in nova/tests/unit/virt/disk
* Remove the description of compute\_api\_class option
* Remove mox in virt/xenapi/image/test\_bittorrent.py
* Add context param to confirm\_migration virt call
* Use pick\_context\_manager throughout DB APIs
* Database poison note
* tests: verify cpu pinning with prefer policy
* api-ref: Body verification for os-simple-tenant-usage.inc
* remove additional param
* Fix typo for 'infomation'
* Delete checking a bool opt of None condition
* Remove unused code in nova/api/openstack/wsgi.py
* conf: remove deprecated cells driver option
* Fix detach\_interface() call from external event handler
* Implement get and set aggregates in the placement API
* Add {get\_,set\_}aggregates to objects.ResourceProvider
* Log a warning when starting nova-net in non-cellsv1 deployments
* Revert "Make n-net refuse to start unless using CellsV1"
* HyperV: use os-brick for volume related operations
* INFO level logging should be useful in resource tracker
* hyper-v: wait for neutron vif plug events
* Remove mox in nova/tests/unit/api/openstack/compute (1)
* Use available port binding constants
* Rename PCS to Virtuozzo in error message
* [PY3] byte/string conversions and enable PY3 test
* Fix mock arg list order in test\_driver.py
* Add handle for 2 exceptions in force\_delete
* Typo error about help    libvirt.py
* Updated from global requirements
* Introduce PowerVMLiveMigrateData
* Make n-net refuse to start unless using CellsV1
* Store security groups in RequestSpec
* api-ref: body verification for abort live migration
* Fix data error in api samples doc

15.0.0.0b1
----------

* Typo error servers.py
* Typo error allocations.yaml
* Refactor console checks in live migration process
* Remove mox in tests/unit/objects/test\_pci\_device
* Add microversion cap information
* No return for flavor destroy
* neutron: actually populate list in populate\_security\_groups
* Clarify the approval process of specless blueprints
* Add uuid field to SecurityGroup object
* api-ref: body verification for force\_complete server migration
* api-ref: body verification for show server migration
* api-ref: body verification for list server migrations
* api-ref: example verification for server-migrations
* api-ref: parameter verification for server-migrations
* api-ref: method verification for server-migrations
* [placement] Enforce min\_unit, max\_unit and step\_size
* Remove ceph install/config functions from l-m hook
* Ceph bits for live-migration job
* Avoid unnecessary db\_calls in objects.Instance.\_from\_db\_object()
* placement: genericize on resource providers
* api-ref: fix server\_id in metadata docs
* Add the initial documentation for the placement API
* API Ref: update server\_id params
* conf: fix formatting in wsgi
* Transform requested secgroup names to uuids
* conf: fix formatting in availability\_zone
* libvirt: Cleanup spawn tests
* Rename security\_group parameter in compute.API:create
* Change database poison warning to an exception
* Fix database poison warnings, part 25
* Updated from global requirements
* Correct wrong max\_unit in placement inventory
* Add flavor extra\_spec info link to api\_ref
* Fix database poison warnings in resource providers
* Placement api: 404 response do not indicate what was not found
* Instance obj\_clone leaves metadata as changed
* Add a no-op wait method to NetworkInfo
* Move driver\_dict\_from\_config to libvirt driver
* Create schema generation for AddressBase
* conf: Improve help text for ldap\_dns\_opts
* conf: Fix indentation of network
* Fix config option types
* libvirt: Fix incorrect libvirt library patching in tests
* libvirt: refactor console device creation methods
* libvirt: read rotated "console.log" files
* libvirt: change get\_console\_output as prep work for bp/libvirt-virtlogd
* Updated from global requirements
* api-ref: Fix a 'port' parameter in os-consoles.inc
* Update nova api.auth tests to work with newer oslo.context
* Remove ironic instance resize from support matrix doc
* [placement] add a placement\_aggregates table to api\_db
* libvirt: remove py26 compat code in "get\_console\_output"
* Change RPC post\_live\_migration\_at\_destination from cast to call
* libvirt: add migration flag VIR\_MIGRATE\_PERSIST\_DEST
* Revert MTU hacks for bug 1623876
* Pass MTU into os-vif Network object
* Updated from global requirements
* api-ref: fix addFloatingIp action docs
* Fix a TypeError in notification\_sample\_base.py
* Add functional api\_samples test for addFloatingIp action
* Fix qemu-img convert image incompatability in alpine linux
* migration.source\_compute should be unchanged after finish\_revert\_resize
* Add explicit dependency on testscenarios
* Updated from global requirements
* cors: update default configuration in config
* api-ref: remove user\_id from keypair list response and fix 2.10
* Don't parse PCI whitelist every time neutron ports are created
* conf: Remove deprecated 'compute\_stats\_class' opt
* conf: Remove extraneous whitespace
* hardware: Split '\_add\_cpu\_pinning\_constraint'
* libvirt: Delete the lase\_device of find\_disk\_dev\_for\_disk\_bus
* EventReporterStub
* Catch all local/catch-all addresses for IPv6
* placement: add ResourceClass and ResourceClassList
* placement: raise exc when resource class not found
* fix connection context manager in rc cache
* pci: remove pci device from claims and allocations when freeing it
* PCI: Fix PCI with fully qualified address
* Log warning when user set improper config option value
* libvirt: fix incorrect host cpus giving to emulator threads when RT
* Transform instance.shutdown notifications
* encryptors: Workaround mangled passphrases
* Fix cold migration with qcow2 ephemeral disks
* Updated from global requirements
* config options: Improve help for SPICE
* Remove manual handling of old context variables
* api-ref: cleanup bdm.delete\_on\_termination field
* api-ref: document the power\_state enum values
* libvirt: Pass Host instead of Driver to volume drivers
* conf: Attempt to resolve TODOs in scheduler.py
* conf: Remove 'scheduler\_json\_config\_location'
* Remove unreachable code
* [api-ref] Fix path parameter console\_id
* doc: add a note about conditional support for xenserver change password
* Replace admin check with policy check in placement API
* Fix import statement order
* Fix database poison warnings, part 24
* libvirt: sync time on resumed from suspend instances
* Fix database poison warnings, part 23
* Add RPC version aliases for Newton
* Transform instance.unpause notifications
* Catch NUMA related exceptions in create server API method
* Notification object version test depends on SCHEMA
* Updated from global requirements
* Virt: add context to attach and detach interface
* Imported Translations from Zanata
* Stop using mox stubs in test\_shelve.py
* Fix SAWarning in TestResourceProvider
* Transform instance.unshelve notifications
* TrivialFix: Fixed typo in 'MemoryPageSizeInvalid' exception name in docstrings
* Make build\_requests.instance MediumText
* Use six.wraps
* Transform instance.resume notifications
* Transform instance.shelve\_offload notifications
* api-ref: fix image GET response example
* Fix exception raised in exception wrapper
* Add missing compat routine for Usage object
* Updated from global requirements
* Transform instance.power\_off notifications
* conf: Removed TODO note and updated desc
* Set 'last\_checked' flag if start to check scheduler file
* Remove bandit.yaml in favor of defaults
* Pre-add instance actions to avoid merge conflicts
* Add swap volume notifications (error)
* libvirt: add supported vif types for virtuozzo virt\_type
* fix testcase test\_check\_can\_live\_migrate\_dest\_fills\_listen\_addrs
* doc: Integrate oslo\_policy.sphinxpolicygen
* Using get() method to prevent KeyError
* tests: verify pci passthrough with numa
* tests: Adding functional tests to cover VM creation with sriov
* [placement] Add support for a version\_handler decorator
* pci: in free\_device(), compare by device id and not reference
* Mention API V2 should no longer be used
* doc: Update libvirt-numa guide
* Remove deprecated nova-manage vm list command
* Remove block\_migration from LM rollback
* PCI: Avoid looping over PCI devices twice
* Update docs for serial console support
* Remove conductor local api:s and 'use\_local' config option
* Cleanup before removal of conductor local apis
* compute: fixes python 3 related unit tests
* XenAPI: Fix VM live-migrate with iSCSI SR volume
* Fix the scope of cm in ServersTestV219
* Explicitly name commands target environments
* \_run\_pending\_deletes does not need info\_cache/security\_groups
* Updated from global requirements
* hardware: Standarized flavor/image meta extraction
* Tests: improve assertJsonEqual diagnostic message
* api-ref: Fix wrong parameters in os-volumes.inc
* Remove mox from unit/virt/libvirt/test\_imagebackend.py (1)
* Send events to all relevant hosts if migrating
* Catch error and log warning when not able to update mtimes
* Clarify what changed with scheduler\_host\_manager
* Add related options to floating ip config options
* Correct bug in microversion headers in placement
* Ironic Driver: override get\_serial\_console()
* Updated from global requirements
* Drop deprecated support for hw\_watchdog\_action flavor extra spec
* Remove watchdog\_actions module
* Removal of tests with different result depending on testing env
* Add debug to tox environment
* Document experimental pipeline in Nova CI
* Update rolling upgrade steps from upgrades documentation
* Add migrate\_uri for invoking the migration
* Fix bug in "nova/tests/unit/virt/test\_virt\_drivers.py" for os-vif
* Remove redundant req setting
* Changed the name of the standard resource classes
* placement: change resource class to a StringField
* Remove nova/openstack/\* from .coveragerc
* Remove deprecated nova-all binary
* Fix issue with not removing rbd rescue disk
* Require WebOb>=1.6.0
* conf: Remove deprecated \`\`use\_glance\_v1\`\`
* Adding hugepage and NUMA support check for aarch64
* hacking: Use assertIs(Not), assert(True|False)
* Use more specific asserts in tests
* Add quota related tables to the api database
* doc: add dev policy about no new metrics monitors
* Always use python2.7 for functional tests
* doc: note the future of out of tree support
* docs: update the Public Contractual API link
* Remove \_set\_up\_controller() from attach tests
* Add InvalidInput handling for attach-volume
* placement: add cache for resource classes
* placement: add new resource\_classes table
* hardware: Rework docstrings
* doc: Comment on latin1 vs utf8 charsets
* Improve help text for libvirt options
* block\_device: Make refresh\_conn\_infos py3 compatible
* Add swap volume notifications (start, end)
* Add a hacking rule for string interpolation at logging
* Stop using mox stubs in test\_snapshots.py
* Stop using mox from compute/test\_multiple\_create.py
* Don't attempt to escalate nova-manage privileges
* Improve help text for upgrade\_levels options
* Remove dead link from notification devref
* Stop using mox stubs in test\_evacuate.py
* Tests: fix a typo
* ENOENT error on '/dev/log'
* Patch mkisofs calls
* conf: Group scheduler options
* conf: Move consoleauth options to a group
* Fix exception due to BDM race in get\_available\_resource()
* Delete traces of in-progress snapshot on VM being deleted
* Add error handling for delete-volume API
* Catch DevicePathInUse in attach\_volume
* Enable release notes translation
* Fix drop\_move\_claim() on revert resize
* Updated from global requirements
* Fix API doc for os-console-auth-tokens
* tests: avoid creation of instances dir in the working directory
* config options: improve libvirt imagebackend
* libvirt: fix DiskSmallerThanImage when block migrate ephemerals
* Remove unnecessary credential sanitation for logging
* Replace uuid4() with uuidsentinel
* Change log level to debug for migrations pairing
* Remove the duplicated test function
* Move get\_instance() calls from try-except block
* Allow running db archiving continuously
* Add some extra logging around external event handling
* Fix a typo in driver.py
* Avoid Forcing the Translation of Translatable Variables
* Fix database poison warnings, part 21
* libvirt: Fix BlockDevice.wait\_for\_job when qemu reports no job
* Stop using mox from compute/test\_used\_limits.py
* Updated from global requirements
* Remove mox from tests/unit/conductor/tasks/test\_live\_migrate.py(3)
* Remove mox from tests/unit/conductor/tasks/test\_live\_migrate.py(2)
* Remove mox from tests/unit/conductor/tasks/test\_live\_migrate.py(1)
* Fix calling super function in setUp method
* refresh instances\_path when shared storage used
* Prevent us from sleeping during DB retry tests
* Fix error status code on update-volume API
* conf: Trivial cleanup of console.py
* conf: Trivial cleanup of compute.py
* conf: Trivial cleanup of 'cells'
* conf: Deprecate all topic options
* Updated from global requirements
* Disable 'supports\_migrate\_to\_same\_host' HyperV driver capability
* Fix periodic-nova-py{27,35}-with-oslo-master
* Report actual request\_spec when MaxRetriesExceeded raised
* Make db archival return a meaningful result code
* Remove the sample policy file
* libvirt/guest.py: Update docstrings of block device methods
* Fix small RST markup errors
* [Trivial] changes tiny RST markup error
* Add get\_context helper method
* Use gabbi inner\_fixtures for better error capture
* Hyper-V: Fixes os\_type image property requirement
* conf: Cleanup of glance.py
* conf: Move PCI options to a PCI group
* Add Apache 2.0 license to source file
* Updated from global requirements
* Make releasenotes reminder detect added and untracked notes
* [placement] reorder middleware to correct logging context
* Fixes RST markup error to create a code-box
* libvirt: support user password settings in virtuozzo
* Removing duplicates from columns\_to\_join list
* Ignore BuildRequest during an instance reschedule
* Remove stale pyc files when running the cover job
* Add a post-test-hook to run the archive command
* [placement] ensure that allow headers are native strings
* Fix a few typos in API reference
* Fix typo on api-ref parameters
* Fix typo in comment
* Remove mox in nova/tests/unit/compute/test\_shelve.py (1)
* Let schema validate image metadata type and key lengths
* Remove scheduled\_at attribute from instances table
* Fix database poison warnings, part 22
* Archive instance-related rows when the parent instance is deleted
* Unwind circular import issue with api / utils
* Fix database poison warnings, part 18
* Remove context object in oslo.log method
* libvirt: pick future min libvirt/qemu versions
* Improve consistency in serial\_console
* conf: Improve consistency in scheduler opts
* Move notification\_format and delete rpc.py
* config options: improve libvirt smbfs
* Fix database poison warnings, part 17
* Updated from global requirements
* Fix database poison warnings, part 16
* Hyper-V: Adds Hyper-V UEFI Secure Boot
* Stop overwriting thread local context in ClientRouter
* Cleanup some redundant USES\_DB\_SELF usage
* Fix database poison warnings, part 20
* Fix database poison warnings, part 19
* use proper context in libvirt driver unit test
* Renamed parameters name in config.py
* [placement] Allow both /placement and /placement/ to work
* numa: Fixes NUMA topology related unit tests
* VMware: Do not check if folder already exists in vCenter
* libvirt: fixes python 3 related unit tests
* Clean up stdout/stderr leakage in cmd testing
* Capture stdout in for test\_wsgi:test\_debug
* Add destroy method to the RequestSpec object
* Remove last sentence
* VMware: Enforce minimum vCenter version of 5.5
* test:Remove unused method \_test\_get\_test\_network\_info
* Determine disk\_format for volume-backed snapshot from schema
* Fix database poison warnings, part 15
* Fix CONTAINER\_FORMATS\_ALL to have ova insteadk of vmdk
* Config options consistency of ephemeral\_storage.py
* docs: Clarify sections & note on filter scheduler
* Fixes python 3 unit tests
* Add Hyper-V storage QoS support
* Add blocker migration to ensure for newton online migrations
* hacking: Always use 'assertIs(Not)None'
* Hyper-V: fix image handling when shared storage is being used
* Annotate online db migrations with cycle added
* properly capture logging during db functional tests
* [placement] 404 responses do not cause exception logs
* Fix pep8 E501 line too long
* Remove unused code
* Replace uuid4() with generate\_uuid() from oslo\_utils
* Return instance of Guest from method write\_instance\_config
* Mock.side\_effects does not exist, use Mock.side\_effect instead
* Remove redundant str typecasting
* VMware: deprecate wsdl\_location conf option
* Remove nova.image.s3 and configs
* Remove internal\_id attribute from instances table
* Fix stdout leakage during opportunistic db tests
* Updated from global requirements
* Improve help text for glance options
* libvirt: ignore conflict when defining network filters
* Add placeholder DB migrations for Ocata
* Remove PCI parent\_addr online migration
* Make nova-manage online migrations more verbose
* Fix check\_config\_option\_in\_central\_place
* Skip malformed cookies
* Fix database poison warnings, part 14
* Standardize output capture for nova-manage tests
* Work around tests that don't use nova.test as a base
* Don't print to stdout when executing hacking checks
* Make test logging setup fixture disable future setup
* Fix typo in docsting in test\_migrations.py
* Remove support for deprecated driver import
* conf: Add 'deprecated\_reason' to osapi opts
* Add hacking checks for xrange()
* Using assertIsNone() instead of assertEqual(None)
* move os\_vif.initialize() to nova-compute start
* Add deprecated\_since parameter
* [placement] Manage log and other output in gabbi fixure
* Reduce duplication and complexity in format\_dom
* Fix invalid exception mock for InvalidNUMANodesNumber
* libvirt: fix serial console not correctly defined after live-migration
* Add more description when service delete
* trivial: Rewrap guide at 79 characters
* plugins/xenserver: Add '.py' extension
* conf: Fix opt indentation for scheduler.py
* conf: Reorder scheduler opts
* Updated from global requirements
* Revert "Set 'serial' to new volume ID in swap volumes"
* [placement] Adjust the name of the gabbi tests
* placement: refactor instance translate function
* Move wsgi-intercept to test-requirements.txt
* Add missing slash to dir path
* Expand feature classification matrix with gate checks
* [placement] Stringify class and provider uuid in error
* [api-ref] Correct parameter type
* Remove default=None for config options
* libvirt: cleanup never used migratable flag checking
* Remove unnecessary setUp and tearDown
* Remove unused parameters
* Remove duplicate key from dictionary
* Updated from global requirements
* placement: refactor translate from node to dict
* stub out instances\_path in unit tests
* Add a new release note
* XenAPI: add unit test for plugin test\_pluginlib\_nova.py
* Add link ref to nova api concept doc
* libvirt: Use the recreated disk.config.rescue during a rescue
* Add members in InstanceGroup object members field
* Updates URL and removes trailing characters
* Stop ovn networking failing on mtu
* Update reno for stable/newton
* Don't pass argument sqlite\_db in method set\_defaults

14.0.0.0rc1
-----------

* Override MTU for os\_vif attachments
* Fix object assumption in remove\_deleted\_instances()
* Add is\_cell0 helper method
* Set a bigger TIMEOUT\_SCALING\_FACTOR value for migration tests
* Update minimum requirement for netaddr
* [placement] consolidate json handling in util module
* Fix unnecessary string interpolation
* Handle TypeError when disabling host service
* Fix an error in archiving 'migrations' table
* Remove deprecated flag in neutron.py
* Clean up allocation when update available resources
* [placement] Mark HTTP error responses for translation
* [placement] prevent a KeyError in webob.dec.wsgify
* Body Verification of api-ref os-volume-attachments.inc
* Add functional regression test for bug 1595962
* Use tempest tox with regex first
* libvirt: add ps2mouse in choice for pointer\_model
* Doc fix for Nova API Guide, added missing word
* conf: Make list->dict conversion more specific
* Revert "tox: Don't create '.pyc' files"
* Improve help text for xenapi\_session\_opts
* Improve help text for service options
* Correct image.inc for heading
* Complete verification for os-cloudpipe.inc
* Use assertEqual() instead of assertDictEqual()
* Fix typo of stevedore
* [placement] functional test for report client
* Add regression test for immediate server name update
* Fixed suspend for PCI passthrough
* libvirt: Rewrite test\_rescue and test\_rescue\_config\_drive
* Guard against failed cache refresh during inventory
* More conservative allocation updates
* [placement] Correct serialization of inventory collections
* Switching expression order within if condition
* Correct sort\_key and sort\_dir parameter for flavor
* Correct address, version parameter in ips.inc
* Use to\_policy\_values for policy credentials
* Doc fix for Nova API Guide, fixed wording
* Nova shelve creates duplicated images in cells
* More conservative inventory updates
* Fix server group name on api-ref
* Update BuildRequest if instance currently being scheduled
* Fix reno for removal of nova-manage service command
* Add note about display\_name in \_populate\_instance\_names
* Extended description for sync\_power\_state\_pool\_size option
* Use recursive obj\_reset\_changes in BuildRequest
* HyperV: ensure config drives are copied as well during resizes
* [placement] make PUT inventory consistent with GET
* Fill destination check data with VNC/SPICE listen addresses
* Revert "libvirt: move graphic/serial consoles check to pre\_live\_migration"
* Fix MonitorMetric obj\_make\_compatible
* Using assertIsNotNone() instead of assertIsNot(None,)
* [api-ref] fix availability\_zone for server create
* Fix SafeConfigParser DeprecationWarning in Python 3.2
* Set 'serial' to new volume ID in swap volumes
* Fix policy tests for project\_id enforcement
* neutron: don't trace on port not found when unbinding ports
* Remove RateLimitFault class
* Rate limit is removed , update doc accordingly
* Fix a typo from ID to Id
* context: change the name 'rule' to 'action' in context.can
* Add description for v2.20 changes in api-ref
* Add sync\_power\_state\_pool\_size option
* Additional logging for placement API
* Fix resizing in imagebackend.cache()
* [placement] cleanup some incorrect comments
* Updated from global requirements
* Compute: ensure that InvalidDiskFormat is handled correctly
* Add keypairs\_links into resp
* Add hypervisor\_links into hypervisor v2.33
* Throw exception if numa\_nodes is not set to integer greater than 0
* Add reserved param for v2.4
* Add more description on v2.9 history
* libvirt: inject files when config drive is not requested
* Pin maximum API version of microversion
* XenAPI: resolve the fetch\_bandwidth failure
* Fix api-ref doc for server-rebuild
* [api-ref] Update configuration file
* fix broken link in api-ref
* Trivial fix remove not used var in parameters
* Trival fix a typo
* Increase BDM column in build\_requests table
* VMware: Refactor the image transfer
* Pass GENERATE\_HASHES to the tox test environment
* [placement] add two ways to GET allocations
* Handle ObjectActionError during cells instance delete
* [placement] Add some tests ensuring unicode resource provider info
* cleanup: separate the creation of a local root to it's own method
* standardize release note page ordering
* Remove misleading warning message
* Add deprecated\_reason for use\_usb\_tablet option
* db: retry on deadlocks while adding an instance
* virt: handle unicode when logging LifecycleEvents
* Ensure ResourceProvider/Inventory created before add Allocations record
* Libvirt: Correct PERF\_EVENTS\_CPU\_FLAG\_MAPPING
* Enable py3 tests for unit.api.openstack.compute.test\_console\_output
* Implement setup\_networks\_on\_host for Neutron networks
* Add tests for safe\_connect decorator
* libvirt: improve logging for shared storage check
* Cleanup allocation todo items
* [placement] Allow inventory to violate allocations
* Refresh info\_cache after deleting floating IP
* Remove deprecated configuration option network\_device\_mtu
* Example & Parameter verification of os-security-group-default-rules.inc
* [placement] clean up some nits in the requestlog middleware
* correctly join the usage to inventory for capacity accounting
* Annotate db models that have moved to the nova\_api db
* Stop using mox in virt/libvirt/test\_imagecache.py
* Stop using mox in unit/fake\_processutils.py
* [api-ref]: Correcting server\_groups\_list parameter's type
* Fix race condition bug during live\_snapshot
* ironic: Rename private methods for instance info
* [placement] Fix misleading comment in wsgi loader
* Remove mox from api/openstack/compute/test\_networks.py
* Remove mox from api/openstack/compute/test\_rescue.py
* Remove mox from api/openstack/compute/test\_image\_size.py
* Remove mox from api/openstack/compute/test\_extended\_ips.py
* Remove mox from nova/tests/unit/virt/xenapi/test\_driver.py
* Remove mox from unit/api/openstack/compute/test\_hide\_server\_addresses.py
* fixing block\_device\_mapping\_v2 data\_type
* Updated from global requirements
* Add bigswitch command to compute rootwrap filters
* libvirt: add hugepages support for Power
* incorrect description in nova-api.log about quota check
* Removed enum duplication from nova.compute
* Remove unused conf

14.0.0.0b3
----------

* Remove deprecated cinder options
* Simple instance allocations from resource tracker
* Add support for allocations in placement API
* Add create\_all and delete\_all for AllocationList
* Pull from cell0 and build\_requests for instance list
* Remove hacked test that fails with latest os-brick
* Report compute node inventories through placement
* Delete BuildRequest regardless of service\_version
* Fix service version lookups
* Remove BuildRequest when scheduling fails
* Run cell0 db migrations during nova-manage simple\_cell\_setup
* Move cell message queue switching and add caching
* Add basic logging to placement api
* Fixed indentation
* Update placement config reno
* Ignore generated merged policy files
* Register keystone opts for placement sample config
* Remove deprecated neutron options
* ironic\_host\_manager: fix population of instances info on start
* Eliminate additional DB queries in nova lists
* Remove the incomplete wsgi script placement-api.py
* ironic\_host\_manager: fix population of instances info on schedule
* rt: ensure resource provider records exist from RT
* Allow linear packing of cores
* Return 400 error for non-existing snapshot\_id
* create placement API wsgi entry point
* Fix qemu version check
* Documentation for the vendordata reboot
* Add more vd2 unit tests
* Add a TODO and add info to a releasenote
* [placement] remove a comment that is no longer a todo
* Make api-ref bug link point to nova
* Api-ref: Improve os-migrateLive input parameters
* Fix a typo in the driver.py file
* New discover command to add new hosts to a cell
* Clean up instance mappings, build requests on quota failure
* Not allow overcommit ratios to be negative
* Updated from global requirements
* Use StableObjectJsonFixture from o.vo
* test\_keypairs\_list\_for\_different\_users for v2.10
* Fix using filter() to meet python2,3
* Emit warning when use 'user\_id' in policy rule
* Adds nova-policy-check cmd
* Reduce code complexity - api.py
* Use cls in class method instead of self \_delete\_domain is a class method, so cls should be used instead of self
* Revert "Optional separate database for placement API"
* Changed exception catching order
* Add BuildRequestList object
* In InventoryList.find() raise NotFound if invalid resource class
* Updated from global requirements
* Imported Translations from Zanata
* TrivialFix: Remove cfg import unused
* Add oslopolicy script runs to the docs tox target
* Add entry\_point for oslo policy scripts
* Tests: use fakes.HTTPRequest in compute tests
* Remove conversion from dict to object from xenapi live\_migration
* Hyper-V: properly handle shared storage during migrations
* TrivialFix: Remove logging import unused
* Hyper-V: properly handle UNC instance paths
* Get ready for os-api-ref sphinx theme change
* Update link in general purpose feature matrix
* List system dependencies for running common tests
* [api-ref]: Update link reference
* Abort on HostNotCompatibleWithFixedIpsClient
* Add warning if metadata\_proxy\_shared\_secret is not configured
* devspec: remove unused dev\_count in devspec
* TrivialFix: removed useless storing of sample directory
* [api-guide]: Update reference links
* Fix link reference in Nova API version
* Provide more duplicate VLAN network error info
* Correct microversions URL in api\_plugins.rst
* Create Instance from BuildRequest if not in a cell
* Added todo for deletion LiveMigrateData.detect\_implementation usage
* driver.pre\_live\_migration migrate\_data is always an object
* Manage db sync command for cell0
* Updated common create server sample request because of microversion 2.37
* Remove TODO for service version caching
* removed db\_exc.DBDuplicateEntry in bw\_usage\_update
* Add online migration to move instance groups to API database
* Remove locals() for formatting strings
* Hyper-V: update live migrate data object
* Config options consistency of notifications.py
* Add networks to quota's update json-schema when network quota enabled
* rt: isolate report and query sched client tests
* rt: remove ComputeNode.create\_inventory
* rt: rename test\_tracker -> test\_resource\_tracker
* rt: remove old test\_resource\_tracker.py
* Updated from global requirements
* Remove deprecated security\_group\_api config option
* Added min\_version field to 'host\_status' in 'api-ref'
* Make InstanceGroup object favor the API database
* Doc: Update PCI configuration options
* Don't maintain user\_id and project\_id in context
* Add support for usages in the placement API
* Add a Usage and UsageList object
* Add support for inventories to placement API
* Check capacity and allocations when changing Inventory
* Add release note to warn about os-brick lock dir
* config options: improve help netconf
* Config options consistency for consoleauth.py
* Support Identity v3 when connecting to Ironic
* Copy edit feature classification
* don't report network limits after 2.35
* Adding details in general purpose feature matrix [1]
* Improve placement API 404 and 405 response tests
* doc: fix disk=0 use case in flavor doc
* Config options: improve libvirt help text (1)
* Dump json for nova.network.model.Model objects
* Improve error message for empty cached\_nwinfo
* Return HTTP 400 on list for invalid status
* Move some flavor fakes closer to where they are being used
* Replace flavors.get\_all\_flavors\_sorted\_list() with object call
* Refactor and objectify flavor fakes used in api tests
* Fix 'No data to report' error
* Change api-site to v2.1 format
* Refuse to run simple\_cell\_setup on CellsV1
* In placement API send microversion header when error
* libvirt: Improve mocking of imagebackend disks
* Updated flags for XVP config options
* Add unit tests for nova.virt.firewall.IpTablesFirewallDriver (Part 4)
* [libvirt] Remove live\_migration\_flag & block\_migration\_flag
* placement: add filtering by attrs to resource\_providers
* Add support for resource\_providers urls
* Remove nova/api/validator.py
* Updated from global requirements
* Change default value of live\_migration\_tunnelled to False
* Remove code duplication in enums
* [vncproxy] log for closing web is misleading
* Return None in get\_instance\_id\_by\_floating\_address
* Make simple\_cell\_setup work when multiple nodes are present
* Add REST API support for get me a network
* plugins/xenserver: Resolve PEP8 issues
* Fix migration list + MigrationList operation
* rt: Create multiple resize claim unit test
* rt: Refactor unit test for trackable migrations
* VIF: add in missing translation
* Clean imports in code
* Fix neutron security group tests for 5.1.0 neutronclient
* modify description of "Inject guest networking config"
* os-vif: do not set Route.interface if None
* Check opt consistency for neutron.py
* Improve help text for compute manager options
* Make simple\_cell\_setup idempotent
* Add cell\_v2 verify\_instance command
* Remove unnecessary debug logs of normal API ops
* Replace mox with mock in test\_validate\_bdm
* Replace mox with mock in test\_cinder
* Allow Nova Quotas to be Disabled
* Allow authorization by user\_id for server evacuate
* Allow authorization by user\_id for server update
* Allow authorization by user\_id for server delete
* Allow authorization by user\_id for server changePassword action
* Update binding:profile for SR-IOV ports on resize-revert
* Verified deprecation status for vnc options
* Add tests for user\_id policy enforcement on trigger\_crash\_dump
* Allow authorization by user\_id for server shelve action
* Allow authorization by user\_id for force\_delete server
* Allow authorization by user\_id for server resize action
* Allow authorization by user\_id for server pause action
* Add tests for user\_id policy enforcement on stop
* Fix consistency in crypto conf
* Add placement API web utility methods
* Improve help text for XenServer Options
* Improve help text for xenapi\_vm\_utils\_opts
* network: fix handling of linux-bridge in os-vif conversion
* Fix consistency in API conf
* Improve consistency in WSGI opts
* Add unit tests for nova.virt.firewall.IpTablesFirewallDriver (Part 3)
* Improve help text for xenapi\_opts
* Maintain backwards compat for listen opts
* Allow authorization by user\_id for server rescue action
* Allow authorization by user\_id for server rebuild
* Allow authorization by user\_id for server suspend action
* Allow authorization by user\_id for server lock action
* Optional separate database for placement API
* Replace fake\_utils by using Fixture
* virt/image: between two words without a space in output message
* config options: improve help text of database (related) options (2/2)
* config options: improve help text of database (related) options (1/2)
* Remove hacking check [N347] for config options
* Skipping test\_volume\_backed\_live\_migration for live\_migration job
* rt: New unit test for rebuild\_claim()
* List instances for secgroup without joining on rules
* Improve help text for vmwareapi\_opts
* Updated from global requirements
* vnc host options need to support hostnames
* Removed flag "check\_opt\_group\_and\_type" from pci.py
* Removed flag "check\_opt\_group\_and\_type"
* libvirt: convert over to use os-vif for Linux Bridge & OVS
* Remove left over conf placeholders
* libvirt: Rename import of nova.virt.disk.api in driver
* Fix server operations' policies to admin only
* Add support for vd2 user context to other drivers
* api-ref: Example verification for os-simple-tenant-usage.inc
* Remove unused exception: ImageNotFoundEC2
* Fix opt description for s3.py
* virt/hardware: Check for threads when "required"
* Improve consistency in VNC opts
* Improve help text for compute\_opts
* Config options: Improve help text for console options
* Config options: Consistency check for remote\_debug options
* docs: update code-review guide for config options
* Add separate create/delete policies to attach\_interface
* Fix handling of status in placement API json\_error\_formatter
* Use constraints for all tox environments
* Move JSON linting to pep8
* HyperV: remove instance snapshot lock
* rt: Move monitor unit tests into test\_tracker
* rt: Move unit tests for update usage for instance
* rt: Move unit tests for update mig usage
* rt: Remove useless unit test in resource tracker
* rt: Remove dup tests in test\_resource\_tracker
* rt: Remove incorrect unit test of resize revert
* rt: Refactor test\_dupe\_filter unit test
* rt: Remove duplicate unit test for missing mig ctx
* rt: Refactor resize claim abort unit test
* rt: Refactor resize\_claim unit test
* Set enforce\_type=True in method flags
* Use constraints for releasenotes
* Add some logging and a comment for shelve/unshelve operations
* Run shelve/shelve\_offload\_instance in a semaphore
* Check opt consistency for api.py
* Allow empty CPU info of hypervisors in API response
* Config options consistency of rdp.py
* Improve consistency in workarounds opts
* Refresh README and its docs links
* Correct InventoryList model references
* instance.name should be blank if instance.id is not set
* Cells: Handle delete with BuildRequest
* Add NoopConductorFixture
* Make notification objects use flavor capacity attributes
* Fix busted release notes
* config options: Improve help for conductor
* Config options: base path configuration
* PCI: Fix network calls order on finish\_revert\_resize()
* Remove deprecated legacy\_api config options
* Config Options: Improve help text for Ipv6 options
* Update tags for Image file url from filesystems config option
* Check options consistency in hyperv.py
* Improve help text for floating ips options
* config options: Improve help for base
* Improve consistency in API
* cleanup: some update xml cases in test\_migration
* Use stashed volume connector in \_local\_cleanup\_bdm\_volumes
* Ironic: allow multiple compute services
* api-ref: Parameter verification for os-simple-tenant-usage.inc
* Ironic: report node.resource\_class
* network: introduce helper APIs for dealing with os-vif objects
* ironic: Cleanup instance information when spawn fails
* update wording around pep8 exceptions
* Remove backward compatibility with pre-grizzly releases
* use the HostPortGroupSpec.vswitchName instead of HostPortGroup.vswitch.split
* Replace functions 'Dict.get' and 'del' with 'Dict.pop'
* Updated from global requirements
* Strict ImageRef validation to UUID only
* Add the ability to configure glanceclient debug logging
* Deprecate cert option
* Merged barbican and key\_manager conf files into one
* Config options consistency of pci.py
* config option: rename libvirt iscsi\_use\_multipath
* Fix require thread policy for multi-NUMA computes
* Allocate PCI devices on migration
* TrivialFix: Fixed a typo in nova/test.py
* Updated from global requirements
* Improve help text of image\_file\_url
* Ironic: enable multitenant networking
* libvirt: Remove some unnecessary mocking in test\_driver
* libvirt: Pass object to \_create\_images\_and\_backing in test
* libvirt: Reset can\_fallocate in test setUp()
* libvirt: Create console.log consistently
* Fixed invalid UUIDs in unit tests
* Remove deprecated manager option in cells.py
* Refactor deallocate\_fixed tests to use one mock approach instead of three
* Improve consistency in virt opts
* Updated header flag in SSL opts
* Updated from global requirements
* Don't cache RPC pin when service\_version is 0
* Imported Translations from Zanata
* Remove white space between print and ()
* Flavor: correct confusing error message about flavorRef
* Consistency changes for osapi config options
* Fixed typos in nova: compute, console and conf dir
* Add objects.ServiceList.get\_all\_computes\_by\_hv\_type
* Add InstanceList.get\_uuids\_by\_host() call
* Conf options: updated flags for novnc
* Address feedback on cell-aggregate-api-db patches
* Updated from global requirements
* Add data migration methods for Aggregate
* Config options: Consistency check for quota options
* Add server name verification in instance search
* Fix typo in DeviceDetachFailed exception message
* Straddle python-neutronclient 5.0 for testing
* Initialise oslo.privsep early in main
* Cells: Simple setup/migration command
* Aggregate create and destroy work against API db
* Make Aggregate.save work with the API db
* Improve help text for vmware
* Config options consistency of exceptions.py
* Help text for the mks options
* Trivial option fixes
* Properly quote IPv6 address in RsyncDriver
* rbd\_utils: wrap blocking calls in tpool.Proxy()
* Resolve PCI devices on the host during Guest boot-up
* Fixed typos in nova, nova/api, nova/cells directory
* Fix misspellings
* Trivial: add 'DEPRECATED' for os-certificates API ref
* Mention proxy API deprecation microversion in api-ref
* xenserver: fix an output format error in cleanup\_smp\_locks
* Add log for instance without host field set
* Improve consistency in crypto
* Deprecate barbican options
* Improve consistency in flavors
* Improve the help text for the guestfs options
* Reminder that release notes are built from commits
* Add initial framing of placement API
* Add missing ComputeHostNotFound exception in live-migration
* Free new pci\_devices on revert-resize
* Use oslo\_config new type PortOpt for port options
* Updated from global requirements
* Remove unused imports in api/openstack/fakes.py
* Add docs about microversion testing in Tempest
* Remove leftover list\_opts entry points
* Remove nova.cache\_utils oslo.config.opts entrypoint
* Remove nova.network namespace from nova-config-generator.conf
* Remove neutronv2.api oslo.config.opt entry point
* Follow up on Update binding:profile for SR-IOV ports
* Improve consistency in servicegroup opts
* Improve help text for cloudpipe
* Remove the useless version calculation for proxy api deprecated version
* numa: remove the redundant check for hw\_cpu/hw\_mem list
* Add support for oslo.context 2.6.0
* Update tags for Cache config option
* Remove unused validation code for quota\_sets
* Revert "Don't assert exact to\_dict output"
* cleanup\_live\_migration\_destination\_check spacing
* Default image.size to 0 when extracting v1 image attributes
* Add details to general purpose feature matrix
* Adding functional tests for 2.3 microversion
* compute: Skip driver detach calls for non local instances
* libvirt: Fix invalid test data
* libvirt: Fix fake \_disk\_info data in LibvirtDriverTestCase
* Don't set empty kernel\_id and ramdisk\_id to glance image
* Config options consistency for cell.py
* Refuse to have negative console ttls
* Option Consistency for availability\_zone.py
* Add a small debug line to show selection location
* Fix wrong override value of config option vswitch\_name
* Fix wrong override value of config option proxyclient\_address
* Call release\_dhcp via RPC to ensure correct host
* Adjust MySQL access with eventlet
* Improve consistency in cert
* Updated from global requirements
* rt: don't log pci\_devices twice when updating resources
* Config options consistency for configdrive.py
* Remove deprecated ironic.api\_version config option
* Improve the help text for compute timeout\_opts
* Deprecate the nova-manage commands that rely on nova-network
* Improve consistency in xenserver
* Add the 'min' param to IntOpts where applicable
* Remove unused config option 'fake\_call'
* Make Aggregate metadata functions work with API db
* Use deprecated\_reason for network quota options
* "nova list-extensions" not showing summary for all
* Fix typos in deprecates-proxy-apis release note
* Enable deferred IP on Neutron ports
* Improve help text for XenServer pool opts
* remove config option iqn\_prefix
* Deprecate os-certificates
* Update RequestSpec nested flavor when a resize comes in
* New style vendordata support
* Add metadata server fixture
* Improve help text for quota options
* Improve help text for consoleauth config options
* Bump Microversion to 2.36 for Proxy API deprecation
* api: use 'if else' instead of 'try exception' to get password value
* Add better help to rdp options
* Adding details in general purpose feature matrix
* Enables Py34 tests for unit.api.openstack.compute.test\_server\_actions
* Filter network related limits from limits API
* Filter network related quotas out of quotas API
* Deprecate Baremetal and fping API
* Deprecate volumes related APIs
* Deprecate SecurityGroup related proxy API
* Deprecated floating ip related proxy APIs
* Complete verification of os-instance-actions.inc
* Check opt group and type for nova.conf.service.py
* Fix links to network APIs from api-ref
* Add comment about how status field changed
* Fix database poison warnings, part 13
* Deprecate network quota configuration
* Verify os-aggregates.inc on sample files
* Cleanup: validate option at config read level
* :Add missing %s in print message
* api-ref: unify the no response output in delete operation
* Return 400 when SecurityGroupCannotBeApplied is raised
* network: handle forbidden exception from neutron
* Avoid update resource if compute node not updated
* Document update\_task\_state for ComputeDriver.snapshot
* Config Option consistency for crypto.py
* Fix database poison warnings, part 12
* Don't check cinder volume states during attach
* Clean up test\_check\_attach\_availability\_zone\_differs
* Fix database poison warnings, part 11
* Fix opt description and indentation for flavors.py
* Remove redundant flag value check
* Improve help context of ironic options
* Update instance node on rebuild only when it is recreate
* Remove unneeded bounds-checking code
* Improve the help text for the linuxnet options (4)
* Don't assert exact to\_dict output
* Fix database poison warnings, part 10
* config options: help text for enable\_guestfs\_debug\_opts
* Fix database poison warnings, part 9
* Improve help text of s3 options
* Remove deprecated config option volume\_api\_class
* Fix inappropriate notification send
* libvirt: Fix signature and behaviour of fake get\_disk\_backing\_file
* libvirt: Pass path to Image base class
* Remove max\_size argument to images.fetch and fetch\_to\_raw
* Update tox.ini: Constraints are possible for api\* jobs
* Separate api-ref for list security groups by server
* Deprecate FixedIP related proxy APIs
* Deprecated networks related proxy APIs
* Check option descriptions and indentations for configdriver.py
* Make Aggregate host operations work against API db
* libvirt: open RBD in read-only mode for read-only operations
* Remove unnecessary code added for ec2 deprecation
* Enhance notification doc generation with samples
* Depracate Images Proxy APIs
* Correct the network config option help text
* config options: improve help for noVNC
* Replace deprecated LOG.warn with LOG.warning
* Fixed typos in api-ref and releasenotes directory
* Fix invalid import order and remove import \*
* Improve the help text for the network options (4)
* Add async param to local conductor live\_migrate\_instance
* libvirt: update guest time after suspend
* libvirt: Modify the interface address object assignment
* Update binding:profile for SR-IOV ports
* Port nova test\_serversV21.Base64ValidationTest to Python 3
* Refactor instance action notification sample test
* Config option update tasks for availability\_zone
* Expand initial feature classification lists
* Add prototype feature classification matrix
* [libvirt] Live migration fails when config\_drive\_format=iso9660
* Modify docstring of numa\_get\_reserved\_huge\_pages method
* Use constraints for coverage job
* Remove compute host from all host aggregates when compute service is deleted
* Fix incorrect cellid numbering for NUMA memnode
* Fix opt descripton for cells.py
* Fix host mapping saving
* Example and body verification of os-quota-sets.inc
* Remove deprecated network\_api\_class option
* neutron: destroy VIFs if allocating ports fails
* Validate pci\_passthrough\_whitelist when starting n-cpu
* Rename compute manager \_check\_dev\_name to \_add\_missing\_dev\_names
* Remove unused context argument to \_default\_block\_device\_names()
* Fix typo in AdminPasswordController

14.0.0.0b2
----------

* Use from\_environ when creating a context
* Pass kwargs through to base context
* Fix opt description and check deprecate status for hyperv.py
* VMware: Enable disk.EnableUUID=True in vmx
* hyper-v: device tagging
* Add release notes for notification transformation
* Assert reservation\_id in notification sample test
* Remove redundant DEPRECATED tag from help messages
* Fix PUT server tag 201 to return empty content
* Clean up helper methods in ResourceProvider
* Transform instance.restore notifications
* neutron: delete VIFs when deallocating networking
* Add VirtualInterface.destroy()
* Make notifications module use flavor capacity attributes
* Make ironic driver use flavor fields instead of legacy ones
* Make xenapi driver use flavor fields instead of legacy ones
* Make libvirt driver use flavor fields instead of legacy ones
* Make hyperv driver use flavor fields instead of legacy ones
* Make vmware driver use flavor fields instead of legacy ones
* Bump service version for BuildRequest deletion
* Stop instance build if BuildRequest deleted
* Add block\_device\_mappings to BuildRequest
* Improve help text of flavors config options
* Improve help text for cinder config options
* Microversion 2.35 adds keypairs pagination support
* Fix up legacy resource fields in simple-tenant-usage
* Use flavor attributes instead of deprecated instance resources
* Typo fix: remove multiple whitespace
* network: handle unauthorized exception from neutron
* Fix the broken links
* 'limit' and 'marker' support for db\_api and keypair\_obj
* Improve help text for exceptions
* Improve help text for compute running\_deleted\_opts
* rest api version bumped for async pre live migration checks
* Add user\_id request parameter in os-keypairs list
* Revert "Detach volume after deleting instance with no host"
* Don't overwrite MarkerNotFound error message
* tox: Use conditional targets
* tox: Don't create '.pyc' files
* Improve help text for allocation\_ratio\_opts
* Release note for vzstorage volume driver
* Fix typo in \_update\_usage\_from\_migrations
* Transform instance.resize notifications
* Refactors nova.cmd utils
* Replace DOS line ending with UNIX
* migration volume failed for invalid type
* api-ref: fix wrong description about response example in os-hypervisor
* api-ref: body verification of os-agents
* Fix wrong JSON format in API samples
* Implement ResourceProvider.destroy()
* Add Allocation and AllocationList objects
* Deprecate nova-manage vm list command
* Remove live-migration from nova-manage man page
* Deprecate the quota\_driver config option
* Allow irrelevant,self-defined specs in ComputeCapacityFilter
* Transform instance.pause notifications
* Fix opt description for scheduler.py
* Verify "needs:check\_deprecation\_status" for serial\_console.py
* API: catch InstanceNotReady exception
* Transform instance.shelve notifications
* Replace unicode with six.text\_type
* Added support for new block device format in vmops
* XenAPI: add unit test for plugin bandwidth
* api-ref: unify the delete response infomation
* Add nova-manage quota\_usage\_refresh command
* Quota changes for the nova-manage quota\_usage\_refresh command
* Remove DictCompat from SecurityGroup
* Replace use of eval with ast.literal\_eval
* libvirt: fix missed test in migration
* Improve the help text for the network options (3)
* Correct reraising of exception
* api-ref: Parameter verification for servers-actions.inc Part 1
* Body verification of os-interface.inc
* Parameter verification of os-instance-actions.inc
* xvp: change the default xvp conf path to CONF.xvp group
* libvirt:code flow problem in wait\_for\_job
* Clean up service version history comments
* Add a ResourceProviderList object
* Refactor block\_device\_mapping handling during boot
* Remove spaces around keyword argument
* Use ovo in test\_obj\_make\_compatible()
* Improve the help text for the network options (2)
* Update mutable-config reno with LM timeout params
* Added better error messages during (un)pinning CPUs
* Remove duplicate policy test
* Complete verification for os-virtual-interfaces
* api-ref: os-volumes.inc
* Enable python34 tests for nova.tests.unit.pci.test\_manager and test\_stats
* api-ref: merge multiple create to servers.inc
* Improve the help text for configdrive options
* Revert "Remove manual creation of console.log"
* Fix invalid import order
* Fix invalid import order
* Fix invalid import order
* config options: improve help for notifications
* Fix invalid import order
* Fix invalid import order
* Remove unused itype parameter from get migration context
* Do not try to backport when db has older object version
* Detach volume after deleting instance with no host
* Transform instance.suspend notifications
* Hacking check for \_ENFORCER.enforce()
* Remove final use of \_ENFORCER.enforce
* Hacking check for policy registration
* Extract \_update\_ports\_for\_instance
* Extract port create from allocate\_for\_instance
* Improve help text for resource tracker options
* Transform instance.power\_on notifications
* Add a py35 environment to tox
* api-ref: add note about os-certificates API
* XenAPI: UT: Always mock logging configuration
* Fix api\_validation for Python 3
* api-ref: verify assisted-volume-snapshots.inc
* Delete reduplicate code in test\_compute\_mgr.py
* Port test\_hacking to Python 3
* Fix comment for version 1.15 ComputeNodeList
* Microversion 2.33 adds pagination support for hypervisors
* VMware: create vif with resource limitations
* policy: clean-up
* Make VIF.address unique with port id for neutron
* Device tagging metadata API support
* trivial: remove unnecessary mock from servers API test
* Return HTTP 200 on list for invalid status
* Complete verification for os-floating-ips-bulk
* Transform instance.update notification
* Pre-add instance actions to avoid merge conflicts
* Transform instance.delete notifications
* XenAPI:  Add UT for independent compute option
* Log DB exception if VIF creation fails
* Fixes compute API unit tests for python3
* Reduce complexity in \_stub\_allocate\_for\_instance
* Reorder allocate\_for\_instance preamble
* Make \_validate\_requested\_network\_ids return a dict
* Extract \_validate\_requested\_network\_ids
* Create \_validate\_requested\_port\_ids
* Extract \_filter\_hypervisor\_macs
* Always call port\_update in allocate\_for\_instance
* Device tagging API support
* Mapping power\_state from integer to string
* Compute manager device tagging support
* trivial: comment about vif object address field
* Example verification for os-fixed-ips.inc
* Revert "Detach volume after deleting instance with no host"
* policy: Replaces 'authorize' in nova-api (part 5)
* libvirt: add todo about bdms in \_build\_device\_metadata
* libvirt: virtuozzo instance rescue mode support
* api-ref: os-certificates.inc
* policy: Replaces 'authorize' in nova-api (part 4)
* Make LM timeout params mutable
* Help text for the ephemeral storage options
* Config Options: Improve help text for debugger
* Make Ironic options definitions consistent
* Fix some typos
* Add namespace oslo.db.concurrency in nova-config-generator.conf
* Remove mox in tests/unit/objects/test\_quotas
* Remove network information from IOVisor vif
* Add automatic switching to postcopy mode when migration is not progressing
* Extend live-migration-force-complete to use postcopy if available
* Add a test utility for checking mock calls with objects
* Remove invalid test for config option scheduler\_host\_manager
* Complete verification for api-ref os-flavor-extra-specs
* policy: Replaces 'authorize' in nova-api (part 3)
* libvirt: Add migration support for perf event support
* Libvirt driver implementation of device tagging
* Add policy sample generation
* Cleanup instance device metadata object code
* libvirt: virtuozzo instance resize support
* Fix test\_ipv6 and simplify to\_global()
* Remove russian from unit/image/test\_glance.py
* Py3: fix serial console output
* \_security\_group\_get\_by\_names cleanup
* Add reminder comments for compute rpcapi version bump
* Update get\_instance\_diagnostics for instance objects
* Improve help text for wsgi options
* Don't immediately null host/node when shelving
* Evaluate 'task\_state' in resource (de)allocation
* Add new configuration option to turn auto converge on/off
* Add new configuration option to turn postcopy on/off
* Improve nova.rpc conf options documentation
* Fix spelling mistake
* Add ability to select specific tests for py34
* Remove mox from unit/compute/test\_compute.py (4)
* Remove mox from unit/compute/test\_compute.py (end)
* Remove mox from unit/compute/test\_compute.py (11)
* Remove mox from unit/compute/test\_compute.py (10)
* Remove mox from unit/compute/test\_compute.py (9)
* Remove mox from unit/compute/test\_compute.py (8)
* Remove mox from unit/compute/test\_compute.py (7)
* Remove mox from unit/compute/test\_compute.py (6)
* Remove mox from unit/compute/test\_compute.py (5)
* UT: cleanup typo in libvirt test\_config
* Remove mox from unit/compute/test\_compute.py (3)
* Remove mox from unit/compute/test\_compute.py (2)
* Remove mox from unit/compute/test\_compute.py (1)
* Improve image signature verification failure notification
* libvirt: attach configdrive after instance XML
* libvirt: add nova volume driver for vzstorage
* Moving test helpers to a common place
* On port update check port binding worked
* Refactor to create \_ensure\_no\_port\_binding\_failure
* policy: Replaces 'authorize' in nova-api (part 2)
* XenAPI: Add option for running nova independently from hypervisor
* XenAPI: Stream config drive to XAPI
* XenAPI: Perform disk operations in dom0
* Port test\_ipv6 to py3 and simplify to\_global()
* api-ref: Example verification for os-agents.inc
* Allow monitor plugins to set own metric object
* api-ref: correct the order of APIs in server-tags
* Remove unused LOG
* Remove unnecessary \_\_init\_\_
* Release notes: fix typos
* Make print py3 compatible
* libvirt: fix disk size calculation for VZ container instances
* Fix error message for VirtualInterfaceUnplugException
* libvirt: Add boot ordering to individual disks
* image\_meta: Add hw\_rescue\_device and hw\_rescue\_bus
* collapse servers.ViewBuilderV21 into servers.ViewBuilder
* remove personality extension
* remove preserve-ephemeral rebuild extension
* remove access\_ips extension
* Bump the service version for get-me-a-network support
* neutron: handle 'auto' network request in allocate\_for\_instance
* Add unit tests for nova.virt.firewall.IpTablesFirewallDriver (Part 2)
* libvirt: split out code for recovering after migration tasks
* libvirt: split out code for processing migration tasks
* libvirt: split off code for updating migration stats in the DB
* libvirt: split off code for updating live migration downtime
* api-ref: verify images.inc
* libvirt: split out code for determining if migration should abort
* libvirt: split out code for detecting live migration job type
* policy: Replaces 'authorize' in nova-api (part 1)
* Check if flavor.vcpus is more than MAX\_TAP\_QUEUES
* policy: Add defaults in code (part 6)
* objects: Add devices\_metadata to instance object
* objects: new InstanceDeviceMetadata object
* db: add a device\_metadata column to instance\_extra
* libvirt: add perf event support when create instance
* Improve help text of crypto.py
* objects: adding an update method to virtual\_interface
* Rename driver method check\_can\_live\_migrate\_destination\_cleanup
* api-ref: added docs for microversion 2.26
* policy: Add defaults in code (part 5)
* policy: Add defaults in code (part 4)
* policy: Add defaults in code (part 3)
* policy: Add defaults in code (part 2)
* add ploop support into qemu-img info
* policy: Add defaults in code (part 1)
* Handle UnableToAutoAllocateNetwork in \_build\_and\_run\_instance
* Add note about preserve\_ephemeral limitations
* Add console auth tokens db api methods
* Remove mox from unit/virt/libvirt/volume/\*.py
* Port cinder unit tests to Python 3
* Port test\_pipelib and test\_policy to Python 3
* Adding missing log translation hints
* Add instance groups tables to the API database
* Make live migration checks async
* Check for None max\_count for Python 3 compat
* Updated from global requirements
* fix developer docs on API
* libvirt: virtlogd: use "log" element in char devices
* Fix ConsoleAuthTokens to work for all console types
* remove os-disk-config part 4
* remove os-disk-config part 3
* remove load\_standard\_extensions method
* Modify "policy.conf" to "policy.json"
* Ensures that progress\_watermark and progress\_time are updated
* Add a note for policy enforcement by user\_id
* XenAPI: Support neutron security group
* Added instance actions for conductor
* Stop using mox stubs in nova/tests/unit/test\_metadata.py
* remove support for legacy v2 generator extensions
* Remove duplicate unit test resource tracker
* Prevent instance disk overcommit against itself
* api-ref: parameter verification os-agents
* make failures on api\_samples more clear
* api-ref, os-services.inc
* api-ref: docs for microversion v2.28
* Update dhcp\_opts on both create and update
* api-ref: Improve os-instance\_usage\_audit\_log samples
* Add ironic mac address when updating and creating
* pci: Deprecate is\_new from pci requests
* Enhance notification sample test base
* Handle multiple samples per versioned notification
* Transform wrap\_exception notification to versioned format
* XenAPI: OVS agent updates the wrong port with Neutron
* Stop using mox from unit/fake\_server\_actions.py
* objects: you want'em
* libvirt: enhance method to return pointer\_model from image prop
* Improve help text for service group options
* Updated from global requirements
* Skip network allocation if 'none' is requested
* Separete notification object version test
* [typo] replaced comupte to compute in test
* api-ref, os-availability-zone.inc
* Config: no need to set default=None
* Add delete\_, update\_ and add\_ inventory to ResourceProvider
* libvirt: fix typos in comments
* Remove the nova.compute.resources entrypoint
* Re-deprecate use\_usb\_tablet config option
* Log the network when neutron won't apply security groups
* api-ref: parameter verification os-fixed-ips
* Add CellMappingList object
* Add console auth tokens table and model
* live migration check source failed caused bdm.device\_path lost
* Use is\_valid\_ipv4 from oslo.utils
* Include exception in \_try\_deallocate\_network error log
* Remove mox from tests/unit/virt/test\_imagecache.py
* Fix docstring nits from ResourceProvider.set\_inventory() review
* fix errors in revert resize api docs
* Add set\_inventory() method on ResourceProvider
* Improve the help text for cells options (8)
* VMware: Fix bug of TypeError when getting reference of VCenter cluster is None
* XenAPI: Integers returned from XAPI are actually strings
* Remove virt.block\_device.\_NoLegacy exception
* rename libvirt has\_default\_ephemeral
* Remove ec2\_code from exception
* Add specific lazy-load method for instance.tags
* Don't attempt to lazy-load tags on a deleted instance
* Pre-load tags when showing server details
* Policy-in-code servers rules
* Fix image meta which is sent to glance v2
* Extract update\_port call into method
* Refactor to create \_populate\_mac\_address
* Rename \_populate\_mac\_address adding pci
* Rename created\_port to created\_port\_id
* Flip allocate\_for\_instance create or update if
* libvirt: cleanup baselineCPU return value checking
* Updated from global requirements
* Remove mox from tests/unit/objects/test\_aggregate.py
* Handle keypair not found from metadata server
* Skip network validation if explicitly requesting no networks
* nova-net: handle 'auto' network request in allocate\_for\_instance
* neutron: validate auto-allocate is available
* Add helpers to NetworkRequest(List) objects for auto/none cases
* Remove api\_rate\_limit config option
* Tear down of os-disk-config part 2
* Tear down os-disk-config part 1
* Disallow instance tag set for invalid instance states
* Make instance as second arg in compute api calls
* TrivialFix: Remove extra comma from json
* Skip NFS and Ceph in live migration job test run
* Added missed response to test\_server\_tags
* api-ref: console types
* api-ref: add version 2.3 parameters to servers
* Remove extra expected error code (413) from image metadata
* Use instance object instead of db record
* Publish proxy APIs deprecation in api ref doc
* Fix outdated parameter network\_info description in virt/driver
* api-ref: Fix parameters in os-instance-usage-audit-log
* Remove python code validation specific to legacy\_v2
* Remove DictCompat from instance\_info\_cache
* Remove redundant test in test\_resource\_tracker
* nova shared storage: rbd is always shared storage
* Modify the disk bus and device name for Aarch64
* Remove mox from unit/compute/test\_compute\_mgr.py (end)
* Remove mox in tests/unit/objects/test\_instance\_faults
* Remove mox from unit/compute/test\_compute\_mgr.py (6)
* Remove mox from unit/compute/test\_compute\_mgr.py (8)
* Remove mox from unit/compute/test\_compute\_mgr.py (7)
* Trivial-Fix: Fix typos
* Fix some typos
* Remove mox from unit/compute/test\_compute\_mgr.py (5)
* Remove mox from unit/compute/test\_compute\_mgr.py (4)
* Remove mox from unit/compute/test\_compute\_mgr.py (3)
* Remove mox from unit/compute/test\_compute\_mgr.py (2)
* Updated from global requirements
* Make Aggregate.get\_by\_uuid use the API db
* api-ref: parameter  verification for os-aggregates
* Improve help text for neutron\_opts
* remove processing of blacklist/whitelist/corelist extensions
* fix OS-SCH-HNT:scheduler\_hints location in sample
* Fix reno from hyper-v-remotefx
* Yield the thread when verifying image's signature
* Remove invalid test methods for config option port\_range
* libvirt: Prevent block live migration with tunnelled flag
* Trivial: remove none existing py3 test from tests-py3.txt
* Make host as second arg in compute api calls
* Stop using mox stubs in tests/unit/fake\_notifier
* Remove unused \_get\_flags method from integrated\_helpers
* Enable all extension for all remaining sample tests
* tox.ini: Remove unnecessary comments in api-ref target
* Stop using mox stubs in nova/tests/unit
* Updated from global requirements
* Raise exception if BuildRequest deleted twice
* Replace mox with mock for xenapi vm\_utils.lookup
* Detach volume after deleting instance with no host
* pci: Allow updating pci\_requests in instance\_extra
* Change default fake\_ server status to ACTIVE
* Fix update inventory for multiple providers
* Default to using glance v2
* Enable all extension for remaining server API tests
* Enable all extension for server API tests part-1
* Remove mox from unit/compute/test\_compute\_mgr.py (1)
* Fixes py3 unit tests for nova.tests.unit.test\_block\_device.\*
* Reno for mutable-config
* Remove invalid test of config option default\_notification\_level
* Improve the help text for cells options (7)
* test: pass enable\_pass as kwarg in test\_evacuate
* Remove config option config\_drive\_format's invalid value test
* test: remove invalid test method in libvirt/test\_imagebackend
* xenapi: Remove invalid values for config option image\_compression\_level
* Remove mox from api/openstack/compute/test\_pci.py
* Stop using mox from openstack/compute/test\_cells.py
* Enable all extension for server actions sample tests
* Enable all extension for Flavor API sample tests
* Fix resource tracking for instances with no numa topology
* Clarified "user" to plural type
* Revert "Optimize \_cleanup\_incomplete\_migrations periodic task"
* Remove unused authorizer methods
* Remove legacy v2 policy rules
* Add unit tests for nova.virt.firewall.IpTablesFirewallDriver (Part 1)
* Make create\_inventory() handle name change
* Add ResourceProvider.save()
* Remove the skip\_policy\_check flags
* api-ref: verify keypairs
* Make Xenplugin to work with glance v2 api
* Trival: version history 2.30 is not indented as others
* Do not register notification objects
* Move notification objects to a separate package
* Move notification related code to separate package
* Adjust field types and defaults on Inventory
* Add InventoryList.find() method
* Add a get\_by\_uuid for aggregates
* Imported Translations from Zanata
* get rid of the old \_vhd methods
* Make Hyper-V to work with glance v2 api
* Stop using mox stubs in stub\_out\_key\_pair\_funcs
* Remove v2 extension setting from functional tests
* Add name and generation to ResourceProvider object
* Remove duplicate test of DELETED instances
* Added support for new block device format in Hyper-V
* Enable mutable config in Nova
* Improve help text for availability zones options
* tests: make XMLMatches work with Python3
* Catch PciRequestAliasNotDefined exception
* api-ref: parameter verification for os-hypervisors
* xen: skip two more racey mox py34 test classes
* libvirt: handle reserved pages size
* Fix nova-compute start failed when reserved\_huge\_pages has value
* Make the base options definitions consistent
* virt: set address space & CPU time limits when running qemu-img
* Remove manual creation of console.log
* Fix imagecache.get\_cache\_fname() to work in python3
* Remove policy checkpoints for SecurityGroupAPI and NetworkAPI
* Remove policy checkpoints from ComputeAPI
* Stop using mox from objects/test\_instance.py (3)
* Stop using mox from objects/test\_instance.py (2)
* Stop using mox from objects/test\_instance.py (1)
* Fix wrong patch of unittest in unit/test\_metadata.py
* Remove code referencing inventory table in cell DB
* Handle SetAdminPasswdNotSupported raised by libvirt driver
* Prevent boot if ephemeral disk size > flavor value
* [libvirt] Incorrect parameters passed to migrateToURI3
* Revert inventory/allocation child DB linkage
* Only chown console log in rescue
* Don't chown a config disk which already exists
* Don't overwrite config disk when using Rbd
* Add 'update' method to GlanceImageServiceV2
* Add 'create' method to GlanceImageServiceV2
* Add 'detail' method to GlanceImageServiceV2
* Add 'delete' method to GlanceImageServiceV2
* Add 'download' method to GlanceImageServiceV2
* Add 'show' method to GlanceImageServiceV2
* Split the glance API path based on config
* Remove image\_meta
* add "needs:\*" tags to the config option modules
* api-ref method verification for os-cells
* API change for verifying the scheduler when live migrating
* Stop using mox stubs in volume/encryptors/test\_base.py
* Introduce a CONF flag to determine glance client version
* fix a typo in comment
* Fix white spaces in api-ref
* Updated from global requirements
* virt/hardware: Add diagnostic logs for scheduling
* Use assertNotIn instead of assertTrue(all(A != B))
* Use assert(Not)Equal instead of assertTrue(A == X)
* Use assertLess(Equal) instead of assertTrue(A > X)
* Use assertGreater(A, X) instead of assertTrue(A > X)
* Fall back to flat config drive if not found in rbd
* libvirt: Fix the content of "disk.config" lost after migrate/resize
* remove /v2.1/{tenant\_id} from all urls
* Remove "or 'reserved'" from \_create\_volume\_bdm
* pci: Move PCI devices and PCI requests into migration context
* Updated from global requirements
* Fixes invalid uuid usages in test\_neutronv2
* Clarify message for Invalid/Bad Request exception
* Cancelled live migration are not in progress
* set wrap\_width for config generator to 80
* API change for verifying the scheduler when evacuating
* Fix invalid uuid warnings in virt testcases

14.0.0.0b1
----------

* Remove mox from nova/tests/unit/virt/libvirt/test\_utils.py
* Fix multipath iSCSI encrypted volume attach failure
* libvirt: add "get\_job\_info" to Guest's object
* Modify 'an network' to 'a network'
* Remove legacy v2 API code completely
* Remove the usage of RateLimitingMiddleware
* Remove unused inner\_app\_v21 and ext\_mgr
* Remove legacy API code from sample tests
* Remove InstanceUsageAuditLogTest for legacy API
* Change instance\_claim parameter from instance\_ref to instance
* Make AggregateList.get\_ return API & cell db items
* Make Aggregate.get operation favor the API db
* Add aggregates tables to the API db
* Microversion 2.28 changes cpu\_info string to JSON object
* libvirt: Skip CPU compatibility check for emulated guests
* Specify the default cdrom type "scsi" for AARCH64
* Remove mox from nova/tests/unit/test\_iptables\_network.py
* Updated from global requirements
* pci: Make sure PF is 'available' when last VF is freed
* pci: related updates are done without DB lookups
* pci: make sure device relationships are kept in memory
* Remove mox from nova/tests/unit/virt/libvirt/test\_vif.py
* verify api-ref os-migrations.inc
* Nova UTs broken due to modifying loopingcall global var
* Remove mox from unit/api/openstack/compute/test\_consoles.py
* Stop using mox from virt/libvirt/storage/test\_lvm.py
* Update functional tests for fixtures 3
* Stop using mox in test\_firewall
* Add tests to attach/detach vols for shelved server
* Remove unused \_vlan\_is\_disabled test flag
* libvirt: New configuration classes to parse device address element
* Fixed clean up process in confirm\_resize() after resize/cold migration
* VMware: remove dead code in test\_get\_vm\_create\_spec()
* Remove mox from compute/test\_scheduler\_hints.py
* Updated from global requirements
* Remove normal API operation logs from API layer
* Remove unused LOG from v2.1 API code
* Adds RemoteFX support to the Hyper-V driver
* libvirt: fix serial ports lost after hard-reboot
* Stop using mox stubs in test\_server\_usage.py
* Remove mox from compute/test\_instance\_usage\_audit\_log.py
* api-ref: os-consoles.inc
* Add proxy middleware to application pipeline
* api-ref: Example verification for os-interface.inc
* Remove redundant orphan instances unit test
* Remove duplicate migration RT unit tests
* Redundant test of CPU resources in test\_tracker
* Remove duplicate test of RT.stats.current\_workload
* Remove duplicate test of claim context manager
* Remove pointless "additive claims" unit test
* Remove oversubscribe test in test\_resource\_tracker
* api: Improve the \_check\_multiple\* function names readability
* api-ref verify servers-action-deferred-delete.inc
* Fix the order of expected error codes
* Remove DictCompat from NetworkRequest
* api-ref: Add a sample test for os-interface
* Use oslo\_log instead of logging
* Verify requested\_destination in the scheduler
* Add requested\_destination field to RequestSpec
* Remove mox from compute/test\_extended\_ips\_mac.py
* Ironic nodes with instance\_uuid are not available
* Updated from global requirements
* Fixes python 3 urllib quote / unquote usage
* Make compute nodes update their own inventory records
* Remove unused WsgiLimiter
* Remove unused args from RateLimitingMiddleware
* Remove unused use\_no\_auth from wsgi\_app\_v21()
* Fix incorrectly named vmwareapi test
* Make Inventory and ResourceProvider objects use the API DB instead
* Rename ImageCacheManager.\_list\_base\_images to \_scan\_base\_images
* Remove all references to image\_popularity from image cache
* Remove image cache image verification
* Fix test\_age\_and\_verify\_swap\_images
* api and availablity\_zone opt definition consistent
* Rename Image.check\_image\_exists to Image.exists()
* Remomve mox from api/openstack/compute/test\_console\_output.py
* Remove mox from api/openstack/compute/test\_config\_drive.py
* VMware: set service status based on vc connection
* Return 400 HTTP error for invalid flavor attributes
* Get transport\_url from config in Cells v2 cell map utility
* Support for both microversion headers
* Fix unit test after the replace of key manager
* Fix "KeyError: u'instance\_id'" in string format operation
* Save all instance extras in a single db call
* Remove APIRouter of legacy v2 API code
* Remove legacy v2 API tests which use wsgi\_app()
* limits.inc example verification
* Remove duplicate unit test in test\_tracker
* Remove delete stubs in test\_resource\_tracker
* Remove service crud from test\_resource\_tracker
* Remove conductor from test\_resource\_tracker
* Remove StatsDicTestCase from test\_resource\_tracker
* rt-unit: Replace hard-coded strings with constants
* Remove useless test of incorrect stats value
* Remove RT duplicate unit test for PCI stats
* Remove more duplicate RT unit tests
* Removes test\_claim\_saves\_numa\_topology()
* objects: added 'os\_secure\_boot' property to ImageMetaProps object
* Trivial: Fixes serial console minor nits
* Revert "glance:add helper method to get client version"
* Add length check in comparing object lists
* Update Support Matrix
* Improve the help text for the rdp options
* No disable reason defined for new services
* api-ref: limits.inc validate parameters
* Make available to build docs with python3
* Updated from global requirements
* remove db2 support from tree
* Adds Hyper-V imagecache cleanup
* raise exception ComputeHostNotFound if host is not found
* Skip instance name templating in API cell
* Add http\_proxy\_to\_wsgi to api-paste
* Stop using mox stubs in test\_pipelib.py
* api-ref: Parameter verification for os-interface.inc
* devspec: remove unused VIRTFN\_RE and re
* Remove duplicate test of set inst host/node
* Remove SchedulerClientTrackerTestCase
* Move unit tests of set\_instance\_host\_and\_name()
* Remove MissingComputeNodeTestCase for res tracker
* Remove tests for missing get\_available\_resource()
* api-ref, os-fping.inc
* Pass OS\_DEBUG to the tox test environment
* Hyper-V: Implement nova rescue
* Add resource provider tables to the api database
* HyperV: Nova serial console access support
* Let setup.py compile\_catalog process all language files
* use\_neutron\_default\_nets: StrOpt ->BoolOpt
* api-ref: Add fault parameter details
* be more explicit that rate limits are gone in v2.1
* Warn when using null cache backend
* Enable 'null' value for user\_data in V2.1 API
* Updated from global requirements
* fix Quota related error return incorrect problem
* Add online migration to move keypairs from main to API database
* Completed migrations are not "in progress"
* Make flavor-manage api call destroy with Flavor object
* Move is\_volume\_backed\_instance to compute.utils
* Updated from global requirements
* api-ref: verify flavors.inc
* Fix use of invalid assert calls
* Config options: remove import\_opts from cloudpipe section
* Enables Py34 tests for unit.api.openstack.compute.test\_server\_tags
* Fix the versions API for api-ref
* Update link for hypervisor support matrix message
* api-ref: complete verification of baremetal api
* Keep BuildRequest db entry around longer
* Drop fields from BuildRequest object and model
* Resize API operation passing down original RequestSpec
* Augment release note for import\_object\_ns removal
* pci: add safe-guard to \_\_eq\_\_ of PciDevice
* deprecate config option "fatal\_exception\_format\_errors"
* config options: centralize exception options
* libvirt: Add serial ports to the migration data object
* Hyper-V: Fixes disk overhead claim issue
* Config options: move set default opt of db section to centralized place
* [Trivial] Fix a grammar error in comments
* api-ref: Example verification for servers-action-shelve.inc
* [Ironic] Correct check for ready to deploy
* api-ref: Fix parameters in servers-action-shelve.inc
* api-ref: parameter  verification for os-server-groups
* api-ref: servers-action-evacuate.inc
* remove FlavorCreateFailed exception
* Add tests for floating\_ip private functions
* Trivial: remove os-security-groups needs:method\_verification line
* Add RC file for excluding tempest tests for LVM job
* Move config options from nova/api directory (5)
* libvirt: add method to configure max downtime when migrating
* libvirt: add "abort\_job" to Guest's object
* libvirt: add method "migrate" to Guest's object
* Only attempt to inject files if the injection disk exists
* Remove deprecated option libvirt.remove\_unused\_kernels
* Rename Raw backend to Flat
* deprecate s3 image service config options
* Cold migrate using the RequestSpec object
* Add a RequestSpec generation migration script
* Enables Py34 tests for unit.compute.test\_compute
* Fixes invalid uuid usages in functional tests
* Make neutronapi get\_floating\*() methods return objects
* Switch api unit tests to use v2.1 API
* Remove mox used in tests/unit/api/openstack/compute/test\_server\_start\_stop
* Remove marker from nova-manage cells\_v2 map\_instances UI
* api-ref: complete verification for os-flavor-access
* Make some build\_requests columns nullable
* Add message queue switching through RequestContext
* trivial: remove unused argument from a method
* baseproxy: stop requiring CONF.verbose
* Cleanup validation logic in \_get\_requested\_networks
* api-ref: complete verification of servers-action-crash-dump.inc
* migrate to os-api-ref
* api-ref: image.inc - Update method validation
* config options: centralize section "database" + "api\_database"
* api-ref: parameter  verification for os-quota-sets
* Fix network mtu in network\_metadata
* Add a note about egress rules to os-security-group-rules api-ref
* ironic: fix call to \_cleanup\_deploy on config drive failure
* Follow-up for the API config option patch
* api-ref: reorder parameters.yaml
* Network: fix typo
* Add online migration to store keypairs with instances
* Make Keypair object favor the API database
* api-ref: ips.inc example verification
* Fix spelling mistake in libvirt
* Body Verification of os-aggregates.inc
* Move placement api request logging to middleware
* conf: Move cloudpipe options to a group
* conf: Address nits in I92a03cb
* Fix corrupt "host\_aggregates\_map" in host\_manager
* Fix spelling mistake
* api-ref: Example verification for os-volume\_attachments.inc
* api-ref: Parameter verification for os-volume\_attachments.inc
* Remove fake\_imagebackend.Raw and cleanup dependent tests
* Remove unused arguments to images.fetch and images.fetch\_to\_raw
* api-ref: finish validation for os-server-external-events.inc
* report info if parameters are out of order
* Method verification of os-floating-ips-bulk.inc
* api-ref: os-volumes.inc method verification
* config options: move s3 related options
* deprecate "default\_flavor" config option
* config options: centralize default flavor option
* Return HTTP 400 on boot for invalid availability zone
* Config options: remove import\_opts from completed section
* Fix migration query with unicode status
* Config options: centralize cache options
* Change 5 space indent to 4 spaces
* Remove deprecated "memcached\_server" in Default section
* Updated from global requirements
* Add a functional test for instance fault message with retry
* api-ref: complete verification for extensions resource
* live-migration ceph: fix typo in ruleset parsing
* api-ref: os-floating-ip-dns.inc method verification
* api-ref: Method verification for servers-actions
* Eager load keypairs in instance metadata
* Complete method verification of os-networks
* Method verification of os-security-group-default-rules
* virt: reserved number of mempages on compute host
* deprecate "file transfer" feature for Glance images
* centralized conf: nova/network/rpcapi.py
* Config options: centralize remotefs libvirt options (end)
* Config options: centralize smbfs libvirt options (16)
* imagebackend: Check that the RBD image exists before trying to cleanup
* Rewrite \_cleanup\_resize and finish\_migration unit tests to use mock instead of mox
* Remove mox in test\_volume\_snapshot\_create\_outer\_success
* api-ref: Method verification for os-volume\_attachments.inc
* Improve the help text for the API options (4)
* Improve the help text for the API options (3)
* api-ref: ips.inc parameter verification
* Add Keypairs to the API database
* Create Instances with keypairs
* Method verification for server-action-deferred-delete
* method verification for server-action-remote-consoles
* method verification of os-server-external-events
* method verification of os-instance-usage-audit-log
* Add keypairs to Instance object
* Complete method verification of os-baremetal-nodes.inc
* api-ref: parameter validation for os-security-group-rules
* Fixed missing variable
* api-ref: Method verification for os-floating-ips
* force\_live\_migration remove redundant check
* pci: create PCI tracker in RT.\_init\_compute\_node
* Fix race condition for live-migration-force-complete
* api-ref: servers-action-shelve.inc
* Added fault response parameter to Show Server Details API
* pci: Remove unused 'all\_devs' method
* Corrected the typo
* Denormalize personality extension
* method verification of os-assisted-volume-snapshots
* api-ref: os-certificates.inc method verification
* Complete method verification of os-cloudpipe.inc
* Fix service version to update the DB
* method verification for servers-action-fixed-ip
* Added new exception to handle CinderClientException
* Drop paramiko < 2 compat code
* Config options: centralize scality libvirt options (15)
* Compute: Adds driver disk\_gb instance overhead estimation
* config options: move image\_file\_url download options
* crypto: Add support for Paramiko 2.x
* Denormalize extensions for clarity
* Complete method verification of os-fping
* Complete method verification of os-security-group-rules
* Fix invalid uuid warnings
* Correct some misspell words in nova
* Remove 404 for list and details actions of servers
* Improve the help text for the API options (2)
* Improve the help text for the API options (1)
* Complete method verification of os-migrations
* Move config options from nova/api directory (4)
* api-ref: perform all 4 phases of verification for action console output
* api-ref: add url parameter to expand all sections
* api-ref: complete verification for diagnostics.inc
* api-ref: update parameter validation on servers
* Complete method verification of os-tenant-networks
* trivial: removed unused networks var from os-tenant-networks:create
* Complete method verification of os-security-groups
* Move config options from nova/api directory (3)
* Move config options from nova/api directory (2)
* Move config options from nova/api directory (1)
* api-ref: method verification and fixes for servers.inc
* Instance mapping save, properly load cell mapping
* Fix exception when vcpu\_pin\_set is set to ""
* config: remove deprecated ironic.client\_log\_level
* Complete method verification of os-quotas
* Compelete method verification of os-servers-admin
* Complete method verification of os-shevle
* Add api-sample test for showing quota detail
* Remove legacy v2 tests which use APIRouter
* pci: eliminate DB lookup PCI requests during claim
* pci: pass in instance PCI requests to claim
* Remove rate\_limit param in builder
* Remove comment on v3 API
* Not talking about V2 API code in review doc guide
* Add keypairs to instance\_extra
* Trivial: No need to exclude TestMoveClaim from py34 tests
* Remove 400 as expected error
* Cleaned up request and response formats page
* Complete method verification of os-agents
* update servers policy in code to use formats
* Complete method verification of os-fixed-ips
* Consolidate image\_href to image uuid validation code
* Fix TestNeutronv2.test\_deallocate\_for\_instance\_2\* race failures
* Centralize config option for nova/network/driver.py
* Don't raise error when filtering on custom metadata
* Config options: centralize quobyte libvirt options (14)
* Config options: centralize volume nfs libvirt options (13)
* Config options: centralize volume net libvirt options (12)
* Config options: centralize iser libvirt options (11)
* Config options: centralize iscsi libvirt options (10)
* Config options: centralize glusterfs libvirt options (9)
* Config options: centralize aoe vol libvirt options (8)
* Config options: centralize volume libvirt options (7)
* Config options: centralize vif libvirt options (6)
* Config options: centralize utils libvirt options (5)
* Config options: centralize lvm libvirt options (4)
* Remove legacy v2 unit tests[q-v]
* Remove legacy v2 unit tests[f-n]
* Remove Limits dependency of legacy v2 API code
* Remove mox in unit/virt/xenapi/test\_agent.py
* Set migration status to 'error' on live-migration failure
* Add pycrypto explicitly
* Centralize vif,xenpool & vol\_utils config options
* Config options: centralize imagecache libvirt options (3)
* Config options: centralize imagebackend libvirt options (2)
* Remove the legacy v2 API entry from api-paste.ini
* Update stable API doc to indicate code removal
* Config options: centralize driver libvirt options (1)
* UEFI - instance terminates after boot
* Fix unit tests for v2.1 API
* Remove legacy v2 unit tests[a-e]
* Config options: Centralize servicegroup options
* libvirt: release serial console ports when destroying guests
* Remove mox from tests/unit/network/test\_api.py
* Remove legacy v2 API functional tests
* fix wrong key name in test code
* Remove the legacy v2 API test scenarios from API sample tests
* Remove 413 expect in servers.py
* Remove core extension list
* rt: remove unused image\_meta parameter
* Fail to start nova-api if no APIs were able to be started
* Test that nova-api ignores paste failures, but continues on
* libvirt: introduces module to handle domain xml migration
* Trivial: dead code
* Fix database poison warnings, part 8
* docs: link to Laski's cells talk from the Austin summit
* compute: Retain instance metadata for 'evacuate' on shared storage
* Archive instance\_actions and instance\_actions\_event
* Add os-interface functional negative tests
* api-ref: verify os-server-groups.inc
* Avoid unnessary \_get\_power\_state call
* Remove mox in test\_certificates.py
* api-ref: verfiy limits body
* api-ref: body verification of ips.inc
* Change message format of Forbidden
* Updated from global requirements
* api-ref verify of servers-admin-action.inc
* pci: Allow to assign pci devices in pci device list
* Fix typo in support-matrix.ini: re(set)=>(re)set
* Add ability to filter migrations by instance uuid
* Wrong mocks, wrong mock order
* verify api-ref metadata.inc
* verify api-ref os-server-password.inc
* Updated from global requirements
* Fix database poison warnings, part 7
* Declare nova.virt namespace
* [doc] fix 5 typos
* Make compute rpcapi 'live\_migration' backward compatible
* Replace key manager with Castellan
* Deprecate Nova Network
* verify api-ref os-instance-usage-audit-log.inc
* Only reset dns\_name when unbinding port if DNS is integrated
* Changed the storage size from GB to GiB
* Remove unused FAKE\_UUID variables
* Deprecated the concept of extensions in v2.1
* Fix database poison warnings, part 6
* Fix database poison warnings, part 5
* Avoid unconditional warnings in nova-consoleauth
* libvirt: remove version checks for hyperv PV features
* libvirt: remove version checks for libvirt disk discard feature
* libvirt: remove version checks for block job handling
* libvirt: remove version checks for PCI device detach
* libvirt: remove version checks for live snapshot feature
* libvirt: add explicit check for min required QEMU version
* libvirt: increase min required libvirt to 1.2.1
* network: Fix nova boot with multiple security-groups
* Updated config description on live snapshot
* Fix NoSuchOptError when referring to conf.neutron.auth\_plugin
* api-ref host verification (os-hosts.inc)
* api-ref verify os-floating-ip-pools.inc
* Complete Verification of server-metadata
* Complete method Verification of os-hypervisors
* Fix invalid uuid warnings in compute api testcases
* Fix invalid uuid warnings
* complete Method Verification of aggregates
* Complete Method Verification of ips
* Fix resize to same host failed using anti-affinity group
* Complete method Verification of consoles
* Config options: Centralize netconf options
* Remove 413 as expected error code
* Complete Verification of os-server-password
* Complete Verification of os-hosts
* Add links to API guide to describe links
* Complete Method Verification of os-interface
* Complet Method Verification of flavor-access
* Complete Verification of os-virtual-interfaces
* Complet Method Verification of os-instance-actions
* Complete Verification of os-flavor-extra-specs
* Fix database poison warnings, part 4
* Complet Method Verification of flavor
* Complet Method Verification of server group
* Trivial: fix mock decorator order
* Add test for nova-compute and nova-network main database blocks
* Prevent nova-api from dying if enabled\_apis is wrong
* Complet Method Verification of keypair
* Complet Method Verification of availability-zone
* Complet Method Verification of simple tenant usage
* remove the use of import\_object\_ns
* Fixed typo in word "were"
* Complet Method Verification of os-services
* Complet Method Verification of server diag
* Remove mox in tests/unit/compute/test\_host\_api.py
* Config options: completing centralize neutron options
* Add instances into dict when handle exception
* Complet Method Verification of limits
* Improve the help text for the compute rpcapi option
* Move config options from nova/compute/rpcapi.py file
* Updated from global requirements
* deprecate nova-all
* Remove unused base\_options param from \_get\_image\_defined\_bdms
* Change BuildRequest to contain a serialized instance
* Split out part of map\_cell\_and\_hosts to return a uuid
* Add manage command for cell0
* Config options: centralize section "ssl"
* config options: centralize security\_group\_api opt
* Imported Translations from Zanata
* Stop using mox stubs in test\_multinic.py
* libvirt: deprecate use\_usb\_tablet in favor of pointer\_model
* Config options: Centralize neutron metadata options
* add tags to files for the content verification phase
* Config options: Centralize compute options
* Add 415 to list of exceptions for microversions devref
* Added validation for rescue image ref
* Final warnings removals for api-ref
* Clean port dns\_name in case of port detach
* Fix remaining json reference warnings
* Add validations for volume\_size and destination\_type
* Remove duplicate api ref for os-networks/actions
* Fix all remaining sample file path
* Stop using mox stubs in test\_access\_ips.py
* Stop using mox stubs in test\_admin\_password.py
* libvirt - Add log if libguestfs can't read host kernel
* Fix sample file path for 4 files
* Fix invalid uuid warnings in objects testcases
* Fix invalid uuid warnings in server-group unit tests
* Create image for suspended instance booted from volume
* Fix content and sample file for keypair, migration, networks
* Fix sample file path for os-i\* API
* Fix the parameters for os-agents API
* Fix sample file path for fixed, floating ips API
* Fix sample path for aggregate, certificate, console
* Add remaining image API ref
* Fix the schema of assisted\_volume\_snapshots
* config options: conductor live migrate options
* xenapi: Fix xmlrpclib marshalling error
* fix samples references in security group files
* fix samples references in os-services
* Fix api samples references in 3 more files
* Fix reverse\_upsize\_quota\_delta attempt to look up deleted flavors
* Fix api ref for os-hosts, os-quota-sets and os-fping
* Fix api ref for os-cells, os-cloudpipe and server-action-shelve
* Fix api sample references in 2 more files
* Updated from global requirements
* hardware: thread policy default value applied even if specified
* Fix api ref for ips, limits, metdata and agent
* virt: use more realistic fake network / VIF data
* Fix json response example heading in api ref
* Fix database poison warnings, part 3
* Remove 40X and 50X from Normal response codes
* Specify normal status code on os-baremetal-nodes
* Remove unused rotation param from \_do\_snapshot\_instance
* Remove unused filter\_class\_names kwarg from get\_filtered\_hosts
* Remove deprecated ability to load scheduler\_host\_manager from path
* Fix "Creates an aggregate" parameters
* Unavailable hosts have no resources for use
* HyperV: Add SerialConsoleOps class
* HyperV: Add serial console handler class
* HyperV: Add serial console proxy
* fix samples references for 2 files
* Update servers.inc to be as accurate as api-site
* Fix database poison warnings, part 2
* Fix "Creates an agent build" parameters
* Update get\_by\_project\_id on InstanceMappingList
* Clean up cell handling in nova-manage cell\_v2 map\_instances
* Properly clean up BDMs when \_provision\_instances fails
* clean up versions.inc reference document
* Collection of CSS fixes
* Fixes unexpectedly passing functional test
* move sphinx h3 to '-' instead of '^'
* fix blockquote font size
* Add 'Show All' / 'Hide All' toggle
* use 'required' instead of 'optional' for parameters
* Fix css references to the glyphicons font
* Initial use of microversion\_parse
* Changed an HTTP exception to return proper code
* Compute API: omit disk/container formats when creating images of snapshots
* Fix formatting of rst in parameters.yaml
* Add instance/instance\_uuid to build\_requests table
* network: make nova to handle port\_security\_enabled=False
* BaseCoreFilter docstring and formating improved
* Fix NoMoreNetworks functional test traces
* Fix typo in nova release notes
* Updated from global requirements
* Fix generation of Guru Meditation Report
* Fix invalid uuid warnings in cell api testcases
* cleanup some issues in parameters.yaml
* Import RST files for documentation
* add combined parameters.yaml file
* claims: Do not assume image-meta is a dict
* Fix nova opts help info
* Fix doc build if git is absent
* Add checks for driver attach\_interfaces capability
* Updated from global requirements
* Add AllServicesCurrent fixture
* Improve the help text for the linuxnet options (3)
* Improve the help text for the linuxnet options (2)
* Fix signature of copy\_image
* libvirt: remove live migrate workaround for an unsupported ver
* libvirt: move graphic/serial consoles check to pre\_live\_migration
* Fix invalid uuid warnings in api testcases
* Minor updates to the how\_to\_get\_involved docs
* Put more into compute.api.\_populate\_instance\_for\_create
* Remove unused parameter from \_get\_requested\_instance\_group
* Improved test coverage
* Check API versions intersects
* virt/hardware: Fix 'isolate' case on non-SMT hosts
* Migrate compute node resource information to Inventory objects
* Drop compute node uuid online migration code
* increase error handling for dirty files
* config options: centralize 'spice' options
* Fix max concurrent builds's unlimited semaphore
* VMware: add in context for log messages
* XenAPI: specify block size for writing config drive
* Fix database poison warnings
* Make swap-volume an admin-only API by default
* Updated from global requirements
* Improve the help text for the linuxnet options (1)
* Config options: Centralize network options
* Config options: centralize base path configuration
* Add new NeutronFloatingIP object
* Add "\_\_repr\_\_" method to class "Service"
* remove alembic from requirements.txt
* Config options: centralize section "xvp"
* Imported Translations from Zanata
* Updated from global requirements
* allow samples testing for PUT to not have a body
* libvirt: delete the last file link in \_supports\_direct\_io()
* db: retry instance\_info\_cache\_update() on deadlock
* Moved tags filtering tests to TestInstanceTagsFiltering test case
* Move config options from nova/network/linux\_net.py
* Remove nova-manage service subcommand
* config options: centralize quota options
* DB API changes for the nova-manage quota\_usage\_refresh command
* Improve the help text for the network options (1)
* Fix typo in compute node mega join comments
* Add api-ref/build/\* to .gitignore
* Improve help text for the network object options
* Config options: Centralize console options
* Config options: Centralize notification options
* Remove mox from tests/unit/network/security\_group/test\_neutron\_driver.py
* Added server tags support in nova-api
* Added server tags controller
* Added db API layer to add instance tag-list filtering support
* Improve 'workarounds' conf options documentation
* Config options: centralize "configdrive" options
* config options: centralize baseproxy cli options
* Check if a exception has a code on it before read the code
* Fix import statement order in nova/rpc.py
* Document our policy on fixing v2.0 API bugs
* Config options: Centralize neutron options
* Remove mox from tests/unit/compute/test\_compute\_xen.py
* Fix typo in comments of affinity and anti-affinity
* Fix up online\_data\_migrations manage command to be consistent
* Adds missing discoverable rules in policy.json
* Config options: Centralize ipv6 options
* config options: centralize xenserver vmops opts
* Config options: Centralize xenapi driver options
* config options: centralize xenserver vm\_utils opts
* Remove flavor seeding from the base migration
* Rely on devstack to skip rescue tests for cells v1
* Replace topic with topics for messaging.Notifier
* Updated from global requirements
* Fix test for empty policy rules
* Improve 'monkey\_patch' conf options documentation
* conf: Remove 'destroy\_after\_evacuate'
* config options: Move crypto options into a group
* config options: centralize section: "crypto"
* config options: Centralise 'monkeypatch' options
* config options: Centralise 'utils' options
* doc: clean up oslo-incubator related stuff
* config option generation doesn't work with a generator
* Add link to the latest nova.conf example
* Change the nova tempest blacklist to use to idempotent ids
* HyperV: Refactor livemigr, avoiding getting disk paths remotely
* Remove DictCompat from mapping objects
* Enhance value check for option notify\_on\_state\_change
* Fix flavor migration tests and edge case found
* config options: Centralize upgrade\_levels section
* config options: Centralize mks options
* Remove DictCompat from S3 object
* config options: Centralize vmware section
* config options: centralize section "service"
* Define context.roles using base class
* TrivialFix: removed unnecessary cycle in servicegroup/test\_api.py
* Handle pre-migration flavor creation failures in the crusty old API
* config options: centralize section "guestfs"
* config options: centralize section "workarounds"
* config options: Centralize 'nova.rpc' options
* Cleanup NovaObjectDictCompat from BandwidthUsage
* config options: fix the missed cli options of novncproxy
* Add metadata objects for device tagging
* Nuke cliutils from oslo-incubator
* libvirt: pci detach devices should use dev.address
* Fix stale file handle error in resource tracker
* Updated from global requirements
* config options: Centralize xenapi torrent options
* Fix: unable to delete instance when cinder is down
* Block flavor creation until main database is empty
* Further hack up the n.t.unit.db.fakes module of horribleness
* Add flavor migration routine
* Make Flavor create() and destroy() work against API DB
* Move config options from nova/objects/network.py
* Add tag column to vifs and bdm
* Remove extensible resource tracking
* Fix error message of nova baremetal-node-delete
* Enhanced error handling for rest\_parameters parser
* Fix not supported error message
* config options: Centralise 'image\_file\_url' options
* neutron: Update the port with a MAC address for PFs
* Remove mox from tests/unit/network/test\_rpcapi.py
* Remove mox from tests/unit/objects/test\_migration.py
* The 'record' option of the WebSocketProxy should be string
* config options: centralize section: "glance"
* Move resource provider staticmethods to proxies
* Add Service.get\_minimum\_version\_multi() for multiple binaries
* remove the ability to disable v2.1
* Make git clean actually remove covhtml
* Set 'libvirt.sysinfo\_serial' to 'none' in RealTimeServersTest
* Make compute\_node\_statistics() use new schema
* remove glance deprecated config
* Config options: Centralize consoleauth options
* config options: centralize section "cloudpipe"
* After migrate in-use volume the BDM information lost
* Allow to update resource per single node
* pci: Add utility method for getting the MAC addr

13.0.0
------

* Imported Translations from Zanata
* VMware: Use Port Group and Key in binding details
* Config options: Centralize resource tracker options
* Fixed incorrect behavior of xenapi driver
* Remove DictCompat from ComputeNode
* config options: Centralise 'virt.imagecache' options
* neutron: pci\_request logic considers 'direct-physical' vnic type
* config options: remove the scheduler import\_opt()s
* Improve the help text for hyperv options (3)
* Improve the help text for hyperv options (2)
* Improve the help text for hyperv options (1)
* Imported Translations from Zanata
* Remove a redundant 'that'
* Cleanup NovaObjectDictCompat from NumaTopology
* Fix detach SR-IOV when using LibvirtConfigGuestHostdevPCI
* Stop using mox in test\_security\_groups
* Cleanup the exception LiveMigrationWithOldNovaNotSafe
* Add sample API content
* Create api-ref docs site
* Config options: Centralize debugger options
* config options: centralize section: "keymgr"
* libvirt: fix ivs test to use the ivs vif object
* libvirt: pass a real instance object into vif plug/unplug methods
* Add a vnic type for PF passthrough and a new libvirt vif driver
* libvirt: live\_migration\_flags/block\_migration\_flags default to 0
* Imported Translations from Zanata
* config options: Centralize xenapi options
* Populate instance\_mappings during boot
* libvirt: exercise vif driver 'plug' method in tests
* config options: centralize xenserver options
* Fix detach SR-IOV when using LibvirtConfigGuestHostdevPCI
* Reduce number of db calls during image cache manager periodic task
* Imported Translations from Zanata
* Update cells blacklist regex for test\_server\_basic\_ops
* Update cells blacklist regex for test\_server\_basic\_ops
* Remove mox from tests/functional/api\_sample\_tests/test\_cells.py
* Remove mox from tests/unit/api/openstack/compute/test\_baremetal\_nodes.py
* Config options: Centralize ldapdns options
* Add NetworkRequestList.from\_tuples helper
* Stop providing force\_hosts to the scheduler for move ops
* Enforce migration tests for api database
* Objectify test\_flavors and test\_flavors\_extra\_specs
* Allow ironic driver to specify cafile
* trivial: Fix alignment of wsgi options
* config options: Remove 'wsgi\_' prefix from opts
* VMware: Always update image size for sparse image
* VMware: create temp parent directory when booting sparse image
* VMware: Use datastore copy when the image is already in vSphere
* Imported Translations from Zanata
* Fix typos in document
* Removes some redundant words
* Stop providing force\_hosts to the scheduler for move ops
* Include CellMapping in InstanceMapping object
* Make flavor extra\_specs operations work against the API DB
* Make Flavor access routines work against API database
* Clarify the \`\`use\_neutron\`\` option upgrade notes

13.0.0.0rc2
-----------

* Imported Translations from Zanata
* Try to repopulate instance\_group if it is None
* Try to repopulate instance\_group if it is None
* modify duplicate // to / in doc
* change host to host\_migration
* Fixup test\_connection\_switch functional test
* Fix SAWarning in \_flavor\_get\_by\_flavor\_id\_from\_db
* Update 'os-hypervisors.inc' in api-ref
* Fix os-server-groups.inc
* cinder: accommodate v1 cinder client in detach call
* Move config options from nova/network/manager.py
* Change adminPass for several server actions
* Fix os-virtual-interfaces and flavors api-ref
* Make FlavorList.get\_all() return results from the API and main DBs
* Objectify some tests in test\_compute and test\_flavors
* Objectify test\_instance\_type\_extra\_specs
* Add a DatabasePoisonFixture
* config options: Use OptGroup for listing options
* Live migration failure in API leaves VM in MIGRATING state
* Fix flavor-access and flavor-extras api-ref
* Fix diagnostics, extensions api ref
* Fix typo 'mappgins' to 'mappings'
* Imported Translations from Zanata
* Fix hosts and az api samples
* Change "libvirt.xml" back to the original after doing unrescue
* Fix os-service related reference missing
* Add 'binary' and 'disable-reason' into os-service
* Remove unused argument v3mode
* Clean up the TestGlanceClientWrapper retry tests
* stop setting mtu when plugging vhost-user ports
* config options: Move wsgi options into a group
* Rewrite 'test\_filter\_schedule\_skipping' method using Mock
* Remove stub\_compute config options
* Added missing "=" in debug message
* libvirt: serial console ports count upper limit needs to be checked
* Imported Translations from Zanata
* Return 400 on boot for invalid image metadata
* Fix JSON format of server\_concepts
* Remove /v1.1 endpoint from api-guide
* config options: centralize section: "rdp"
* Fixes hex decoding related unit tests
* Fix conversion of config disks to qcow2 during resize/migration
* xenapi: Fix when auto block\_migration in the API
* xenapi: Fix up passing of sr\_uuid\_map
* xenapi: Fix the live-migrate aggregate check
* Add rebuild action descriptions in support-matrix
* Config options: centralize section "hyperv"
* Removal of unnecessary \`import\_opt\`s for centralized config options
* Imported Translations from Zanata
* Fixes bug with notify\_decorator bad getattr default value
* config options: centralize section "monitors"
* config options: Centralise floating ip options
* Fix API Error on hypervisor-uptime API
* VMware: make the opaque network attachment more robust
* Add functional test for v2.7
* avoid microversion header in functional test
* Add backrefs to api db models
* Update reno for stable/mitaka
* stop setting mtu when plugging vhost-user ports
* Removes redundant object fields
* Blacklist TestOSAPIFixture.test\_responds\_to\_version in python3
* Fix conversion of config disks to qcow2 during resize/migration
* Remove auto generated module api documentation
* Imported Translations from Zanata
* Mark 2.25 as Mitaka maxmium API version
* Add a hacking check for test method closures
* Make Flavor.get operations prefer the API database
* xenapi: Fix when auto block\_migration in the API
* xenapi: Fix up passing of sr\_uuid\_map
* Update to openSUSE versions
* xenapi: Fix the live-migrate aggregate check
* Error on API Guide warnings
* Add Newton sanity check migration
* Add placeholder migrations for Mitaka backports
* Update .gitreview for stable/mitaka
* Set RPC version aliases for Mitaka

13.0.0.0rc1
-----------

* Fix reno reverts that are still shown
* Wait for device to be mapped
* Add a prelude section for Mitaka relnotes
* Fix reno for RC1
* libvirt: Fix ssh driver to to prevent prompting
* Support-matrix of vmware for chap is wrong
* Imported Translations from Zanata
* <VMWare> Allocate free bus for new SCSI controller
* config options: centralize cinder options
* Add os-brick rootwrap filter for privsep
* Fix retry mechanism for generator results
* Add a cell and host mapping utility to nova-manage
* Add release note for policy sample file update
* Fix vmware quota extra specs reno formatting
* Avoid lazy-loads of ec2\_ids on Instance
* Replace deprecated LOG.warn with LOG.warning
* libvirt: Allow use of live snapshots with RBD snapshot/clone
* Typo fix in documentation
* Redundant parentheses removed
* Trivial: Use exact docstring for quota module
* Replace deprecated LOG.warn with LOG.warning
* Revert "virt: reserved hugepages on compute host"
* Make tuple actually a tuple
* xenapi: Image cache cannot be disabled
* VMware: enable a resize of instance with no root disk
* fixed typo in word "OpenStack"
* hyper-v: Copies back files on failed migration
* Add functional test for OverQuota
* Translate OverLimit exceptions in Cinder calls
* Add regression test for Cinder 403 forwarding
* register the config generator default hook with the right name
* pci - Claim devices outside of Claim constructor
* Get instance security\_groups from already fetched instance
* Use migrate\_data.block\_migration instead of block\_migration
* Fix pre\_live\_migration result processing from legacy computes
* Add reno for disco driver
* linux\_net: use new exception for ovs-vsctl failures
* Insure resource tracker updated for deleted instances
* VMware: use datacenter path to fetch image
* libvirt: check for optional LibvirtLiveMigrateData attrs before loading
* Change SpawnIsSynchronous fixture return
* Report instance-actions for live migration force complete API
* Add release notes for security fixes in 13.0.0 mitaka GA
* API: Raise up HTTPNotFound when no availabe while get\_console\_output
* libvirt: Comment non-obvious security implications of migrate code
* Update the doc of notification
* fixed log warning in sqlalchemy/api.py
* Add include\_disabled parameter to service\_get\_all\_by\_binary
* Imported Translations from Zanata
* Set personality/injected\_files to empty list if not specified
* Fix processing of libvirt disk.info in non-disk-image cases
* pci: avoid parsing whitelist repeatedly
* Add Forbidden to caught cinder exceptions
* Missing info\_cache.save() in db sqlalchemy api
* tests: Add some basic compute\_api tests for attaching volumes
* Clean up networks with SR-IOV binding on reschedule
* virt: refactor method compute\_driver\_matches
* Make force\_ and ignore\_hosts comparisons case insensitive
* xenapi: fix when tar exits early during download
* Address nits in I83a5f06ad
* Fix config generation for Neutron auth options
* Remove an unused method in FakeResourceTracker
* Rework 'limited' and 'get\_limit\_and\_marker'
* plugins/xenserver: Resolve PEP8 issues
* Remove unused variable and redundant code path
* Soft delete instance group member when delete instance
* VMware: Refactor the formatting instance metadata
* Remove sizelimit.py in favor of oslo\_middleware.sizelimit
* libvirt: make snapshots call suspend() instead of reimplementing it
* Use generic wrapper for cinder exceptions
* Add ppc64le architecture to some libvirt unit tests
* Add Database fixture to sync to a specific version
* Drop the use of magic openstack project\_id
* Aggregate object fixups
* Address nits in Ia2296302
* Remove duplicated oslo.log configuration setup
* libvirt: Always copy or recreate disk.info during a migration
* nova-manage: Print, not raise, exceptions
* virt: reserved hugepages on compute host
* XenAPI:Resolve Nova/Neutron race condition
* Don't use locals() and globals(), use a dict instead
* update the deprecated \`\`security\_group\_api\`\` and \`\`network\_api\_class\`\`
* [Ironic]Match vif-pif mac address before setting 'vif\_port\_id'
* Correct the wrong usage of 'format' jsonschema keyword in servers API
* Add ComputeNode and Aggregate UUID operations to nova-manage online migrations
* Extend FakeCryptoCertificate.cert\_not\_valid\_after to 2 hours
* Revert "functional: Grab the service version from the module"
* libvirt: Fix resize of instance with deleted glance image
* Reno for libvirt libosinfo with OS
* Fix hyperv use of deprecated network\_api\_class
* Fix v2.12 microversion REST API history doc
* Add docstrings for nova.network.base\_api.get\_vifs\_by\_instance
* Style improvements
* Reno for Ironic api\_version opt deprecation
* Release notes: online\_data\_migrations nova-manage command
* nova-manage: Declare a PciDevice online migration script
* test\_fields: Remove all 'Enum' subclass tests
* Make test cases test\_crypto.py from NoDBTestCase
* Ironic: remove backwards compatibility code
* Ironic: Use ironicclient native retries for connection errors
* RT: aborting claims clears instance host and NUMA info
* Provide correct connector for evacuate terminate
* Reset instance progress when LM finishes
* Forbid new legacy notification event\_type
* VMware: Remove VMwareHTTPReadFile
* API: Mapping ConsoleTypeInvalid exception to HTTPBadRequest
* VMware: remove deprecation warnings from oslo\_versionedobjects
* Reject empty-named AZ in aggregate metadata
* add checking for new image metadata property 'hw\_cpu\_realtime\_mask'
* Remove unused methods in nova/utils.py
* Fix string interpolations at logging calls
* Generate better validation error message when using name regexes
* Return 400 for os-virtual-interfaces when using Neutron
* Dump metric exception text to logs
* Updated from global requirements
* Use SensitiveStringField for BlockDeviceMapping.connection\_info
* Add index on instances table across deleted/created\_at columns
* Tweak the resize\_confirm\_window help text
* Enable rebuild tests in cellsv1 job
* libvirt: clean up help text for live\_migration\_inbound\_addr option
* Add release note for nova using neutron mtu value for vif plugging
* deprecate security\_group\_api config option
* update tests for use\_neutron=True; fix exposed bugs
* deprecate \`\`volume\_api\_class\`\` and \`\`network\_api\_class\`\`
* deprecate \`\`compute\_stats\_class\`\` config option
* Deprecate the \`\`vendordata\_driver\`\` config option
* Deprecate db\_driver config option
* deprecate manager class options
* remove default=None for config options
* Check 'destination\_type' instead of 'source\_type' in \_check\_and\_transform\_bdm
* Documentation fix regarding triggering crash dump
* Use db connection from RequestContext during queries
* Ironic: Clean up if configdrive build fails
* Revert "Generate better validation error message when using name regexes"
* Add unit tests for live\_migration\_cleanup\_flags
* Replaced unittest and unittest2 to testtools
* Sample nova.conf file has missing/duplicated config options

13.0.0.0b3
----------

* Fix missing of unit in HostState.\_\_repr\_\_()
* Make InstanceMappings.cell\_id nullable
* Create BuildRequest object during boot process
* Add BuildRequest object
* Api\_version\_request.matches does not accept a string or None
* Added Keystone and RequestID headers to CORS middleware
* Generate better validation error message when using name regexes
* XenAPI: introduce unit test for XenAPI plugins
* Abstract a driver API for triggering crash dump
* Fix evacuate support with Nova cells v1
* libvirt: don't attempt to get baseline cpu features if host cpu model is None
* Ensure there are no unreferenced closures in tests
* libvirt: set libvirt.sysinfo\_serial='none' for virt driver tests
* libvirt: Add ppc to supported arch for NUMA
* Use new inventory schema in all compute\_node gets
* Remove unused libvirt \_get\_all\_block\_devices and \_get\_interfaces
* Use new inventory schema in compute\_node\_get\_all()
* Deprecate nova.hooks
* Adjust resource-providers models for resource-pools
* Fix Cells RPC API by accepting a RequestSpec arg
* API: Improve os-migrateLive input parameters
* Allow block\_migration and disk\_over\_commit to be None
* Update time is not updated when metadata of aggregate is updated
* complete the removal of api\_version from rest client parameters
* objects: add HyperVLiveMigrateData stub
* functional: Grab the service version from the module
* Added missed '-' to the rest api history doc
* Gracefully handle cancelling all events more than once
* Cleanup service.kill calls in functional tests
* Do not use constraints for venv
* VMware: Use actual VM state instead of using the instance vm\_state
* Do not pass call\_xenapi unmarshallable type
* check max\_net\_count against min\_count when booting
* objects: Allow instance to reset the NUMA topology
* Mark 'network\_device\_mtu' as deprecated
* Add service binary/host to service is down log for context
* Abort an ongoing live migration
* Add new APIs and deprecate old API for migrations
* Deprecate conductor manager option
* Xen: Calculate block\_migration if it's None
* Libvirt: Calculate block\_migration if it's None
* NUMATopologyFilter raise exception and not continue filter next node
* Updated from global requirements
* Add specific method to lazy-load instance.pci\_devices
* Move logging outside of LibvirtConfigObject.to\_xml
* Update the help for deprecated glance host/port/protocol options
* Added missing execution of the test
* Add build\_requests database table and model
* Make db.aggregate\_get a reader not a writer
* Remove an unnecessary variable in a unit test
* Remove duplicate test case flavor\_create
* Don't lazy-load instance.services if the instance is deleted
* Add functional regression test for list deleted instances on v2.16
* Use constant\_time\_compare from oslo.utils
* Remove APIRouterV3
* reduce pep8 requirements to just hacking
* fix usage of opportunistic test cases with enginefacade
* add regression test for bug #1541691
* Creates flavor\* tables in API database
* Add test for unshelve in the conductor API
* add a place for functional test to block specific regressions
* make microversion a client level construct for tests
* Allocate uuids for aggregates as they are created or loaded
* bug and tests in 'instance\_info\_cache'
* fix typo in comment
* Fix conductor to \*really\* pass the Spec obj
* Updated from global requirements
* Catch iscsi VolumeDeviceNotFound when detaching
* Add note about using OS-EXT-\* prefix for attribute naming
* Remove use of \`list\` as variable name
* resource-provider versioned objects
* Fix networking exceptions in ComputeTestCase
* Fix online\_data\_migrations() not passing context
* Fix two bugs in online\_data\_migrations()
* Make online\_data\_migrations do smaller batches in unlimited case
* Use MTU value from Neutron in OVS/LB VIF wiring
* tox: Remove 'oslo.versionedobjects' dependency
* Fix API Guide doc
* Add functional regression test for bug 1552888
* Fix an unnecessary interpolation
* Change wording of microversion bump about 503
* Validate subs in api samples base class to improve error handling
* Add a column for uuid to aggregate\_hosts
* Hyper-V: Removes pointless check in livemigrationops
* XenAPI: Fix VIF plug and unplug problem
* Update ComputeNode values with disk allocation ratios in the RT
* Update HostManager and DiskFilter to use ComputeNode disk ratio
* Add disk\_allocation\_ratio to ComputeNode
* config options: Centralise 'virt.disk' options
* config options: Centralise 'virt.netutils' options
* Improve 'virt.firewall' conf options documentation
* config options: Centralise 'virt.firewall' options
* Improve 'virt.images' conf options documentation
*  config options: Centralise 'virt.images' options
* Update wrong comment
* Fix misuse of assertTrue in console and virt tests
* Failed migration shoudn't be reported as in progress
* Fix missing of unit in debug info
* always use python2.7 for pep8
* servicegroup: remove the zookeeper driver
* Hacking: check for deprecated os.popen()
* Log successful reverts\_task\_state calls
* Hyper-V: os\_win related updates
* Partial revert of ec2 removal patch
* Fixed leaked UnexpectedMethodCallErrors in test\_compute
* Unshelve using the RequestSpec object
* Provide ReqSpec to live-migrate conductor task
* Fix cell capacity when compute nodes are down
* Fix misleading test name
* Default "discoverable" policies to "@"
* build smaller name regexes for validation
* Add reno for block live migraton with cinder volumes
* Remove support for integer ids in compute\_api.get
* Add annotation to the kill() method
* Add missing os types: suseGuest64/suseGuest
* Hypervisor support matrix: add feature "trigger crash dump"
* Update example policy.json to remove "" policies
* Fixed arguement order in remove\_volume\_connection
* Add better help text to scheduler options (7)
* Add better help text to scheduler options (6)
* RT: Decrese usage for offloaded instances
* Allow saving empty pci\_device\_pools in ComputeNode object
* Add StableObjectJsonFixture and use it in our base test class
* nova-manage: Add hooks for running  data-migration scripts
* always use pip constraints
* Update instance host in post live migration even when exception occurs
* Use imageutils from oslo.utils
* Remove duplicate key from dictionary
* reset task\_state after select\_destinations failed
* Pass bdm info to \_get\_instance\_disk\_info method
* Fix create snapshot failure on VMs with SRIOV
* Reorder name normalization for DNS
* Allocate UUID for compute node
* rpc.init() is being called twice per test
* Use instance hostname for Neutron DNS unit tests
* objects: Rename PciDevice \_migrate\_parent\_addr  method
* Use assertRaises() to check specific exception
* libvirt: make live\_migration\_uri flag dependent on virt\_type
* Remove unused CONF imports
* Add /usr/local/{sbin,bin} to rootwrap exec\_dirs
* write live migration progress detail to DB in migration monitor
* Add migration progress detail in DB
* Tolerate installation of pycryptodome
* neutron: handle attach interface case with no networks
* Move Disk allocation ratio to ResourceTracker
* Updated from global requirements
* HyperV: Fix vm disk path issue
* Removal of unnecessary \`import\_opt\`s for cells config options
* Fix 500 error for showing deleted flavor details
* Fix \_compare\_result type handling comparison
* neutron: remove redundant request.network\_id assignment
* Fix reported ppc64le bug on video selection
* Improve 'virt.driver' conf options documentation
* Improve unit tests for instance multiple create
* Change populate\_security\_groups to return a SecurityGroupList
* Fix error message in imagebackend
* config options: Centralise 'virt.driver' options
* Avoid lazy-loading flavor during usage audit
* resource\_providers, allocations and inventories models
* Revert "Add new test\_rebuild\_instance\_with\_volume to cells exclude list"
* Update the CONF import path for VNC
* Improve 'vnc' conf options documentation
* Remove discoverable policy from server:migrations resource
* Improve the help text for cells options (6)
* Improve the help text for cells options (5)
* Improve the help text for cells options (4)
* Improve the help text for cells options (3)
* Improve the help text for cells options (2)
* Allow block live migration of an instance with attached volumes
* Implement an indexed ResourceClass Enum object
* Add check to limit maximum value of max\_rows
* Fix spelling mistake
* Add methods for RequestContext to switch db connection
* virt: osinfo will report once if libosinfo is not loaded
* Replace eventlet-based raw socket client with requests
* Add a tool for reserving migration placeholders during release time
* libvirt: check for interface when detach\_interface fails
* libvirt: implement LibvirtConfigGuestInterface.parse\_dom
* Filter APIs out from services list
* Config options: centralize options in conductor api
* Improve the help text for cells options (1)
* VMware: add release notes for the limits
* Get a ReqSpec in evacuate API and pass it to scheduler
* Fixes cells py3 unit tests
* Fixes network py3 unit tests
* Fixes Python 3 unit tests for nova.compute
* Add new test\_rebuild\_instance\_with\_volume to cells exclude list
* Add some obvious detail to nw\_info warning log
* Fix fallocate test on newer util-linux
* Remove \_create\_local function
* Trivial logic cleanup in libvirt pre\_live\_migration
* Return HTTP 400 for invalid server-group uuid
* Properly inject network\_data.json in configdrive
* enginefacade: remove 'get\_session' and 'get\_api\_session'
* enginefacade: 'request\_spec' object
* Add new API to force live migration to complete
* Add new DB API method to retrieve migration for instance
* Imported Translations from Zanata
* Updated from global requirements
* Sync L3Driver, NullL3 interface with LinuxNetL3
* Top 100 slow tests: api.openstack.compute.test\_api
* Top 100 slow tests: api.openstack.compute.test\_versions
* Top 100 slow tests: legacy\_v2.test\_servers
* Top 100 slow tests: api.openstack.compute.test\_flavor\*
* Top 100 slow tests: api.openstack.compute.test\_image\_size
* Top 100 slow tests: api.openstack.compute.test\_volumes
* Confusing typo fixed
* doc: all\_tenants query option incorrectly identified as non-admin
* Update driver support matrix for Ironic
* parametrize max\_api\_version in tests
* libvirt: Race condition leads to instance in error
* Avoid lazy-loads in metadata requests
* Join flavor when re-querying instance for floating ip association
* Allow all api\_samples tests to be run individually
* Make os-instance-action read deleted instances
* enginefacade: 'flavor'
* Updated from global requirements
* Use instance hostname for Neutron DNS
* libvirt: Make behavior of os\_require\_quiesce consistent
* Split-network-plane-for-live-migration
* Database not needed for most cells messaging tests
* libvirt: use osinfo when configuring the disk bus
* libvirt: use osinfo when configuring network model
* Database not needed for test class: ConsoleAPITestCase
* Database not needed for test class: ConductorImportTest
* virt: adjusting the osinfo tests to use fakelibosinfo
* Database not needed for RPC serializer tests
* Database not needed for most crypto tests
* Database not needed for most nova manage tests
* ebtables/libvirt workaround
* Test that new tables don't use soft deletes
* Use instance in setup\_networks\_on\_host
* enginefacade: test\_db\_api cleanup, missed decorators
* Database not needed for test class: PciGetInstanceDevs
* Add test coverage to functional api tests \_compare\_result method
* Remove and deprecate conductor provider\_fw\_rule\_get\_all()
* Remove prelude from disk-weight-sch reno
* Enable volume operations for shelved instances
* Gracefully handle a deleting instance during rebuild
* remove the unnecessary parem of set\_vm\_state\_and\_notify
* tests: adding fake libosinfo module
* config options: Centralise 'vnc' options
* config options: Make noVNC proxy into vnc group
* Improve 'pci' conf options documentation
* config options: centralize section "wsgi"
* libvirt: deprecate live/block\_migration\_flag opts
* Tidy up scheduler\_evolution.rst
* config options: add hacking check for help text length
* xrange() is renamed to range() in Python 3
* Do not use "file" builtin, but "open" instead
* Fix some word spellings in messages
* No need to have ironicclient parameter in methods
* Add a TODO to make ComputeNode.cpu\_info non-nullable
* Fix missing marker functions in nova/pci
* Adding volume operations for shelved instances
* Optimize Instance.create() for optional extra fields
* Optimize servers path by pre-joining numa\_topology
* Trivial: Remove a duplicated word
* Update the home-page
* Add better help text to scheduler options (5)
* Switch to oslo.cache lib
* Remove all remaining references to Quantum
* doc: remove detail about extensions
* Add description for trigger crash dump
* Object: Give more helpful error message in TestServiceVersion
* Spread allocations of fixed ips
* Updated from global requirements
* Stop using mox (scheduler)
* Fix xvpvncproxy config path when running n-xvnc
* Optimize the instance fetched by floating\_ips API
* Improve efficiency of Migration.instance property
* Prevent \_heal\_instance\_info\_cache() periodic lazy-loads
* Revert "Added new scheduler filter: AggregateTypeExtraSpecsAffinityFilter"
* Remove unused provider firewall rules functionality in nova
* enginefacade: 'instance\_tags'
* Apply scheduler limits to Exact\* filters
* Fix typos in nova/scheduler and nova/virt
* Replace exit() by sys.exit()
* Trivial: Fix a typo in test\_policy.py
* neutronv2: Allow Neutron to specify OVS/LB bridge
* HyperV: do not log twice with different level
* Replace stubs.Set with stub\_out (db)
* Add a disk space weight-based scheduler
* Fix up live-migration method docstrings
* Libvirt: Support ovs fp plug in vhostuser vif
* xenapi: simplify swap\_xapi\_host()
* Allow sending the migrate data objects over the wire
* Added new scheduler filter: AggregateTypeExtraSpecsAffinityFilter
* Replace "all\_mappings" variable by "block\_device\_mappings"
* Add better help text to scheduler options (4)
* Migrate from keystoneclient to keystoneauth
* fast exit dhcpbridge on 'old'
* Ironic: Lightweight fetching of nodes
* Fix RequestSpec \_from\_db\_object
* doc:Ask reviews to reject new legacy notifications
* Generate doc for versioned notifications
* doc: add devref about versioned notifications
* Adds json sample for the versioned notifications
* relocate os\_compute\_api:servers:discoverable
* libvirt: convert to use instance.image\_meta property
* Updated from global requirements
* doc: fix malformed api sample
* Persist the request spec during an instance boot
* Revise the compute\_upgrade\_levels\_auto release note
* Adding guard on None value for some helpers method
* Return HTTP 400 if volume size is not defined
* API: Rearrange HTTPBadRequest raising in \_resize
* remove the wrong param of fake\_db\_migration initiation
* Enable all extension for server PUT API sample tests
* Config options: centralize options in availability\_zones
* We now require gettext for dev environments
* Revert "Pass host when call attach to Cinder"
* update feature support matrix documentation
* Config options: centralize section "cells"
* Use uuidsentinel in host\_status test
* remove not used tpl
* Return 409 instead of 503 when cidr conflict
* releasenotes: Note on CPU thread pinning support
* Use extra\_data\_func to get fingerprints of objects
* Use stevedore for scheduler driver
* Use stevedore for scheduler host manager
* Enables conductor py3 unit tests
* REST API changes for user settable server description
* Use get\_notification\_transport() for notifications
* Stop using stubs.Set in vmwareapi unit tests
* Add tests for nova.rpc module
* libvirt: check min required qemu/kvm versions on ppc64/ppc64le
* VMware: Handle image size correctly for OVA and streamOptimized images
* enginefacade: 'instance\_group'
* enginefacade: 'floating\_ip'
* enginefacade: 'compute\_node'
* enginefacade: 'service'
* Hyper-V: Trace original exception before converting exception
* Fixed incorrect names/comments for API version 2.18
* Remove mox from tests/unit/objects/test\_keypair.py
* API: Remove unexpected from errors get\_console\_output
* Updated from global requirements
* Fix docstrings for sphinx
* Make project\_id optional in v2.1 urls
* remove not used tpl file
* Log retries at INFO level per guidelines
* make logic clearer about template selection
* Add ITRI DISCO os-brick connector for libvirt
* Fix misleading comment of pci\_stats
* cleanup: remove python 2.6 compat assertNotIsInstance
* Add better help text to scheduler options (3)
* (lxc) Updated regex to ignore failing tests
* Add better help text to scheduler options (2)
* Add better help text to scheduler options (1)
* Note in HypervisorSupportMatrix for Libvirt/LXC shutdown kernel bug
* Ceph for live-migration job
* enginefacade: 'security\_group'
* enginefacade: 'instance'
* enginefacade: 'fixed\_ip'
* enginefacade: 'quota' and 'reservation'
* Python3: Replace dict.iteritems with six.iteritems
* Updated from global requirements
* Object: Fix wrong usage migrate\_data\_obj
* \_can\_fallocate should throw a warning instead of error
* VMware: no longer convert image meta from dict to object
* cleanup: add comments about the pre/post extension processing
* cleanup: remove custom serializer support
* Add description for server query
* remove docs about format extensions
* Remove catching of ComputeHostNotFound exception
* Return empty object list instead []
* cleanup: remove configurable action\_peek
* libvirt: use native AIO mode for cinder volumes
* libvirt: use native AIO mode for image backends
* Issue an info log msg when port quota is exceeded
* Validate translations
* Imported Translations from Zanata

13.0.0.0b2
----------

* doc: add client interactive guideline for microversions
* doc: add version discovery guideline in api concept doc
* doc: completes microversion use-cases in api concept doc
* Fix indents of servers-detail-resp.json
* libvirt: make snapshot use RBD snapshot/clone when available
* Improve the help text for the cert options
* cleanup: remove infrastructure for content/type deserializer
* Pass host when call attach to Cinder
* Pass attachment\_id to Cinder when detach a volume
* libvirt: Fix/implement revert-resize for RBD-backed images
* Added super() call in some of the Model's child
* enginefacade: 'ec2\_instance' and 'instance\_fault'
* cleanup: collapse wsgi serializer test hierarchy
* Add service status notification
* cleanup: remove wsgi serialize/deserialize decorators
* enginefacade: 'block\_device\_mapping'
* Fix invalid import order
* Add a REST API to trigger crash dump in an instance
* libvirt: adding a class to retrieve hardware properties
* virt: introduce libosinfo library to set hardware policy
* pci: changing the claiming and allocation logic for PF/VF assignment
* pci: store context when creating pci devices
* Make emitting versioned notifications configurable
* Add infra for versioned notifications
* Make sure that we always have a parent\_addr set
* change set\_stubs to use stub\_out in vmwareapi/stubs.py
* Add note to ComputeNode.numa\_topology
* Reno for lock policy
* Clean up nova/conf/scheduler.py
* Reno for Xen rename
* config options: Make xvp proxy into vnc group
* XenAPI: Fix race on rotate\_xen\_guest\_logs
* Add exception handling in \_cleanup\_allocated\_network
* hardware: check whether realtime capable in API
* Remove releasenotes/build between releasenotes runs
* Add python3\* packages to development quickstart guide
* Make sure full stack trace is logged on RT update failure
* Changed filter\_by() to filter() during filtering instances in db API
* config options: Centralise PCI options
* HyperV: Set disk serial number for attached volumes
* Use "regex" of StrOpt to check option "port\_range"
* enable uefi boot
* VMware: convert to use instance.image\_meta property
* Config drive: convert to use instance.image\_meta property
* Use of six.PY3 should be forward compatible
* Add host\_status attribute for servers/detail and servers/{server\_id}
* Revert "Workaround reno reverts by accepting warnings"
* Adds relase notes for soft affinity feature
* libvirt: handle migrate\_data as object in cleanup method
* Create filter\_properties earlier in boot request
* Parse availability\_zone in API
* Add object and database support for host\_status API
* Workaround reno reverts by accepting warnings
* ports & networks gather should validate existance
* objects: add virtual 'image\_meta' property to Instance object
* compute: convert manager to use nova.objects.ImageMeta
* Replace stubs.Set with stub\_out (os)
* Fix Mock assert\_called\_once\_with() usage
* ServerGroupsV213SampleJsonTest should actually test v2.13
* Move config options from nova/cert directory
* Remove dead code from reserve\_block\_device\_name rpcapi
* Adapt the code to the new get\_by\_volume BDM functions
* Fix undetected races when getting BDMs by volume id
* Fix instance not destroyed after successful evacuation
* Use TimeFixture from oslo\_utils in functional tests
* Fix indexing of dict.keys() in python3
* libvirt: add a new live\_migration\_tunnelled config
* libvirt: force config related migration flags
* libvirt: force use of direct vs p2p migration
* libvirt: force use/non-use of NON\_SHARED\_INC flag
* libvirt: parse live migration flags at startup
* enginefacade: 'aggregate'
* Add helper shim for getting items
* hacking: check for common double word typos
* Fix backing file detection in libvirt live snapshot
* trivial: Add additional logs for NUMA scheduling
* Add 'hw:cpu\_threads\_policy=isolate' scheduling
* Replaces itertools.izip with six.moves.zip
* Clean up network resources when reschedule fails
* Replace stubs.Set with stub\_out (fakes)
* Add maximum microversions for each releases
* Remove "or 'reserved'" condition from reserve\_block\_device\_name
* live-migration hook ansible 2.0 compaitability
* update min tox version to 2.0
* pci: adding support to specify a device\_type in pci requests
* Block flaky python34 test : vmwareapi.test\_configdrive.ConfigDriveTestCase
* Actually pass the migration data object down to the virt drivers
* nova conf single point of entry: fix error message
* Fix sphinx warnings from signature\_utils
* Sets binding:profile to empty dic when unbinding port
* Use timedelta.total\_second instead of calculating
* Use stub\_out and mock to remove mox:part 3
* Replaces \_\_builtin\_\_ with six.moves.builtins
* Remove mm-ctl from network.filters
* Add mm-ctl to compute.filters
* Add reviewing point related to REST API
* Stop using mox stubs in nova.tests.unit.console
* pci: do not filter out any SRIOV Physical Functions
* objects: update the old location parent\_addr only if it has value
* Add xenapi support for XenapiLiveMigrateData objects
* Fixes Hyper-V unit tests for latest os\_win release
* Add 'hw:cpu\_thread\_policy=require' scheduling
* add "hw\_firmware\_type" image metadata
* Docstring change for consistency
* Add tests for metadata functions
* libvirt: fix TypeError calling \_live\_migration\_copy\_disk\_paths
* Add DiskFormat as Enum in fields
* Remove DictCompat from EC2 objects
* Remove DictCompat from DNSDomain
* Add description on how to run ./run\_test.sh -8
* Propagate qemu-img errors to compute manager
* Change assertEqual(True/False) to assertTrue/False
* objects: adding a parent\_addr field to the PciDevice object
* Add caching of service\_min\_versions in the conductor
* Scheduler: enforce max attempts at service startup
* Fix unit tests on Mac OS X
* Stop using mox stubs in nova.tests.unit.api.openstack.compute.test\_services
* libvirt: add discard support for attached volumes
* Remove DictCompat from CellMapping
* Remove NovaObjectDictCompat from Aggregate
* XenAPI: Cope with more Cinder backends
* single point of entry for sample config generation
* Remove Deprecated EC2 and ObjectStore impl/tests
* libvirt: add realtime support
* Imported Translations from Zanata
* libvirt: update to min required version to 0.10.2
* Remove null AZ tests from API tests
* Replace stubs.Set with stub\_out (functional tests)
* Updated from global requirements
* doc: minor corrections to the API version docco
* Refactor \_load\_support\_matrix
* Fix format conversion in libvirt snapshot
* Fix format detection in libvirt snapshot
* api: add soft-affinity policies for server groups
* scheduler: fill RequestSpec.instance\_group.members
* scheduler: add soft-(anti-)affinity weighers
* Implements proper UUID format for compute/test\_stats\*
* Add image signature verification
* Convert nova.tests.unit.image.fake.stub\_out\_image\_service to use stub\_out
* Block more flaky py34 tests
* Replace deprecated library function os.popen() with subprocess
* Remove mox and Stubs from tests/unit/pci/test\_manager.py
* Correct the code description
* Fix advice for new contribs
* libvirt: better error for bad live migration flag
* Add argument to support-matrix sphinx extension
* Wrong URL reported by the run\_tests.sh message
* Make use of 'InstanceNUMACell.cpu\_policy' field
* Add 'cpu\_policy' and 'cpu\_thread\_policy' fields
* Add 'CPUThreadAllocationPolicy' enum field
* Blacklist flaky tests and add warning
* Modify Scheduler RPC API to use RequestSpec obj
* Implements proper UUID format for test\_compute\_mgr
* Remove get\_lock method and policy action
* libvirt: sort block\_device\_list in volume\_in\_mapping log
* Stop explicitly running test discovery for py34
* introduce \`\`stub\_out\`\` method to base test class
* Cleanup NovaObjectDictCompat from security\_group\_rule
* Remove useless header not need microversion
* Implements proper UUID format for test\_compute
* Move Process and Mentoring pages to devref
* Document restrictions for working on cells v1
* api-guide: add a doc on users
* Assignment (from method with no return) removed
* remove use of \_get\_regexes in samples tests
* Improve 'virt' conf options documentation
* config options: Centralise 'virt.hardware' options
* Get list of disks to copy early to avoid multiple DB hits
* Remove non-unicode bind param warnings
* Fix typo, ReST -> REST
* Wrong spelling of defined
* libvirt: fix typo in test\_init\_host\_migration\_flags
* docs: update refs to mitaka release schedule
* doc: add how to arrange order of scheduler filters
* libvirt: only get instance.flavor if needed in get\_disk\_mapping
* Replace backtick with apostrophe in lazy-loading debug log
* libvirt: fix TypeError in find\_disk\_dev\_for\_disk\_bus
* Fix RPC revision log entry for 4.6
* signature\_utils: move to explicit image metadata
* Unreference mocks are listed in the wrong order
* remove API v1.1 from testing
* remove /v1.1 from default paste.ini
* libvirt: verify cpu bw policy capability for host
* Implements proper UUID format for test\_compute\_cells and test\_compute\_utils
* Add the missing return value in the comment
* Updated from global requirements
* xen: block BootableTestCase from py34 testing
* Modify conductor to use RequestSpec object
* db: querry to retrieve all pci device by parent address
* db: adding columns to PciDevice table
* Replace except Exception with specific exception
* pci: minor fix to exception message format
* Python 3 deprecated the logger.warn method in favor of warning
* Check added for mandatory parameter size in schema
* Remove redundant driver initialization in test
* enginefacade: 'instance\_metadata'
* Misspelling in messages
* Add lock to host-state consumption
* Add lock to scheduler host state updating
* Allow virt driver to define binding:host\_id
* [python3] Webob request body should be bytes
* Replace copy.deepcopy of RequestContext with copy.copy
* DriverBlockDevice must receive a BDM object, not a dict
* Misspelling in message
* Wrong usage of "a"
* Remove unused logging import and LOG global var
* Reduce the number of db/rpc calls to get instance rules
* Use is\_supported() to check microversion
* SameHostFilter should fail if host does not have instances
* VMware: add method for getting hosts attached to datastore
* Trivial: Fix wrong comment in service version
* signature\_utils: handle ECC curve unavailability
* Updated from global requirements
* tests: Remove duplicate check
* enginefacade: 'bw\_usage', 'vol\_usage' and 's3\_image'
* VMware: improve instance names on VC
* VMware: add in folder support on VC
* VMware: cleanup unit test global variable
* signature\_utils: refactor the list of ECC curves
* Nuke EC2 API from api-paste and remove wsgi support
* Remove cruft for things o.vo handles
* Make scheduler\_hints schema allow list of id
* Change logging level for 'oslo\_db'
* Remove unused compute\_api in ServerUsageController
* network: Don't repopulate instance info cache from Neutron ports
* Fix doc comment for get\_available\_resource
* objects: lazy-load instance.security\_groups more efficiently
* VMware: cleanup unit tests
* Use SpawnIsSynchronousFixture in most unit tests
* Use stub\_out and mock to remove mox: part 1
* Disable the in tree EC2 API by default
* deprecate old glance config options
* remove temporary GlanceEndpoint object
* convert GlanceClientWrapper to endpoint
* Use stub\_out and mock to remove mox: part 2
* Add a compute API to trigger crash dump in instance
* Make libvirt driver return migrate data objects for source and dest checks
* Use TimeFixture from oslo\_utils to override time in tests
* enginefacade: 'vif' and 'task\_log'
* review guide: add location details for config options
* libvirt: wrapper list\_guests to Host's object
* remove vestigial XML\_NS\_V11 variable
* remove unused EXTENSION\_DESERIALIZE\_\* constants
* config options: Centralise 'virt.ironic' options
* remove unused pipeline\_factory\_v3 alias
* remove unused methods from integrated\_helpers test class
* remove unused extends\_name attribute
* Add upload/download vhd2 interfaces
* Replace unicode with six.text\_type
* conductor: fix unbound local variable request\_spec
* Use just ids in all request templates for flavors/images
* extract non instance methods
* remove unused trigger\_handler
* remove unused update\_dhcp\_hostfile\_with\_text method
* remove nova-cert from most functional tests
* enginefacade: 'migration'
* XenAPI: Fix race in rotate\_xen\_guest\_logs
* libvirt: introduce "pause" to Guest's object
* libvirt: introduce "shutdown" to Guest's object
* libvirt: introduce "snapshot" to Guest's object
* libvirt: introduce thaw filesystems
* libvirt: introduce freeze filesystems
* libvirt: replace direct libvirt's call AbortJobBlock
* Allow to update 'v2.1' links in sample files
* Do not update links for 'versions' tests
* centeralized conf:compute/emphemeral\_storage\_encryption
* Add instance.save() when handling reboot in init instance
* Add transitional support for migrate data objects to compute manager
* Implements proper UUID format for few objects tests
* Filter by leased=False when allocating fixed IPs
* Increase informations in nova-net warnings
* docs: add concept guide for certificate
* Fix reclaim\_instance\_interval < 0 never delete instance completely
* Updated from global requirements
* Add placeholders for config options
* Implements proper UUID format for the fake\_network
* Refresh stale volume BDMs in terminate\_connection
* Block requests 2.9.0
* Implements proper UUID format for the test\_compute\_api
* Remove onSharedStorage from evacuate API
* Fix CPU pinning for odd number of CPUs w hyperthreading
* hardware: stop using instance cell topology in CPU pinning logic
* Check context before returning cached value
* deprecate run\_tests.sh
* remove archaic references to XML in api
* simplify the request / response format document
* Add signature\_utils module
* Remove XML description from extension concept
* remove ctype from classes
* Remove cells service from api samples that don't test cells
* Add uuidsentinel test module
* Remove the wrong usage of api\_major\_version in api sample tests
* Updated from global requirements
* Fix wrong method name in doc filter\_scheduler
* doc: update threading.rst
* Makes GET extension info sample tests run for v2 also
* update api\_samples code to use better variables
* Remove incorrect comments about file injection
* Remove a restriction on injection files
* Remove unnecessary log when search servers
* Deprecated tox -downloadcache option removed
* rework warning messages for extension whitelist/blacklist
* Make sure bdm.volume\_id is set after auto-creating volumes
* Replace safe\_utils.getcallargs with inspect.getcallargs
* Fix wrap\_exception to get all arguments for payload
* Add hypervisor, aggregates, migration description
* retool xen glance plugin to work with urls
* always create clients with GlanceEndpoint
* Implement GlanceEndpoint object
* Clean up glance url handling
* Use RequestSpec in the ChanceScheduler
* Modify left filters for RequestSpec
* Modify NUMA, PCI and num\_instances filters for RequestSpec
* Improve inject\_nmi() in libvirt driver and add tests
* Report compute-api bugs against nova
* XenAPI: Expose labels for ephemeral disks
* Fix use of safeutils.getcallargs
* Cache SecurityGroupAPI results from neutron multiplexer
* Remove the executable bit from several python files
* Optimize \_cleanup\_incomplete\_migrations periodic task
* [Py34] api.openstack.compute.legacy\_v2.test\_servers.Base64ValidationTest
* [Py34] api.openstack.test\_faults.TestFaultWrapper
* [Py34] Enable api.openstack.test\_wsgi unit test
* default host to service name instead of uuid
* Remove start\_service calls from the test case
* Add SIGHUP handlers for compute rpcapi to console and conductor
* Cache the automatic version pin to avoid repeated lookups
* virt: allow for direct mounting of LocalBlockImages
* Use testscenarios to set attributes directly
* update API samples to use endpoints
* Updated from global requirements
* Add project-id and user-id when list server-groups
* Fixes Python 3 compatibility for filter results
* Remove duplicate default=None for option compute\_available\_monitors
* Disable IPv6 on bridge devices
* Don't load deleted instances
* Improve Filter Scheduler doc clarity
* libvirt: report pci Type-PF type even when VFs are disabled
* Remove deprecated neutron auth options
* Fix capitalization of IP
* Add separated section for configure guest os
* Add separated section for extra specs and image properties
* Add a note about fixing "db type could not be determined" with py34
* neutron: skip test\_deallocate\_for\_instance\_2\* in py34 job
* tighten regex on objectify
* Replace os.path.join() for URLs
* Add hv testing for ImageMetaProps.\_legacy\_property\_map
* Edit the text to be more native-English sounding
* docs: add test strategy and feature classification
* Fix the endpoint of /v2 on concept doc
* Drop JSON decoding for supported\_instances
* docs: update old stuff in version section
* Scheduler: honor the glance metadata for hypervisor details
* Implements proper UUID format for the ComputeAPITestCase
* docs: add microversions description in the concept doc
* Make admin consistent
* Add more concepts for servers
* Make "ReSTful service" consistent
* Add retry logic for detaching device using LibVirt
* Fix Exception message consistency with input protocol
* Remove SQLite BigInteger/Integer translation logic
* xen: Drop JSON for supported\_instances
* vmware: Drop JSON for supported\_instances
* ironic: Drop JSON for supported\_instances
* hyperv: Drop JSON for supported\_instances
* libvirt: Drop JSON for supported\_instances
* Drop JSON for stats in virt API
* Replaces izip\_longest with six.moves.zip\_longest
* Fixes dict keys and items references for Python 3
* Scheduler: correct control flow when forcing host
* Replaces longs with ints
* neutron: only get port id when listing ports in validate\_networks
* neutron: only list ports if there is a quota limit when validating
* Add reviewing point related to REST API
* Revert "Enable options for oslo.reports"
* Fix wrong CPU metric value in metrics\_filter
* Reset the compute\_rpcapi in Compute manager on SIGHUP
* Remove the unused sginfo rootwrap filter
* docs: ensure third party tests pass before +2
* Config options: centralize section "scheduler"
* add api-samples tox target
* Remove Instance object flavor helper methods only used in tests
* Remove unnecessary extra instance saves during resize
* docs: using the correct format and real world example for fault message
* VMware: cleanup ExtraSpecs
* Remove HTTPRequestEntityTooLarge usage in test
* Enables py3 unit tests for libvirt.host module
* Replaces \_\_builtin\_\_ with six.moves.builtins
* Converting nova.virt.hyperv to py3
* Hyper-V: removes \*Utils modules and unit tests
* docs: update services description for concept guide
* docs: remove duplicated section about error handling
* Remove Useless element in migrate\_server shcema
* Optimize "open" method with context manager
* trivial: Add some logs to 'numa\_topology\_filter'
* Updated from global requirements
* Docs: update the concept guide for Host topics
* Cleanup of compute api reboot method
* Hyper-V: adds os-win library
* Remove description about image from faults section
* api-guide: add note about users
* Updated from global requirements
* xenapi: Add helper function and unit tests for client session
* Config options: centralize section "scheduler"
* Ironic: Workaround to mitigate bug #1341420
* Libvirt: Support fp plug in vhostuser vif
* Remove version from setup.cfg

13.0.0.0b1
----------

* Add note for automatic determination of compute\_rpc version by service
* Add note for Virtuozzo supporting snapshots
* Add note for HyperV 2008 drop of support
* Imported Translations from Zanata
* Add note for removing conductor RPC API v2
* Add note for dropping InstanceV1 objects
* Add note for force\_config\_drive opt change
* Add note for deprecating local conductor
* Revert "Detach volume after deleting instance with no host"
* force releasenotes warnings to be treated as errors
* Fix reno warning for API DB relnote
* Adding a new vnic\_type for Ironic/Neutron/Nova integration
* Use o.vo DictOfListOfStringsField
* libvirt: remove todo note not useful anymore
* Modify metric-related filters for RequestSpec
* Modify default filters for RequestSpec
* servicegroup: stop zombie service due to exception
* Add persistence to the RequestSpec object
* Updated from global requirements
* add hacking check for config options location
* Correct some nits for moving servers in concept doc
* use graduated oslo.policy
* TrivialFix: remove 'deleted' flag
* Make server concept guide use 'server' consistently
* api-guide: fix up navigation bar
* Use version convert methods from oslo\_utils.versionutils
* docs: reorder move servers text
* docs: add clarifications to move servers
* Change some wording on server\_concepts.rst
* Cleanup unused test code in test\_scheduler.py
* Modify Aggregate filters for RequestSpec
* Add code-review devref for release notes
* Hyper-V: refines the exceptions raised in the driver
* Use o.vo FlexibleBooleanField
* docs: describe migration and other movement concepts
* Double 'an' in message
* Unify on \_schedule\_instances
* Add review guideline to microversion API
* Remove the TestRemoteObject class
* Catch FixedIpNotFoundForAddress when create server
* doc: add server status to concept.rst
* docs: update the concept guide shelve actions
* Fixed incorrect name of 'tag' and 'tag-any' filters
* Fix resource tracker VCPU counting
* Add relnote for change in default setting
* use NoDBTestCase for KeypairPolicyTest
* doc: change policies.rst to indicate API links
* Remove useless code in \_poll\_volume\_usage function
* Neutron: add logging context
* Remove unused param of CertificatesController
* Add user data into general concept
* Fix a typo in api-guide doc
* Make some classes inherit from NoDBTestCase
* XenAPI: Workaround for 6.5 iSCSI bug
* NFS setup for live-migration job
* Fix ebtables-version release note
* config options: enhance help text of section "serial\_console"
* Updating nova config-reference doc
* Updated from global requirements
* Prevent redundant instance.update notifications
* VMware: fix docstring for cluster management
* api: remove re-declared type in migrate schema
* enginefacade: 'agent' and 'action'
* config options: centralize section "serial\_console"
* Replaced private field in get\_session/engine with public method
* SR-IOV: Improve the vnic type check in the neutron api
* Simplified boolean variable check
* update connect\_volume test
* Enable options for oslo.reports
* Reverse sort tables before archiving
* scheduler: fix incorrect log message
* Updated from global requirements
* Add release note for API DB migration requirements
* Replaced deprecated timeutils methods
* Multinode job for live-migration
* Use o.vo VersionPredicateField
* Use flavor instead of flavour
* Corrected few grammatical nitpics
* Add more 'actions' for server concepts doc
* libvirt: mlnx\_direct vif type removal
* xen: mask passwords in volume connection\_data dict
* Updated from global requirements
* Use --concurrent with ebtables
* Removed extra spaces from double line strings
* Change test function name to make more sense
* Change Invalid exception to a specified exception
* Add 'lxd' to the list of recognized hypervisors
* Add microversions schema unit test for None
* Clean up legacy multi-version test constructs
* Fix Nova's indirection fixture override
* Remove skips for resize tests from tempest-dsvm-cells-rc
* Modify Affinity filter for RequestSpec
* Prepare filters for using RequestSpec object
* Use ServiceList object rather than direct db call
* Add relnote for ERT deprecation
* Remove IN-predicate warnings
* docs: update the API faults concept guide
* Deprecate nova-manage service subcommand
* Double detach volume causes server fault
* Use JSON format instead of json format
* Network: add in missing translation
* cells is a sad panda about scheduler hints
* VMware: expand support for Opaque networks
* Fix is\_volume\_backed\_instance() for unset image\_ref
* Add \_LE to LOG.error statement in nova/service
* Add service records for nova-api services
* Added method is\_supported to check API microversions
* enginefacade: 'host\_mapping'
* Removes support for Hyper-V Server 2008 R2
* Fix the bug of "Error spelling of 'explicitely'"
* Claims: fix log message
* Fix paths for api-guide build
* Remove flavors.get\_flavor() only used in tests
* VMware: Raise DiskNotFound for missing disk device
* Remove two unneeded db lookups during delete of a resizing instance
* Fix pci\_stats logging in resource tracker
* live-mig: Mark migration as failed on fail to schedule
* Move the Migration set-status-if-exists pattern to a method
* Don't track migrations in 'accepted' state
* live-migrate: Change the status Migration is created with
* compute: split check\_can\_live\_migrate\_destination
* Replace N block\_device\_mapping queries with 1
* Add "unreleased" release notes page
* Add reno for release notes management
* XenAPI: Correct hypervisor type in Horizon's admin view
* Fix typo in test\_post\_select\_populate
* Rearranges to create new Compute API Guide
* Added CORS support to Nova
* Aggregate Extra Specs Filter should return if extra\_specs is empty
* cells: skip 5 networking scenario tests that use floating IPs
* force\_config\_drive: StrOpt -> BoolOpt
* Updated from global requirements
* Add test coverage for both types of not-found-ness in neutronclient for floating
* Fix impotent \_poll\_shelved\_instances tests
* Fix race in \_poll\_shelved\_instances task
* Handle a NeutronClientException 404 Error for floating ips
* Handle DB failures in servicegroup DB driver
* Hook for live-migration job
* Omit RescheduledException in instance\_fault.message
* Remove duplicate server.kill on test shutdown
* make the driver.Scheduler as abstract class
* Fix a spelling mistake in the log
* objects: remove remote\_object\_calls from \_BaseTestCase
* Repair and rename test\_is\_volume\_backed\_instance\_no\_bdms()
* Use ObjectVersionChecker fixture from oslo.versionedobjects
* VMware: add in vif resource limitations
* Untie subobject versions
* Block oslo.messaging 2.8.0
* Split up test\_is\_volume\_backed\_instance() into five functions
* Avoid the dual-naming confusion
* enginefacade: 'provider\_fw', 'console\_pool' and 'console'
* enginefacade: 'network'
* clean up regex in tempest-dsvm-cells-rc
* skip lock\_unlock\_server test for cells
* ScalityVolume:fix how remote FS mount is detected
* OpenStack typo
* Remove duplicate keys in policy.json
* Add missing policy rules
* devref:Don't suggest decorate private method
* VMware: use a constant for 'iscsi'
* Config drive: make use of an instance object
* Fix attibute error when cloning raw images in Ceph
* Properly log BlockDeviceMappingList in \_create\_block\_device\_mapping
* Exclude all BDM checks for cells
* glance:add helper method to get client version
* enginefacade: 'dnsdomain' and 'ec2'
* enginefacade: 'certificate' and 'pci\_device'
* enginefacade: 'key\_pair' and 'cell'
* enginefacade: 'instance\_mapping'
* enginefacade: 'cell\_mapping'
* enginefacade: 'instance\_info' and 'instance\_extra'
* Use EngineFacade from oslo\_db.enginefacade
* VMware: fix trivial indentations
* Remove flavors.get\_all\_flavors() only used in tests
* Make lock policy default to admin or owner
* libvirt:Fix a typo of test cases
* Deprecate local conductor mode
* Deprecate Extensible Resource Tracker
* Change image to instance in comment
* VMware: use oslo\_config new type PortOpt
* Remove vcpu resource from extensible resource tracker
* Add logging to snapshot\_volume\_backed method
* Remove unnecessary destroy call from Ironic virt driver
* cells: add debug logging to bdm\_update\_or\_create\_at\_top
* Drop Instance v1.x support
* Check prefix with startswith() instead of slicing
* Add debug logging for when boot sequence is invalid in \_validate\_bdm
* remove the redundant policy check for SecurityGroupsOutputController
* virt: add constraint to handle realtime policy
* libvirt: add cpu schedular priority config
* libvirt: rework membacking config to support future features
* Do not mask original spawn failure if shutdown\_instance fails
* Point to cinder options in nova block alloc docs
* Fix booting fail when unlimited project quota
* Remove useless get\_instance\_faults()
* Remove "Can't resolve label reference" warnings
* Remove reservation\_id from the logs when a schedule fails
* Use RequestSpec object in HostManager
* Use RequestSpec object in the FilterScheduler
* Add ppcle architectures to libvirt blockinfo
* Deprecated: failIf
* Imported Translations from Zanata
* Remove obj\_relationships from objects
* Delete dead test code
* Add tempest-dsvm-lxc-rc
* Mark set-admin-password as complete for libvirt in support matrix
* Hypervisor support matrix: define pause & unpause
* Revert "Implement online schema migrations"
* Fix the os-extended-volumes key reference in the REST API history docs
* Remove get\_all method from servicegroup API
* Remove SoftDeleteMixin from NovaBase
* libvirt: support snapshots with parallels virt\_type
* Use oslo.config choices kwarg with StrOpt for servicegroup\_driver
* Imported Translations from Zanata
* Add -constraints sections for CI jobs
* Add "vnc" option group for sample nova.conf file
* Updated from global requirements
* Expands python34 unit tests list
* Fix missing obj\_make\_compatible() for ImageMetaProps object
* Fix error handling in nova.cmd.baseproxy
* Change 'ec2-api' stackforge url to openstack url
* Fixes Python 3 str issue in ConfigDrive creation
* Revert "Store correct VirtCPUTopology"
* Enable all extension for image API sample tests
* Add tags to .gitignore
* Updated from global requirements
* Add a nova functional test for the os-server-groups GET API with all\_projects parameter
* Image meta: treat legacy vmware adapter type values
* Attempt rollback live migrate at dest even if network dealloc fails
* hacking check for contextlib.nested for py34 support
* Print number of rows archived per table in db archive\_deleted\_rows
* Updated from global requirements
* Fix more inconsistency between Nova-Net and Neutron
* Fix metadata service security-groups when using Neutron
* Remove redundant deps in tox.ini
* Add some tests for map\_dev
* Clean up tests for dropping obj\_relationships
* Fix up Service object for manifest-based backports
* Fix service\_version minimum calculation for compute RPC
* docs: add the scheduler evolution plans
* Revert "virt: Use preexec\_fn to ulimit qemu-img info call"
* Updated from global requirements
* Ensure Glance image 'size' attribute is 0, not 'None'
* Ignore errorcode=4 when executing \`cryptsetup remove\` command
* libvirt: Don't attempt to convert initrd images
* Revert "Fixes Python 3 str issue in ConfigDrive creation"
* Monkey patch nova-ec2 api
* Compute: remove unused parameter

12.0.0
------

* Omnibus stable/liberty fix
* Drop outdated sqlite downgrade script
* Updated from global requirements
* Fix Status-Line in HTTP response
* Imported Translations from Zanata
* Default ConvertedException code to 500
* Updated from global requirements
* VMware: fix bug for config drive when inventory folder is used
* Fix a typo
* code-review guidelines: add checklist for config options
* Add a code-review guideline document
* virt: Use preexec\_fn to ulimit qemu-img info call
* Clean up some Instancev1 stuff in the tests
* Updated from global requirements
* Replaces contextlib.nested with test.nested
* Sync cliutils from oslo-incubator
* Make archive\_deleted\_rows\_for\_table private

12.0.0.0rc2
-----------

* load consoleauth\_topic option before using it
* Revert "[libvirt] Move cleanup of imported files to imagebackend"
* Add more documentation for RetryFilter
* Fix InstanceV1 backports to use context
* Imported Translations from Zanata
* Add test of claim context manager abort
* Log DBReferenceError in archive\_deleted\_rows\_for\_table
* Use DBReferenceError in archive\_deleted\_rows\_for\_table
* Add testresources used by oslo.db fixture
* Remove unused context parameter from db.archive\_deleted\_rows\* methods
* xenapi\_device\_id integer, expected string
* Fix InstanceV1 backports to use context
* Drop unused obj\_to\_primitive() override
* Updated from global requirements
* libvirt: remove unnecessary else in blockinfo.get\_root\_info
* Make test cases in test\_test.py use NoDBTest
* XenAPI: Fix unit tests for python34
* docs: re-organise the API concept docs
* VMware: specify chunk size when reading image data
* Make ConsoleauthTestCase inherit from NoDBTest
* Change a test class of consoleauth to no db test
* Imported Translations from Zanata
* Catch 3 InvalidBDM related exc when boot instance
* Move create vm states to svg diagram
* Ironic: Fix bad capacity reporting if instance\_info is unset
* Revert "[libvirt] Move cleanup of imported files to imagebackend"
* Honor until\_refresh config when creating default security group
* remove sphinxcontrib-seqdiag
* [Py34] nova.tests.unit.api.openstack.test\_common
* [Py34] Enable api.openstack.test\_mapper unit test
* [Py34] Enable test\_legacy\_v2\_compatible\_wrapper
* Extend the ServiceTooOld exception with more data
* Make service create/update fail if version is too old
* Allow automatic determination of compute\_rpc version by service
* Add get\_minimum\_version() to Service object and DB API
* Correct memory validation for live migration
* devref: change error messages no need microversion
* Replace f.func\_name and f.func\_code with f.\_\_name\_\_ and f.\_\_code\_\_
* Imported Translations from Zanata
* Add a note about the 500->404 not requiring a microversion
* Ensure Nova metrics derived from a set of metrics
* Updated from global requirements
* Fixes Python 3 str issue in ConfigDrive creation
* Make secgroup rules refresh with refresh\_instance\_security\_rules()
* Remove unused refresh\_security\_group\_members() call
* Imported Translations from Zanata
* Check DBReferenceError foreign key in Instance.save
* Fix Instance unit test for DBReferenceError
* Ironic: Fix bad capacity reporting if instance\_info is unset
* libvirt: check if ImageMeta.disk\_format is set before accessing it
* libvirt: check if ImageMeta.disk\_format is set before accessing it
* Rollback is needed if initialize\_connection times out
* Updated from global requirements
* Add Pillow to test-requirements.txt
* VMware: raise NotImplementedError for live migration methods
* xapi-tools: fixes cache cleaner script
* Cleanup of Translations
* Add Pillow to test-requirements.txt
* Update rpc version aliases for liberty
* Remove orphaned code related to extended\_volumes
* Add checkpoint logging when terminating an instance
* Add checkpoint logging when building an instance in compute manager
* Removed unused method from compute/rpcapi
* Remove unused read-only cell code
* Change warn to debug logs when migration context is missing
* Use os-testr for py34 tox target
* Add sample config file to nova docs
* Remove lazy-loading property compute\_task\_api from compute api
* Remove conductor 2.x RPC API
* Reserve 10 migrations for backports
* Use StrOpt's parameter choices to restritct option auth\_strategy
* vmware: set default value in fake \_db\_content when creating objects
* Avoid needless list copy in 'scheduler\_host\_subset\_size' case
* libvirt: Log warning for wrong migration flag config options
* Slightly better translation friendly formatting
* Identify more py34 tests that already pass
* rebuild: Apply migration context before calling the driver
* hardware: improve parse\_cpu\_spec to handle exclusion range
* Correct Instance type check to work with InstanceV1
* Imported Translations from Zanata
* Correct Instance type check to work with InstanceV1
* Only create volumes with instance.az if cinder.cross\_az\_attach is False
* Fix the help text of monkey\_patch config param
* Rollback of live-migration fails with the NFS driver
* Set TrustedFilter as experimental
* doc: gmr: Update instructions to generate GMR error reports
* rebuild: Apply migration context before calling the driver
* Fix MetricWeigher to use MonitorMetricList
* VMware: update log to be warning
* Add more help text to the cinder.cross\_az\_attach option
* Cleanup of Translations
* Revert "Deprecate cinder.cross\_az\_attach option"
* Fix some spelling typo in manual
* Fix NoneType error when calling MetricsWeigher
* wsgi: removing semicolon
* Fix logging\_sample.conf to use oslo\_log formatter
* Remove unused \_check\_string\_length()
* Deprecate cinder.cross\_az\_attach option
* Neutron: update cells when saving info\_cache
* Fix MetricWeigher to use MonitorMetricList

12.0.0.0rc1
-----------

* Imported Translations from Zanata
* Detach volume after deleting instance with no host
* Remove unnecessary call to info\_cache.delete
* Filter leading/trailing spaces for name field in v2.1 compat mode
* Give instance default hostname if hostname is empty
* If rescue failed set instance to ERROR
* Add some devref for AZs
* Change parameter name in utility function
* RT: track evacuation migrations
* rebuild: RPC sends additional args and claims are done
* Cells: Limit instances pulled in \_heal\_instances
* Open Mitaka development
* Fix order of arguments in assertEqual
* devref: update the nova architecture doc
* Imported Translations from Zanata
* Fix quota update in init\_instance on nova-compute restart
* net: explicitly set mac on linux bridge
* live-migration: Logs exception if operation failed
* libvirt: add unit tests for the designer utility methods
* Add test cases for some classes in objects.fields
* Change ignore-errors to ignore\_errors
* libvirt: fix direct OVS plugging
* claims: move a debug msg to a warn on missing migration
* Fix order of arguments in assertEqual
* Remove duplicate VALID\_NAME\_REGEX
* Pep8 didn't check api/openstack/common.py
* Updated from global requirements
* libvirt: Add unit tests for methods
* Devref: Document why conductor has a task api/manager
* Imported Translations from Zanata
* Fix nova configuration options description
* libvirt:on snapshot delete, use qemu-img to blockRebase if VM is stopped
* Allow filtering using unicode characters
* Updated from global requirements
* Imported Translations from Zanata
* Test both NoAuthMiddleware and NoAuthMiddlewareV3
* Remove redundant variable 'context'
* Add 'OS-EXT-VIF-NET:net\_id' for v21 compatible mode
* libvirt: Add NUMA cell count to cpu\_info
* Xenapi: Don't access image\_meta.id when booting from a volume
* Imported Translations from Zanata
* Fix typo in HACKING.rst
* Remove comment in wrong place
* Fix string formatting in api/metadata/vendordata\_json.py
* Raise exception.Migration earlier in REST API layer
* Remove "shelved\_image\_id" key from instance system metadata
* Only set access\_ip\_\* when instance goes ACTIVE
* VMware: fix typo in comment
* RT: Migration resource tracking uses migration context
* compute: migrate/resize paths properly handle stashed numa\_topology
* Claims: Make sure move claims create a migration context records
* libvirt:update live\_migration\_monitor to use Guest
* VMware: create method for getting datacenter from datastore
* User APIRouterV21 instead of APIRouterV3 for v2.1 unittests
* Remove TestOpenStackClientV3 from nova functional tests
* Rename all the ViewBuilderV3 to ViewBuilderV21
* libvirt: Split out resize\_image logic from create\_image
* Reuse method to convert key to passphrase
* Creating instance fail when inject ssh key in cells mode
* Fix the usage output of the nova-idmapshift command
* Make test\_revoke\_cert\_project\_not\_found\_chdir\_fails deterministic
* Reduce the number of Instance.get\_by\_uuid calls
* Remove 'v3' from comments in Nova API code
* xapi: cleanup volume sr on live migration rollback
* Hyper-V: Implements attach\_interface and detach\_interface method
* Remove unnecessary 'context' param from quotas reserve method call
* VMware: Replace get\_dynamic\_properties with get\_object\_properties\_dict
* VMware: Replace get\_dynamic\_property with get\_object\_property
* Return empty PciDevicePoolList obj instead of None
* libvirt: add debug logging for lxc teardown paths
* Add API schema for different\_cell filter
* Add microversion bump exception for scheduler-hint
* Use six.text\_type instead of str in serialize\_args
* Set vif and allocated when associating fixed ip
* Fix ScaleIO commands in rootwrap filters
* Add missing information to docstring
* Add microversion rule when adding attr to request
* Check unknown event name when create external server event
* Don't expect meta attributes in object\_compat that aren't in the db obj
* CONF.allow\_resize\_to\_same\_host should check only once in controller
* Updated from global requirements
* Fix debug log format in object\_backport\_versions()
* Add version 3.0 of conductor RPC interface
* Remove and deprecate conductor object\_backport()
* Invalidate AZ cache when the instance AZ information is different
* Consolidate code to get the correct availability zone of an instance
* Fix order of arguments in assertEqual
* Ironic: Call unprovison for nodes in DEPLOYING state
* libvirt: use guest as parameter for get serial ports
* Separate API schemas for v2.0 compatible API
* api: allow any scheduler hints
* API: Handle InstanceUnknownCell exceptions
* Updated from global requirements
* Add some explanation for the instance AZ field
* Remove 'v3' from extension code
* Remove more 'v3' references from the code
* Sorting and pagination params used as filters
* Freeze v1 Instance and InstanceList schema hashes
* Imported Translations from Transifex
* Remove unused parameter overwrite in elevated
* Add missing delete policies in the sample file
* Fix a few typos
* ironic: convert driver to use nova.objects.ImageMeta
* objects: convert config drive to use ImageMeta object
* VMware: ensure that instance is deleted when volume is missing
* libvirt:Rsync compression removed
* xenapi: Support extra tgz images that with only a single VHD
* Hyper-V: Fixes snapshoting inexistent VM issue
* Hyper-V: Adds RDPConsoleOps unit tests
*  Rectify spelling mistake in nova
* libvirt: Add a finish log
* Remove old unused baremetal rootwrap filters
* Relax restrictions on server name
* network\_request\_obj: Clean up outdated code
* Object: Fix KeyError when loading instance from db
* Add os-brick's scsi\_id command to rootwrap
* Expose keystoneclient's session and auth plugin loading parameters
* Remove and deprecate conductor compute\_node\_create()
* Drop unused conductor manager vol\_usage\_update() mock
* Add constraint target to tox.ini
* nova-net: fix missing log variable in deallocate\_fixed\_ip
* Provide working SQLA\_VERSION attribute
* Don't "lock" the DB on expand dry run
* New sensible network bandwidth quota values in Nova tests
* Fix Cells gate test by modifying the regressions regex
* Add functional test for server group
* Reject the cell name include '!', '.' and '@' for Nova API
* Hyper-V: Adds HyperVDriver unit tests
* claims: Remove compat code with instance dicts
* Add Instance and InstanceList v2.0 objects
* Teach conductor to do manifest-based object\_class\_action() things
* Make the conductor fixture use version manifests
* Update objects test infrastructure for multiple versions
* Refactor Instance tests to use objects.Instance
* Fix an issue with NovaObjectRegistry hook
* Pull out the common bits of InstanceList into \_BaseInstanceList
* Pull out the common bits of Instance into \_BaseInstance
* Clarify max\_local\_block\_devices config option usage
* Allow to use autodetection of volume device path
* Remove the blacklisted nova-cells shelve tests
* Update from global requirements
* objects: Hook migration object into Instance
* Fix order of arguments in assertEqual
* Fix order of arguments in assertEqual
* Detach and terminate conn if Cinder attach fails
* [libvirt] Move cleanup of imported files to imagebackend
* hyperv: convert driver to use nova.objects.ImageMeta

12.0.0.0b3
----------

* Add notes explaining vmware's suds usage
* Adds instance\_uuid index for instance\_system\_metadata
* Handle nova-compute failure during a soft reboot
* Fix mistake in UT:test\_detach\_unattached\_volume
* Fix RequestSpec.instance\_group hydration
* Remove unused root\_metadata method of BlockDeviceMappingList
* Add JSON-Schema note to api\_plugins.rst
* Compute: update finish\_revert\_resize log to have some context
* Revert "Remove references to suds"
* Fix API directories on the doc
* Fix incomplete error message of quota exceeded
* Add secgroup param checks for Neutron
* Implement manifest-based backports
* Delete orphaned instance files from compute nodes
* Fixed incorrect keys in cpu\_pinning
* api: deprecate the api v2 extension configuration
* Remove the v3 word from help message of api\_rate\_limit option
* Use the same pci\_requests field for all filters and HostManager
* objects: Add MigrationContext object
* Don't query database with an empty list of tags for creation
* Remove duplicate NullHandler test fixture
* Add migration policy to upgrades devref
* Add warning log when deprecated v2 and v3 code get used
* Update ComputeNode values with allocation ratios in the RT
* Update HostManager and filters to use ComputeNode ratios
* Add cpu\_allocation\_ratio and ram\_allocation\_ratio to ComputeNode
* VMware: adds support for rescue image
* filter pre\_assigned\_dev\_names when finding disk dev
* Fix order of arguments in assertEqual
* Fix order of arguments in assertEqual
* Fix order of arguments in assertEqual
* rt: Rewrite abort and update\_usage tests
* Cleanup RT \_instance\_in\_resize\_state()
* Compute: be consistent with logs about NotImplemented methods
* VMware: pass network info to config drive
* Remove/deprecate conductor instance\_update()
* Make compute manager instance updates use objects
* xenapi: add necessary timeout check
* Fix permission issue of server group API
* Make query to quota usage table order preserved
* Change v3 to v21 for devref api\_plugins.rst
* Remove duplicate exception
* Don't trace on InstanceInfoCacheNotFound when refreshing network info\_cache
* Cells: Improve block device mapping update/create calls
* Rm openstack/common/versionutils from setup.cfg
* Add a warning in the microversion docs around the usage of 'latest'
* Fix exception message mistake in WSGI service
* Replace "vol" variable by "bdm"
* Remove v3 references in unit test 'contrib'
* Removed unused dependency: discover
* Rename tests so that they are run
* Adds unit tests to test\_common.py
* db: Add the migration\_context to the instance\_extra table
* tests: Make test\_claims use Instance object
* api: use v2.1 only in api-paste.ini
* VMware: Update to return the correct ESX iqn
* Pass block\_device\_info when delete an encrypted lvm
* Handle neutron exception on bad floating ip create request
* API: remove unused parameter
* Consider that all scheduler calls are IO Ops
* Add RequestSpec methods for primitiving into dicts
* Add a note about the 400 response not requiring a microversion
* api: deprecate the concept of extensions in v2.1
* Fix precedence of image bdms over image mappings
* Cells: remove redundant check if cells are enabled
* Strip the extra properties out when using legacy v2 compatible middleware
* Remove unused sample files from /doc dir
* Expose VIF net-id attribute in os-virtual-interfaces
* libvirt: take account of disks in migration data size
* Add deprecated\_for\_removal parm for deprecated neutron\_ops
* Use compatibility methods from oslo
* compute: Split the rebuild\_instance method
* Allow for migration object to be passed to \_move\_claim
* rt: move filtering of migration by type lower in the call stack
* rt: generalize claim code to be useful for other move actions
* libvirt: make guest to return power state
* libvirt: move domain info to guest
* Xen: import migrated ephemeral disk based on previous size
* cleanup NovaObjectDictCompat from external\_event
* cleanup NovaObjectDictCompat from agent
* Catch invalid id input in service\_delete
* Convert percent metrics back into the [0, 1] range
* Cleanup for merging v2 and v2.1 functional tests
* Remove doc/source/api and doc/build before building docs
* Fixes a typo on nova.tests.unit.api.ec2.test\_api.py
* Add a note about the 403 response not requiring a microversion
* Pre-load expected attrs that the view builder needs for server details
* Remove 'Retry-After' in server create and resize
* Remove debug log message in SG API constructor
* Updated from global requirements
* Refactor test cases for live-migrate error case
* Fixes Bug "destroy\_vm fails with HyperVException"
* libvirt: refactor \_create\_domain\_setup\_lxc to use Image.get\_model
* Set task\_state=None when booting instance failed
* libvirt: Fix snapshot delete for network disk type for blockRebase op
* [Ironic]Not count available resources of deployed ironic node
* Catch OverQuota in volume create function
* Don't allow instance to overcommit against itself
* n-net: add more debug logging to release\_fixed\_ip
* Fix scheduler code to use monitor metric objects
* objects: add missing enum values to DiskBus field
* Move objects registration in tests directory
* xenapi: convert driver to use nova.objects.ImageMeta
* libvirt: convert driver to use nova.objects.ImageMeta
* Updated from global requirements
* VMware: Delete vmdk UUID during volume detach
* Move common sample files methods in test base class
* Share server POST sample file for microversion too
* Fix remote\_consoles microversion 2.8 not to run on /v3
* Remove merged sample tests and file for v2 tests
* Move "versions" functional tests in v2.1 tests
* Nil out inst.host and inst.node when build fails
* Fix link's href to consider osapi\_compute\_link\_prefix
* Fix abnormal quota usage after restore by admin
* Specify current directory using new cwd param in processutils.execute
* Remove and deprecate unused conductor method vol\_usage\_update()
* Replace conductor proxying calls with the new VolumeUsage object
* Add a VolumeUsage object
* Updated from global requirements
* Move CPU and RAM allocation ratios to ResourceTracker
* Pull the all\_tenants search\_opts checking code into a common utility
* Gate on nova.conf.sample generation
* libvirt: use proper disk\_info in \_hard\_reboot
* Update obj\_reset\_changes signatures to match
* libvirt: only get bdm in \_create\_domain\_setup\_lxc if booted from volume
* libvirt: \_create\_domain\_setup\_lxc needs to default disk mapping as a dict
* libvirt: add docstring for \_get\_instance\_disk\_info
* Add rootwrap daemon mode support
* Removed duplicated keys in dictionary
* Xenapi: Correct misaligned partitioning
* libvirt:Remove duplicated check code for config option sysinfo\_serial
* Test cases for better handling of SSH key comments
* Allow compute monitors in different namespaces
* cleanup NovaObjectDictCompat from hv\_spec
* cleanup NovaObjectDictCompat from quota
* Correct a wrong docstring
* Create RequestSpec object
* Clarify API microversion docs around handling 500 errors
* libvirt: Fix KeyError during LXC instance boot
* Xenapi: Handle missing aggregate metadata on startup
* Handle NotFound exceptions while processing network-changed events
* Added processing /compute URL
* libvirt: enable live migration with serial console
* Remove the useless require\_admin\_context decorator
* Correct expected error code for os-resetState action
* libvirt: add helper methods for getting guest devices/disks
* compute: improve exceptions related to disk size checks
* Improve error logs for start/stop of locked instance
* pci: Remove nova.pci.device module
* pci: Remove objects.InstancePCIRequests.save()
* Remove unused db.security\_group\_rule\_get\_by\_security\_group\_grantee()
* Revert "Make nova-network use conductor for security groups refresh"
* Make compute\_api.trigger\_members\_refresh() issue a single db call
* Fix cells use of legacy bdms during local instance delete operations
* Hyper-V: Fixes serial port issue on Windows Threshold
* Consolidate initialization of instance snapshot metadata
* Fix collection of metadata for a snapshot of a volume-backed instance
* Remove unnecessary ValueError exception
* Update log's level when backup a volume backend instance
* The API unit tests for serial console use http instead of ws
* Drop scheduler RPC 3.x support
* Move quota delta reserve methods from api to utils
* nova.utils.\_get\_root\_helper() should be public
* Host manager: add in missing log hints
* Removing extension "OS-EXT-VIF-NET" from v2.1 extension-list
* nova-manage: fix typo in docstring about mangaging
* hyper-v: mock time.sleep in test\_rmtree
* Remove tie between system\_metadata and extra.flavor
* Fixes Hyper-V boot from volume fails when using ephemeral disk
* Re-write way of compare APIVersionRequest's
* Store "null api version" as 0.0
* add docstring to virt driver interface (as-is) [1 of ?]
* Remove last of the plugins/v3 from unit tests
* Rename classes containing 'v3' to 'v21'
* Move the v2 api\_sample functional tests
* Updated from global requirements
* Add logging when filtering returns nothing
* libvirt: cleanup() serial\_consoles after instance failure
* Don't query database with an empty list of tags for IN clause
* Libvirt: Make live\_migration\_bandwidth help msg more meaning
* Move V2.1 API unittest to top level directory
* Neutron: Check port binding status
* Move legacy v2 api smaple tests
* conductor: update comments for rpc and use object
* Load flavor when getting instances for simple-tenant-usage
* Make pagination tolerate a deleted marker
* Updated from global requirements
* Cleanup HTTPRequest for security\_groups test
* Add api samples impact to microversion devref
* Use min and max on IntOpt option types
* Add hacking check for eventlet.spawn()
* Updated from global requirements
* neutron: filter None port\_ids from ports list in \_unbind\_ports
* VMware: treat deletion exception with attached volumes
* VMware: ensure that get\_info raises the correct exception
* Allow resize root\_gb to 0 for volume-backed instances
* Limit parallel live migrations in progress
* Validate quota class\_name
* Move V2 API unittests under legacy\_v2 directory
* Updated from global requirements
* Replace get\_cinder\_client\_version in cinder.py
* Avoid querying for Service in resource tracker
* Remove/deprecate unused parts of the compute node object
* Make ComputeNode.service\_id nullable to match db schema
* Add missing rules in policy.json
* Add V2.1 API tests parity with V2 API tests
* Fixed indentation
* Simplify interface for creating snapshot of volume-backed instance
* Add instance action events for live migration
* Remove 'v3' directory for v2.1 json-schemas
* Move v2.1 code to the main compute directory - remove v3 step3
* libvirt: qemu-img convert should be skipped when migrating
* Add version counter to Service object
* Fix the peer review link in the 'Patches and Reviews' policy section
* Handle port delete initiated by neutron
* Don't check flavor disk size when booting from volume
* libvirt: make instance compulsory in blockinfo APIs
* xapi: ensure pv driver info is present prior to live-migration
* Move existing V2 to legacy\_v2 - step 2
* Move existing V2 to legacy\_v2
* Return v2 version info with v2 legacy compatible wrapper
* Ironic: Add numa\_topology to get\_available\_resource return values
* Fix three typos on nova/pci directory
* Imported Translations from Transifex
* pci: Use PciDeviceList for PciDevTracker.pci\_devs
* pci: Remove get\_pci\_devices\_filter() method
* pci: Move whitelist filtering inside PCI tracker
* libvirt: call host.get\_capabilities after checking for bad numa versions
* libvirt: log when BAD\_LIBVIRT\_NUMA\_VERSIONS detected
* Use string substitution before raising exception
* Hyper-V: deprecates support for Windows / Hyper-V Server 2008 R2
* VMware: Do not untar OVA on the file system
* Add hacking check for greenthread.spawn()
* Ironic: Use ironicclient native retries for Conflict in ClientWrapper
* Prevent (un)pinning unknown CPUs
* libvirt: use instance UUID with exception InstanceNotFound
* Fix notify\_decorator errors
* VMware: update supported vsphere 6.0 os types
* libvirt: convert Scality vol driver to LibvirtBaseFileSystemVolumeDriver
* libvirt: convert Quobyte driver to LibvirtBaseFileSystemVolumeDriver
* pci: Use fields.Enum type for PCI device type
* pci: Use fields.Enum type for PCI device status
* More specific error messages on building BDM
* Ensure test\_models\_sync() works with new Alembic releases
* Hyper-V: Adds VolumeOps unit tests
* Hyper-V: Adds MigrationOps unit tests
* Suppress not image properties for image metadata from volume
* Add non-negative integer and float fields
* Fix DeprecationWarning when using BaseException.message
* Added support for specifying units to hw:mem\_page\_size
* Compute: use instance object for refresh\_instance\_security\_rules
* libvirt: convert GPFS volume driver to LibvirtBaseFileSystemVolumeDriver
* Updated from global requirements
* Add os-brick based LibvirtVolumeDriver for ScaleIO
* docs: add link to liberty summit session on v2.1 API
* Refactor unit test for InstanceGroup objects
* Don't pass the service catalog when making glance requests
* libvirt: check min required qemu/libvirt versions on s390/s390x
* libvirt: ensure LibvirtConfigGuestDisk parses readonly/shareable flags
* libvirt: set caps on maximum live migration time
* libvirt: support management of downtime during migration
* cleanup NovaObjectDictCompat from numa object
* Fix test\_relationships() for subobject versions
* libvirt: don't open connection in driver constructor
* Skip SO\_REUSEADDR tests on BSD
* \_\_getitem\_\_ method not returning value
* Compute: replace incorrect instance object with dict
* Fix live-migrations usage of the wrong connector information
* Honour nullability constraints of Glance schema in ImageMeta
* Change docstring in test to comment
* libvirt: convert GlusterFS driver to LibvirtBaseFileSystemVolumeDriver
* libvirt: convert SMBFS vol driver to LibvirtBaseFileSystemVolumeDriver
* libvirt: convert NFS volume driver to LibvirtBaseFileSystemVolumeDriver
* Introduce LibvirtBaseFileSystemVolumeDriver
* Add test to check relations at or below current
* Add documentation for the nova-cells command
* libvirt:Rsync remote FS driver was added
* Clean the deprecated noauth middleware
* Add os\_brick-based VolumeDriver for HGST connector
* libvirt: add os\_admin\_user to use with set admin password
* Fixed incorrect behaviour of method \_check\_instance\_exists
* Squashing down update method
* Fix the wrong file name for legacy v2 compatible wrapper functional test
* Add scenario for API sample tests with legacy v2 compatible wrapper
* Skip additionalProperties checks when LegacyV2CompatibleWrapper enabled
* Libvirt: correct libvirt reference url link when live-migration failed
* libvirt: enable virtio-net multiqueue
* Replacing unichr() with six.unichr() and reduce with six.moves.reduce()
* Fix resource leaking when consume\_from\_instance raise exception
* :Add documentation for the nova-idmapshift command
* RBD: Reading rbd\_default\_features from ceph.conf
* New nova API call to mark nova-compute down
* libvirt: move LibvirtISCSIVolumeDriver into it's own module
* libvirt: move LibvirtNETVolumeDriver into it's own module
* libvirt: move LibvirtISERVolumeDriver into it's own module
* libvirt: move LibvirtNFSVolumeDriver into it's own module
* allow live migration in case of a booted from volume instance
* Handle MessageTimeout to MigrationPreCheckError
* Create a new dictionary for type\_data in VMwareAPIVMTestCase class
* resource tracker style pci resource management
* Added missed '-' to the rest\_api\_version\_history.rst
* Imported Translations from Transifex
* Remove db layer hard-code permission checks for keypair
* Fix a couple dead links in docs
* cleanup NovaObjectDictCompat from virt\_cpu\_topology
* Adding user\_id handling to keypair index, show and create api calls
* Updated from global requirements
* Remove legacy flavor compatibility code from Instance
* libvirt: Fix root device name for volume-backed instances
* Fix few typos in nova code and docs
* Helper script for running under Apache2
* Raise NovaException for missing/empty machine-id
* Fixed random failing of test\_describe\_instances\_with\_filters\_tags
* libvirt: enhance libvirt to set admin password
* libvirt: rework quiesce to not share "sensitive" informations
* Metadata: support proxying loadbalancers
* formely is not correct
* Remove 'scheduled\_at' - DB cleanup
* Remove unnecessary executable permission
* Neutron: add in API method for updating VNIC index
* Xen: convert image auto\_disk\_config value to bool before compare
* Make BaseProxyTestCase.test\_proxy deterministic wrt traffic/verbose
* Cells: Handle instance\_destroy\_at\_top failure
* cleanup NovaObjectDictCompat from virtual\_interface
* Fix test mock that abuses objects
* VMware: map one nova-compute to one VC cluster
* VMware: add serial port device
* Handle SSL termination proxies for version list
* Use urlencode instead of dict\_to\_query\_str function
* libvirt: move LibvirtSMBFSVolumeDriver into it's own module
* libvirt: move LibvirtAOEVolumeDriver into it's own module
* libvirt: move LibvirtGlusterfsVolumeDriver into it's own module
* libvirt: move LibvirtFibreChannelVolumeDriver into it's own module
* VMware: set create\_virtual\_disk\_spec method as local
* Retry live migration on pre-check failure
* Handle config drives being stored on rbd
* Change List objects to use obj\_relationships
* Fixes delayed instance lifecycle events issue
* libvirt-vif: Allow to configure a script on bridge interface
* Include DiskFilter in the default list
* Adding support for InfiniBand SR-IOV vif type
* VMware: Add support for swap disk
* libvirt: Add logging for dm-crypt error conditions
* Service group drivers forced\_down flag utilization
* libvirt: Replace stubs with mocks for test\_dmcrypt
* clarify docs on 2.9 API change
* Remove db layer hard-code permission checks for instance\_get\_all\_hung\_in\_rebooting
* Undo tox -e docs pip install sphinx workaround
* Set autodoc\_index\_modules=True so tox -e docs builds module docs again
* Allow NUMA based reporting for Monitors
* libvirt: don't add filesystem disk to parallels containers unconditionally
* objects: add hw\_vif\_multiqueue\_enabled image property
* Prepare for unicode enums from Oslo
* rootwrap: remove obsolete filters for baremetal
* Create class hierarchy for tasks in conductor
* return more details on assertJsonEqual fail
* Fix IronicHostManager to skip get\_by\_host() call
* Store correct VirtCPUTopology
* Add documentation for block device mapping
* Show 'locked' information in server details
* VMware: add resource limits for disk
* VMware: store extra\_specs object
* VMware: Resource limits for memory
* VMware: create common object for limits, reservations and shares
* VMware: add support for cores per socket
* Add DiskNotFound and VolumeNotFound test
* Not check rotation at compute level
* Instance destroyed if ironic node in CLEANWAIT
* Ironic: Better handle InstanceNotFound on destroy()
* Fix overloading of block device on boot by device name
* tweak graphviz formatting for readability
* libvirt: rename parallels driver to virtuozzo
* libvirt: Add macvtap as virtual interface (vif) type to Nova's libvirt driver
* cells: document upgrade limitations/assumptions
* rebuild: make sure server is shut down before volumes are detached
* Implement compare-and-swap for instance update
* docs: add a placeholder link to mentoring docs
* libvirt: Kill rsync/scp processes before deleting instance
* Updated from global requirements
* Add console allowed origins setting
* libvirt: move the LibvirtScalityVolumeDriver into it's own module
* libvirt: move the LibvirtGPFSVolumeDriver into it's own module
* libvirt: move the LibvirtQuobyteVolumeDriver into the quobyte module
* libvirt: move volume/remotefs/quobyte modules under volume subdir
* Add missing policy for limits extension
* Move to using ovo's remotable decorators
* Base NovaObject on VersionedObject
* Document when we should have a microversion
* libvirt: do relative block rebase only with non-null base
* Add DictOfListOfStrings type of field
* Get py34 subunit.run test discovery to work
* Enable python34 tests for nova/tests/unit/scheduler/test\*.py
* libvirt: mark NUMA huge page mappings as shared access
* libvirt:Add a driver API to inject an NMI
* virt: convert hardware module to use nova.objects.ImageMeta

12.0.0.0b2
----------

* Replace openssl calls with cryptography lib
* libvirt: move lvm/dmcrypt/rbd\_utils modules under storage subdir
* Fix Instance object usage in test\_extended\_ips tests
* Fix test\_extended\_server\_attributes for proper Instance object usage
* Fix test\_security\_groups to use Instance object properly
* Refactor test\_servers to use instance objects
* Switch to using os-brick
* Updated from global requirements
* VMware: remove redundant check for block devices
* Remove unused decorator on attach/detach volume
* libvirt: test capability for supports\_migrate\_to\_same\_host
* Added removing of tags from instance after its deletion
* Remove unused import of the my\_ip option from the manager
* Scheduler: enhance debug messages for multitenancy aggregates
* VMware: Handle missing vmdk during volume detach
* Running microversion v2.6 sample tests under '/v2' endpoint
* VMware: implement get\_mks\_console()
* Add MKS protocol for remote consoles
* Add MKS console support
* libvirt: improve logging in the driver.py code
* Fix serializer supported version reporting in object\_backport
* Updated from global requirements
* Revert "Add error message to failed block device transform"
* tox: make it possible to run pep8 on current patch only
* Fix seven typos on nova documentation
* Add two fields to ImageMetaProps object
* Check flavor type before add tenant access
* Switch to the oslo\_utils.fileutils
* hypervisor support matrix: fix snapshot for libvirt Xen
* libvirt: implement get\_device\_name\_for\_instance
* libvirt: Always default device names at boot
* Remove unused import of the compute\_topic option from the DB API
* Remove unused call to \_get\_networks\_by\_uuids()
* libvirt: fix disk I/O QOS support with RBD
* Updated from global requirements
* Remove unnecessary oslo namespace import checks
* VMware: Fixed redeclared CONF = cfg.CONF
* Execute \_poll\_shelved\_instances only if shelved\_offload\_time is > 0
* Switch to oslo.reports
* Support Network objects in set\_network\_host
* Fix Filter Schedulers doc to refer to all\_filters
* Fixup uses of mock in hyperv tests
* Cleanup log lines in nova.image.glance
* Revert "Add config drive support for Virtuozzo containers"
* Virt: fix debug log messages
* Virt: use flavor object and not flavor dict
* Add VersionPredicate type of field
* Remove unnecessary method in FilterScheduler
* Use utf8\_bin collation on the flavor extra-specs table in MySQL
* docs: clear between current vs future plans
* cleanup NovaObjectDictCompat subclassing from pci\_device
* libvirt: make unit tests concise by setup guest object
* libvirt: introduce method to wait for block device job
* Decouple instance object tests from the api fakes module
* Fixed typos in self parameter
* Hyper-V: restart serial console workers after instance power change
* Only work with ipv4 subnet metadata if one exists
* Do not import using oslo namespace
* Refresh instance info cache within lock
* Remove db layer hard-code permission checks for fixed\_ip\_associate\_\*
* Add middleware filterout Microversions http headers
* Correct backup\_type param description
* Fix a request body template for secgroup tests
* Images: fix invalid exception message
* Updated from global requirements
* rebuild: fix rebuild of server with volume attached
* objects: send PciDeviceList 1.2 to all code that can handle it
* Fix libguestfs failure in test\_can\_resize\_need\_fs\_type\_specified
* Fix the incorrect PciDeviceList version number
* objects: Don't import CellMapping from the objects module
* Deprecate the osapi\_v3.enabled option
* Remove conductor api from resource tracker
* Fix test\_tracker object mocks
* Fix Python 3 issues in nova.utils and nova.tests
* Remove db layer hard-code permission checks for instance\_get\_all\_by\_host\_and\_not\_type
* Support all\_tenants search\_opts for neutron
* libvirt : remove broken olso\_config choices option
* Convert instance\_type to object in prep\_resize
* VMware: clean up exceptions
* Revert "Remove useless db call instance\_get\_all\_hung\_in\_rebooting"
* VMware: Use virtual disk size instead of image size
* Remove db layer hard-code permission checks for provider\_fw\_rule\_\*
* Remove db layer hard-code permission checks for archive\_deleted\_rows\*
* Revert "Implement compare-and-swap for instance update"
* Add tool to build a doc latex pdf
* make test\_save\_updates\_numa\_topology stable across python versions
* Update HACKING.rst for running tests and building docs
* Cleanup quota\_class unittest with appropriate request context
* Remove db layer hard-code permission checks for quota\_class\_create/update
* Remove db layer hard-code permission checks for quota\_class\_get\_all\_by\_name
* Improve functional test base for microversion
* Remove db layer hard-code permission checks for reservation\_expire
* Introducing new forced\_down field for a Service object
* Use stevedore for loading monitor extensions
* libvirt: Remove dead code path in method clear\_volume
* Switch to oslo.service library
* Include project\_id in instance metadata
* Convert test\_compute\_utils to use Instance object
* Fix for mock-1.1.0
* Port crypto to Python 3
* Add HostMapping object
* Remove useless db call instance\_get\_all\_hung\_in\_rebooting
* Cleanup unused method fake\_set\_snapshot\_id
* Handle KeyError when volume encryption is not supported
* Expose Neutron network data in metadata service
* Build Neutron network data for metadata service
* Implement compare-and-swap for instance update
* Added method exists to the Tag object
* Add DB2 support
* compute: rename ResizeClaim to MoveClaim
* Fix the little spelling mistake of the comment
* Remove db layer hard-code permission checks for quota\_create/update
* Fix the typo from \_pre\_upgrade\_294 to \_pre\_upgrade\_295 for tests/unit/db/test\_migration
* Ironic:check the configuration item api\_max\_retries
* Modified testscenario for micro version 2.4
* Add some notifications to the evacuate path
* Make evacuate leave a record for the source compute host to process
* Fix incorrect enum in Migration object and DB model
* Refactoring of the os-services module
* libvirt: update docstring in blockinfo module for disk\_info
* Ignore bridge already exists error when creating bridge
* libvirt: handle rescue flag first in blockinfo.get\_disk\_mapping
* libvirt: update volume delete snapshot to use Guest
* libvirt: update live snapshot to use Guest object
* libvirt: update swap volume to use Guest
* libvirt: introduce GuestBlock to wrap around Block API
* libvirt: rename GuestVCPUInfo to VCPUInfo
* libvirt: save the memory state of guest
* removed unused method \_get\_default\_deleted\_value
* Remove flavor migration from db\_api and nova-manage
* Rework monitor plugin interface and API
* Adds MonitorMetric object
* virt: add get\_device\_name\_for\_instance to the base driver class
* libvirt: return whether a domain is persistent
* Cells: fix indentation for configuration variable declaration
* VMware: add unit tests for vmops attach and detach interface
* Remove unneeded OS\_TEST\_DBAPI\_ADMIN\_CONNECTION
* Switch from MySQL-python to PyMySQL
* virt: fix picking CPU topologies based on desired NUMA topology
* Port test\_exception to Python 3
* devref: virtual machine states and transitions
* Consolidate the APIs for getting consoles
* Remove db layer hard-code permission checks for floating\_ip\_dns
* Fix typo in model doc string
* virt: Fix AttributeError for raw image format
* log meaningful error message on download exception
* Updated from global requirements
* Add bandit for security static analysis testing
* Handle unexpected clear events call
* Make on\_shared\_storage optional in compute manager
* snapshot: Add device\_name to the snapshot bdms
* compute: Make swap\_volume with resize updates BDM size
* Make Nova better at keeping track of volume sizes in BDM
* API: make sure a blank volume with no size is rejected
* Ironic: Improve driver logs
* Drop MANIFEST.in - it's not needed with PBR
* Libvirt: Define system\_family for libvirt guests
* Convert RT compute\_node to be a ComputeNode object
* glance:check the num\_retries option
* tests: Move test\_resource\_tracker to Instance objects
* Remove compat\_instance()
* Enable python34 tests for nova/tests/unit/objects/test\*.py
* Soft delete system\_metadata when destroy instance
* Remove python3 specific test-requirements file
* Try luksFormat up to 3 times in case the device is in use
* rootwrap: update ln --symbolic filter for FS and FC type volume drivers
* Add wording to error message in TestObjectVersions.test\_relationships
* Close temporary files in virt/disk/test\_api.py
* Add BlockDeviceType enum field
* Add BlockDeviceDestinationType enum field
* Add BlockDeviceSourceType enum field
* Avoid recursion in object relationships test
* tests: move a test to the proper class in test\_resource\_tracker
* Remove db layer hard-code permission checks for network\_set\_host
* Block subtractive operations in migrations for Kilo and beyond
* Remove db layer hard-code permission checks for network\_disassociate
* libvirt: Correct domxml node name
* Test relationships of List objects
* libvirt: configuration for interface driver options
* Fix Python 3 issues in nova.db.sqlalchemy
* Update test\_db\_api for oslo.db 2.0
* Fix is\_image\_extendable() thinko
* Validate maximum limit for quota
* utils: ignore block device mapping in system metadata
* libvirt: add in missing doc string for hypervisor\_version
* Remove useless policy rule from fake\_policy.py
* Replace ascii art architecture diagram with svg image
* Adds MonitorMetricTypeField enum field
* Unfudge tox -e genconfig wrt missing versionutils module
* virt: update doctrings
* hypervisor support matrix: add feature "evacuate"
* XenAPI: Refactor rotate\_xen\_guest\_logs to avoid races
* hypervisor support matrix: add feature "serial console"
* hypervisor support matrix: add CLI commands to features
* Fix typos detected by toolkit misspellings
* hypervisor support matrix: fix "evacuate" for s390 and hyper-v
* Make live migration create a migration object record
* Cells: add instance cell registration utility to nova-manage
* fix typos in docs
* Logging corrected
* Check mac for instance before disassociate in release\_fixed\_ip
* Add the rule of separate plugin for Nova REST API in devref
* Use flavor object in compute manager

12.0.0.0b1
----------

* Changes conf.py for Sphinx build because oslosphinx now contains GA
* Fix testing object fields with missing instance rows
* Change group controller of V2 test cases
* Reduce window for allocate\_fixed\_ip / release\_fixed\_ip race in nova-net
* Make NoValidHost exceptions clearer
* Hyper-V: Fixes method retrieving free SCSI controller slot on V1
* Refactor network API 'get\_instance\_nw\_info'
* Removed extra '-' from rest\_api\_version\_history.rst
* Remove an useless variable and fix a typo in api
* VMware: convert driver to use nova.objects.ImageMeta
* Bypass ironic server not available issue
* Fix test\_create\_security\_group\_with\_no\_name
* Remove unused "id" and "rules" from secgroup body
* cells: add devstack/tempest-dsvm-cells-rc for gating
* Add common function for v2.1 API flavor\_get
* Fix comment typo
* Fix up instance flavor usage in compute and network tests
* Fix up ec2 tests for flavors on instances
* Fix up xenapi tests for instance flavors
* Fix up some bits of resource\_tracker to use instance flavors
* Register the vnc config options under group 'vnc'
* Cells: cell scheduler anti-affinity filter
* Cells: add in missing unit test for get\_by\_uuid
* VMware driver: Increasing speed of downloading image
* Hyper-V: Fix virtual hard disk detach
* Add flag to force experimental run of db contract
* Make readonly field tests use exception from oslo.versionedobjects
* Fixes "Hyper-V destroy vm fails on Windows Server 2008R2"
* Add microversion to allow server search option ip6 for non-admin
* Updated from global requirements
* VMware: Handle port group not found case
* Imported Translations from Transifex
* libvirt: use correct translation format
* Add explicit alembic dependency
* network: add more debug logging context for race bug 1249065
* Add virt resource update to ComputeNode object
* xenapi: remove bittorrent entry point lookup code
* Use oslo-config-generator instead of generate\_sample.sh
* Add unit tests for PCI utils
* Support flavor object in migrate\_disk\_and\_power\_off
* Remove usage of WritableLogger from oslo\_log
* libvirt: Don't fetch kernel/ramdisk files if you already have them
* Allow non-admin to list all tenants based on policy
* Remove redundant policy check from security\_group\_default\_rule
* Return bandwidth usage after updating
* Update version for Liberty
* neutron: remove deprecated allow\_duplicate\_networks config option
* Validate maximum limit for integer
* Improve the ability to resolve capabilities from Ironic
* Fix the wrong address ref when the fixed\_ip is invalid
* The devref for Nova stable API
* Fix wrong check when use image in local
* Fixes TypeError when libvirt version is BAD\_LIBVIRT\_CPU\_POLICY\_VERSIONS

12.0.0a0
--------

* Remove hv\_type translation shim for powervm
* cells: remove deprecated mute\_weight\_value option
* Make resize api of compute manager to send flavor object
* VMware: detach cinder volume when instance destroyed
* Add unit tests for the exact filters
* test: add MatchType helper class as equivalent of mox.IsA
* Validate int using utils.validate\_integer method
* VMware: use min supported VC version in fake driver
* Updated from global requirements
* Added documentation around database upgrades
* Avoid always saving flavor info in instance
* Warn when CONF torrent\_base\_url is missing slash
* Raise invalid input if use invalid ip for network to attach interface
* Hyper-V: Removes old instance dirs after live migration
* DB downgrades are no longer supported
* Add Host Mapping table to API Database
* VMware: verify vCenter server certificate
* Implement online schema migrations
* Hyper-V: Fixes live migration configdrive copy operation
* Avoid resizing disk if the disk size doesn't change
* Remove openstack/common/versionutils module
* Fix TestObjEqualPrims test object registration
* Remove references to suds
* VMware: Remove configuration check
* Remove and deprecate conductor task\_log methods
* Remove unused compute utils methods
* Make instance usage audit use the brand new TaskLog object
* Add a TaskLog object
* Updated from global requirements
* Fix noVNC console access for an IPv6 setup
* hypervisor support matrix: add status "unknown"
* VMware: typo fix in config option help
* Sync with latest oslo-incubator
* Associating of floating IPs corrected
* Minor refactor in nova.scheduler.filters.utils
* Cleanup wording for the disable\_libvirt\_livesnapshot workaround option
* Remove cell api overrides for force-delete
* libvirt: convert imagebackend to support nova.virt.image.model classes
* virt: convert disk API over to use nova.virt.image.model
* Cells: Skip initial sync of block\_device\_mapping
* Pass Down the Instance Name to Ironic Driver
* Handle InstanceNotFound when sending instance update notification
* Add an index to virtual\_interfaces.uuid
* Updated from global requirements
* Add config drive support for Virtuozzo containers
* Update formatting of microversion 2.4 documentation
* Consolidates scheduler utils tests into a single file
* Send Instance object to cells instance\_update\_at\_top
* VMware: use vCenter instead of VC
* fix "down" nova-compute service spuriously marked as "up"
* Improve formatting of rest\_api\_version\_history
* Link to microversion history in docs
* libvirt: fix live migration handling of disk\_info
* libvirt: introduce method to get domain XML
* libvirt: introduce method detach\_device to Guest object
* Remove db layer hard-code permission checks for quota\_usage\_update
* pass environment variables of proxy to tox
* Remove db layer hard-code permission checks for quota\_get\_all\_\*
* Fixed some misspellings
* Clean up Fake\_Url for unit test of flavor\_access
* Updated from global requirements
* Add AggregateTypeAffinityFilter multi values support
* volume: log which encryptor class is being used
* VMware: Don't raise exception on resize of 0 disk
* Hyper-V: sets supports\_migrate\_to\_same\_host capability
* libvirt: remove \_get\_disk\_xml to use get\_disk from Guest
* libvirt: introduce method to attach device
* libvirt: update tests to use Mock instead of MagicMock
* libvirt: Remove unnecessary JSON conversions
* objects: fix parsing of NUMA cpu/mem properties
* compute: remove get\_image\_metadata method
* compute: only use non\_inheritable\_image\_properties if snapshotting
* objects: add os\_require\_quiesce image property
* libvirt: make default\_device\_names DRY-er
* virt: Move building the block\_device\_info dict into a method
* Objects: update missing adapter types
* Add error handling for creating secgroup
* libvirt: handle code=38 + sigkill (ebusy) in destroy()
* Removed a non-conditional 'if' statement
* Map uuid db field to instance\_uuid in BandwidthUsage object
* Hyper-V: Fix missing WMI namespace issue on Windows 2008 R2
* Replace metaclass registry with explicit opt-in registry from oslo
* Fix an objects layering violation in compute/api
* Remove assertRemotes() from objects tests
* Use fields from oslo.versionedobjects
* Convert test objects to new field formats
* Begin the transition to an explicit object registry
* Set default event status to completed
* Add a hacking rule for consistent HTTP501 message
* Add and use raise\_feature\_not\_supported()
* Objects: fix typo with exception
* Remove useless volume when boot from volume failed
* Hyper-V: Lock snapshot operation using instance uuid
* Refactor show\_port() in neutron api
* Ironic: Don't report resources for nodes without instances
* libvirt: Remove unit tests for \_hard\_reboot
* Adds hostutilsv2 to HyperV
* libvirt: introduce method to delete domain config
* libvirt: introduce method to get vcpus info
* libvirt: Don't try to confine a non-NUMA instance
* Removed explicit return from \_\_init\_\_ method
* libvirt: introduce method resume to Guest object
* libvirt: introduce method poweroff to Guest object
* libvirt: make \_create\_domain return a Guest object
* Raise InstanceNotFound when save FK constraint fails
* Updated from global requirements
* Add new VIF type VIF\_TYPE\_TAP
* libvirt: Disable NUMA for broken libvirt
* Handle FlavorNotFound when augmenting migrated flavors
* virt: convert VFS API to use nova.virt.image.model
* virt: convert disk mount API to use nova.virt.image.model
* virt: introduce model for describing local image metadata
* Remove unused instance\_group\_policy db calls
* Improve compute swap\_volume logging
* libvirt: introduce method get\_guest to Host object
* libvirt: introduce a Guest to wrap around virDomain
* Remove unused exceptions
* Extract helper method to get image metadata from volume
* Fix \_quota\_reserve test setup for incompatible type checking
* Fixes referenced path in nova/doc/README.rst
* Updated from global requirements
* Handle cells race condition deleting unscheduled instance
* Compute: tidy up legacy treatment for vif types
* Allow libvirt cleanup completion when serial ports already released
* objects: define the ImageMeta & ImageMetaProps objects
* Ensure to store context in thread local after spawn/spawn\_n
* Ironic: Parse and validate Node's properties
* Hyper-V: Fix SMBFS volume attach race condition
* Remove unit\_test doc
* Make blueprints doc a reference for nova blueprints
* Remove jenkins, launchpad and gerrit docs
* Prune development.environment doc
* docs: fixup libvirt NUMA testing docs to match reality
* Fix some issues in devref for api\_microversions
* nova response code 403 on block device quota error
* Updated from global requirements
* Remove unused variables from images api
* Compute: improve logging using {} instead of dict
* snapshot: Copy some missing attrs to the snapshot bdms
* bdm: Make sure that delete\_on\_termination is a boolean
* Get rid of oslo-incubator copy of middleware
* Make nova-manage handle completely missing flavor information
* Use oslo\_config choices support
* Let soft-deleted instance\_system\_metadata readable
* Make InstanceExternalEvent use an Enum for status
* Add error message to failed block device transform
* network: fix instance cache refresh for empty list
* Imported Translations from Transifex
* Add common function for v2 API flavor\_get
* Remove cell policy check
* VMware: replace hardcoded strings with constants
* Add missing @require\_context
* Standardize on assertJsonEqual in tests
* Tolerate iso style timestamps for cells rpc communication
* Force the value of LC\_ALL to be en\_US.UTF-8
* libvirt: disconnect\_volume does not return anything
* Remove hash seed comment from tox.ini
* Allow querying for migrations by source\_compute only
* libvirt: Do not cache number of CPUs of the hypervisor
* Create instance\_extra entry if it doesn't update
* Ignore Cinder error when shutdown instance
* Remove use of builtin name
* Hyper-V: Fixes cold migration / resize issue
* Fix cells capacity calculation for n:1 virt drivers
* VMware: Log should use uuid instead of name
* VMware: fill in instance metadata when resizing instances
* VMware: fill in instance metadata when launching instances
* Add the swap and ephemeral BDMs if needed
* Updated from global requirements
* Block oslo.vmware 0.13.0 due to a backwards incompatible change
* hypervisor support matrix: update libvirt KVM (s390x)
* Hyper-V: ensure only one log writer is spawned per VM
* Prevent access to image when filesystem resize is disabled
* Share admin password func test between v2 and v2.1
* VMware: remove dead function in vim\_util
* Fix version unit test on Python 3
* Resource tracker: remove invalid conductor call from tests
* Remove outdated TODO comment
* Disable oslo.vmware test dependency on Python 3
* Run tests with PyMySQL on Python 3
* Drop explicit suds dependency
* improve speed of some ec2 keypair tests
* Add nova object equivalence based on prims
* Cleanups for pci stats in preparation for RT using ComputeNode
* Replace dict.iteritems() with six.iteritems(dict)
* Add a maintainers file
* virt: make sure convert\_all\_volumes catches blank volumes too
* compute utils: Remove a useless context parameter
* make SchedulerV3PassthroughTestCase use NoDBTest
* Don't use dict.iterkeys()
* VMware: enforce minimum support VC version
* Split up and improve speed of keygen tests
* Replace dict(obj.iteritems()) with dict(obj)
* libvirt: Fix cpu\_compare tests and a wrong method when logging
* Detect empty result when calling objects.BlockDeviceMapping.save()
* remove \_rescan\_iscsi from disconnect\_volume\_multipath\_iscsi
* Use six.moves.range for Python 3
* Use EnumField for instance external event name
* Revert "Detach volume after deleting instance with no host"
* Removed unused methods and classes
* Removed unused variables
* Removed unused "as e/exp/error" statements
* Resource tracker: use instance objects for claims
* Remove db layer hard-code permission checks for security\_group\_default\_rule\_destroy
* Avoid AttributeError at instance.info\_cache.delete
* Remove db layer hard-code permission checks for network\_associate
* Remove db layer hard-code permission checks for network\_create\_safe
* Pass project\_id when create networks by os-tenant-networks
* Disassociate before deleting network in os-tenant-networks delete method
* Remove db layer hard-code permission checks for v2.1 cells
* Move unlock\_override policy enforcement into V2.1 REST API layer
* tests: libvirt: Fix test\_volume\_snapshot\_delete tests
* Add a finish log
* Add nova-idmapshift to rootwrap filters
* VMware: Missing docstring on parameter
* Update docs layout
* Add note to doc explaining scope
* Show 'reserved' status in os-fixed-ips
* Split instance event/tag correctly
* libvirt: deprecate libvirt version usage < 0.10.2
* Fix race between resource audit and cpu pinning
* Set migration\_type for existing cold migrations and resizes
* Add migration\_type to Migration object
* Add migration\_type and hidden to Migration database model
* libvirt: improve logging
* Fix pip-missing-reqs
* objects: convert HVSpec to use named enums
* objects: convert VirtCPUModel to use named enums
* Ironic: Fix delete instance when spawning
* Retry a cell delete if host constraint fails
* objects: introduce BaseEnumField to allow subclassing
* Add policy to cover snapshotting of volume backed instances
* objects: add a FlexibleBoolean field type
* Don't update RT status when set instance to ERROR
* Delete shelved\_\* keys in n-cpu unshelve call
* Fix loading things in instance\_extra for old instances
* VMware: remove invalid comment
* neutron: log hypervisor\_macs before raising PortNotUsable
* VMware: use get\_object\_properties\_dict from oslo.vmware
* VMware: use get\_datastore\_by\_ref from oslo.vmware
* Unshelving volume backed instance fails
* Avoid useless copy in get\_instance\_metadata()
* Fix raise syntax for Python 3
* Replace iter.next() with next(iter)
* libvirt: use instance UUID with exception InstanceNotFound
* devref: add information to clarify nova scope
* Refactor an unit test to use urlencode()
* Additional cleanup after compute RPC 3.x removal
* Drop compute RPC 3.x support
* libvirt: deprecate the remove\_unused\_kernels config option
* Updated from global requirements
* libvirt: Use 'relative' flag for online snapshot's commit/rebase operations
* Remove db layer hard-code permission checks for quota\_destroy\_all\_\*
* Replace unicode with six.text\_type
* Replace dict.itervalues() with six.itervalues(dict)
* Use compute\_node consistently in ResourceTracker
* Fix the wrong comment in the test\_servers.py file
* Move ebrctl to compute.filter
* libvirt: handle NotSupportedError in compareCPU
* Hypervisor Support Matrix renders links in notes
* Update fake flavor's root and ephemeral disk size
* Code clean up db.instance\_get\_all\_by\_host()
* use block\_dev.get\_bdm\_swap\_list in compute api
* Catch SnapshotNotFound exception at os-volumes
* Rename \_CellProxy.iteritems method to items on py3
* Overwrite NovaException message
* API: remove unuseful expected error code from v2.1 service delete api
* Fix quota-update of instances stuck in deleting when nova-compute startup finish
* API: remove admin require from certificate\_\* from db layer
* API: Add policy enforcement test cases for pci API
* API: remove admin require for compute\_node(get\_all/search\_by\_hyperviso) from db
* API: remove admin require for compute\_node\_create/update/delete from db layer
* API: remove admin require from compute\_node\_get\_all\_by\_\* from db layer
* Share deferred\_delete func tests between v2 and v2.1
* VMware: add support for NFS 4.1
* Compute: remove reverts\_task\_state from interface attach/detach
* VMware: ensure that the adapter type is used
* Fix failure of stopping instances during init host
* Share assisted vol snapshots test between v2 and v2.1
* Compute: use instance object for \_deleted\_old\_enough method
* API: remove instance\_get\_all\_by\_host(\_and\_node) hard-code admin check from db
* Remove db layer hard-code permission checks for service\_get\_by\_host\*
* Remove db layer hard-code permission checks for service\_get\_by\_compute\_host
* Detach volume after deleting instance with no host
* libvirt: safe\_decode xml for i18n logging
* Fix scheduler issue when multiple-create failed
* Move our ObjectListBase to subclass from the Oslo one
* Fix cinder v1 warning with cinder\_catalog\_info option reference
* Deprecate nova ironic driver's admin\_auth\_token
* Handle return code 2 from blkid calls
* Drop L from literal integer numbers for Python 3
* Libvirt: Use tpool to invoke guestfs api
* Minor edits to support-matrix doc
* hacking: remove unused variable author\_tag\_re
* Update kilo version alias
* Refactor tests that use compute's deprecated run\_instance() method
* Helper scripts for running under Apache2
* downgrade log messages for memcache server (dis)connect events
* don't report service group connection events as errors in dbdriver
* Updated from global requirements
* Switch to \_set\_instance\_obj\_error\_state in build\_and\_run\_instance
* Add SpawnFixture
* Log the actual instance.info\_cache when empty in floating ip associate
* unify libvirt driver checks for qemu
* VMware: Allow other nested hypervisors (HyperV)
* servicegroup: remove get\_all method never used as public
* libvirt: add todo note to avoid call to libvirt from the driver
* libvirt: add method to compare cpu to Host
* libvirt: add method to list pci devices to Host
* libvirt: add method to get device by name to Host
* libvirt: add method to define instance to host
* libvirt: add method to get cpu stats to host
* monitor: remove dependance with libvirt
* Clean up ComputeManager.\_get\_instance\_nw\_info
* Updated from global requirements
* Cells: Call compute api methods with instance objects
* Correct docstring info on two parameters
* Start the conversion to oslo.versionedobjects
* Cleanup conductor unused methods
* Revert "Ironic: do not destroy if node is in maintenance"
* fix network setup on evacuate
* Reschedules sometimes do not allocate networks
* Incorrect argument order passed to swap\_volume
* Mark ironic credential config as secret
* Fix missing format arg in compute manager
* objects: remove field ListOfEnumField
* Cleaning up debug messages from previous change in vmops.py
* Remove orphaned tables - iscsi\_targets, volumes
* console: clean tokens do not happen for all kind of consoles
* Fix import order
* Skip only one host weight calculation
* Fix typo for test cases
* VMWare: Isolate unit tests from requests
* Imported Translations from Transifex
* Cleanup docs landing page
* Updated from global requirements
* Add ability to inject routes in interfaces.template
* tests: make API signature test also check static function
* Make test\_version\_string\_with\_package\_is\_good work with pbr 0.11
* Fix disconnect\_volume issue when find\_multipath\_device returns None
* Updated from global requirements
* Fix assert on call count for encodeutils.safe\_decode mock
* Don't wait for an event on a resize-revert
* minor edit to policy\_enforcement.rst
* Update self with db result in InstanceInfoCache.save
* libvirt: retry to undefine network filters during \_post\_live\_migration
* Wedge DB migrations if flavor migrations are not complete
* Removed twice declared variables
* Removed variables used not in the scope that they are declared
* libvirt: add method to get hardware info to Host
* libvirt: avoid call of listDefinedDomains when post live migration
* Remove unused db.aggregate\_metadata\_get\_by\_metadata\_key() call
* Removed 'PYTHONHASHSEED=0' from tox.ini
* Changed logic in \_compare\_result  api\_samples\_test\_base
* Convert bandwidth\_usage related timestamp to UTC native datetime
* Drop use of 'oslo' namespace package

2015.1.0
--------

* Add a method to skip cells syncs on instance.save
* Add some testing for flavor migrations with deleted things
* Add support for forcing migrate\_flavor\_data
* Virt: update shared storage log information message
* Fixed functional in tests\_servers, to pass with random PYTHONHASHSEED
* Adds toctree to v2 section of docs
* Fixes X509 keypair creation failure
* Update rpc version aliases for kilo
* libvirt/utils.py: Remove 'encryption' flag from create\_cow\_image
* Libvirt: Correct logging information and progress when LM
* libvirt/utils.py: Remove needless code from create\_cow\_image
* libvirt/utils.py: Clarify comment in create\_cow\_image function
* Fix documentation for scheduling filters
* libvirt: check qemu version for NUMA & hugepage support
* Add security group calls missing from latest compute rpc api version bump
* Add security group calls missing from latest compute rpc api version bump
* Make objects serialize\_args() handle datetimes in positional args
* Imported Translations from Transifex
* view hypervisor details rest api should be allowed for non-admins
* n-net: turn down log level when vif isn't found in deallocate\_fixed\_ip
* Associate floating IPs with first v4 fixed IP if none specified
* Correct the help text for the compute option
* Convert NetworkDuplicated to HTTPBadRequest for v2.1 API
* Remove comment inconsistent with code
* Remove db layer hard-code permission checks for fixed\_ip\_get\_\*
* Fixed nova-network dhcp-hostsfile update during live-migration
* Remove db layer hard-code permission checks for network\_get\_all\_by\_host
* Remove db layer hard-code permission checks for security\_group\_default\_rule\_create
* Remove db layer hard-code permission checks for floating\_ips\_bulk
* sync oslo: service child process normal SIGTERM exit
* Remove downgrade support from the cellsv2 api db
* Fix migrate\_flavor\_data() to catch instances with no instance\_extra rows
* libvirt: use importutils instead of python built-in

2015.1.0rc2
-----------

* Imported Translations from Transifex
* Updated from global requirements
* Control create/delete flavor api permissions using policy.json
* Add config option to disable handling virt lifecycle events
* Ironic: pass injected files through to configdrive
* libvirt: Allow discrete online pCPUs for pinning
* Fix migrate\_flavor\_data() to catch instances with no instance\_extra rows
* libvirt: unused imported option default\_ephemeral\_format
* libvirt: introduce new method to guest tablet device
* Fix migrate\_flavor\_data string substitution
* Object: Fix incorrect parameter set in flavor save\_extra\_specs
* Fix max\_number for migrate\_flavor data
* remove downgrade support from our database migrations
* Add policy check for extension\_info
* Cleanup unnecessary session creation in floating\_ip\_deallocate
* Fix inefficient transaction usage in floating\_ip\_bulk\_destroy
* Control create/delete flavor api permissions using policy.json
* Fix handling of pci\_requests in consume\_from\_instance
* Use list of requests in InstancePCIRequests.obj\_from\_db
* Add numa\_node field to PciDevicePool
* scheduler: re-calculate NUMA on consume\_from\_instance
* VMware: remove unused method
* VMware: enable configuring of console delay
* Don't query compute\_node through service object in nova-manage
* Fixed test in test\_tracker to work with random PYTHONHASHSEED
* Update rpc version aliases for kilo
* remove the CONF.allow\_migrate\_to\_same\_host
* Fix kwargs['migration'] KeyError in @errors\_out\_migration decorator
* Add equality operators to PciDeviceStats and PciDevice objects
* libvirt: Add option to ssh to prevent prompting
* Validate server group affinity policy
* VMware: use oslo.vmware methods for handling tokens
* Remove db layer hard-code permission checks for network\_get\_associated\_fixed\_ips
* tests: use numa xml automatic generation in libvirt tests
* Resource tracker: unable to restart nova compute
* Include supported version information
* Release Import of Translations from Transifex
* Fixed tests in test\_glance to pass with random PYTHONHASHSEED
* Refactored tests in test\_neutron\_driver to pass with random PYTHONHASHSEED
* refactored test in vmware test\_read\_write\_util to pass with random PYTHONHASHSEED
* fixed tests in test\_matchers to pass with random PYTHONHASHSEED
* fix for vmware test\_driver\_api to pass with random PYTHONHASHSEED
* Update hypervisor support matrix with kvm on system z
* Fix kwargs['migration'] KeyError in @errors\_out\_migration decorator
* VMware: remove unused parameter for VMOPS spawn
* libvirt: make \_get\_instance\_disk\_info conservative
* refactored tests to pass in test\_inject to pass with random PYTHONHASHSEED
* fixed tests in test\_iptables\_network to work with random PYTHONHASHSEED
* refactored tests in test\_objects to pass with random PYTHONHASHSEED
* fixed tests in test\_instance to pass with random PYTHONHASHSEED
* Replace ssh exec calls with paramiko lib
* Fix handling of pci\_requests in consume\_from\_instance
* Use list of requests in InstancePCIRequests.obj\_from\_db
* Share hide server add tests between v2 and v2.1
* Share V2 and V2.1 images functional tests
* change the reboot rpc call to local reboot
* 'deleted' filter does not work properly
* Spelling mistakes in nova/compute/api.py
* Use kwargs from compute v4 proxy change\_instance\_metadata
* Delay STOPPED lifecycle event for all domains, not just Xen
* Use kwargs from compute v4 proxy change\_instance\_metadata
* compute: stop handling virt lifecycle events in cleanup\_host()
* Replace BareMetalDriver with IronicDriver in option help string
* tests: introduce a NUMAServersTest class
* Fix test\_set\_admin\_password\_bad\_state()
* Fix test\_attach\_interface\_failure()
* Fix test\_swap\_volume\_api\_usage()
* Resource tracker: unable to restart nova compute
* Forbid booting of QCOW2 images with virtual\_size > root\_gb
* Pass migrate\_data to pre\_live\_migration
* Fixed order of arguments during execution live\_migrate()
* update .gitreview for stable/kilo
* Add min/max of API microversions to version API
* VMware: Fix attribute error in resize
* Release bdm constraint source and dest type
* Fix check\_can\_live\_migrate\_destination() in ComputeV4Proxy
* compute: stop handling virt lifecycle events in cleanup\_host()
* Store context in local store after spawn\_n
* Fixed incorrect dhcp\_server value during nova-network creation
* Share multiple create server tests between v2 and v2.1
* Remove power\_state.BUILDING
* libvirt: cleanup unused lifecycle event handling variables from driver
* Add min/max of API microversions to version API
* Pass migrate\_data to pre\_live\_migration
* libvirt: add debug logging to pre\_live\_migration
* Don't ignore template argument in get\_injected\_network\_template
* Refactor some service tests and make them not require db
* Remove and deprecate unused conductor service calls
* Convert service and servicegroup to objects
* Add numa\_node field to PciDevicePool
* Ironic: do not destroy if node is in maintenance
* libvirt: remove unnecesary quotes
* VMware: fix log warning
* libvirt: quit early when mempages requested found
* VMware: validate CPU limits level
* Remove and deprecate conductor get\_ec2\_ids()
* Remove unused metadata conductor parameter
* Replace conductor get\_ec2\_ids() with new Instance.ec2\_ids attribute
* Add EC2Ids object and link to Instance object as optional attribute
* neutron: reduce complexity of allocate\_for\_instance (security\_groups)
* neutron: reduce complexity of allocate\_for\_instance (requested\_networks)
* Avoid indexing into an empty list in getcallargs
* Fixed order of arguments during execution live\_migrate()
* Fix check\_can\_live\_migrate\_destination() in ComputeV4Proxy

2015.1.0rc1
-----------

* Add compute RPC API v4.0
* Reserve 10 migrations for backports
* Honor uuid parameter passed to nova-network create
* Update compute version alias for kilo
* Refactor nova-net cidr validation in prep for bug fix
* Fix how service objects are looked up for Cells
* websocketproxy: Make protocol validation use connection\_info
* scheduler: re-calculate NUMA on consume\_from\_instance
* Prevent scheduling new external events when compute is shutdown
* Print choices in the config generator
* Manage compute node that exposes no pci devices
* libvirt: make fakelibvirt more customizable
* Use cells.utils.ServiceProxy object within cells\_api
* Fix Enum field, which allows unrestricted values
* consoleauth: Store access\_url on token authorization
* tests: add a ServersTestBase class
* tests: enhance functional tests primitives
* libvirt: Add version check when pinning guest CPUs
* Open Liberty development
* xenapi: pull vm\_mode and auto\_disk\_config from image when rescue
* VMware: Fix attribute error in resize
* Allow \_exec\_ebtables to parse stderr
* Fix rebuild of an instance with a volume attached
* Imported Translations from Transifex
* Stacktrace on live migration monitoring
* Add 'docker' to the list of known hypervisor types
* Respect CONF.scheduler\_use\_baremetal\_filters
* Make migration 274 idempotent so it can be backported
* Add 'suspended' lifecycle event
* Fix how the Cells API is returning ComputeNode objects
* Ironic: fix log level manipulation
* Fix serialization for Cells Responses
* libvirt: fix disablement of NUMA & hugepages on unsupported platforms
* Optimize periodic call to get\_by\_host
* Fix multipath device discovery when UFN is enabled
* Use retrying decorator from oslo\_db
* virt: Make sure block device info is persisted
* virt: Fix block\_device tests
* instance termination with update\_dns\_entries set fails
* Filter fixed IPs from requested\_networks in deallocate\_for\_instance
* Fixes \_cleanup\_rbd code to capture ImageBusy exception
* Remove old relation in Cells for ComputeNode and Service
* consoleauth: remove an instance of mutation while iterating
* Add json-schema for v2.1 fixed-ips
* Share V2 and V2.1 tenant-networks functional tests
* Share migrations tests between V2 and V2.1
* Merging instance\_actions tests between V2 and V2.1
* Share V2 and V2.1 hosts functional tests
* Add serialization of context to FakeNotifier
* Handle nova-network tuple format in legacy RPC calls
* remove usage of policy.d which isn't cached
* Update check before migrating flavor
* Expand Origin header check for serial console
* libvirt: reuse unfilter\_instance pass-through method
* No need to create APIVersionRequest every time
* Libvirt: preallocate\_images CONFIG can be arbitrary characters
* Add some tests for the error path(s) in RBD cleanup\_volumes()
* VMware: add instance to log messages
* Hyper-V: checks for existent Notes in list\_instance\_notes
* Fix incorrect statement in inline neutronv2 docs
* Imported Translations from Transifex
* Vmware:Find a SCSI adapter type for attaching iSCSI disk
* Avoid MODULEPATH environment var in config generator
* Be more forgiving to empty context in notification
* Store cells credentials in transport\_url properly
* Fix API links and labels
* Stale rc.local file - vestige from cloudpipe.rst
* Remove stale test + opensssl information from docs
* Add the last of the oslo libraries to hacking check
* Cancel all waiting events during compute node shutdown
* Update hypervisor support matrix for ironic wrt pause/suspend
* Scheduler: deprecate mute\_weight\_value option on weigher
* Pass instance object to add\_instance\_fault\_from\_exc
* Remove dead vmrc code
* Add vnc\_keymap support for vmware compute
* Remove compute/api.py::update()
* add ironic hypervisor type
* Removes XML MIME types from v2 API information
* API: fix typo in unit tests
* Add field name to error messages in object type checking
* Remove obsolete TODO in scheduler filters
* Expand valid server group name character set
* Raise exception when backup volume-backed instance
* Libvirt SMB volume driver: fix volume attach
* Adds Compute API v2 docs
* PCI tracker: make O(M \* N) clean\_usage algo linear
* Fix v2.1 list-host to remove 'services' filter
* Fix incorrect http\_conflict error message
* Link to devstack guide for appropriate serial\_console instructions
* Skip socket related unit tests on OSX
* Add debug logging to quota\_reserve flow
* Fix missing the cpu\_pinning request
* Hyper-V: Sets \*DataRoot paths for instances
* Refactored test in test\_neutron\_driver to pass with random PYTHONHASHSEED
* fixed tests in test\_neutrounv2 to pass with random PYTHONHASHSEED
* Refactored test in linux\_net to pass with random PYTHONHASHSEED
* refactored tests in test\_wsgi to pass with random PYTHONHASHSEED
* fixed tests in test\_simple\_tenant\_usage to pass with random PYTHONHASHSEED
* Refactored test\_availability\_zone to work properly with random PYTHONHASHSEED
* fixed test in test\_disk\_config to work with random PYTHONHASHSEED
* Fixed test to work with random PYTHONHASHSEED
* Fix \_instance\_action call for resize\_instance in cells
* Add some logging in the quota.reserve flow
* Check host cpu\_info if no cpu\_model for guest
* Move ComputeNode creation at init stage in ResourceTracker
* Releasing DHCP in nova-network fixed
* Fix PCIDevicePool.to\_dict() when the object has no tags
* Convert pci\_device\_pools dict to object before passing to scheduler
* Sync from Oslo-Incubator - reload config files
* Fix v2.1 hypervisor servers to return empty list
* Add support for cleaning in Ironic driver
* Adjust resource tracker for new Ironic states
* Ironic: Remove passing Flavor's deploy\_{kernel, ramdisk}
* don't 500 on invalid security group format
* Adds cleanup on v2.2 keypair api and tests
* Set conductor use\_local flag in compute manager tests
* Use migration object in resource\_tracker
* Move suds into test-requirements.txt
* Make refresh\_instance\_security\_rules() handle non-object instances
* Add a fixture for the NovaObject indirection API
* Add missing \`shows\` to the RPC casts documentation
* Override update\_available\_resources interval
* Fix for deletes first preexisting port if second was attached to instance
* Avoid load real policy from policy.d when using fake policy fixture
* Neutron: simplify validate\_networks
* Switch to newer cirros image in docs
* Fix common misspellings
* Scheduler: update  doctring to use oslo\_config
* Skip 'id' attribute to be explicitly deleted in TestCase
* Remove unused class variables in extended\_volumes
* libvirt: remove volume\_drivers config param
* Make conductor use instance object
* VMware: add VirtualVmxnet3 to the supported network types
* Fix test cases still use v3 prefix
* Typo in oslo.i18n url
* Fix docs build break
* Updated from global requirements
* Fix typo in nova/tests/unit/test\_availability\_zones.py
* mock out build\_instances/rebuild\_instance when not used
* Make ComputeAPIIpFilterTestCase a NoDBTestCase
* Remove vol\_get\_usage\_by\_time from conductor api/rpcapi
* default tox cmd should also run 'functional' target
* VMware: Consume the oslo.vmware objects
* Release bdm constraint source and dest type
* VMware: save instance object creation in test\_vmops
* libvirt: Delay only STOPPED event for Xen domain
* Remove invalid hacking recheck for baremetal driver
* Adds Not Null constraint to KeyPair name
* Fix orphaned ports on build failure
* VMware: Fix volume relocate during detach

2015.1.0b3
----------

* Fix AggregateCoreFilter return incorrect value
* Remove comments on API policy, remove core param
* Add policy check for consoles
* Sync from oslo-incubator
* Rename and move the v2.1 api policy into separated files
* Disable oslo\_messaging debug logging
* heal\_instance\_info\_cache\_interval help clearer
* Forbid booting of QCOW2 images with virtual\_size > root\_gb
* don't use oslo.messaging in mock
* BDM: Avoiding saving if there were no changes
* Tidy up sentinel comparison in pop\_instance\_event
* Tidy up dict.setdefault() usage in prepare\_for\_instance\_event
* Remove duplicate InvalidBDMVolumeNotBootable
* libvirt: make default value of numa cell memory to 0 when not defined
* Add the instance update calls from Compute
* Save bdm.connection\_info before calling volume\_api.attach\_volume
* Add InstanceMapping object
* Add CellMapping object
* load ram\_allocation\_ratio when asked
* Remove pci\_device.update\_device helper function
* Tox: reduce complexity level to 35
* Remove db layer hard-code permission checks for service\_get\_all
* Expand help message on some quota config options
* Test fixture for the api database
* remove duplicate calls to cfg.get()
* Remove context from remotable call signature
* Actually stop passing context to remotable methods
* Remove usage of remotable context parameter in service, tag, vif
* Remove usage of remotable context parameter in security\_group\*
* Remove usage of remotable context parameter in pci\_device, quotas
* let fake virt track resources
* doc: fix a docstext formatting
* Update unique constraint of compute\_nodes with deleted column
* Modify filters to get instance info from HostState
* Add the RPC calls for instance updates
* Implement instance update logic in Scheduler
* Log exception from deallocate\_port\_for\_instance for triage
* Remove usage of remotable context parameter in migration, network
* Remove usage of remotable context parameter in compute\_node, keypair
* Remove usage of remotable context parameter in instance\* objects
* Remove usage of remotable context parameter in fixed\_ip, flavor, floating\_ip
* Remove usage of remotable context parameter in ec2 object
* libvirt: partial fix for live-migration with config drive
* Added assertJsonEqual method to TestCase class
* VMware: Improve reporting of path test failures
* libvirt test\_cpu\_info method fixed random PYTHONHASHSEED compatibility
* Remove usage of remotable context parameter in bandwidth, block\_device
* Remove usage of remotable context parameter in agent, aggregate
* Remove db layer hard-code permission checks for pci
* Objects: use setattr rather than dict syntax in remotable
* Split out NovaTimestampObject
* libvirt: Resize down an instance booted from a volume
* add neutron api NotImplemented test cases for Network V2.1
* Stop using exception.message
* Remove unused oslo logging fixture
* libvirt: don't allow to resize down the default ephemeral disk
* Add api microvesion unit test case for wsgi.action
* Change some comments for instance param
* Hyper-V: Adds VMOps unit tests (part 2)
* Add get\_api\_session to db api
* Use the proper database engine for nova-manage
* Add support for multiple database engines
* Virt: update fake driver to use UUID as lookup key
* VMware: use instance UUID as instance name
* VMware: update test\_vm\_util to use instance object
* Handle exception when doing detach\_interface
* Variable 'name' already declared in 'for' loop
* Handle RESIZE\_PREP status when nova compute do init\_instance
* Move policy enforcement into REST API layer for v2.1 api volume\_attachment
* Remove the elevated context when get network
* Handles exception when unsupported virt-type given
* Fix confusing log output in nova/nova/network/linux\_net.py
* Workaround for race condition in libvirt
* remove unneeded teardown related code
* Fixed archiving of deleted records
* libvirt: Remove minidom usage in driver.py
* Stop spamming logs when creating context
* Fix ComputeNode backport for Service.obj\_make\_compatible
* Break out the child version calculation logic from obj\_make\_compatible()
* Fix PciDeviceDBApiTestCase with referential constraint checking
* Verify all quotas before updating the db
* Add shadow table empty verification
* Add @wrap\_exception() for 3 compute functions
* Remove FK on service\_id and make service\_id nullable
* Using Instance object instead of db call
* Revert "Removed useless method \_get\_default\_deleted\_value."
* Remove db layer hard-code permission checks for network\_count\_reserved\_ips
* implement user negative testing for flavor manage
* refactor policy fixtures to allow use of real policy
* libvirt: remove unnecessary flavor parameter
* Compute: no longer need to pass flavor to the spawn method
* Update some ResizeClaimTestCase tests
* Move InstanceClaimTestCase.test\_claim\_and\_audit
* Handle exception when attaching interface failed
* Deprecate Nova in tree EC2 APIs
* cells: don't pass context to instance.save in instance\_update\_from\_api
* ensure DatabaseFixture removes db on cleanup
* objects: introduce numa topology limits objects
* Add a test that validates object backports and child object versions
* Fix ArchiveTestCase on MySQL due to differing exceptions
* VMware: fix VM rescue problem with VNC console
* VMware: Deprecation warning - map one nova-compute to one VC cluster
* compute: don't trace on InstanceNotFound in reverts\_task\_state
* Fix backporting objects with sub-objects that can look falsey
* neutron: deprecate 'allow\_duplicate\_networks' config option
* Fix Juno nodes checking service.compute\_node
* Fix typo in \_live\_migration\_cleanup\_flags method
* libvirt: add in missing translation for exception
* Move policy enforcement into REST API layer for v2.1 extended\_volumes
* Remove useless policy rules for v2.1 api which removed/disabled
* Remove db layer hard-code permission checks for service\_get\_all\_by\_\*
* Fix infinite recursion caused by unnecessary stub
* Websocket Proxy should verify Origin header
* Improve 'attach interface' exception handling
* Remove unused method \_make\_stub\_method
* Remove useless get\_one() method in SG API
* Fix up join() and leave() methods of servicegroup
* network: Fix another IPv6 test for Mac
* Add InstanceList.get\_all method
* Use session with neutronclient
* Pass correct context to get\_by\_compute\_node()
* Revert "Allow force-delete irrespective of VM task\_state"
* Fix kwargs['instance'] KeyError in @reverts\_task\_state decorator
* Fix copy configdrive during live-migration on HyperV
* Move V2 sample files to respective directory
* V2 tests -Reuse server post req/resp sample file
* V2.1 tests - Reuse server post req/resp sample file
* Remove an unused config import in nova-compute
* Raise HTTPNotFound for Port/NetworkNotFound
* neutronv2: only create client once when adding/removing fixed IPs
* Stop stacktracing in \_get\_filter\_uuid
* libvirt: Fix live migration failure cleanup on ceph
* Sync with latest oslo-incubator
* Better logging of resources
* Preserve preexisting ports on server delete
* Move oslo.vmware into test-requirements.txt
* Remove db layer hard-code permission checks for network\_get\_by\_uuid
* Refactor \_regex\_instance\_filter for testing
* Add instance\_mappings table to api database
* ec2: clean up in test\_cinder\_cloud
* Remove unused method queue\_get\_for
* Remove make\_ip\_dict method which is not used
* Remove unused method delete\_subnet
* Remove unused method disable\_vlan
* Remove unused method get\_request\_extensions
* Fix wrong log output in nova/nova/tests/unit/fake\_volume.py
* Updated from global requirements
* Remove db layer hard-code permission checks for network\_get\_by\_cidr
* Add cell\_mappings table to api database
* Ban passing contexts to remotable methods
* Fix a remaining case of passing context to a remotable in scheduler
* Fix several cases of passing context to quota-related remotable methods
* Fix some cases of passing context to remotables with security groups
* Replace RPC topic-based service queries with binary-based in cells
* Replace RPC topic-based service queries with binary-based in scheduler
* Fix some straggling uses of passing context to remotable methods in tests
* VMware: remove code invoking deprecation warning
* Fix typo in nova/scheduler/filters/utils.py
* Remove db layer hard-code permission checks for network\_delete\_safe
* Don't add exception instance in LOG.exception
* Move policy enforcement into REST API layer for v2.1 servers
* Move policy enforcement into REST API layer for v2.1 api attach\_interfaces
* Remove db layer hard-code permission checks for flavor-manager
* Remove db layer hard-code permission checks for service\_delete/service\_get
* Remove db layer hard-code permission checks for service\_update
* Fix 'nova show' return incorrect mac info
* Use controller method in all admin actions tests
* Remove db layer hard-code permission checks for flavor\_access
* Modify filters so they can look to HostState
* let us specify when samples tests need admin privs
* Updated from global requirements
* Remove cases of passing context to remotable methods in Flavor
* Remove cases of passing context to remotable methods in Instance
* Fix up PciDevice remotable context usage
* libvirt: add comment for vifs\_already\_plugged=True in finish\_migration
* neutron: check for same host in \_update\_port\_binding\_for\_instance
* Move policy enforcement into REST API layer for v2.1 security groups
* Keep instance state if lvm backend not impl
* Replace RPC topic-based service queries in nova/api with binary-based
* Remove service\_get\_by\_args from the DB API
* Remove usage of db.service\_get\_by\_args
* Make unit tests inherit from test.NoDBTestCase
* Fixed incorrect behavior of method sqlalchemy.api.\_check\_instance\_exists
* Remove db layer hard-code permission checks for migrations\_get\*
* vmware: support both hard and soft reboot
* xenapi: Fix session tests leaking state
* libvirt: Cleanup snapshot tests
* Change instance disappeared during destroy from Warning to Info
* Replace instance flavor delete hacks with proper usage
* Add delattr support to base object
* Use flavor stored with instance in vmware driver
* Use flavor stored with instance in ironic driver
* Modify AggregateAPI methods to call the Scheduler client methods
* Create Scheduler client methods for aggregates
* Add update and delete \_aggregate() method to the Scheduler RPC API
* Instantiate aggregates information when HostManager is starting
* Add equivalence operators to NUMACell and NUMAPagesTopology
* Adds x509 certificate keypair support
* Better round trip for RequestContext<->Dict conversion
* Make scheduler client reporting use ComputeNode object
* Prevent update of ReadOnlyDict
* Copy the default value for field
* neutron: add logging during nw info\_cache refresh when port is gone
* Add info for Standalone EC2 API to cut access to Nova DB
* VMware: Fix disk UUID in instance's extra config
* Update config generator to use new style list\_opts discovery
* Avoid KeyError Exception in extract\_flavor()
* Imported Translations from Transifex
* Updated from global requirements
* Move policy enforcement into REST API layer for v2.1 create backup
* Truncate encoded instance sys meta to 255 or less
* Adds keypair type in nova-api
* Switch nova.virt.vmwareapi.\* to instance dot notation
* Allow disabling the evacuate cleanup mechanism in compute manager
* Change queries for network services to use binary instead of topic
* Add Service.get\_by\_host\_and\_binary and ServiceList.get\_by\_binary
* Compute: update config drive settings on instance
* Fix docstrings for assorted methods
* Config driver: update help text for force\_config\_drive
* libvirt-numa.rst: trivial spelling fixes
* Ensure bridge deleted with brctl delbr
* create noauth2
* enhance flavor manage functional tests
* Add API Response class for more complex testing
* Add more log info around 'not found' error
* Remove extended addresses from V2.1 update & rebuild
* Switch nova.virt.hyperv.\* to instance dot notation
* Revert instance task\_state when compareCPU fails
* Libvirt: Fix error message when unable to preallocate image
* Switch nova.virt.libvirt.\* to instance dot notation
* Add nova-manage commands for the new api database
* Add second migrate\_repo for cells v2 database migrations
* Updated from global requirements
* Force LANGUAGE=en\_US in test runs
* neutron: consolidate common unbind ports logic
* Sync oslo policy change
* Remove compute\_node field from service\_get\_by\_compute\_host
* Fix how the Service object is loading the compute\_node field
* Remove compute\_node from service\_get\_by\_cn Cells API method
* Remove want\_objects kwarg from nova.api.openstack.common.get\_instance
* Switch nova.virt.\* to use the object dot notation
* add string representation for context
* Remove db layer hard-code permission checks for migration\_create/update
* Disables pci plugin for v2.1 & microversions
* Fix logic for checking if az can be updated
* Add obj\_alternate\_context() helper
* libvirt: remove libvirt import from tests so we only use fakelibvirt
* capture stdout and logging for OSAPIfixture test
* remove unused \_authorize\_context from security\_group\_default\_rules.py
* Switch nova.context to actually use oslo.context
* Fixed incorrect indent of test\_config\_read\_only\_disk
* Fixed incorrect assertion in test\_db\_api
* Remove TranslationFixture
* Replace fanout to False for CastAsCall fixture
* Make ConsoleAuthTokensExtensionTestV21 inherit from test.NoDBTestCase
* Remove db layer hard-code permission checks for task\_log\_get\*
* Remove db layer hard-code permission checks for task\_log\_begin/end\_task
* Api: remove unusefull compute api from cells
* Remove db layer hard-code permission checks for service\_create
* Imported Translations from Transifex
* Change v3 import to v21 in 2.1 api unit test
* Fix NotImplementedError handling in interfaces API
* Support specifing multiple values for aggregate keys
* Remove attach/detach/swap from V2.1 extended\_volumes
* Make metadata cache time configurable
* Remove db layer hard-code permission checks for fixed\_ip\_disassociate\_all\_by\_timeout
* Move policy enforcement into REST API layer for v2.1 api assisted\_volume\_snapshots
* Fix tiny typo in api microversions doc
* Fixes Hyper-V: configdrive is not migrated to destination
* ensure that ram is >= 1 in random flavor creation
* Fixes 500 error message and traces when no free ip is left
* db: Add index on fixed\_ips updated\_at
* Display host chosen for instance by scheduler
* PYTHONHASHSEED bug fix in test\_utils
* fixed tests in test\_vm\_util to work with random PYTHONHASHSEED
* Add microversion allocation on devref
* Remove OS-EXT-IPS attributes from V2.1 server ips
* Remove 'locked\_by' from V2.1 extended server status
* Remove 'id' from V2.1 update quota\_set resp
* Fix bad exception logging
* VMware: Ensure compute\_node.hypervisor\_hostname is unique
* Inherit exceptions correctly
* Remove en\_US translation
* Move policy enforcement into REST API layer for v2.1 cloudpipe
* Move policy enforcement into REST API layer for v2.1 security\_group\_default\_rules
* linux\_net.metadata\_accept(): IPv6 support
* Enforce in REST API layer on v2.1 api remote consoles
* Remove accessips attribute from V2.1 POST server resp
* Move policy enforcement into REST API layer for v2.1 floating\_ip\_dns
* Fix bad interaction between @wsgi.extends and @wsgi.api\_version
* Enforce in REST API layer on v2.1 shelve api
* Move policy enforcement into REST API layer for v2.1 api evacuate
* Add manual version comparison to microversion devref document
* Switch to uuidutils from oslo\_utils library
* Add developer documentation for writing V2.1 API plugins
* Convert nova.compute.\* to use instance dot notation
* Better power\_state logging in \_sync\_instance\_power\_state
* Use instance objects in fping/instance\_actions/server\_metadata
* Fix misspellings words in nova
* Fix KeyErrors from incorrectly formatted NovaExceptions in unit tests
* Move policy enforcement into REST API layer for v2.1 floating ips
* Switch nova.network.\* to use instance dot notation
* Revert : Switch off oslo.\* namespace check temporarily
* Move policy enforcement into REST API layer for v2.1 networks related
* Remove db layer hard-code permission checks for v2.1 agents
* Move v2.1 virtual\_interfaces api policy enforcement into REST API layer
* fix 'Empty module name' exception attaching volume
* Use flavor stored with instance in libvirt driver
* Handle 404 in os-baremetal-nodes GET
* API: Change the API cpu\_info to be meaning ful
* Updated from global requirements
* Make compute unit tests inherit from test.NoDBTestCase
* Request objects in security\_groups api extensions
* Reuse is\_int\_like from oslo\_utils
* VMware: fix network connectivity problems
* Move policy enforcement into REST API layer for v2.1 admin password
* Fix the order of base classes in migrations test cases
* Libvirt: Allow missing volumes during delete
* Move policy enforcement into REST API layer for v2.1 server\_diagnostics
* Fix wrong log when reschedule is disabled
* Replace select-for-update in fixed\_ip\_associate
* Move policy enforcement into REST API layer for v2.1 fping
* Consolidate use api request version header
* Copy image from source host when ImageNotFound
* VMware: update get\_available\_datastores to only use clusters
* Add useful debug logging when policy checks fail
* Remove unused conductor methods
* Call notify\_usage\_exists() without conductor proxying
* Updated from global requirements
* Make notifications use BandwidthUsageList object
* libvirt: Fix migration when image doesn't exist
* Fix a typo of devref document for api\_plugin
* console: add unit tests for baseproxy
* libvirt: log host capabilities on startup
* Allow configuring proxy\_host and proxy\_port in nova.conf
* Fixes novncproxy logging.setup()
* Add descriptions to some assertBooleans
* Remove update\_store usage
* Enforce policy checking in REST API layer for v2.1 server\_password
* Add methods that convert any volume BDM to driver format
* Split scheduler weight test on ram
* Split scheduler weight test on metrics
* Split scheduler weight test on ioops
* Fix 500 when deleting a not existing ec2 security group
* Remove backwards compat oslo.messaging entries from setup.cfg
* Change utils.vpn\_ping() to return a Boolean
* Enable retry when there are multiple force hosts/nodes
* Use oslo.log
* switch LOG.audit to LOG.info
* Add catch FlavorExtraSpecsNotFound in V2 API
* tests: remove duplicate keys from dictionary
* Add blkid rootwrap filter
* Fix idempotency of migration 269
* objects: fix issue in test cases for instance numa
* VMware: Accept image and block device mappings
* nova flavor manage functional test
* extract API fixture
* Fix V2 hide server address functional tests
* Remove unused touch command filter
* Add a test for block\_device\_make\_list\_from\_dicts
* Move policy enforcement into REST API layer for v2.1 floating\_ip\_pools
* libvirt: address test comments for zfcp volume driver changes
* libvirt: Adjust Nova to support FCP on System z systems
* Fix BM nodes extension to deal with missing node properties
* VMware: update the support matrix for security groups
* Ignore 'dynamic' addr flag on gateway initialization
* Adds xend to rootwrap.d/compute.filters
* Create volume in the same availability zone as instance
* Wrap IPv6 address in square brackets for scp/rsync
* fake: fix public API signatures to match virt driver
* Added retries in 'network\_set\_host' function
* Use NoDBTestCase instead of TestCase
* Change microversion header name
* VMware: ensure that resize treats CPU limits correctly
* Compute: pass flavor object to migrate\_disk\_and\_power\_off
* extract method from fc volume discovery
* Set instance NUMA topology on HostState
* Support live-migrate of instances in PAUSED state
* Fix DB access by FormatMappingTestCase
* api: report progress when instance is migrating
* libvirt: proper monitoring of live migration progress
* libvirt: using instance like object
* libvirt: convert tests from mox to mock
* XenAPI: Fix data loss on resize up
* Delete instance files from dest host in revert-resize
* Pass the capabilities to ironic node instance\_info
* No need to re-fetch instance with sysmeta
* Switch nova.api.\* to use instance dot notation
* Objectify calls to service\_get\_by\_compute\_host
* Refactor how to remove compute nodes when service is deleted
* Move policy enforcement into REST API layer for v2.1 admin actions
* Contrail VIF Driver changes for Nova-Compute
* libvirt : Fix slightly misleading parameter name, validate param
* libvirt: cleanup setattr usage in test\_host
* libvirt: add TODOs for removing libvirt attribute stubs
* Expand try/except for get\_machine\_ips
* Switch nova.compute.manager to use instance dot notation
* libvirt: stub out VIR\_CONNECT\_LIST\_DOMAINS\_INACTIVE
* libvirt: stub out VIR\_SECRET\_USAGE\_TYPE\_ISCSI for older libvirt
* Change calls to service information for Hypervisors API
* Add handling for offlined CPUs to the nova libvirt driver
* Make compute API create() use BDM objects
* Remove redundant tearDown from ArchiveTestCase
* libvirt: switch LibvirtConnTestCase back to NoDBTestCase
* Replace usage of LazyPluggable by stevedore driver
* Don't mock time.sleep with None
* Libvirt: Support ovs plug in vhostuser vif
* Removed duplicate key from dictionary
* Fixes Attribute Error when trying to spawn instance from vhd on HyperV
* Remove computenode relationship on service\_get
* Remove nested service from DB API compute\_nodes
* libvirt: Use XPath instead of loop in \_get\_interfaces
* fixed tests to work with random PYTHONHASHSEED
* Imported Translations from Transifex
* Make the method \_op\_method() public
* Quiesce boot from volume instances during live snapshot
* Fix "Host Aggregate" section of the Nova Developer Guide
* network: Fix another IPv6 test for Mac
* Pre-load default filters during scheduler initialization
* Libvirt: Gracefully Handle Destroy Error For LXC
* libvirt: stub VIR\_CONNECT\_LIST\_DOMAINS\_ACTIVE for older libvirts
* Fix VNC access, when reverse DNS lookups fail
* Remove now useless requirements wsgiref
* Add JSON schema for v2.1 add network API
* Handle MessagingException in unshelving instance
* Compute: make use of dot notation for console access
* Compute: update exception handling for spice console
* Add missing api samples for floating-ips api(v2)
* Move v2.1 rescue api policy enforcement into REST API layer
* Move policy enforcement into REST API layer for v2.1 ips
* Move policy enforcement into REST API layer for v2.1 multinic
* Move policy enforcement into REST API layer for v2.1 server\_metadata
* VMware: fix resize of ephemeral disks
* VMware: add in a utility method for detaching devices
* VMware: address instance resize problems
* Fixes logic in compute\_node\_statistics
* Cover ListOfObjectField for relationship test
* Replace oslo-incubator with oslo\_context
* Libvirt: add in unit tests for driver capabilities
* Ironic: add in unit tests for driver capabilities
* Tests: Don't require binding to port 4444
* libvirt: fix overly strict CPU model comparison in live migration
* Libvirt: vcpu\_model support
* IP filtering is not accurate when used with limit
* Change how the API is getting a list of compute nodes
* Change how Cells are getting the list of compute nodes
* Change how HostManager is calling the service information
* Move scheduler.host\_manager to use ComputeNode object
* patch out nova libvirt driver event thread in tests
* Change outer to inner join in fixed IP DB API func
* Small cleanup in pci\_device\_update
* Remove useless NotFound exception catching for v2/v2.1 fping
* V2.1 cleanup: Use concrete NotFound exception instead of generic
* Drop deprecated namespace for oslo.rootwrap
* Add vcpu\_model to instance object
* Pass instance primitive to instance\_update\_at\_top()
* Adds infrastructure for microversioned api samples
* Libvirt: Support for generic vhostuser vif
* Pull singleton config check cruft out of SG API
* hacking: Got rid of unnecessary TODO
* Remove unused function in test
* Remove unused function
* hardware: fix reported host mempages in numa cell
* objects: fix numa obj relationships
* objects: remove default values for numa cell
* Move policy enforcement into REST API layer for v2.1 suspend/resume server
* Move policy enforcement into REST API layer for v2.1 api console-output
* Move policy enforcement into REST API layer for v2.1 deferred\_delete
* Move migrate-server policy enforce into REST API
* Add API schema for v2.1 tenant networks API
* Move policy enforcement into REST API layer for v2.1 lock server
* Libvirt: cleanup rescue lvm when unrescue
* Sync simple\_tenant\_usage V2.1 exception with V2 and add test case
* IP filtering can include duplicate instances
* Add recursive flag to obj\_reset\_changes()
* Compute: use dot convension for \_poll\_rescued\_instances
* Add tests for nova-manage vm list
* libvirt: add libvirt/parallels to hypervisor support matrix
* Compute: update reboot\_instance to use dot instance notation
* Fix incorrect compute api config indentation
* libvirt: fix emulator thread pinning when doing strict CPU pinning
* libvirt: rewrite NUMA topology generator to be more flexible
* libvirt: Fix logically inconsistent host NUMA topology
* libvirt: utils canonicalize now the image architecture property
* A couple of grammar fixes in help strings
* Implement api samples test for os-baremetal-nodes Part 2
* Compute: use consistant instance dot notation
* Log warning if CONF.my\_ip is not found on system
* libvirt: remove \_destroy\_instance\_files shim
* virt: Fix interaction between disk API tests
* network: Fix IPv6 tests for Mac
* Use dot notation on instance object fields in \_delete\_instance
* libvirt: memnodes shuold be set to a list instead of None
* Cleanup add\_fixed\_ip\_to\_instance tests
* Cleanup test\_instance\_dns
* Fix detach\_sriov\_ports to get context to be able to get image metadata
* Implement api samples test for os-baremetal-nodes
* Fix description of parameters in nova functions
* Stop making the database migration backend lazy pluggable
* Updated from global requirements
* Libvirt: Created Nova driver for Quobyte
* Adds keypair type database migration
* libvirt: Enable serial\_console feature for system z
* Make tests use sha256 as openssl default digest algorithm
* Improved performance of db method network\_in\_use\_on\_host
* Replace select-for-update in floating\_ip\_allocate\_address
* Move policy enforcement into REST API layer for v2.1 pause server
* Libvirt: update log message
* Update usage of exception MigrationError
* Extract preserve ephemeral on rebuild from servers plugin
* VMware: update get\_vm\_resize\_spec interface
* VMware: Enable spawn from OVA image
* Raise bad request for missing 'label' in tenant network
* CWD is incorrectly set if exceptions are thrown
* VMware: add disk device information to VmdkInfo
* Use controller methods directly in test\_rescue
* Call controller methods directly in test\_multinic
* Add version specific test cases for microverison
* Change v2.1 API status to CURRENT
* Remove wsgi\_app usage from test\_server\_actions
* Change some v2.1 extension names to v2
* Add VirtCPUModel nova objects
* Add enum fieldtype field
* Convert v2.1 extension\_info to show V2 API extension list
* Remove compability check for ratelimit\_v3
* Keep instance state if ssh failed during migration
* Cleanup and removal of unused code in scheduler unit tests
* Fix incorrect use of mock in scheduler test
* Make test re-use HTTPRequest part 5
* Refactor test\_filter\_scheduler use of fakes
* consoliate set\_availability\_zones usage
* Warn about zookeeper service group driver usage
* Updated from global requirements
* Update matrix for kvm on ppc64
* Switch off oslo.\* namespace check temporarily
* Switch to using oslo\_\* instead of oslo.\*
* Adjust object\_compat wrapper order
* Add more tests for tenant network API
* Sync with oslo-incubator
* Make compute use objects usage 'best practice'
* Enable BIOS bootmenu on AMI-based images

2015.1.0b2
----------

* libvirt: fix console device for system z for log file
* Fix references to non-existent "pause" section
* libvirt: generate proper config for PCS containers
* libvirt: add ability to add file and block based filesystem
* libvirt: add ploop disks format support
* Fix improper use of Stevedore
* libvirt: Fail when live block migrating instance with volumes
* Add notification for suspend
* Add API schema for v2.1 networks API
* Remove v1.1 from v2.1 extension description
* Add \_LW for missing translations
* Treat LOG.warning and LOG.warn same
* Add JSON schema for v2.1 'quota\_class' API
* Add missing setup.cfg entry for os-user-data plugin
* Add api\_version parameter for API sample test base class
* Add suggestion to dev docs for debugging odd test failures
* Add max\_concurrent\_builds limit configuration
* Fixes Hyper-V configdrive network injection issue
* Update Power State after deleting instance
* Remove temporary power state variables
* Make obj\_set\_defaults() more useful
* Adds devref for API Microversions
* PCI NUMA filtering
* Ensure publisher\_id is set correctly in notifications
* libvirt: Use XPath instead of loop in \_get\_all\_block\_devices
* libvirt: Use XPath instead of loop in get\_instance\_diagnostics
* fix typo in rpcapi docstring
* Fix conductor servicegroup joining when zk driver is used
* Do not treat empty key\_name as None
* Failed to discovery when iscsi multipath and CHAP both enabled
* Fix network tests response code checking
* Remove unused error from v2.1 create server
* Fix corrupting the object repository with test instance objects
* Change cell\_type values in nova-manage
* Fix bad mocking of methods on Instance
* Updated from global requirements
* VMware: fix resume\_state\_on\_host\_boot
* Fix cells rpc connection leak
* Remove redundant assert of mock volume save call
* Don't create block device mappings in the API cell
* Add formal doc recording hypervisor feature capability matrix
* Ironic: Adds config drive support
* libvirt-xen: Fix block device prefix and disk bus
* libvirt-xen: don't request features ACPI or APIC with PV guest
* Make EC2 compatible with current AWS CLI
* libvirt: remove pointless loop after live migration finishes
* Remove useless argparse requirement
* add asserts of DriverBlockDevice save call parameters
* fix call of DriverVolumeBlockDevice save in swap\_volume
* Use a workarounds group option to disable live snaphots
* libvirt : Add support for --interface option in iscsiadm
* Cells: Fix service\_get\_by\_compute\_host
* Expand instances project\_id index to cover deleted as well
* Remove unused conductor parameter from get\_host\_availability\_zone()
* Fixes Hyper-V instance snapshot
* Add more status when do \_poll\_rebooting\_instances
* Adds barbican keymgr wrapper
* libvirt: avoid setting the memnodes where when it's not a supported option
* Make code compatible with v4 auth and workaround webob bug
* Fix likely undesired use of redirection
* Save bdm in swap\_volume
* doc: document manual testing procedure for serial-console
* nova net-delete network is not informative enough
* Improvement in 'network\_set\_host' function
* Fix typo in nova/virt/disk/vfs/localfs.py
* Fix expected error in V2.1 add network API
* libvirt: fix failure when attaching volume to iso instance
* Add log message to is\_luks function
* Access migration fields like an object in finish\_revert\_resize
* Remove unused migration parameter from \_cleanup\_stored\_instance\_types
* object: serialize set to list
* Fix leaking exceptions from scheduler utils
* Adds tests for Hyper-V LiveMigration utils
* Adds tests for Hyper-V VHD utils
* libvirt: fix missing block device mapping parameter
* libvirt: add QEMU built-in iSCSI initiator support
* Add update\_or\_create flag to BDM objects create()
* Typos fixed
* Remove unused method from test\_metadata
* libvirt: Support iSCSI live migration for different iSCSI target
* Add JSON schema for "associate\_host" API
* Add migrate\_flavor\_data to nova-manage
* Adds logging to ComputeCapabilitiesFilter failures
* Add flavor fields to Instance object
* Fix up some instance object creation issues in tests
* Fix misspellings in hardware.py
* VMware: add in utility methods for copying and deleting disks
* Apply v2.1 API to href of version API
* Revert "Raise if sec-groups and port id are provided on boot"
* libvirt: always pass image\_meta when getting guest XML
* libvirt: assume image\_meta is non-None in blockinfo module
* libvirt: always pass image meta when getting disk info from bdm
* Calls to superclass' \_\_init\_\_ function is optional
* Enforce DB model matches results of DB migrations
* Add missing foreign keys for sqlite
* Fix an indentation in server group api samples template
* Allow instances to attach to shared external nets
* Handle ironic\_client non-existent case
* Cells: Record initial database split in devref
* Use a workarounds option to disable rootwrap
* virt: Fix images test interaction
* libvirt: add parallels virt\_type
* Convert nova-manage list to use Instance objects
* Create a 'workarounds' config group
* Updated from global requirements
* don't use exec cat when we can use read
* don't assert\_called\_once\_with with a real time
* Network: correct VMware DVS port group name lookup
* Refactor ComputeCapabilitiesFilter as bugfix preparation
* libvirt: Set SCSI as the default cdrom bus on System z
* Adds common policy authorizer helper functions for Nova V2.1 API
* Adds skip\_policy\_check flag to Compute/Network/SecurityGroup API
* Make test re-use HTTPRequest part 4
* libvirt: update uri\_whitelist in fakelibvirt.Connection
* Revert "Adds keypair type database migration"
* Support for ext4 as default filesystem for ephemeral disks
* Raise NotFound if attach interface with invalid net id or port id
* Change default value of multi\_instance\_display\_name\_template
* Check for LUKS device via 'isLuks' subcommand
* disk: use new vfs method and option to extend
* Replace select-for-update in fixed\_ip\_associate\_pool
* Remove unused content\_type\_params()
* libvirt: always pass image meta when getting disk mapping
* libvirt: always pass image meta when getting disk info
* Add API schema for v2.1 server reboot actions
* objects: fix typo in changelog of compute\_node
* Add API schema for v2.1 'removeFloatingIp'
* Add API schema for v2.1 'addFloatingIp'
* Add parameter\_types.ip\_address for cleanup
* Reply with a meaningful exception when ports are over the quota limit
* Adds keypair type database migration
* A minor change of CamelCase parameter
* Imported Translations from Transifex
* Remove N331 hacking rules
* GET details REST API next link missing 'details'
* Add missing indexes in SQLite and PostgreSQL
* libvirt: cleanup warning log formatting in \_set\_host\_enabled
* Revert temporary hack to monkey patch the fake rpc timeout
* Remove H238 comment from tox.ini
* libvirt: use image\_meta when looking up default device names
* Fix bdm transformation for volume backed servers
* Removed host\_id check in ServersController.update
* Fix policy validation in JSONSchema
* Adds assert\_has\_no\_errors check
* Removed useless method \_get\_default\_deleted\_value
* virt: make tests pass instance object to get\_instance\_disk\_info
* libvirt: rename conn variable in LibvirtConnTestCase
* Raise if sec-groups and port id are provided on boot
* Begin using ironic's "AVAILABLE" state
* Transform IPAddress to string when creating port
* Break base service group driver class out from API
* Remove unused \_get\_ip\_and\_port()
* Updated from global requirements
* Add method for getting the CPU pinning constraint
* libvirt: Consider CPU pinning when booting
* Make ec2/cloud.py use get\_instance\_availability\_zone() helper
* HACKING.rst: Update the location of unit tests' README.rst
* Remove unused method log\_db\_contents
* Make use of controller method in test\_flavor\_manage
* libvirt: Use XPath instead of loop in \_get\_disk\_xml
* Avoid bdms db call when cleaning deleted instance
* Ignore warnings from contextlib.nested
* Cleanup bad JSON files
* Switch to oslo.vmware API for reading and writing files
* Make test re-use HTTPRequest part 1
* Make test re-use HTTPRequest part 2
* Make test re-use HTTPRequest part 3
* Remove HTTPRequestV3 in scheduler\_hints test
* Hyper-V: Adds instance missing metrics enabling
* ephemeral file names should reflect fs type and mkfs command
* Reschedule queries to nova-scheduler after a timeout occurs
* libvirt: remove use of utils.instance\_sys\_meta
* libvirt: remove use of fake\_instance.fake\_instance\_obj
* Remove redundant catch for InstanceNotFound
* Add to\_dict() method to PciDevicePool object
* libvirt: rename self.conn in LibvirtVolume{Snapshot||Usage}TestCase
* libvirt: rename self.libvirtconnection in LibvirtDriverTestCase
* libvirt: convert LibvirtConnTestCase to use fakelibvirt fixture
* Remove unused network rpcapi calls
* Added hacking rule for assertEqual(a in b, True/False)
* Add API schema for v2.1 createImage API
* Fix errors in string formatting operations
* libvirt: Create correct BDM object type for conn info update
* Fixes undocumented commands
* Make \_get\_instance\_block\_device\_info preserve root\_device\_name
* Convert tests to NoDBTestCase
* Fixes Hyper-V should log a clear error message
* Provide compatibliity for db.compute\_node\_statistics
* Update network resource when shelve offload instance
* Update network resource when rescheduling instance
* libvirt: Expanded test libvirt driver
* Adds "file" disk driver support to Xen libvirt driver
* Virt: remove unused 'host' parameter from get\_host\_uptime
* Don't translate logs in tests
* Don't translate exceptions in tests
* disk/vfs: introduce new option to setup
* disk/vfs: introduce new method get\_image\_fs
* initialize objects with context in block device
* Remove unused controller instance in test\_config\_drive
* Fix v2.1 os-tenant-networks/networks API
* Use controller methods in test\_floating\_ips
* Cleanup in test\_admin\_actions
* Calling controller methods directly in test\_snapshots
* Add checking changePassword None in \_action\_change\_password(v2)
* Add more exceptions handle when change server password (v2)
* Share admin\_password unit test between V2 & V2.1
* Share server\_actions unit test between V2 & V2.1
* Fix server\_groups schema on v2.1 API
* Implement a safe copy.copy() operation for Nova models
* clean up extension loading logging
* Hyper-V: Fixes wrong hypervisor\_version
* console: introduce baseproxy and update consoles cmd
* libvirt: update get\_capabilities to Host class
* libvirt: add get\_connection doc string in Host class
* Enable check for H238 rule
* Call ComputeNode instead of Service for getting the nodes
* Remove mox dependency
* Fix JSONFilter docs
* libvirt: move \_get\_hypervisor\_\* functions to Host class
* libvirt: don't turn time.sleep into a no-op in tests
* Adds Hyper-V generation 2 VMs implementation
* VMware: ensure that correct disk details are returned
* Improve api-microversion hacking check
* Add unit test for getting project quota remains
* Fix py27 gate failure - test\_create\_instance\_both\_bdm\_formats
* Reduce complexity of the \_get\_guest\_config method
* Cleanups in preparation of flavor attributes on Instance
* Add flavor column to instance\_extra table
* docs: document manual testing procedure for NUMA support
* Add setup/cleanup\_instance\_network\_on\_host api for neutron/nova-network
* Remove useless requirements
* Make get\_best\_cpu\_topology consider NUMA requested CPU topology
* Make libvirt driver expose sibling info in NUMA topology
* VMware: snapshot as stream-optimized image
* VMware: refactor utility functions related to VMDK
* Get settable user quota maximum correctly
* Add missing policy for nova in policy.json
* Fix typo in nfs\_mount\_options option description
* increase fake rpc POLL\_TIMEOUT to 0.1s
* work around for until-failure
* Fix inconsistencies in the ComputeNode object about service
* Fixed incorrect initialization of availability zone tests
* Revert "initialize objects with context in block device"
* Fix wrong instructions for rebuilding API samples
* Performance: leverage  dict comprehension in PEP-0274
* Sync with latest oslo-incubator
* initialize objects with context in VirtualInterface object tests
* initialize objects with context in Tag object tests
* initialize objects with context in Service object tests
* Fixes Hyper-V boot from volume live migration
* Expansion of matching XML strings logic
* Xenapi: Attempt clean shutdown when deleting instance
* don't use debug logs for object validation
* create some unit of work logging in n-net
* Make service-update work in API cells
* oslo: remove useless modules
* Do not use deprecated assertRaisesRegexp()
* Honor shared storage on resize revert
* Stub out instance action events in test\_compute\_mgr
* Remove unused instance\_group\_metadata\_\* DB APIs
* initialize objects with context in block device
* Reduce the complexity of the create() method
* speed up tests setting fake rpc polling timeout
* xenapi: don't send terminating chunk on errors
* Make service-delete work in API cells
* Add version as request param for fake HTTPRequest
* Fix OverQuota headroom KeyError in nova-network allocate\_fixed\_ip
* Updated from global requirements
* Make numa\_usage\_from\_instances consider CPU pinning
* Cleanup in admin\_actions(v2.1api)
* Cache ironic-client in ironic driver
* tests: fix handling of TIMEOUT\_SCALING\_FACTOR
* libvirt: remove/revert pointless logic for getVersion call
* libvirt: move capabilities helper into host.py
* libvirt: move domain list helpers into Host class
* libvirt: move domain lookup helpers into Host class
* Fix live migration RPC compatibility with older versions
* Added \_get\_volume\_driver method in libvirt driver
* fix wrong file path in docstring of hacking.checks
* Make ec2 auth support v4 signature format
* VMware: driver not handling port other than 443
* libvirt: use XPath in \_get\_serial\_ports\_from\_instance
* Remove non existent rule N327 from HACKING.rst
* Replace Hacking N315 with H105
* Enable W292
* Fix and re-gate on H306
* Move to hacking 0.10
* Fix nova-manage shell ipython
* Make service-list output consistent
* Updated from global requirements
* Make V2.1 servers filtering (--tenant-id) same as V2
* Fix failure rebuilding instance after resize\_revert
* Move WarningsFixture after DatabaseFixture so emit once
* libvirt: Use arch.from\_host instead of platform.processor
* Cells: Improve invalid hostname handling
* Fix obj\_to\_primitive() expecting the dict interface methods
* Remove unused XML\_WARNING variable in servers API
* Guard against missing X-Instance-ID-Signature header
* libvirt: not setting membacking when mempages are empty host topology
* remove pylint source code annotations
* Cleanup XML for api samples tests for Nova REST API
* remove all traces of pylint testing infrastructure
* initialize objects with context in SecurityGroupRule object tests
* initialize objects with context in SecurityGroup object tests
* initialize objects with context in base object tests
* initialize objects with context in Migration object tests
* initialize objects with context in KeyPair object tests
* initialize objects with context in InstanceNUMATopology object tests
* initialize objects with context in InstanceGroup object tests
* initialize objects with context in InstanceFault object tests
* Fix error message when no IP addresses available
* Update WSGI SSL IPv6 test and SSL certificates
* Catch more specific exception in \_get\_power\_state
* Add WarningsFixture to only emit DeprecationWarning once in a test run
* Maintain the creation order for vifs
* Update docstring for wrap\_exception decorator
* Doc:  Adds python-tox to Ubuntu dependencies
* Added hacking rule for assertTrue/False(A in B)
* ironic: use instance object in driver.py
* Add LibvirtGPFSVolumeDriver class
* Make pagination work with deleted marker
* Return 500 when unexpected exception raising when live migrate v2
* Remove no need LOG.exception on attach\_interface
* Make LOG exception use format\_message
* make IptablesRule debug calls meaningful
* Switch to tempest-lib's packaged subunit-trace
* Update eventlet API in libvirt driver
* initialize objects with context in Instance object tests
* initialize objects with context in Flavor object tests
* initialize objects with context in FixedIP object tests
* initialize objects with context in EC2 object tests
* initialize objects with context in ComputeNode object tests
* initialize objects with context in BlockDeviceMapping object tests
* Nuke XML support from Nova REST API - Phase 3
* Return floating\_ip['fixed\_ip']['instance\_uuid'] from neutronv2 API
* Add handling of BadRequest from Neutron
* Add numa\_node to PCIDevice
* Nuke XML support from Nova REST API - Phase 2
* Remove unused methods in nova utils
* Use get\_my\_ipv4 from oslo.utils
* Add cpu pinning check to numa\_fit\_instance\_to\_host
* Add methods for calculating CPU pinning
* Remove duplicated policy check at nova-network FlatManager
* boot instance with same net-id for multiple --nic
* XenAPI: Check image status before uploading data
* XenAPI: Refactor message strings to remove locals
* Cellsv2 devref addition
* Nuke XML support from Nova REST API - Phase 1
* hardware: fix numa topology from image meta data
* Support both list and dict for pci\_passthrough\_whitelist
* libvirt: Add balloon period only if it is not None
* Don't assume contents of values after aggregate\_update
* Add API schema for server\_groups API
* Remove unused function \_get\_flavor\_refs in flavor\_access extension
* Make rebuild server schema 'additionalProperties' False
* Tests with controller methods in test\_simple\_tenant\_usage
* Convert wsgi call to controller in test\_virtual\_interfaces
* Fix the comment of host index api
* Imported Translations from Transifex
* Use controller methods directly in test\_admin\_password
* Drop workarounds for python2.6
* VMware: add in utility method for copying files
* Remove lock files when remove libvirt images
* Change log when set\_admin\_password failed
* Catch InstanceInvalidState for start/stop action
* Unshelving a volume backed instance doesn't work
* Cache empty results in libvirt get\_volume\_connector
* VMware: improve the performance of list\_instances
* VMware: use power\_off\_instance instead of power\_off
* VMware: refactor unit tests to use \_get\_info
* libvirt: clean instance's directory when block migration fails
* Remove unused scheduler driver methods
* Reuse methods from netutils
* VMware: make use of oslo.vmware logout
* Remove unused directory nova/tests/unit/bundle
* Prevent new code from using namespaced oslo imports
* Move metadata filtering logic to utils.py
* Make test\_consoles to directly call controller methods
* Catch expected exceptions in remote console controller
* Make direct call to controller test\_server\_password
* Cleanup in test\_keypairs not to use wsgi\_app
* Add ipv6 support to fake network models
* Add host field when missing from compute\_node
* Remove condition check for python2.6 in test\_glance
* Cleanup in test\_availability\_zone not to use wsgi\_app
* Call controller methods directly in test\_evacuate
* VMware: Use datastore\_regex for disk stats
* Add support for clean\_shutdown to resize in compute api layer
* Fix Instance relationships in two objects
* objects: remove NovaObjectDictCompat from Tag object
* libvirt: introduce new helper for getting libvirt domain
* libvirt: remove pointless \_get\_host\_uuid method
* libvirt: pass Host object into firewall class
* Cleanup in server group unit tests
* Enhance EvacuateHostTestCase test cases
* Call controller methods directly in test\_console\_output
* Make direct call to controller in test\_console\_auth\_tokens
* Populates retry info when unshelve offloaded instance
* Catch NUMA related exceptions for create server v2.1 API
* Remove unnecessary cleanup from ComputeAPITestCase
* extract RPC setup into a fixture

2015.1.0b1
----------

* Fix recent regression filling in flavor extra\_specs
* remove detail method from LimitsController
* Remove instance\_uuids from request\_spec
* libvirt: remove unused get\_connection parameter from VIF driver
* libvirt: sanitize use of mocking in test\_host.py
* libvirt: convert test\_host.py to use FakeLibvirtFixture
* libvirt: introduce a fixture for mocking out libvirt connections
* Expand valid resource name character set
* Set socket options in correct way
* Make resize server schema 'additionalProperties' False
* Make lock file use same function
* Remove unused db.api.dnsdomain\_list
* Remove unused db.api.instance\_get\_floating\_address
* Remove unused db.api.aggregate\_host\_get\_by\_metadata\_key
* Remove unused db.api.get\_ec2\_instance\_id\_by\_uuid
* Join instances column before expecting it to exist
* ec2: Change FormatMappingTestCase to NoDBTestCase
* libvirt: enhance driver to configure guests based on hugepages
* Fix ironic delete fails when flavor deleted
* virt: pass instance object to block\_stats & get\_instance\_disk\_info
* Add pci\_device\_pools to ComputeNode object
* Handle invalid sort keys/dirs gracefully
* hardware: determine whether a pagesize request is acceptable
* objects: add method to verify requested hugepages
* hardware: make get\_constraints to return topology for hugepages
* hardware: add method to return requested memory page size
* Cleanup in ResourceExtension ALIAS(v2.1api)
* Replace use of handle\_schedule\_error() with set\_vm\_state\_and\_notify()
* Fix set\_vm\_state\_and\_notify passing SQLA objects to send\_update()
* Imported Translations from Transifex
* Libvirt: use strutils.bool\_from\_string
* Use constant for microversions header name (cleanup)
* Adds support for versioned schema validation for microversions api
* Add support for microversions API special version latest
* Adds API microversion response headers
* Use osapi\_compute worker for api v2 service
* initialize objects with context in Aggregate object tests
* Replace the rest of the non-object-using test\_compute tests
* Fix using anyjson in fake\_notifier
* Fix a bug in \_get\_instance\_nw\_info() where we re-query for sysmeta
* Corrects link to API Reference on landing page
* libvirt: disk\_bus setting is being lost when migration is reverted
* libvirt: enable hyperv enlightenments for windows guests
* libvirt: enhance to return avail free pages on cells
* libvirt: move setting of guest features out into helper method
* libvirt: add support for configuring hyperv enlightenments in XML
* libvirt: change representation of guest features
* libvirt: add support for hyperv timer source with windows guests
* libvirt: move setting of clock out into helper method
* libvirt: don't pass a module import into methods
* Reject non existent mock assert calls
* VMware: remove unused method in the fake module
* Use oslo db concurrency to generate nova.conf.sample
* Make instance\_get\_all\_\*() funtions support the smart extra.$foo columns
* Make cells send Instance objects in build\_instance()
* Fix spelling error in compute api
* objects: fix changed fields for instance numa cell
* Hyper-V: Fix volume attach issue caused by wrong constant name
* Move test\_extension\_info from V3 dir to V2.1
* Make create server schema 'additionalProperties' False
* Make update server schema 'additionalProperties' False
* Updated from global requirements
* Update devref with link to kilo priorities
* Add vision of nova rest API policy improvement in devref
* objects: remove dict compat support from all XXXList() objects
* objects: stop conductor manager using dict field access on objects
* objects: allow creation of objects without dict item compat
* Remove duplicated constant DISK\_TYPE\_THIN
* Hyper-V: Fix retrieving console logs on live migration
* Remove FlavorExtraSpecsNotFound catch in v3 API
* Add API schema for v2.1 block\_device\_mapping\_v1
* Add API schema for v2.1 block\_device\_mapping extension
* VMware: Support volume hotplug
* fix import of oslo.concurrency
* libvirt: set guest cpu\_shares value as a multiple of guest vCPUs
* Make objects use the generalized backport scheme
* Fix base obj\_make\_compatible() handling ListOfObjectsField
* VMware: make use of oslo.vmware pbm\_wsdl\_loc\_set
* Replace stubs with mocks
* Updated from global requirements
* use more specific error messages in ec2 keystone auth
* Add backoff to ebtables retry
* Add support for clean\_shutdown to rescue in compute api layer
* Add support for clean\_shutdown to shelve in compute api layer
* Add support for clean\_shutdown to stop in compute api layer
* Extend clean\_shutdown to the compute rpc layer
* initialize objects with context in compute manager
* Add obj\_as\_admin() to NovaPersistentObject
* Bump major version of Scheduler RPC API to 4.0
* Use model\_query from oslo.db
* Only check db/api.py for session in arguments
* Small cleanup in db.sqlalchemy.api.action\_finish()
* Inline \_instance\_extra\_get\_by\_instance\_uuid\_query
* libvirt: Convert more tests to use instance objects
* virt: Convert more tests to use instance objects
* virt: delete unused 'interface\_stats' method
* objects: fix version changelog in numa
* libvirt: have \_get\_guest\_numa\_config return a named tuple
* simplify database fixture to the features we use
* extract the timeout setup as a fixture
* Stop neutron.api relying on base neutron package
* Move pci unit test from V3 to V2.1
* Clarify point of setting dirname in load\_standard\_extensions
* Remove support for deprecated header X\_ROLE
* move all conf overrides to conf\_fixture
* move ServiceFixture and TranslationFixture
* extract fixtures from nova.test to nova.test.fixtures
* libvirt: Fix NUMA memnode assignments to host cells
* libvirt: un-cruft \_get\_guest\_numa\_config
* Make scheduler filters/weighers only load once
* Refactor unit tests for scheduler weights
* Fix cells RPC version 1.30 compatibility with dict-based Flavors
* Objects: add in missing translation
* network:Separate the translatable messages into different catalogs
* objects: introduce numa pages topology as an object
* check the configuration num\_vbd\_unplug\_retries
* Doc: minor fixes to unit testing devref
* Doc: Update i18n devref
* VMware: remove flag in tests indicating VC is supported
* virt: use instance object for attach in block\_device
* VMware: clean up unit tests
* Do not compute deltas when doing migration
* Modify v21 alias name for compatible with v2
* Clean bdms and networks after deleting shelved VM
* move eventlet GREENDNS override to top level
* fix pep8 errors that apparently slipped in
* include python-novaclient in abandon policy
* replace httplib.HTTPSConnection in EC2KeystoneAuth
* Re-revert "libvirt: add version cap tied to gate CI testing"
* ironic: remove non-standard info in get\_available\_resource dict
* hyperv: use standard architecture constants for CPU model
* xenapi: fix structure of data reported for cpu\_info
* ironic: delete cpu\_info data from get\_available\_resource
* vmware: delete cpu\_info data from get\_available\_resource
* pci: move filtering of devices up into resource tracker
* Libvirt: Fsfreeze during live-snapshot of qemu/kvm instances
* libvirt: Fixes live migration for volume backed instances
* Updated from global requirements
* Remove unused db.api.fixed\_ip\_get\_by\_address\_detailed
* VMware: Remove unused \_check\_if\_folder\_file\_exists from vmops
* VMware: Remove unused \_get\_orig\_vm\_name\_label from vmops
* VMware: enable a cache prefix configuration parameter
* Hyper-V: attach volumes via SMB
* etc: replace NullHandler by Python one
* Add cn\_get\_all\_by\_host and cn\_get\_by\_host\_and\_node to ComputeNode
* Add host field to ComputeNode
* Reject unsupported image to local BDM
* Update LVM lockfile name identical to RAW and Qcow
* Fix invalid read\_deleted value in \_validate\_unique\_server\_name()
* Adds hacking check for api\_version decorator
* Parse "networks" attribute if loading os-networks
* Fixes interfaces template identification issue
* VMware: support passing flavor object in spawn
* Libvirt: make use of flavor passed by spawn method
* Virt: change instance\_type to flavor
* rename oslo.concurrency to oslo\_concurrency
* Support macvtap for vif\_type being hw\_veb
* downgrade 'No network configured!' to debug log level
* Remove unnecessary timeutils override cleanup
* Cleanup timeutils override in tests/functional/test\_servers
* Downgrade quota exceeded log messages
* libvirt: Decomposition plug hybrid methods in vif
* Remove unused cinder code
* Libvirt normalize numa cell ids
* Remove needless workaround in utils module
* Check for floating IP pool in nova-network
* Remove except Exception cases
* Fixes multi-line strings with missing spaces
* Fix incorrectly formatted log message
* libvirt: check value of need\_legacy\_block\_device\_info
* Fixed typo in testcase and comment
* Share server access ips tests between V2 & V2.1
* Workflow documentation is now in infra-manual
* Add a validation format "cidr"
* Use a copy of NEW\_NETWORK for test\_networks
* Adds global API version check for microversions
* Implement microversion support on api methods
* Fix long hostname in dnsmasq
* This patch fixes the check that 'options' object is empty correctly
* Assert order of DB index members
* Updated from global requirements
* object-ify flavors manager side of the RPC
* Add CPU pinning data to InstanceNUMACell  object
* Enforce unique instance uuid in data model
* libvirt: Handle empty context on \_hard\_reboot
* Move admin\_only\_action\_common out of v3 directory(cleanup)
* Compute Add build\_instance hook in compute manager
* SQL scripts should not manage transactions
* Clear libvirt test on LibvirtDriverTestCase
* Replacement \`\_\` on \`\_LW\` in all LOG.warning part 4
* Replacement \`\_\` on \`\_LW\` in all LOG.warning part 3
* Convert v3/v2.1 extension info to present v2 API format
* Adds NUMA CPU Pinning object modeling
* objects: Add several complex field types
* VMware: ephemeral disk support
* Imported Translations from Transifex
* Fix disconnecting necessary iSCSI sessions issue
* VMware: ensure that fake VM deletion returns a task
* Compute: Catch binding failed exception while init host
* libvirt: Fix domain creation for LXC
* Xenapi: Allow volume backed instances to migrate
* Break V2 XML Support
* Libvirt: SMB volume driver
* libvirt: Enable console and log for system z guests
* libvirt: Set guest machine type on system z
* Drop support for legacy server groups
* Libvirt: Don't let get\_console\_output crash on missing console file
* Hyper-V: Adds VMOps unit tests (part 1)
* VMware: allow selection of vSAN datastores
* libvirt: enhance config memory backing to handle hugepages
* VMware: support spawn of stream-optimized image
* libvirt: reuse defined method to return instance numa topology
* Remove the volume api related useless policy rules
* Error code for creating secgroup default rule
* Don't mock external locks with Semaphore
* Add shelve and unshelve info into devref doc
* VMware: optimize resource pool usage
* Added objects Tag and TagList
* libvirt: video RAM setting should be passed in kb to libvirt
* Switch to moxstubout and mockpatch from oslotest
* Check that volume != root device during boot by image
* Imported Translations from Transifex
* Make a flavorRef validation strict
* Add missing indexes from 203 migration to model
* Fix type of uniq\_security\_groups0project\_id0name0deleted
* Correct columns covered in migrations\_instance\_uuid\_and\_status\_idx
* Add debug log for url not found
* Optimize 'floating\_ip\_bulk\_create' function
* factor out \_setup\_logging in test.py
* extract \_setup\_timeouts in test.py
* Scheduler: return a namedtuple from \_get\_group\_details
* Use "is\_neutron\_security\_groups" check
* Fix function name mismatch in test case
* VMware: prevent exception with migrate\_disk\_and\_power\_off
* Fix URL mapping of image metadata PUT request
* Compute: catch correct exception when host does not exists
* Fix URL mapping of server metadata PUT request
* objects: move numa host and cell to objects
* objects: introduce numa objects
* Code cleanup: quota limit validation
* Add api validation schema for image\_metadata
* Correct InvalidAggregateAction translation&format
* Remove blanks before ':'
* Port virtual-interfaces plugin to v2.1(v3) API
* Catch ComputeServiceUnavailable on v2 API
* GET servers API sorting REST API updates
* Add API validation schema for volume\_attachments
* Changed testcase 'test\_send\_on\_vm\_change' to test vm change
* VMware: associate instance with storage policy
* VMware: use storage policy in datastore selection
* VMWare: get storage policy from flavor
* Share CreateBackup unit test between V2 & V2.1
* Share suspend\_server unit test between V2 & V2.1
* Share pause\_server unit test between V2 & V2.1
* Share lock\_server unit test between V2 & V2.1
* VMware: enable VMware driver to use new BDM format
* Use admin only common test case in admin action unit test cases
* objects: move virt numa instance to objects
* Fix v2.1 API os-simple-tenant-usage policy
* Set vm state error when raising unexpected exception in live migrate
* Add delete not found unit testcase for floating\_ip api
* Improve error return code of floating\_ips in v2/v2.1 api
* Port floating\_ips extension to v2.1
* Removing the headroom calculation from db layer
* Make multiple\_create unit tests share between v2 and v2.1
* Set API version request information on request objects
* Change definition of API\_EXTENSION\_NAMESPACE to method
* Adds APIVersionRequest class for API Microversions
* Updated from global requirements
* remove test.ReplaceModule from test.py
* Added db API layer to add instance tag-list filtering support
* Added db API layer for CRUD operations on instance tags
* Implement 'personality' plugin for V2.1
* Fix API samples/templates of multinic-add-fixed-ip
* move the integrated tests into the functional tree
* Sync latest from oslo-incubator
* Fix use of conf\_fixture
* Make network/\* use Instance.get\_flavor()
* Make metadata server use Instance.get\_flavor()
* Fix use of extract\_flavor() in hyper-v driver
* Check server group policy on migrate/evacuate
* VMware: fix exception when multiple compute nodes are running
* Add API json schema for server\_external\_event(v2.1)
* Port v2 quota\_classes extension to work in v2.1(v3) framework
* Share unit test case for server\_external\_events api
* Add API schema for v2.1/v3 scheduler\_hints extension
* Make compute/api.py::resize() use Instance.get\_flavor()
* Make get\_image\_metadata() use Instance.get\_flavor()
* Fix instance\_update() passing SQLA objects to send\_update()
* Fix EC2 volume attachment state at attaching stage
* Fixes Hyper-V agent IDE/SCSI related refactoring
* dummy patch to let tox functional pass
* Remove Python 2.6 classifier
* Make aggregate filters use objects
* hardware: clean test to use well defined fake flavor
* Enable pep8 on ./tools directory
* objects: Add test for instance \_save methods
* Error code for creating duplicate floating\_ip\_bulk
* Use HTTPRequest instead of HTTPRequestV3 for v2/v2.1 tests
* objects: make instance numa topology versioned in db
* Clean up in test\_server\_diagnostics unit test case
* Add "x-compute-request-id" to a response header
* Prevent admin role leak in context.elevated
* Hyper-V: Refactors Hyper-V VMOps unit tests
* Hyper-V: Adds Hyper-V SnapshotOps tests
* Introduce a .z version element for backportable objects
* Adds new RT unit tests for \_sync\_compute\_node
* Fix for extra\_specs KeyError
* Remove old Baremetal Host Manager
* Remove unused network\_api.get\_instance\_uuids\_by\_ip\_filter()
* Remove unused network\_api.get\_floating\_ips\_by\_fixed\_address()
* add abandon\_old\_reviews script
* Remove havana compat from nova.cert.rpcapi
* Retry ebtables on race
* Eventlet green threads not released back to pool
* Hyper-V: Adds LiveMigrationOps unit tests
* Hyper-V: Removes redundant utilsfactory tests from test\_hypervapi
* Hyper-V: Adds HostOps unit tests
* Make nova-api use quotas object for create\_security\_group
* Make nova-api use quotas object for count() and limit\_check()
* Add count and limit\_check methods to quota object
* Make neutronapi get networks operations return objects
* Hyper-V: fix tgt iSCSI targets disconnect issue
* Network object: add missing translations
* Adapting pylint runner to the new message format
* Cleanup v2.1 controller inheritance
* Load extension 2 times fix load sequence issue
* Make get\_next\_device\_name() handle an instance object
* Add obj\_set\_defaults() to NovaObject
* Switch to oslo.config fixture
* Remove VirtNUMAHostTopology.claim\_test() method
* Instances with NUMA will be packed onto hosts
* Make Instance.save() update numa\_topology
* objects: remove VirtPageSize from hardware.py
* VMware: enable backward compatibility with existing clusters
* Make notifications use Instance.get\_flavor()
* Make notify\_usage\_exists() take an Instance object
* Convert hardware.VirtCPUTopology to nova object
* Updated from global requirements
* Replacement \`\_\` on \`\_LW\` in all LOG.warning part 2
* compute: rename hvtype.py to hv\_type.py
* Replacement \`\_\` on \`\_LW\` in all LOG.warning part 1
* Replacement \`\_\` on \`\_LE\` in all LOG.exception
* Use opportunistic approach for migration testing
* Replacement \`\_\` on \`\_LI\` in all LOG.info - part 2
* Replacement \`\_\` on \`\_LI\` in all LOG.info - part 1
* Add ALL-IN operator to extra spec ops
* Sync server\_external\_events v2 to v2.1 Part 2
* Sync server\_external\_events v2 to v2.1 Part 1
* Fix connecting unnecessary iSCSI sessions issue
* Add API validation schema for services v2.1 plugin
* Fix exception handling in \_get\_host\_metrics()
* initialize objects with context in network manager tests
* initialize objects with context in flavors
* initialize objects with context in compute api
* initialize objects with context in resource tracker
* Use common get\_instance call in API plugins part 3
* Clean the test cases for service plugins
* initialize objects with context in server groups api
* initialize objects with context in cells
* tests: update \_get\_instance\_xml to accept custom flavor object
* libvirt: vif tests should use a flavor object
* Compute: improve test\_compute\_utils time
* Compute: improve usage of Xen driver support
* libvirt: introduce new 'Host' class to manage the connection
* Add CHAP credentials support
* Document the upgrade plans
* Move test\_hostops into nova/tests/unit
* Fix get\_all API to pass search option filter to cinder api
* VMware: remove ESX support for getting resource pool
* objects: Makes sure Instance.\_save methods are called
* Add support for fitting instance NUMA nodes onto a host
* VMware: remove unnecessary brackets
* Imported Translations from Transifex
* Port volume\_attachments extension to v2.1 API
* Only filter once for trusted filters
* Indicate whether service is down for mc driver
* Port assisted-volume-snapshots extension to v2.1
* Updated from global requirements
* Add custom is\_backend\_avail() method
* Fixes differencing VHDX images issue on Hyper-V
* Add debug log when over quota exception occurs
* Fix rule not found error in sec grp default rule API
* Convert service v3 plugin to v2.1 API
* Decrease admin context usage in \_get\_guest\_config
* Catch NotImplemented nova exceptions in API extension
* Add API json schema to volumes api(v2.1)
* Don't modify columns\_to\_join formal parameter in \_manual\_join\_columns
* Limit tcp/udp port to be empty string in json-schema
* Fix the cell API with string rpc\_port failed
* Add decorator expected\_errors for security\_group extension
* Fix bulk floating ip ext to show uuid and fixed\_ip
* Use session in cinderclient
* Make objects.Flavor.\_orig\_projects a list
* Refactor more compute tests to use Instance objects
* Use Instance.get\_flavor() in more places
* Support instance\_extra fields in expected\_attrs on Instance object
* Adds host power actions support for Hyper-V
* Exceptions: finish sentence with fullstop
* Type conflict in trusted\_filter.py using attestation\_port default value
* Get EC2 metadata localip return controller node ip
* Rename private functions in db.sqla.api
* Enable hard-reboot on more states
* Better error message when check volume status
* libvirt: use qemu (qdisk) disk driver for Xen >= 4.2.0
* Add resource types for JSON-Schema validation
* Add integer types for JSON-Schema
* Revert pause/unpause state when host restart
* Extends use of ServiceProxy to more methods in HostAPI in cells
* Nova devref: Fix the rpc documentation typos
* Remove duplicated code in services api integrated test case
* Share server\_password unit test between V2 & V2.1
* Key manager: ensure exception reason is translated
* Virt: update spawn signature to pass instance\_type
* Compute: set instance to ERROR if resume fails
* Limit InstanceList join to system\_metadata in os-simple-tenant-usage
* Pass expected\_attrs to instance\_get\_active\_by\_window\_joined
* VMware: remove unused parameter (mountpoint)
* Truncate encoded instance message to 255 or fewer
* Only load necessary instance info for use in sync power state
* Revert "Truncate encoded instance message to 255"
* VMware: refactor cpu allocations
* Fixes spawn issue on Hyper-V
* Refine HTTP error code for os-interface
* Share migrations unit test between V2 & V2.1
* Use common get\_instance call in API plugins part 2
* make get\_by\_host use slave in periodic task
* Add update\_cells to BandwidthUsage.create()
* Fix usage of BandwidthUsage.create()
* Updated from global requirements
* Hard reboot doesn't re-create instance folder
* object-ify flavors api and compute/api side of RPC
* Allow passing columns\_to\_join to instance\_get\_all\_by\_host\_and\_node()
* Don't make a no-op DB call
* Remove deprecated affinity filters
* Generalize dependent object backporting
* GET servers API sorting compute/instance/DB updates
* Hyper-V: cleanup basevolumeutils
* Specify storage IP for iscsi connector
* Fix conductor processes race trying to join servicegroup (zk driver)
* Remove unused db.api.floating\_ip\_set\_auto\_assigned
* Remove unused db.api.flavor\_extra\_specs\_get\_item
* Remove unused oslo.config import
* Create instance\_extra items atomically with the instance itself
* Shelve\_offload() should give guests a chance to shutdown
* Fixes Hyper-V driver WMI issue on 2008 R2
* Fix circular reference error when live migration failed
* Fix live migration api stuck when migrate to old nova node
* Remove native security group api class
* libvirt: pin emulator threads to union of vCPU cpuset
* libvirt: add classes for emulator thread CPU pinning configuration
* libvirt: set NUMA memory allocation policy for instances
* Fixed quotas double decreasing problem
* Convert v3 console plugin to v2.1
* Virt: make use of the InstanceInfo object
* Virt: create an object InstanceInfo
* Metadata service: make use of get\_instance\_availability\_zone
* Metadata service: remove check for the instance object type
* Metadata: use instance objects instead of dictionary
* VMware: Fix problem transferring files with ipv6 host
* VMware: pass vm\_ref to \_set\_machine\_id
* VMware: pass vm\_ref to \_get\_and\_set\_vnc\_config
* Add API schema for aggregates set\_metadata API
* Compute: Add start notification for resume
* VMware: fix regression for 'TaskInProgress'
* Remove havana compat from nova.console.rpcapi
* Remove havana compat from nova.consoleauth.rpcapi
* Share console-auth-tokens tests between V2 & V2.1
* Raise HTTPNotFound in V2 console extension
* Add 'instance-usage-audit-log' plugin for V2.1
* Truncate encoded instance message to 255
* Deduplicate some INFO and AUDIT level messages
* move all tests to nova/tests/unit
* Add tox -e functional
* Don't touch info\_cache after refreshing it in Instance.refresh()
* Drop max-complexity to 47
* Aggregate.save() shouldn't return a value
* Remove useless host parameter in virt
* Use real disk size to consider a resize down
* Add virtual interface before add fixed IP on nova-network
* image cache clean-up to clean swap disk
* Make unit test floating ips bulk faster
* Remove flush\_operations in the volume usage output
* Updated from global requirements
* xenapi plugins must target only Python 2.4 features
* libvirt: add classes for NUMA memory binding configuration
* libvirt: add in missing translation for LVM migration
* Config bindings: remove redundant brackets
* Config drive: delete deprecated config var config\_drive\_tempdir
* Refactor Ironic driver tests as per review comment
* Switch default cinder API to V2
* Remove deprecated spicehtml5 options
* Fix xen plugin to retry on upload failure
* Log sqlalchemy exception message in migration.py
* Use six.text\_type instead of unicode
* XENAPI add duration measure to log message
* Quotas: remove deprecated configuration variable
* Glance: remove deprecated config options
* Cinder: remove deprecated configuration options
* Neutron: remove deprecated config options
* object: update instance numa object to handle pagesize
* hardware: make cell instance topology to handle memory pages
* hardware: introduce VirtNUMATopologyCellInstance
* hardware: fix in doctstring the memory unit used
* virt: introduce types VirtPageSize and VirtPagesTopology
* Clearer default implmentation for dhcp\_options..
* Fix instance\_usage\_audit\_log test to use admin context
* VMware: remove unused method \_get\_vmfolder\_ref
* libvirt: safe\_decode domain.XMLDesc(0) for i18n logging
* VMware: trivial fix for comment
* Fix the uris in documentation
* Make test\_security\_groups nose compatible
* Make test\_quotas compatible with nosetests
* Return HTTP 400 if use invalid fixed ip to attach interface
* Fixed typos in nova.objects.base docstrings
* Add note on running single tests to HACKING.rst
* Use sizelimit from oslo.middleware
* Use oslo.middleware
* Make resource tracker always use Flavor objects
* maint:Don't translate debug level logs
* Make console show and delete exception msg better
* Change error code of floating\_ip\_dns api(v2.1)
* Make scheduler code use object with good practice
* Switch Nova to use oslo.concurrency
* scheduler: Remove assert on the exact number of weighers
* Update docstring for check\_instance\_shared\_storage\_local
* remove use of explicit lockutils invocation in tests
* Delay STOPPED lifecycle event for Xen domains
* Remove warning & change @periodic\_task behaviour
* Fix nova-compute start issue after evacuate
* Ignore DiskNotFound error on detaching volumes
* Move setup\_instance\_group to conductor
* Small doc fix in compute test
* libvirt: introduce config to handle cells memory pages caps
* Fixes DOS issue in instance list ip filter
* Use 404 instead of 400 when security\_group is non-existed
* Port security-group-default-rules extension into v2.1
* Port SecurityGroupRules controller into v2.1
* error if we don't run any tests
* Revert "Switch Nova to use oslo.concurrency"
* Updated from global requirements
* Remove admin context which is not needed
* Add API validation schema for disk\_config
* Make test\_host\_filters a NoDBTestCase
* Move group affinity filters tests to own test file
* Split out metrics filter unit tests
* Splits out retry filter unit tests
* Split out compute filters unit tests
* Update hooks from oslo-incubator copy
* Split out aggregate disk filter unit tests
* Split out core filter unit tests
* Split out IO Ops filter unit tests
* Split out num instances filter unit tests
* Split and fix the type filters unit tests
* Split and fix availability zone filter unit tests
* Split out PCI passthrough filter unit tests
* Use common get\_instance call in API plugins
* Fix nova evacuate issues for RBD
* DB API: Pass columns\_to\_join to instance\_get\_active\_by\_window\_joined
* Read flavor even if it is already deleted
* Use py27 version of assertRaisesRegexp
* update retryable errors & instance fault on retry
* xenapi: upload/download params consistency change
* Use assertRaisesRegexp
* Drop python26 support for Kilo nova
* Switch Nova to use oslo.concurrency
* Remove param check for backup type on v2.1 API
* Set error state when unshelve an instance due to not found image
* fix the error log print in encryptor \_\_init\_\_.py
* Remove unused compute\_api in extend\_status
* Compute: maint: adjust code to use instance object format
* VMware: use instance.uuid instead of instance['uuid']
* Network: manage neutron client better in allocate\_for\_instance
* Split out agg multitenancy isolation unit tests
* Split agg image props isolation filter unit tests
* Separate isolated hosts filter unit tests
* Separate NUMA topology filter unit tests
* resource-tracker: Begin refactor unit tests
* Faster get\_attrname in nova/objects/base.py
* Hyper-V: Skip logging out in-use targets
* Compute: catch more specific exception for \_get\_instance\_nw\_info
* typo in the policy.json "rule\_admin\_api"
* Fix the unittest use wrong controller for SecurityGroups V2
* host manager: Log the host generating the warning
* Add API validation schema for floating\_ip\_dns
* Remove \`domain\` from floating-ip-dns-create-or-update-req body
* Port floating\_ip\_dns extention to v2.1
* Remove LOG outputs from v2.1 API layer
* Run build\_and\_run\_instance in a separate greenthread
* VMware: Improve the efficiency of vm\_util.get\_host\_name\_for\_vm
* VMware: Add fake.create\_vm()
* Use wsgi.response for v2.1 API
* Use wsgi.response for v2.1 unrescue API
* Add API schema for v2.1 "resize a server" API
* Remove use of unicode on exceptions
* Fix error in comments
* Make pci\_requests a proper field on Instance object
* libvirt: fully parse PCI vendor/product IDs to integer data type
* Remove uncessary instance.save in nova compute
* api: add serial console API calls v2.1/v3
* Add API validation schema for cloudpipe api
* Remove project id in ViewBuilder alternate link
* Handle exception better in v2.1 attach\_interface
* Cleanup of tenant network tests
* Port floating\_ips\_bulk extention to v2.1
* Make v2.1 tests use wsgi\_app\_v21 and remove wsgi\_app\_v3
* Translate 'powervm' hypervisor\_type to 'phyp' for scheduling
* Give a reason why NoValidHost in select\_destinations
* ironic: use instance object for \`\_add\_driver\_fields\`
* ironic: use instance object for \`\_wait\_for\_active\`
* ironic: use instance object for \`get\_info\`
* ironic: use instance object for \`rebuild\`
* ironic: use instance object for plug\_vifs
* Revert "Replace outdated oslo-incubator middleware"
* Set logging level for glanceclient to WARN
* Nova should be in charge of its log defaults
* Reduce the complexity of \_get\_guest\_config()
* VMware: fix compute node exception when no hosts in cluster
* libvirt: use instance object for detach\_volume
* libvirt: use instance object for attach\_volume
* libvirt: use instance object for resume\_state\_on\_host\_boot
* libvirt: treat suspend instance as an object
* VMware: Remove redundant fake.reset() in test\_vm\_util
* VMware: add tests for spawn with config drive enabled
* Adds tests for Hyper-V Network utils
* Adds tests for Hyper-V Host utils
* Fix order of arguments in assertEqual
* Replace custom patching in \`setUp\` on HypervisorsSampleJsonTests
* Console: delete code for VMRCConsole and VMRCSessionConsole
* VMware: delete the driver VMwareESXDriver
* Replacement \`\_\` on \`\_LE\` in all LOG.error
* VMware: rename vmware\_images to images
* Remove unuseful parameter in cloudpipe api(v2/v2.1)
* Moves trusted filter unit tests into own file
* Port update method of cloudpipe\_update to v2.1(v3)
* Clean up iSCSI multipath devices in Post Live Migration
* Check fixed-cidr is within fixed-range-v4
* Porting baremetal\_nodes extension to v2.1/v3
* Port fixed\_ip extention to v2.1
* Separate filter unit tests for agg extra specs
* Move JSON filter unit tests into own file
* Separate compute caps filter unit tests
* Separate image props filter unit tests
* Separate disk filters out from test\_host\_filters
* Separate and refactor RAM filter unit tests
* Remove duplicate test
* Reduce the complexity of stub\_out\_db\_network\_api()
* Remove duplicate index from model
* Remove useless join in nova.virt.vmwareapi.vm\_util
* fixed typo in test name
* Separate and refactor affinity filter tests
* Pull extra\_specs\_ops tests from test\_host\_filters
* Remove outdated docstring for XenApi driver's options
* VMware: attach config drive if booting from a volume
* Remove duplicated comments in virt/storage\_users
* Compute: use instance object for vm\_state
* libvirt: use six.text\_type when setting text node value in guest xml
* Allow strategic loading of InstanceExtra columns
* Create Nova Scheduler IO Ops Weighter
* Put a cap on our cyclomatic complexity
* Add notification for server group operations
* Clean up the naming of PCI python modules
* Port os-networks-associate plugin to v2.1(v3) infrastructure
* Port os-tenant-networks plugin to v2.1(v3) infrastructure
* Cleanup of exception handling in network REST API plugin
* Fix instance\_extra backref
* Refactor compute tests to not use \_objectify()
* Refactor compute and conductor tests to use objects
* Fix genconfig - missed one import from oslo cleanup
* Handle Forbidden error from network\_api.show\_port in os-interface:show
* Replace outdated oslo-incubator middleware
* VMware: Improve logging on failure due to invalid guestId
* Ironic: Continue pagination when listing nodes
* Fix unit test failure due to tests sharing mocks
* libvirt: fully parse PCI addresses to integer data type
* libvirt: remove pointless HostState class
* Porting SecurityGroup related controller into v2.1
* Allow force-delete irrespective of VM task\_state
* Use response.text for returning unicode EC2 metadata
* Remove unused modules copied from oslo-incubator
* Remove unused code in pci\_manager.get\_instance\_pci\_devs()
* VMWare: Remove unused exceptions
* Switch to nova's jsonutils in oslo.serialization
* VMware: mark virtual machines as 'belonging' to OpenStack
* XenAPI: Inform XAPI who is connecting to it
* Rename cli variable in ironic driver
* Add more input validation of bdm param in server creation
* Return HTTP 400 if use an in-use fixed ip to attach interface
* VMware: get\_all\_cluster\_refs\_by\_name default to {}
* Minor refactor of \_setup\_instance\_group()
* add InstanceGroup.get\_by\_instance\_uuid
* Add instance\_group\_get\_by\_instance to db.api
* Updated from global requirements
* Add supported\_hv\_specs to ComputeNode object
* Pass block device info in pre\_live\_migration
* Use 400 instead of 422 for security\_groups v2 API
* Port floating\_ip\_pools extention to v2.1
* Imported Translations from Transifex
* Sync with latest oslo-incubator
* Don't translate unit test logs
* Optimize get\_instance\_nw\_info and remove ipam
* Convert migrate reqeusts to use joins
* Use database joins for fixed ips to other objects
* Keep migration status if instance still resizing
* Don't log every (friggin) migration version step during unit tests
* Remove init for object list in api layer
* Revise compute API schemas and add tests
* Add Quota roll back for deallocate fix ip in nova-network
* Update README for openstack/common
* Fix libvirt watchdog support
* VMware: add support for default pbm policy
* Remove unused imports from neutron api
* Cleanup tenant networks plugin config creation
* Port os-networks plugin to v2.1(v3) infrastructure
* Use reasonable timeout for rpc service\_update()
* Finish objects conversion in the os-interface API

2014.2
------

* Fix pci\_request\_id break the upgrade from icehouse to juno
* Fix pci\_request\_id break the upgrade from icehouse to juno
* Updated translations
* vfs: guestfs logging integration
* Fix broken cert revocation
* Port cloudpipe extension to v2.1
* Cleanup log marker in neutronv2 api
* Add 'zvm' to the list of known hypervisor types
* Fix wrong exception return in fixed\_ips v2 extention
* Extend XML unicode test coverage
* Remove unnecessary debug/info logs of normal API ops
* Refactor of test case of floating\_ips
* Make v2.1 API tests use v2 URLs(test\_[r-v].\*)
* Make v2.1 API tests use v2 URLs(test\_[f-m].\*)
* Break out over-quota calculation code from quota\_reserve()
* Fix image metadata returned for volumes
* Log quota refresh in\_use message at INFO level for logstash
* Break out over-quota processing from quota\_reserve()
* Remove obsolete vmware/esx tools
* Fix broken cert revocation
* Remove baremetal virt driver
* Update rpc version aliases for juno
* VMware: Set vmPathName properly in fake driver
* Port disk\_config extension for V2.1
* Allow backup operation in paused and suspend state
* Update NoMoreFixedIps message description
* Make separate calls to libvirt volume
* Correct VERSION of NetworkRequest
* Break out quota usage refresh code from quota\_reserve()
* libvirt: abort init\_host method on libvirt that is too old
* Mask passwords in exceptions and error messages
* Support message queue clusters in inter-cell communication
* neutronv2: translate 401 and 404 neutron client errors in show\_port
* Log id in raise\_http\_conflict\_for\_instance\_invalid\_state()
* Use image metadata from source volume of a snapshot
* Fix KeyError for euca-describe-images
* Optimize 'fixed\_ip\_bulk\_create' function
* Remove 'get\_host\_stats' virt driver API method
* Suppressed misleading log in unshelve, resize api
* Imported Translations from Transifex
* libvirt: add \_get\_launch\_flags helper method in unit test
* Refactoring of contrib.test\_networks tests
* Make v2.1 API tests use v2 URLs(test\_[a-e].\*)
* Port fping extension to work in v2.1/v3 framework
* Use oslo.utils
* Correctly catch InstanceExists in servers create API
* Fix the os\_networks display to show cidr properly
* Avoid using except Exception in unit test
* nova-net: add more useful logging before raising FixedIpLimitExceeded
* libvirt: convert conn test case to avoid DB usage
* libvirt: convert driver test suite to avoid DB usage
* Mask passwords in exceptions and error messages
* Disable libvirt NUMA topology support if libvirt < 1.0.4
* Resource tracker: use brackets for line wrap
* VMWare: Remove unnecessery method
* console: make unsupported ws scheme in python < 2.7.4
* VMWare: Fix nova-compute crash when instance datastore not available
* Disable libvirt NUMA topology support if libvirt < 1.0.4
* VMware: remove \_get\_vim() from VMwareAPISession
* Compute: use an instance object in terminate\_instance
* VMware: remove unnecessary deepcopy
* Destroy orig VM during resize if triggered by user
* Break out quota refresh check code from quota\_reserve()
* move integrated api client to requests library
* Fix unsafe SSL connection on TrustedFilter
* Update rpc version aliases for juno
* Fix the os\_networks display to show cidr properly
* libvirt: convert mox to mock in test\_utils
* Remove kombu as a dependency for Nova
* Adds missing exception handling in resize and rebuild servers API
* Remove keystoneclient requirement
* Destroy orig VM during resize if triggered by user
* VMware: Fix deletion of an instance with no files
* console: introduce a new exception InvalidConnectionInfo
* Remove the nova-manage flavor sub-command
* support TRACE\_FAILONLY env variable
* Ensure files are closed promptly when generating a key pair
* libvirt: convert volume snapshot test case to avoid DB usage
* libvirt: convert volume usage test case to avoid DB usage
* libvirt: convert LibvirtNonblockingTestCase to avoid DB usage
* libvirt: convert firewall tests to avoid DB usage
* libvirt: convert HostStateTestCase to avoid DB usage
* libvirt: split firewall tests out into test\_firewall.py
* libvirt: convert utils test case to avoid DB usage
* Add VIR\_ERR\_CONFIG\_UNSUPPORTED to fakelibvirt
* Remove indexes that are prefix subsets of other indexes
* remove scary error message in tox
* Cleanup \_convert\_block\_devices
* Enhance  V2 disk\_config extension Unit Test
* Add developer policy about contractual APIs
* Reserve 10 migrations for backports
* libvirt: Make sure volumes are well detected during block migration
* Remove websocketproxy workaround
* Fix unsafe SSL connection on TrustedFilter

2014.2.rc1
----------

* Remove xmlutils module
* libvirt: Make sure NUMA cell memory is in Kb in XML
* Fix disk\_allocation\_ratio on filter\_scheduler.rst
* Remove unused method within filter\_scheduler test
* Open Kilo development
* Correct missing vcpupin elements for numa case
* VMware: remove unused variable from tests
* Imported Translations from Transifex
* VMWare: Fix VM leak when deletion of VM during resizing
* Logging detail when attach interface failed
* Removes unused code from wsgi \_to\_xml\_node
* Fix XML UnicodeEncode serialization error
* Add @\_retry\_on\_deadlock to \_instance\_update()
* Remove duplicate entry from .gitignore file
* console: fix bug when invalid connection info
* console: introduce a new exception InvalidToken
* cmd: update the default behavior of serial console
* console: make websocketproxy handles token from path
* VMware: Remove tests for None in fake.\_db\_content['files']
* Fix creating bdm for failed volume attachment
* libvirt: consider vcpu\_pin\_set when choosing NUMA cells
* Fix hook documentation on entry\_points config
* Remove local version of generate\_request\_id
* fix usage of obj\_reset\_changes() call in flavor
* Fix Bad except clauses order
* Typo in exception name - CellsUpdateProhibited
* Log original error when attaching volume fails
* Retry on closing of luks encrypted volume in case device is busy
* VMware: Remove VMwareImage.file\_size\_in\_gb
* VMware: remove unused argument from \_delete\_datastore\_file()
* xenapi: deal with reboots while talking to agent
* Ironic: Do not try to unplug VIF if not associated
* Fix Typo in method name - parse\_Dom
* Adds openSUSE support for developer documentation
* VMware: Remove class orphaned by ESX driver removal
* Fixes missing ec2 api address disassociate error on failure
* Fixes potential reliablity issue with missing CONF import
* Updated from global requirements
* Port extended\_ips/extended\_ips\_mac extension to V2.1
* the value of retries is error in \_allocate\_network
* Ironic driver must wait for power state changes
* Fallback to legacy live migration if config error
* libvirt: log exception info when interface detach failed
* libvirt: support live migration with shared instances dir
* Fix SecurityGroupExists error when booting instances
* Undo changes to obj\_make\_compatible
* Clarify virt driver test comments & log statement
* move integrated api client to requests library
* VMware: Make DatastorePath hashable
* Remove usage of self.\_\_dict\_\_ for message var replacement
* VMware: trivial formatting fix in fake driver
* VMware: Improve logging of DatastorePath in error messages
* VMware: Use vm\_mode constants
* Imported Translations from Transifex
* Updated from global requirements
* do not use unittest.TestCase for tests
* Neutron: Atomic update of instance info cache
* Reduce the scope of RT work while holding the big lock
* libvirt: convert CacheConcurrencyTestCase to avoid DB usage
* Give context to the warning in \_sync\_power\_states
* remove test\_multiprocess\_api
* add time to logging in unit tests
* XenAPI: clean up old snapshots before create new
* Return vcpu pin set as set rather than list
* Fix start/stop return active/stopped immediately in EC2 API
* consistently set status as REBUILD when rebuilding
* Add test case for vim header check
* Add missing instance action record for start of live migration
* Reduce the log level for the guestfs being missing
* Sync network\_info if instance not found before \_build\_resources yield
* Remove the AUDIT log message about loaded ext
* Fix unset extra\_spec for a flavor
* Add further debug logging for multiprocess test
* Revert "libvirt: support live migrate of instances with conf drives"
* Revert "libvirt: Uses correct imagebackend for configdrive"
* Fixes server list filtering on metadata
* Add good path test cases of osapi\_compute\_workers
* Be less confusing about notification states
* Remove unused py33 tox env
* fix\_typo\_in\_heal\_instance\_info\_cache
* Refactor test\_get\_port\_vnic\_info 2 and 3
* Revert "libvirt: reworks configdrive creation"
* Making nova.compute.api to return Aggregate Objects
* Scheduler: add log warning hints
* Change test function from snapshot to backup
* Fixes Hyper-V dynamic memory issue with vNUMA
* Update InstanceInvalidState output
* Add unit test for glanceclient ssl options
* Fix Broken links in devref/filter\_scheduler.rst
* Change "is lazy loaded" detection method in db\_api test
* Handle VolumeBDMPathNotFound in \_get\_disk\_over\_committed\_size\_total
* Handle volume bdm not found in lvm.get\_volume\_size
* Updated from global requirements
* Address nits in I6b4123590
* Add exists check to fetch\_func\_sync in libvirt imagebackend
* libvirt: avoid changing UUID when redefining nwfilters
* Vmware:Add support for ParaVirtualSCSIController
* Fix floating\_ips\_bulk unit test name
* refactor flavor manage tests in prep for object-ify flavors
* refactor flavor db fakes in prep for object-ify flavors
* move dict copy in prep for object-ify flavors
* tests: kill worker pids as well on timeouts
* Close standard fds in test child process
* Mitigating performance impact with getting pci requests from DB
* Return None from get\_swap() if input is not swap
* Require tests for DB migrations
* VMware: fix broken mock of ds\_util.mkdir
* Fix KeyError for euca-describe-images
* Fixes HyperV VM Console Log
* FIX: Fail to remove the logical volume
* correct \_sync\_instance\_power\_state log message
* Add support for hypervisor type in IronicHostManager
* Don't list entire module autoindex on docs index
* Add multinic API unit test
* Add plan for kilo blueprints: project priorities
* make flavors use common limit and marker
* Raise an exception if qemu-img fails
* Libvirt: Always teardown lxc container on destroy
* Mark nova-baremetal driver as deprecated in Juno, removed in K
* libvirt: Unnecessary instance.save(s) called
* Add progress and cell\_name into notifications
* XenAPI: run vhd-util repair if VHD check fails
* Get instance\_properties from request\_spec
* libvirt: convert encrypted LVM test to avoid DB usage
* libvirt: convert test\_dmcrypt to avoid DB usage
* libvirt: convert test\_blockinfo.py to avoid DB usage
* libvirt: convert test\_vif.py to avoid DB usage
* libvirt: remove pointless class in util test suite
* libvirt: avoid need for lockutils setup running test cases
* VMware: Remove host argument to ds\_util.get\_datastore()
* Fix DB migration 254 by adding missing unittest
* postgresql: use postgres db instead of template1
* Assume VNIC\_NORMAL if binding:vnic\_type not set
* mock.assert\_called\_once() is not a valid method
* db: Add @\_retry\_on\_deadlock to service\_update()
* Update ironic states and documentation
* XenAPI improve post snapshot coalesce detection
* Catch NotImplementedError on reset\_network for xen
* VMware: Fix usage of assertEqual in test\_vmops
* Add more information to generic \_add\_floating\_ip exception message
* bring over pretty\_tox.sh from tempest
* Console: warn that the Nova VMRC console driver will be deprecated in K
* virt: use compute.vm\_mode constants and validate vm mode type
* compute: tweaks to vm\_mode APIs to align with arch/hvtype
* Fix NUMA fit testing in claims and filter class
* consolidate apirequest tests to single file
* ensure that we safely encode ec2 utf8 responses
* instance\_topology\_from\_instance handles request\_spec properly
* NUMA \_get\_constraint auto assumed Flavor object
* Imported Translations from Transifex
* Fix 'force' parameter for quota-update
* Update devref
* default=None is unneeded in config definitions
* Remove unused elevated context param from quota helper methods
* Remove stale code from ObjectListBase
* Split up libvirt volume's connect\_volume method
* Record instance faults during boot process
* ironic/baremetal: add validation of host manager/state APIs
* virt: move assertPublicAPISignatures into base test class
* libvirt: avoid 30 second long test in LXC mount setup
* Remove all redundant \`setUp\` methods
* fix up assertEqual(None...) check to catch more cases
* Fix object version hash test
* disk/vfs: make docstring conventional to python
* disk/vfs: ensure guestfs capabilities
* NIST: increase RSA key length to 2048 bit
* Fix incorrect exception when bdm with error state volume
* ironic: Clean LOG usage
* Improve secgroup create error message
* Always log the releasing, even under failure
* Fix race condition in update\_dhcp
* Make obj\_make\_compatible consistent
* Correct baremetal/ironic consume\_from\_instance..
* Fix parsing sloppiness from iscsiadm discover
* correct inverted subtraction in quota check
* Add quotas for Server Groups (quota checks)
* Add quotas for Server Groups (V2 API change)
* check network ambiguity before external network auth
* Updated from global requirements
* libvirt: Consider numa\_topology when booting
* Add the NUMATopologyFilter
* Make HostManager track NUMA usage
* API boot process sets NUMA topology for instances
* Make resource tracker track NUMA usage
* Hook NUMA topology checking into claims
* Stash numa-related flavor extra\_spec items in system\_metadata
* Fixes network\_get\_all\_by\_host to use indexes
* Add plan for kilo blueprints: when is a blueprint needed
* Bump FakeDriver's resource numbers
* delete python bytecode before every test run
* Stop using intersphinx
* Don't swallow exceptions in deallocate\_port\_for\_instance
* neutronv2: attempt to delete all ports
* Proxy nova baremetal commands to Ironic
* Increase sleeps in baremetal driver
* Improve logging of external events on the compute node
* virt: use compute.virttype constants and validate virt type
* compute: Add standard constants for hypervisor virt types
* Fix test\_create\_instance\_invalid\_key\_name
* Fix \`confirmResize\` action status code in V2
* Remove unnecessary imageRef setting from tests
* Add unit test for add\_floating\_ip API
* Remove unused config "service\_down\_time" reference
* Clarify logging in lockutils
* Make sure libvirt VIR\_ERR\_NO\_DOMAIN errors are handled correctly
* Adds LOG statements in multiprocess API test
* Block sqlalchemy migrate 0.9.2 as it breaks all of nova
* Xen: Attempt to find and cleanup orphaned SR during delete
* Nova-net: fix server side deallocate\_for\_instance()
* Method for getting NUMA usage from an instance
* Ironic: save DB calls for getting flavor
* Imported Translations from Transifex
* Fix 'os-interface' resource name for Nova V2.1
* Add new unit tests for PCI stats
* Fixes AttributeError with api sample test fail
* Fix "revertResize/confirmResize" for V2.1 API
* Add unit test to os-agent API
* check the block\_device\_allocate\_retries
* Support SR-IOV networking in libvirt
* Support SR-IOV networking in nova compute api and nova neutronv2
* Support SR-IOV networking in the PCI modules
* Add request\_id in PciDevice
* Replace pci\_request flavor storage with proper object usage
* Adds a test for raw\_cpu\_arch in \_node\_resource
* Stop stack tracing when trying to auto-stop a stopped instance
* Add quotas for Server Groups (V2 API compatibility & V2.1 support)
* Fixes Hyper-V volume mapping issue on reboot
* Libvirt-Enable support for discard option for disk device
* libvirt: set pae for Xen PVM and HVM
* Add warning to periodic\_task with interval 0
* document why we disable usb\_tablet in code
* Fix 'os-start/os-stop' server actions for V2.1 API
* Fix 'createImage' server actions for V2.1 API
* Add unit test to aggregate api
* Handle exception better in v2 attach\_interface
* Fix integrated test cases for assisted-volume-snapshots
* libvirt: start lxc from block device
* Remove exclude coverage regex from coverage job
* Pass instance to set\_instance\_error\_state vs. uuid
* Add InstancePCIRequests object
* Drop verbose and useless nova-api log information
* Add instance\_extra\_update\_by\_uuid() to DB API
* Add pci\_requests to instance\_extra table
* Add claims testing to VirtNUMAHostTopology class
* Expose numa\_topology to the resource tracker
* libvirt: fix bug when releasing port(s)
* Specify correct operation type when NVH is raised
* Ironic: don't canonicalize extra\_specs data
* VMware: add tests for image fetch/cache functions
* VMware: spawn refactor image fetch/cache
* Ironic:  Fix direct use of flavor and instance module objects
* Ironic driver fetches extra\_specs when needed
* Maint: neutronclient exceptions from a more appropriate module
* Check requirements.txt files for missing (used) requirements
* Sync oslo-incubator module log:
* Add amd64 to arch.canonicalize()
* Sync oslo lockutils to nova
* libvirt: deprecated volume\_drivers config parameter
* VMware: Remove get\_copy\_virtual\_disk\_spec from vmops and vm\_util
* maint: various spelling fixes
* Fix config generator to use keystonemiddleware
* libvirt: improve unit test time
* VMware: prevent race condition with VNC port allocation
* VMware: Fix return type of get\_vnc\_console()
* VMware: Remove VMwareVCVMOps
* Network: enable instance deletion when dhcp release fails
* Adds ephemeral storage encryption for LVM back-end images
* Don't elevate context when rescheduling
* Ironic driver backports: patch 7
* Improve Ironic driver performance: patch 6
* Import Ironic Driver & supporting files - part 5
* Import Ironic Driver & supporting files - part 4
* Import Ironic Driver & supporting files - part 3
* Import Ironic Driver & supporting files - part 2
* Import Ironic Driver & supporting files - part 1
* Add sqlite dev packages to devref env setup doc
* Add user namespace support for libvirt-lxc
* Move to oslo.db
* api: add serial console API calls v2
* compute: add get\_serial\_console rpc and cells api calls
* compute: add get\_serial\_console in manager.py
* virt: add method get\_serial\_console to driver
* Clean up LOG import in floating\_ips\_bulk v2 api

2014.2.b3
---------

* Update invalid state error message on reboot API
* Fix race condition with vif plugging in finish migrate
* Fix service groups with zookeeper
* xenapi: send chunk terminator on subprocess exc
* Add support for ipv6 nameservers
* Remove unused oslo.config import
* Support image property for config drive
* warn against sorting requirements
* VMware: remove unused \_get\_vmdk\_path from vmops
* virt: use compute.arch constants and validate architectures
* Change v3 quota-sets API to v2.1
* always set --no-hosts for dnsmasq
* Allow \_poll\_bandwidth\_usage task to hit slave
* Add bandwidth usage object
* VMware: spawn refactor enlist image
* VMware: image user functions for spawn()
* Change v3 flavor\_manage API to v2.1
* Port used\_limits & used\_limits\_for\_admin into v2.1
* Add API schema for v2.1 access\_ips extension
* Add API schema for v2.1 "rebuild a server" API
* Add API schema for v2.1 "update a server" API
* Enabled qemu memory balloon stats
* Reset task state 'migrating' on nova compute restart
* Pass certificate, key and cacert to glanceclient
* Add a policy for handling retrospective vetos
* Adds Hyper-V soft shutdown implementation
* Fix swap\_volumes
* Add API schema for v2.1/v3 multiple\_create extension
* Return hydrated net info from novanet add/remove\_fixed\_ip calls
* Add API schema for v2.1/v3 availability\_zone extension
* Add API schema for v2.1/v3 server\_metadata API
* Fixes a Hyper-V list\_instances localization issue
* Adds list\_instance\_uuids to the Hyper-V driver
* Change v3 admin\_actions to v2.1
* Change v3 aggregate API to v2.1
* Convert v3 ExtendedAvailabilityZone api to v2.1
* Convert v3 hypervisor plugin to v2.1
* Convert server\_usage v3 plugin to v2.1 API
* Convert v3 servers return\_reservation\_id behaviour to v2.1
* the headroom infomation is incomplete
* Port volumes extension to work in v2.1/v3 framework
* vmwareapi oslo.vmware library integration
* Allow forceDelete to delete running instances
* Port limits extension to work in v2.1/v3 framework
* Port image-size extension to work in v2.1/v3 framework
* Port v2 image\_metadata extension to work in v2.1(v3) framework
* Port v2 images extension to work in v2.1(v3) framework
* Convert migrate\_server v3 plugin to v2.1
* Changes V3 evacuate extension into v2.1
* console: add typed console objects
* virt: setup TCP chardevice in libvirt driver
* Remove snapshot\_id from \_volume\_snapshot\_create()
* Check min\_ram and min\_disk when boot from volume
* Add API schema for v2.1 "create a server" API
* InstanceNUMAToplogy object create remove uuid param
* Change v3 flavor\_access to v2.1
* Convert rescue v3 plugin to v2.1 API
* Change v3 security\_groups API to v2.1
* Changes V3 remote\_console extension into v2.1
* Use common get\_instance function in v2 consoles extension
* Add API schema for v2.1/v3 user\_data extension
* Convert v3 cells API to v2.1
* Convert v3 server metadata plugin to v2.1
* Convert multiple-create v3 plugin to v2.1
* Convert v3 flavor extraspecs plugin to v2.1
* Fix scheduler\_available\_filters help
* cmd: add nova-serialproxy service
* console: add serial console module
* Changes V3 server\_actions extension into v2.1
* Change v3 version API to v2.1
* Change v3 shelve to v2.1
* Process power state syncs asynchronously
* Made unassigned networks visible in flat networking
* Add functions to setup user namespaced filesystems
* Adds nova-idmapshift cli utility
* Add idmap to libvirt config
* Allow hard reboots when still attempting a soft reboot
* Decrease amount of queries while adding aggregate metadata
* Adds Hyper-V serial console log
* Store original state when suspending
* Fix NoopQuotasDriver.get\_settable\_quotas()
* Use instance objects consistently in suspend tests
* Instance objects: fix indentation issue
* libvirt: Add method for getting host NUMA topology
* Add instance\_extra table and related objects
* Change v3 availability-zone API to v2.1
* Move and generalize decorator serialize\_args to nova.objects.base
* Convert v3 certificate API to v2.1
* Make neutronapi use NetworkRequest for allocate\_for\_instance()
* Use NetworkRequest objects through to nova-network
* Add extension block\_device\_mapping\_v1 for v2.1
* Catch BDM related InvalidBDM exceptions for server create v2.1
* Changes block\_device\_mapping extension into v2.1
* Fix rootwrap for non openstack.org iqn's
* Let update\_available\_resource hit slave
* Plumb NetworkRequest objects through conductor and compute RPC
* Updates available resources after live migration
* Convert compute/api to use NetworkRequest object and list
* Refactor the servers API to use NetworkRequest
* Cells: Update set\_admin\_password for objects
* Remove libvirt legacy LVM code
* libvirt: reworks configdrive creation
* Handle non dict metadata in server metadata V2 API
* Fix wrong disk type limitation for disk IO throttling
* Use v2.1 URLs instead of v3 ones in API unit tests
* VMware: Add in support for CPU shares in event of resource contention
* VMware: add resource limits for CPU
* Refactor admin\_action plugin and test cases
* Fix error in log when log exception in guestfs.py
* Remove concatenation with translated messages
* Port simple\_tenant\_usage into v2.1
* Convert console\_output v3 plugin to v2.1
* GET servers API sorting enhancements common utilities
* Add \_security\_group\_ensure\_default() DBAPI method
* Fix instance boot when Ceph is used for ephemeral storage
* Add NetworkRequest object and associated list
* Remove use of str on exceptions
* Fix the current state name as 'shutting-down'
* Explicitly handle exception ConsoleTypeUnavailable for v2 consoles
* Convert v3 server diagnostics plugin to v2.1
* Porting v3 evacuate testcases to v2
* libvirt: Uses correct imagebackend for configdrive
* Add v2.1 API router and endpoint
* Change v3 keypairs API to v2.1
* Backport V3 hypervisor plugin unit tests to V2
* Remove duplicated negative factors in keypair test
* filter: add per-aggregate filter to configure max\_instances\_per\_host
* Updated from global requirements
* Mask passwords in exceptions and error messages
* Make strutils.mask\_password more secure
* A minor change to a comments
* Check vlan parameter is valid
* filter: add per-aggregate filter to configure disk\_allocation\_ratio
* Deprecate cinder\_\* configuration settings
* Allow attaching external networks based on configurable policy
* Fix CellStateManagerFile init to failure
* Change v3 extended\_status to v2.1
* Fixes Hyper-V volume discovery exception message
* Use default quota values in test\_quotas
* libvirt: add validation of migration hostname
* Add a Set and SetOfIntegers object fields
* Add numa\_topology column to the compute\_node table
* Preserve exception text during schedule retries
* Change v3 admin-password to v2.1
* Make Object FieldType from\_primitive pass objects
* Change V3 access\_ips extension into v2.1
* Update RESP message when failed to create flavor
* Cleanup of V2 console output tests and add missing tests
* Convert multinic v3 plugin to v2.1
* Change 'changes\_since'/'changes-since' into v2.1 style for servers
* Backport v3 multinic tests to v2
* Change ViewBuilder into v2.1 for servers
* Change v3 agents API to v2.1
* Change v3 attach\_interface to v2.1
* Backport V3 flavor extraspecs API unit tests to V2
* Return BadRequest instead of UnprocessableEntity for volumes API
* Convert create\_backup v3 plugin to v2.1 API
* Update instance state after compute service died for rebuilded instance
* Make floatingip-ip-delete atomic with neutron
* Add v3 versions plugin unit test to v2
* Remove duplicated code in test\_versions
* Change v3 hosts to v2.1
* Change v3 extended\_server\_attibutes to v2.1
* Make test\_killed\_worker\_recover faster
* Change v3 flavor\_rxtx to v2.1
* fix typo in docstring
* libvirt: driver used memory tests cleanup
* Avoid refreshing PCI devices on instance.save()
* Updated from global requirements
* Change v3 flavors to v2.1
* neutronv2: treat instance as object in deallocate\_for\_instance
* Fix class name for ServerGroupAffinityFilter
* Adds Hyper-V Compute Driver soft reboot implementation
* Add QuotaError handling to servers rebuild API
* Allow to create a flavor without specifying id
* XenAPI: Remove interrupted snapshots
* Fix typo in comment
* Fix V2 unit tests to test hypervisor API as admin
* Create compute api var at \_\_init\_\_
* libvirt: support live migrations of instances with config drives
* Change v3 os-user-data extension to v2.1
* Remove duplicated code in test\_user\_data
* Convert v3 server SchedulerHints plugin to v2.1
* Convert deferred\_delete v3 plugin to v2.1 API
* Backport some v3 scheduler hints API UT to v2 API
* Change error status code for out of quota to be 403 instead of 413
* Correct seconds of a day from 84400 to 86400
* VMware: add adapter type constants
* Fix comment typo
* scheduler sends select\_destinations notifications
* Fix for volume detach error when use NFS as the cinder backend
* objects: Add base test for obj\_make\_compatible()
* objects: Fix InstanceGroup.obj\_make\_compatible()
* Restore backward compat for int/float in extra\_specs
* Convert v3 config drive plugin to v2.1
* Fix sample files miss for os-aggregates
* Backport v3 config\_drive API unittest to v2 API
* Backport some v3 availability zones API UT to v2 API
* Handle non-ascii characters in spawn exception msg
* Log warning message if volume quota is exceeded
* Remove \_instance\_update usage in \_build\_instance
* Treat instance like an object in \_build\_instance
* Remove \_instance\_update usage in \_default\_block\_device\_names
* Add missing flags to fakelibvirt for migration
* Adds tests for Hyper-V Volume utils
* Fix ability to generate object hashes in test\_objects.py
* Fix expected error details from jsonschema
* Extend the docstring for obj\_make\_compatible() with examples
* HyperV Driver - Fix to implement hypervisor-uptime
* Port os-server-groups extension to work in v2.1/v3 framework
* Fix the exception for a nonexistent flavor
* Add api extension for new network fields
* Use real exceptions for network create and destroy
* Support reserving ips at network create time
* Adds get\_instance\_disk\_info to compute drivers
* Use rfc3986 library to validate URL paths and URIs
* Send create.end notification even if instance is deleted
* Allow three periodic tasks to hit slave
* Fixes Hyper-V unit test path separator issue
* Share common test settings in test\_flavor\_manage
* Shelve should give guests a chance to shutdown
* Rescue should give guests a chance to shutdown
* Resize should give guests a chance to shutdown
* Power off commands should give guests a chance to shutdown
* objects: Make use of utils.convert\_version\_to\_tuple()
* tests: fix test\_compute to have predictable service list
* libvirt: make sysinfo serial number configurable
* Fixes Hyper-V resize down exception
* Make usage\_from\_instances consider current usage
* VMware: ensure test case for init\_host in driver
* Add some v2 agents API tests
* Libvirt: Do not raise ENOENT exception
* Add missing create() method on SecurityGroupRule object
* Add test for get\_instance\_disk\_info to test\_virt\_drivers
* Move fake\_quotas and fake\_get\_quotas into a class
* Objectify association in neutronapi
* Objectify last uses of direct db access in network/floating\_ips
* Update migration defaults
* libvirt: reduce indentation in is\_vif\_model\_valid\_for\_virt
* Fixes Hyper-V boot from volume root device issue
* Fixes Hyper-V vm state issue
* Imported Translations from Transifex
* Share unittest between v2 and v2.1 for hide\_server\_addresses extension
* Check compulsory flavor create parameters exist
* Treat instance like an object in \_default\_block\_device\_names
* Change 'image\_ref'/'flavor\_ref' into v2 style for servers
* Change 'admin\_password' into v2 style for servers extension
* Image caching tests: use list comprehension
* Move \_is\_mapping to more central location
* Stop augmenting oslo-incubators default log levels
* Track object version relationships
* Remove final use of glance\_stubs
* Removes GlanceClient stubs
* Pull transfer module unit tests from glance tests
* VMware: remove specific VC support from class VMwareVolumeOps
* VMware: remove Host class
* Image cache tests: ensure that assertEquals has expected param first
* VMware: spawn refactor \_configure\_config\_drive
* VMware: refactor spawn() code to build a new VM
* VMware: Fix type of VM's config.hardware.device in fake
* VMware: Create fake VM with given datastore
* VMware: Remove references to ebs\_root from spawn()
* VMware: Create VMwareImage object for image metadata
* Image caching: update image caching to use objects
* Report all objects with hash mismatches in a single go
* Include child\_versions in object hashes
* Direct-load Instance.fault when lazy-loading
* VMware: Remove unused variable in test\_configdrive
* Raise HTTPNotFound error from V2 cert show API
* Add dict and json methods to VirtNUMATopology classes
* virt: helper for processing NUMA topology configuration
* Raise Not Implemented error from V2 diagnostics API
* Make NovaObjectSerializer work with dicts
* Updated from global requirements
* neutronv2: treat instance like object in allocate\_for\_instance
* nova-network: treat instance like object in allocate\_for\_instance
* Treat instance like object in \_validate\_instance\_group\_policy
* Treat instance like an object in \_prebuild\_instance
* Treat instance like an object in \_start\_building
* Add graphviz to list of distro packages to install
* Fixes Hyper-V agent force\_hyperv\_utils\_v1 flag issue
* ec2: Use S3ImageMapping object
* ec2: Add S3ImageMapping object
* Remove unused db api methods
* Get EC2 snapshot mappings with nova object
* Use EC2SnapshotMapping for creating mappings
* Add EC2SnapshotMapping object
* Fix NotImplementedError in floating-ip-list
* filter: add per-aggregate filter to configure max\_io\_ops\_per\_host
* Hacking: a new hacking check was added that used an existing number
* Fix hacking check for jsonutils
* VMware: revert deletion of cleanup\_host
* Use flavor in confirm-resize to drop claim
* Add new db api get functions for ec2\_snapshot
* Partial oslo-incubator sync -- log.py
* Add unit tests for libvirt domain creation
* Fix Trusted Filter to work with Mt. Wilson \`vtime\`
* Fix 202 responses to contain valid content
* Fix EC2 instance type for a volume backed instance
* libvirt: add serial ports config
* Split EC2 ID validator to validator per resource type
* libvirt: do not fail instance destroy, if mount\_device is missing
* libvirt: persist lxc attached volumes across reboots and power down
* Resize block device after swap to larger volume
* Make API name validation failure deterministic
* VMware: spawn refactor add VirtualMachineConfigInfo
* libvirt: Fix kwargs for \_create\_image
* VMware: fix crash when VC driver boots
* baremetal: Remove depenency on libvirt's fetch\_image method
* libvirt: Remove unecessary suffix defaulting
* Drop instance\_group\_metadata from the database
* Neutron v2 API: fix get\_floating\_ip\_pools
* libvirt: Allow specification of default machine type
* Fix rebuild with cells
* Added hacking check for jsonutils
* Consistently use jsonutils instead of specific implementation
* Convert network/api.py uses of vif database functions to objects
* Convert last use of direct database instance fetching from network api
* libvirt: skip disk resize when resize\_instance is False
* libvirt: fix \_disk\_resize to make sure converted image will be restored
* Backport some v3 certificate API unittest to v2 API
* Backport some v3 aggregate API unittest to v2 API
* Imported Translations from Transifex
* More informative nova-scheduler log after NoValidHost is caught
* Remove metadata/metadetails from instance/server groups
* Prepend /dev/ to root\_device\_name in get\_next\_device\_name
* Lock attach\_volume
* Adjust audit logs to avoid negative disk info
* Convert network/api.py to use FloatingIP object
* Correct some IPAddress DB interaction in objects
* docs - Set pbr 'warnerrors' option for doc build
* docs - Fix errors,warnings from document generation
* Provide a quick way to run flake8
* Add support for select\_destinations in Scheduler client
* Create a Scheduler client library
* VMware: handle case when VM snapshot delete fails
* Use common get\_instance function in v2 attach\_interface
* Add some v2 flavor\_manage API tests
* Backport v3 api unittest into v2 api for attach\_interface extension
* Fix the error status code of duplicated agents
* Handle ExternalNetworkAttachForbidden exception
* Allow empty volumes to be created
* docs - Fix errors,warnings from document generation
* docs - Fix exception in docs generation
* docs - Fix docstring issues in virt tree
* VMware: test\_driver\_api: Use local variables in closures
* VMware: Remove ds\_util.build\_datastore\_path()
* Use v1 as default for cinder\_catalog\_info
* Fix live-migration failure in FC multipath case
* Optimize instance\_floating\_address\_get\_all
* Enhance PCI whitelist
* Add a missing instance=instance in compute/mgr
* Correct returned HTTP status code (Use 403 instead of 413)
* Fix wrong command for \_rescan\_multipath
* add log exception hints in some modules
* Fix extension parameters in test\_multiple\_create
* Standardize logging for v3 api extensions
* Standardize logging for v2 api extensions
* Add ListOfDictOfNullableString field type
* Enable terminate for EC2 InstanceInitiatedShutdownBehavior
* Remove duplicate test of passing glance params
* Convert glance unit tests to not use stubs
* Add decorator expected\_errors for ips v3 extension
* Return 404 instead of 501 for unsupported actions
* Return 404 when floating IP pool not found
* Makes versions API output deterministic
* Work on document structure and doc building
* Catch NeutronClientException when showing a network
* Add API schema for v2.1/v3 security\_groups extension
* Add API schema for v2.1/v3 config\_drive extension
* Remove pre-icehouse rpc client API compat
* makes sure correct PCI device allocation
* Adds tests for Hyper-V VM Utils
* Make nova-api use quotas object for reservations
* VMware: implement get\_host\_ip\_addr
* Boot an instance with multiple vnics on same network
* Optimize db.floating\_ip\_deallocate
* Fixes wrong usage of mock.assert\_not\_called()
* Code change for nova support cinder client v2
* libvirt: saving the lxc rootfs device in instance metadata
* Add method for deallocating networks on reschedule
* DB: use assertIsNotNone for unit test
* Add expire reservations in backport position
* Make network/api.py use Network object for associations
* Migrate test\_glance from mox to mock
* Add instanceset info to StartInstance response
* Adds verbosity to child cell update log messages
* Removes unnecessary instructions in test\_hypervapi
* Diagnostics: add validation for types
* Add missed discoverable policy rules for flavor-manage v3
* Rename rbd.py to rbd\_utils.py in libvirt driver directory
* Correct a maybe-typo in pci\_manager
* libvirt: make guestfs methods always return list of tuples
* Revert "Deallocate the network if rescheduling for
* libvirt: volume snapshot delete for network-attached disks
* libvirt: parse disk backing chains from domain XML
* Handle MacAddressInUseClient exception from Neutron when creating port
* Updated from global requirements
* Remove instance\_info\_cache\_delete() from conductor
* Make spawn\_n() stub properly ignore errors in the child thread work
* Update devref out-of-tree policy grammar error
* Compute: add log exception hints
* Handle NetworkAmbiguous error when booting a new instance with v3 api
* Handle FloatingIpPoolNotFound exception in floating ip creation
* Add policy on how patches and reviews go hand in hand
* Add hacking check for explicit import of \_()
* VMware: Do not read opaque type for DVS network
* VMware: add in DVS VXLAN support
* Network: add in a new network type - DVS
* Network: interface attach and detach raised confusing exception
* Deprecate metadata\_neutron\_\* configuration settings
* Log cleanups for nova.network.neutron.api
* Remove ESXDriver from Juno
* Only get image location attributes if including locations
* Use JSON instead of json in the parameter descriptions
* Add a retry\_on\_deadlock to reservations\_expire
* docs - Fix doc build errors with SQLAlchemy 0.9
* docs - Fix indentation for RPC API's
* docs - Prevent eventlet exception during docs generation
* docs - Add an index for the command line utilities
* docs - fix missing references
* Change LOG.warn to LOG.debug in \_shutdown\_instance
* EC2: fixed AttributeError when metadata is not found
* Import Ironic scheduler filters and host manager
* EndpointNotFound deleting volume backend instance
* Fix nova boot failure using admin role for another tenant
* docs - Fix docstring issues
* Update scheduler after instance delete
* Remove duplicate index from block\_device\_mapping table
* Fix ownership checking in get\_networks\_by\_uuid
* Raises NotImplementedError for LVM migration
* Convert network/api.py fixedip calls to use FixedIP object
* Convert network/api.py get calls to use Network object
* Add extensible resources to resource tracker (2)
* Make DriverBlockDevice save() context arg optional
* Improved error logging in nova-network for allocate\_fixed\_ip()
* Issue multiple SQL statements in separate engine.execute() calls
* Move check\_image\_exists out of try in \_inject\_data
* Fix fake\_update in test\_update\_missing\_server
* Add unit tests to cells conductor link
* Revert "libvirt: add version cap tied to gate CI testing"
* Use Ceph cluster stats to report disk info on RBD
* Add trace logging to allocate\_fixed\_ip
* Update devref setup docs for latest libvirt on ubuntu
* libvirt re-define guest with wrong XML document
* Improve logging when python-guestfs/libguestfs isn't working
* Update dev env docs on libvirt-dev(el) requirement
* Parse unicode cpu\_info as json before using it
* Fix Resource tracker should report virt driver stats
* Fix \_parse\_datetime in simple tenant usage extension
* Add API schema for v2.1/v3 cells API
* Fix attaching config drive issue on Hyper-V when migrate instances
* Allow to unshelve instance booted from volume
* libvirt: add support for guest NUMA topology in XML config
* libvirt: remove pointless LibvirtBaseVIFDriver class
* libvirt: remove 'vif\_driver' config parameter
* libvirt: remove use of CONF.libvirt.virt\_type in vif.py
* Handle NotImplementedError in server\_diagnostics v3 api
* Remove useless check in \_add\_retry\_host
* Initialize Ironic virt driver directory
* Live migration is broken for NFS shared storage
* Fix ImportError during docs generation
* Updated from global requirements
* Extend API schema for "create a server" extensions
* Enable cloning for rbd-backed ephemeral disks
* Add include\_locations kwarg to nova.image.API.get()
* Add index for reservations on (deleted, expire)
* VMWare Driver - Ignore datastore in maintenance mode
* Remove outdated docstring for nova.network.manager
* libvirt: remove 3 unused vif.py methods
* Turn on pbr's autodoc feature
* Remove api reference section in devref
* Deduplicate module listings in devref
* VMware: Resize operation fails to change disk size
* Use library instead of CLI to cleanup RBD volumes
* Move libvirt RBD utilities to a new file
* Properly handle snatting for external gateways
* Only use dhcp if enable\_dhcp is set on the network
* Allow dhcp\_server to be set from new field
* Set python hash seed to 0 in tox.ini
* Make devref point to official devstack vagrant repo
* Stop depending on sitepackages libvirt-python
* libvirt: driver tests use non-mocked BDMs
* Fix doc build errors in models.py
* Make several ec2 API tests inherit from NoDBTestCase
* Stub out rpc notifications in ec2 cloud unit tests
* Add standard constants for CPU architectures
* virt: switch order of args to assertEqual in guestfs test
* virt: move disk tests into a sub-directory
* virt: force TCG with libguestfs unless KVM is enabled in libvirt
* Do not pass instances without host to compute API
* Pass errors from detach methods back to api proc
* libvirt: add tests for \_live\_snapshot and \_swap\_volume methods
* libvirt: fill in metadata when launching instances
* Increase min required libvirt to 0.9.11
* Rollback quota when confirm resize concurrently completed
* API: Enable support for tenant option in nova absolute-limits
* libvirt: removing lxc specific disk mapping
* Method to filter non-root block device mappings
* VMware: remove local variable
* Use hypervisor hostname for compute trust level
* Remove unused cell\_scheduler\_method
* Fix the i18n for some warnings in compute utils
* Fix FloatingIP.save() passing FixedIP object to sqlalchemy
* Scheduler: throw exception if no configured affinity filter
* xenapi: Attach original local disks during rescue
* libvirt: remove VIF driver classes deprecated in Icehouse
* Move logs of restore state to inner logic
* Clean nova.compute.resource\_tracker:\_update\_usage\_from\_instances
* Fix and Gate on E265
* Log translation hint for nova.api
* Fix duplicated images in test\_block\_device\_mapping
* Add Hyper-V driver in the "compute\_driver" option description
* reduce network down time during live-migration
* Augment oslo's default log levels with nova specific ones
* Make the coding style consistent with other Controller in plugins/v3
* Fix extra metadata didn't assign into snapshot image
* Add i18n log markers in disk api
* VMware: improve log message for attachment of CDROM
* Raise NotImplemented default-security-group-rule api with neutron
* vmwareapi: remove some unused fake vim methods
* Correct image\_metadata API use of nova.image.glance
* Revert "Add extensible resources to resource tracker"
* Update database columns nullable to match model
* Updated from global requirements
* Make quotas APIv3 extension use Quotas object for create/update
* Make quotas APIv2 extension use Quotas object for create/update
* Add quota limit create/update methods to Quotas object

2014.2.b2
---------

* libvirt: VM diagnostics (v3 API only)
* Add ibmveth model as a supported network driver for KVM
* libvirt: add support for memory tuning in config
* libvirt: add support for memory backing parameters
* libvirt: add support for per-vCPU pinning in guest XML
* libvirt: add parsing of NUMA topology in capabilities XML
* handle AutoDiskConfigDisabledByImage at API layer
* Rollback quota in os\_tenant\_network
* Raise specific error of network IP allocation
* Convert to importutils
* Catch CannotResizeDisk exception when resize to zero disk
* VMware: do not cache image when root\_gb is 0
* Turn periodic tasks off in all unit tests
* Rename virtutils to the more common libvirt\_utils
* Check for resize path on libvirt instance delete
* Return status for compute node
* servers list API support specify multi-status
* Deprecate scheduler prep\_resize
* Updated from global requirements
* Fix nova cells exiting on db failure at launch
* Remove unneeded calls in test\_shelve to start instances
* Correct InvalidAggregateAction reason for Xen
* Handle a flavor create failed better
* Add valid method check for quota resources
* VMware: power\_off\_instance support
* Add debug log for availability zone filter
* Fix typo
* Fix last of direct use of object modules
* Check instance state before attach/detach interface
* Fix error status code for cloudpipe\_update
* Fix unit tests related to cloudpipe\_update
* Add API schema for v2.1/v3 reset\_server\_state API
* Adjust audit logs to avoid negative mem/cpu info
* Re-add H803 to flake8 ignore list
* Fix nova/pci direct use of object modules
* Gate on F402/pep8
* Inject expected results for IBM Power when testing bus devices
* Add extensible resources to resource tracker
* libvirt: define XML schema for recording nova instance metadata
* Sync loopingcall from oslo
* Add APIv2 support to make host optional on evacuate
* Add differencing vhdx resize support in Hyper-V Driver
* Imported Translations from Transifex
* Add context as param to cleanup function
* Downgrade the warn log in network to debug
* Correct use of nova.image.glance in compute API
* Keep Migration status in automatic confirm-resize
* Removes useless stub of glanceclient create
* Remove rescue/unrescue NotImplementedError handle
* Add missing foreign key on pci\_devices.compute\_node\_id
* Revert "Add missing image to instance booted from volume"
* Add debug log for pci passthrough filter
* Cleanup and gate on hacking E711 and E712 rule
* Keep resizing&resized instances when compute init
* Commit quota when deallocate floating ip
* Remove unnecessary error log in cell API
* Remove stubs in favor of mock in test\_policy
* Remove translation for debug message
* Fix error status code for agents
* Remove warn log for over quota
* Use oslo.i18n
* Cleanup: remove unused argument
* Implement methods to modify volume metadata
* Minor tweaks to hypervisor\_version to int
* update ignore list for pep8
* Add decorator expected\_errors for v3 attach\_interfaces
* Add instance to debug log at compute api
* Don't truncate osapi\_glance\_link or osapi\_compute\_link prefixes
* Add decorator expected\_errors to V3 servers core
* Correctly reject request to add lists of hosts to an aggregate
* Do not process events for instances without host
* Fix Cells ImagePropertiesFilter can raise exceptions
* libvirt: remove flawed get\_num\_instances method impl
* libvirt: remove unused list\_instance\_ids method
* libvirt: speed up \_get\_disk\_over\_committed\_size\_total method
* Partial oslo-incubator sync
* VMware: Remove unnecessary deepcopy()s in test\_configdrive
* VMware: Convert vmops to use instance as an object
* VMware: Trivial indentation cleanups in vmops
* VMware: use datastore classes in file\_move/delete/exists, mkdir
* VMware: use datastore classes get\_allowed\_datastores/\_sub\_folder
* VMware: DatastorePath join() and \_\_eq\_\_()
* VMware: consolidate datastore code
* VMware: Consolidate fake\_session in test\_(vm|ds)\_util
* Make BDM dict \_\_init\_\_ behave more like a dict
* VMware: support the hotplug of a neutron port
* Deallocate the network if rescheduling for Ironic
* Make sure that metadata handler uses constant\_time\_compare()
* Enable live migration unit test use instance object
* Move volume\_clear option to where it's used
* move the cloudpipe\_update API v2 extension to use objects
* Avoid possible timing attack in metadata api
* Move injected\_network\_template config to where it's used
* Don't remove delete\_on\_terminate volumes on a reschedule
* Defer raising an exception when deleting volumes
* Xen: Cleanup orphan volume connections on boot failure
* Adds more policy control to cells ext
* shelve doesn't work on nova-cells environment
* libvirt: add migrateToURI2 method to fakelibvirt
* libvirt: fix recent test changes to work on libvirt < 0.9.13
* Update requirements to include decorator>=3.4.0
* Cleanup and gate on hacking E713 rule
* libvirt: add version cap tied to gate CI testing
* Small grammar fix in libvirt/driver.py. fix all occurrences
* Correct exception for flavor extra spec create/update
* Fixes Hyper-V SCSI slot selection
* xenapi: Use netuils.get\_injected\_network\_template
* libvirt: Support IPv6 with LXC
* Improve shared storage checks for live migration
* XenAPI: VM diagnostics for v3 API
* Move retry of prep\_resize to conductor instead of scheduler
* Retry db.api.instance\_destroy on deadlock
* Translations: add LC to all LOG.critical messages
* Remove redundant code in Libvirt driver
* Virt: fix typo (flavour should be flavor)
* Fix and gate on H305 and H307
* Remove unused instance variables from HostState
* Send compute.instance.create.end after launched\_at is set
* VMware: validate the network\_info is defined
* Security groups: add missing translation
* Standardization of nova.image.API.download
* Catch InvalidAggregateAction when deleting an aggregate
* Restore ability to delete aggregate metadata
* Nova-api service throws error when SIGHUP is sent
* Remove cell api overrides for lock and unlock
* Don't mask out HostState details in WeighedHost
* vmware: VM diagnostics (v3 API only)
* Use pool/volume\_name notation when deleting RBD volumes
* Add instanceset info to StopInstance response
* Change compute updates from periodic to on demand
* Store volume backed snapshot in current tenant
* libvirt+lxc: Unmount guest FS from host on error
* libvirt: speed up get\_memory\_mb\_used method
* libvirt: speed up get\_vcpus method
* libvirt: speed up get\_all\_block\_devices method
* libvirt: speed up list\_instances method
* libvirt: speed up list\_instance\_uuids method
* Updated from global requirements
* Fix interfaces template for two interfaces and IPv6
* Fix error status code for multinic
* libvirt: fix typo in fakelibvirt listAllDomains()
* Refactors VIF configuration logic
* Add missing test coverage for MultiplePortsNotApplicable compute/api
* Make the block device mapping retries configurable
* Catch image and flavor exceptions in \_build\_and\_run\_instance
* Restore instance flavor info when driver finish\_migration fails
* synchronize 'stop' and power state periodic task
* Fix more re-definitions and enable F811/F813 in gate
* Prepend '/dev/' to supplied dev names in the API
* Handle over quota exception from Neutron
* Remove pause/unpause NotImplementedError API layer
* Add test cases for 2 block\_device functions
* Make compute api use util.check\_string\_length
* add comment about why snapshot/backup have no lock check
* VM diagnostics (v3 API only)
* VM diagnostics: add serializer to Diagnostics object
* VM diagnostics: add methods to class to update diagnotics
* object-ify API v2 availability\_zone extension
* object-ify availability\_zones
* add get\_by\_metadata\_key to AggregateList object
* xenapi: make boot from volume use volumeops
* libvirt: Avoid Glance.show on hard\_reboot
* Add host\_ip to compute node object
* VMware: move fake.py to the test directory
* libvirt: convert cpuset XML handling to use set instead of string
* virt: add method for formatting CPU sets to strings
* Fixes rbd backend image size
* Prevent max\_count > 1 and specified ip address as input
* Add aggregates.rst to devref index
* VMware: virt unrescue method now supports objects
* VMware: virt rescue method now supports objects
* Remove duplicate python-pip from Fedora devref setup doc
* Do not fail cell's instance deletion, if it's missing info\_cache
* libvirt: more efficient method to list domains on host
* vmwareapi: make method signatures match parent class
* Remove duplicate keys from dictionaries
* virt: split CPU spec parsing code out into helper method
* virt: move get\_cpuset\_ids into nova.virt.hardware
* Fix duplicate definitions of variables/methods
* change the firewall debugging for clarity
* VMware: consolidate common constants into one file
* Require posix\_ipc for lockutils
* hyperv: make method signatures match parent class
* Format eph disk with  specified format in libvirt
* Resolve import dependency in consoleauth service
* Add 'anon' kwarg to FakeDbBlockDeviceDict class
* Make cells rpc bdm\_update\_or\_create\_at\_top use BDM objects
* Improve BlockDeviceMapping object cells awareness
* Add support for user\_id based authentication with Neutron
* VMware: add in test utility to get correct VM backing
* Change instance disappeared during destroy from Error to Warning
* VMware: Fix race in spawn() when resizing cached image
* VMware: add support for driver method instance\_exists
* Object-ify APIv3 agents extension
* Object-ify APIv2 agents extension
* Avoid re-adding iptables rules for instances that have disappeared
* libvirt: Save device\_path in connection\_info when booting from volume
* sync periodic\_task fix from incubator
* Fix virt BDM \_\_setattr\_\_ and \_\_getattr\_\_
* Handle InstanceUserDataTooLarge at api layer
* Updated from global requirements
* Mask node.session.auth.password in volume.py \_run\_iscsiadm debug logs
* Nova api service doesn't handle SIGHUP properly
* check ephemeral disk format at libvirt before use
* Avoid referencing stale instance/network\_info dicts in firewall
* Use mtu setting from table instead of flag
* Add debug log for core\_filter
* VMware: optimize VM spawn by caching the vm\_ref after creating VM
* libvirt: Add configuration of guest VCPU topology
* virt: add helper module for determining VCPU topology
* Change the comments of SOFT\_DELETED race condition
* Fix bad log message with glance client timeout
* Move the instance\_type\_id judgment to the except-block
* Update port binding when unshelve instance
* Libvirt: Added suffix to configdrive\_path required for rescue
* sync policy logging fix from incubator
* Sync process utils from olso
* Remove instance\_uuids argument to \_schedule
* Add \_\_repr\_\_ handler for NovaObjects
* Pass instance to \_reschedule rather than instance\_uuid
* Pass instance to \_set\_instance\_error\_state
* Pass instance to \_error\_out\_instance\_on\_exception
* Add APIv3 support to make host optional on evacuate
* Move rebuild to conductor and add find host logic
* VMware: validate that VM exists on backend prior to deletion
* VMware: remove duplicate key from test\_instance dict
* ConfigDriveBuilder refactor for tempdir cleanliness
* VMware: cleanup the constructors of the compute drivers
* Fix wrong lock name for operating instance external events
* VMware: remove unused parameter 'network\_info'
* VM diagnostics: introduce Diagnostics model object
* Fixes internal server error for add/remove tenant flavor access request
* add repr for event objects
* Sync oslo lockutils to nova
* Neutronv2 api does not support neutron without port quota
* Be explicit about objects in \_shutdown\_instance()
* Pass instance object into \_shutdown\_instance()
* Skip none value attributes for ec2 image bdm output
* Fixed wrong assertion in test\_vmops.py
* Remove a not used function \_get\_ip\_by\_id
* make lifecycle event logs more clear
* xenapi: make method signatures match parent class
* libvirt: make method signatures match parent class
* virt: add test helper for checking public driver API method names
* virt: fix signature of set\_admin\_password method
* virt: use context & instance as param names in migrate APIs
* virt: add get\_instance\_disk\_info to virt driver API
* vmwareapi: remove unused update\_host\_status method
* libvirt: remove hack from ensure\_filtering\_rules\_for\_instance
* libvirt: remove volume\_driver\_method API
* libvirt: add '\_' prefix to remaining internal methods
* Imported Translations from Transifex
* Fake driver: remove unused method get\_disk\_available\_least
* Baremetal driver: remove unused states
* Fix nova/network direct use of object modules
* Fix rest of API objects usage
* Fix rest of compute objects usage
* Clean conntrack records when removing floating ip
* Updated from global requirements
* Enforce task\_state is None in ec2 create\_image stop instance wait loop
* Update compute rpcapi tests to use instance object instead of dict
* Fix run\_instance() rpc method to pass instance object
* Fix error in rescue rpcapi that prevents sending objects
* add checksums to udp independent of /dev/vhost-net
* Use dot notation to access instance object fields in ec2 create\_image
* vmwareapi: remove unused fake vim logout method
* vmware: remove unused delete\_disk fake vim method
* Revert "Sync revert and finish resize on instance.uuid"
* Add test cases for block\_device
* Add assert\_called check for "brclt addif" test
* Log when nova-conductor connection established
* Xen: Remove extraneous logging of type information
* Fix agent\_id with string type in API samples files for os-agents v2
* Fix update agent return agent\_id with string for os-agents v3
* VMware: Fix fake raising the wrong exception in \_remove\_file
* VMware: refactor get\_datastore\_ref\_and\_name
* libvirt: introduce separate class for cpu tune XML config
* libvirt: test setting of CPU tuning data
* Make Evacuate API use Instance objects
* VMware: create utility function for reconfiguring a VM
* effectively disable libvirt live snapshotting
* Fix exception raised when a requested console type is disabled
* Add missing image to instance booted from volume
* Use default rpc\_response\_timeout in unit tests
* vmware: Use exc\_info when logging exceptions
* vmware: Reuse existing StorageError class
* vmware: Refactor: fold volume\_util.py into volumeops.py
* Use ebtables to isolate dhcp traffic
* Replace nova.utils.cpu\_count() with processutils.get\_worker\_count()
* Sync log and processutils from oslo
* libvirt: add '\_' prefix to host state information methods
* libvirt: add '\_' prefix to some get\_host\_\* methods
* Deprecate and remove agent\_build\_get\_by\_triple()
* Object-ify xenapi driver's use of agent\_build\_get\_by\_triple()
* Add Agent object
* Move the error check for "brctl addif"
* Add API schema for v2.1/v3 quota\_sets API
* Add API schema for v2.1/v3 flavors\_extraspecs API
* Add API schema for v2.1/v3 attach\_interfaces API
* Add API schema for v2.1/v3 remote\_consoles API
* Use auth\_token from keystonemiddleware
* Use \_set\_instance\_obj\_error\_state in compute manager set\_admin\_password
* api: remove unused function
* api: remove useless get\_actions() in consoles
* Do not allow resize to zero disk flavor
* api: remove dead code in WSGI XML serializer
* Updated from global requirements
* Standardize logging for nova.virt.libvirt
* Fix log debug statement in compute manager
* Add API schema for v2.1/v3 aggregates API
* Fix object code direct use of other object modules
* Fix the rest of direct uses of instance module objects
* Imported Translations from Transifex
* Add API schema for v2.1/v3 flavor\_manage API
* Forcibly set libvirt uri in baremetal virtual power driver
* Synced jsonutils and its dependencies
* Sync revert and finish resize on instance.uuid
* Object-ify APIv3 availability\_zone extension
* Fix bug in TestObjectVersions
* libvirt: add '\_' prefix to all get\_guest\_\*\_config methods
* libvirt: remove unused 'get\_disks' method
* Downgrade some exception LOG messages in the ec2 API
* Conductor: remove irrelevant comment
* Added statement for ... else
* Avoid traceback logs from simple tenant usage extension
* Fix detaching pci device failed
* Adds instance lock check for live migrate
* Don't follow HTTP\_PROXY when talking to localhost test server
* Correct the variable name in trusted filter
* Target host in evacuate can't be the original one
* Add API schema for v2.1/v3 hosts API
* Object-ify APIv3 flavor\_extraspecs extension
* Object-ify APIv2 flavorextraspecs extension
* Catch permission denied exception when update host
* Fix resource cleanup in NetworkManager.allocate\_fixed\_ip
* libvirt: Support snapshot creation via libgfapi
* Allow evacuate from vm\_state=Error
* xenapi: reorder volume\_utils
* Replace assertTrue/False with assertEqual/NotEqual
* Replace assert\* with more suitable asserts in tests
* Replace assertTrue/False with assertIn/NotIn
* VMware: remove unused code in vm\_util.py
* Not count disabled compute node for statistics
* Instance and volume cleanup when a build fails
* wrap\_instance\_event() shouldn't swallow return codes
* Don't replace instance object with dict in \_allocate\_network()
* Determine shared ip from table instead of flag
* Set reasonable defaults for new network values
* Adds network fields to object
* Add new fields to the networks table
* Log exception if max scheduling attempts exceeded
* Make remove\_volume\_connection() use objects
* Create lvm.py module containing helper API for LVM
* Reduce unit test times for glance
* Should not delete active snapshot when instance is terminated
* Add supported file system type check at virt layer
* Don't store duplicate policies for server\_group
* Make exception handling in get\_image\_metadata more specific
* live migrate conductor tasks to use nova.image.API
* Fix Flavor object extra\_specs and projects handling
* Drop support for scheduler 2.x rpc interface
* Drop support for conductor 1.x rpc interface
* Deprecate glance\_\* configuration settings
* Update websocketproxy to work with websockify 0.6
* XenAPI: disable/enable host will be failed when using XenServer
* Remove traces of now unused host capabilities from scheduler
* Fix BaremetalHostManager node detection logic
* Add missing stats info to BaremetalNodeState
* Replace assertTrue(not \*) with assertFalse(\*)
* Clean nova.compute.api.API:\_check\_num\_instances\_quota
* Fix the duplicated image params in a test
* Imported Translations from Transifex
* Fix "fixed\_ip" parameters in unit tests
* Removes the use of mutables as default args
* Add API schema for v2.1/v3 create\_backup API
* Catch ProcessExecutionError in revoke\_cert
* Updated from global requirements
* Sync oslo lockutils to nova
* devref policy: code is canonical source of truth for API
* Log cleanups for nova.virt.libvirt.volume
* Log cleanups for nova.virt.libvirt.imagecache
* Rename VolumeMapping to EC2VolumeMapping
* ec2: Convert to use EC2InstanceMapping object
* Add EC2InstanceMapping object for use in EC2
* Add hook for network info update
* Enhance and test exception safety in hooks
* Object-ify server\_password APIv3 extension
* Object-ify server\_password APIv2 extension
* Move the fixed\_ips APIv2 extension to use objects
* Completely object-ify the floating\_ips\_bulk V2 extension
* Add bulk create/destroy functionality to FloatingIP
* Cleanup and gate on pep8 rules that are stricter in hacking 0.9
* VMware: update file permissions and mode
* Downgrade log level when create network failed
* Updated from global requirements
* libvirt: Use VIR\_DOMAIN\_AFFECT\_LIVE for paused instances
* Initialize objects field in ObjectsListBase class
* Remove bdms from run\_instance RPC conductor call
* Sync "Prevent races in opportunistic db test cases"
* Imported Translations from Transifex
* Check the network\_info obj type before invoke wait function
* Migrate nvp-qos to generic name qos-queue
* Add test for HypervisorUnavailable on conductor
* Test force\_config\_drive as a boolean as last resort
* Add helper functions for getting local disk
* Add more logging to nova-network
* Make resize raise exception when no valid host found
* Fix doc for service list
* Handle service creation race by service workers
* Add configurable HTTP timeout to cinder API calls
* Prevent clean-up of migrating instances on compute init
* Deprecate neutron\_\* configuration settings
* Skip migrations test\_walk\_versions instead of pass
* Remove duplicate code in Objects create() function
* Fix object change detection
* Fix object leak in nova.tests.objects.test\_fields.TestObject
* Failure during termination should always leave state as error()
* Make check\_instance\_shared\_storage() use objects
* Save connection info in libvirt after volume connect
* Remove unused code from test\_compute\_cells
* libvirt: Don't pass None for image\_meta parameter in tests
* Revert "Allow admin user to get all tenant's floating IPs"
* libvirt: Remove use of db for flavor extra specs in tests
* libvirt: Close opened file explicitly
* Network: ensure that ports are 'unset' when instance is deleted
* Don't translate debug level logs in nova
* maint: Fixes wrong docstring of method get\_memory\_mb\_used
* Ensure changes to api.QUOTA\_SYNC\_FUNCTIONS are restored
* Fix the wrong dest of 'vlan' option and add new 'vlan\_start' option
* Add deprecation warning to nova baremetal virt driver
* Fixes typo error in Nova
* Attach/detach interface to paused instance with affect live flag
* Block device API missing translations for exceptions
* Enabled swap disk to be resized when resizing instance
* libvirt: return the correct instance path while cleanup\_resize
* Remove the device handling from pci device object
* Use new pci device handling code in pci\_manager
* Separate the PCI device object handling code
* xenapi: move find\_vbd\_by\_number into volume utils
* Virt: remove unnecesary return code
* Fixes hyper-v volume attach when host is AD member
* Remove variability from object change detection unit test
* Remove XML namespace from some v3 extensions

2014.2.b1
---------

* xenapi: Do not retry snapshot upload on 500
* Fix H401,H402 violations and re-enable gating
* Bump hacking to 0.9.x series
* Change listen address on libvirt live-migration
* Make get\_console\_output() use objects
* Add testing for hooks
* Handle string types for InstanceActionEvent exc\_tb serialization
* Revert "Remove broken quota-classes API"
* Revert "Remove quota-class logic from context and make unit tests pass"
* Fix cold-migrate missing retry info after scheduling
* Disable rescheduling instance when no retry info
* Fix infinitely reschedule instance due to miss retry info
* Use VIF details dictionary to get physical\_network
* Fix live\_migration method's docstring
* Add subnet routes to network\_info when Neutron is used
* fix nova test\_enforce\_http\_true unit test
* novncproxy: Setup log when start nova-novncproxy
* Make sure domain exists before referencing it
* Network: add instance to the debug statement
* V3 Pause: treat case when driver does not implement the operation
* Don't translate debug level logs in nova.virt
* Remove duplicate method
* websocketproxy: remove leftover debug output
* Remove unnecessary else block in compute manager set\_admin\_password
* Treat instance objects like objects in set\_admin\_password flow
* Move set\_admin\_password tests from test\_compute.py to api/mgr modules
* Fix a wrong comment in the code
* maint: correct docstring parameter description
* libvirt: Remove dated docstring
* Add unit tests for ipv4/ipv6 format validation
* Cleanup allocating networks when InstanceNotFound is raised
* Add test to verify ironic api contracts
* VMware: spawn refactor - phase 1 - test for spawn
* Revert "Fix migration and instance resize update order"
* Simplify filter\_scheduler.populate\_retry()
* libvirt: Use os\_command\_line when kernel\_id is set
* libvirt: Make nwfilter driver use right filterref
* libvirt: convert cpu features attribute from list to a set
* Don't log TRACE info in notify\_about\_instance\_usage
* xenapi: add tests for find\_bad\_volumes
* Revert "Remove traces of now unused host capabilities from scheduler"
* Check the length of aggregate metadata
* Add out of tree support dev policy
* Deprecate instance\_get\_by\_uuid() from conductor
* Make metadata password routines use Instance object
* Make SecurityGroupAPI use Object instead of instance\_get\_by\_uuid()
* Add development policies section to devref
* Add read\_only field attribute
* Fix api direct use of instance module objects
* Fix direct use of block\_device module objects
* Fix InstanceActionEvent traceback parameter not serializable
* Fix state mutation in cells image filter
* libvirt: split and test finish\_migration disk resize
* Use no\_timer\_check with soft-qemu
* Add missing translation support
* Update HACKING.rst to include N320
* Add tests to avoid inconsistent extension names
* VMware: spawn refactor - Datastore class
* VMware: remove dsutil.split\_datastore\_path
* VMware: spawn refactor - DatastorePath class
* Updated from global requirements
* VMware: Fix memory leaks caused by caches
* Allow user to specify image to use during rescue - V3 API changes
* VMware: create utility functions
* Check if volume is bootable when creating an instance
* VMware: remove unused parameters in imagecache
* xenapi: virt unrescue method now supports objects
* libvirt: virt unrescue method now supports objects
* libvirt: virt rescue method now supports objects
* xenapi: virt rescue method now supports objects
* Remove useless codes for server\_group
* Catch InstanceInfoCacheNotFound during build\_instances
* Do not replace the aggregate metadata when updating az
* Move oslotest to test only requirements
* libvirt: merge two utils tests files
* libvirt: remove redundant 'libvirt\_' prefix in test case names
* xenapi: refactor detach volume
* Add API schema for v2.1/v3 migrate\_server API
* Adds IVS unit tests for new VIF firewall logic
* Don't set CONF options directly in unit tests
* Fix docstring typo in need\_legacy\_block\_device\_info
* Revert "Partially remove quota-class logic from nova.quotas"
* Revert "Remove quota\_class params from rest of nova.quota"
* Revert "Remove quota\_class db API calls"
* Revert "Convert address to str in fixed\_ip\_obj.associate"
* String-convert IPAddr objects for FixedIP.attach()
* Updated from global requirements
* Run instance root device determination fix
* xenapi: tidy up volumeops tests
* Don't return from a finally block
* Support detection of fixed ip already in use
* Rewrite nova policy to use the new changes of common policy
* Treat instance objects as objects in unrescue API flow
* Treat instance objects as objects in rescue API flow
* Refactor test\_rescue\_unrescue into compute api/manager unit tests
* Sync oslo network utils
* Fix EC2 not found errors for volumes and snapshots
* xenapi: refactor volumeops attach
* xenapi: remove calls to call\_xenapi in volumeops
* xenapi: move StorageError into global exception.py
* Virt: ensure that instance\_exists uses objects
* Use objects through the run\_instance() path
* Deprecate run\_instance and remove unnecessary code
* Change conductor to cast to build\_and\_run\_instance
* Fix migration and instance resize update order
* remove cpu feature duplications in libvirt
* Add unit test trap for object change detection
* Sync periodic\_task from oslo-incubator
* VCDriver - Ignore host in Maintenance mode in stats update
* Enable flake8 F841 checking
* Imported Translations from Transifex
* Reverse order of cinder.detach() and bdm.delete()
* Correct exception info format of v3 flavor manage
* Imported Translations from Transifex
* Handle NetworkInUse exception in api layer
* Correct exception handling when create aggregate
* Properly skip coreutils readlink tests
* Record right action name while migrate
* Imported Translations from Transifex
* Fix for multiple misspelled words
* Refactor test to ensure file is closed
* VM in rescue state must have a restricted set of actions
* versions API: ignore request with a body
* xenapi: fix live-migrate with volume attached
* Add helper methods to convert disk
* XenAPI: Tolerate multiple coalesces
* Add helpers to create per-aggregate filters
* Ensure live-migrate reverts if server not running
* Raise HTTPInternalServerError when boot\_from\_volume with cinder down
* Imported Translations from Transifex
* [EC2]Correct the return status of attaching volume
* Fix security group race condition while creating rule
* VMware: spawn refactor - phase 1 - copy\_virtual\_disk
* Catch InstanceNotFound exception if migration fails
* Inject expected results for IBM Power when testing bus
* Fix InstanceActionTestCase on PostgreSQL/MySQL
* Fix ReservationTestCase on PostgreSQL
* VMware: deprecate ESX driver from virt configuration
* Add new ec2 instance db API calls
* Remove two unused db.api methods
* Fix direct use of aggregate module objects
* Fix tests/compute direct use of instance module objects
* share neutron admin auth tokens
* Fix nova image-show with queued image
* Catch missing Glance image attrs with None
* Align internal image API with volume and network
* Do not wait for neutron event if not powering on libvirt domain
* Mask block\_device\_info auth\_password in virt driver debug logs
* Remove all mostly untranslated PO files
* Payload meta\_data is empty when remove metadata
* Handle situation when key not memcached
* Fix nova/compute direct use of instance module objects
* Address issues with objects of same name
* Register objects in more services
* Imported Translations from Transifex
* Default dhcp lease time of 120s is too short
* Add VIF mac address to fixed\_ips in notifications
* Call \_validate\_instance\_group\_policy in \_build\_and\_run\_instance
* Add refresh=True to get\_available\_nodes call in build\_and\_run\_instance
* Add better coverage support under tox
* remove unneeded call to network\_api on detach\_interface
* Cells: Pass instance objects to build\_instances
* XenAPI: Add logging information for cache/download duration
* Remove spaces from SSH public key comment
* Make hacking test more accurate
* Fix security group race condition while listing and deleting rules
* On rebuild check for null image\_ref
* Add a reference to the nova developer documentation
* VMware: use default values in get\_info() when properties are missing
* VMware: uncaught exception during snapshot deletion
* Enforce query order for getting VIFs by instance
* Fix typo in comment
* Allow admin user to get all tenant's floating IPs
* Defer applying iptable changes when nova-network start
* Remove traces of now unused host capabilities from scheduler
* Add log translation hints
* Imported Translations from Transifex
* Fix CIDR values denoting hosts in PostgreSQL
* Sync common db and db/sqlalchemy
* Remove quota\_class db API calls
* Remove quota\_class params from rest of nova.quota
* Fix wrong quota calculation when deleting a resizing instance
* Ignore etc/nova/nova.conf.sample
* Fix wrong method name assert\_called\_once
* Correct pci resources log
* Downgrade log when attach interface can't find resources
* Fixes Hyper-V iSCSI target login method
* VMware: spawn refactor - phase 1 - fetch\_image
* vmware:Don't shadow builtin function type
* Partially remove quota-class logic from nova.quotas and test\_quotas
* Convert address to str in fixed\_ip\_obj.associate
* Accurate exception info in api layer for aggregate
* minor corrections to devref rpc page
* libvirt: Handle unsupported host capabilities
* Fix the duplicated extension summaries
* Imported Translations from Transifex
* Raise more information on V2 API volumes when resource not found
* Remove comments since it's pointless
* Downgrade and fix log message for floating ip already disassociated
* Fix wrong method name for test\_hacking
* Imported Translations from Transifex
* Add specific regexp for timestamps in v2 xml
* VMWare: spawn refactor - phase 1 - create\_virtual\_disk
* VMware: spawn refactor - phase 1 - power\_on\_vm
* Move tests into test\_volume\_utils
* Tidy up xenapi/volume\_utils.py
* Updated from global requirements
* VMware: Fix usage of an alternate ESX/vCenter port
* VMware: Add check for datacenter with no datastore
* Remove unused instance\_update() method from virtapi
* Make baremetal driver use Instance object for updates
* Rename quota\_injected\_file\_path\_bytes
* Imported Translations from Transifex
* Fixes arguments parsing when executing command
* Remove explicit dependency on amqplib
* Deprecate action\_event\_\*() from conductor
* Remove conductor usage from compute.utils.EventReporter
* Unit test case for more than 1 ephemeral disks in BDM
* Network: replace neutron check with decorator
* Update links in README
* Add mailmap entry
* XenAPI: Remove unneeded instance argument from image downloading
* XenAPI: adjust bittorrent settings
* Fix a minor comments error
* Code Improvement
* Fix the explanation of HTTPNotFound for cell showing v2 API
* Add Nova API Sample file & test for get keypair
* Add a docstring to hacking unit tests
* Make libvirt driver use instance object for updates
* Make vmwareapi/vmops use Instance object for updates
* Convert xenapi/vmops uses of instance\_update to objects
* Make xenapi agent code use Instance object for updates
* Check object's field
* Use Field in fixed\_ip
* Remove logging in libvirt \_connect\_auth\_cb to avoid eventlet locking
* Fix v3 API extension names for camelcase
* VMware: prevent image snapshot if no root disk defined
* Remove unnecessary cleanup in test
* Raise HTTPForbidden from os-floating-ips API rather than 404
* Improve hacking rule to avoid author markers
* Remove and block DB access in dhcpbridge
* Improve conductor error cases when unshelving
* Dedup devref on unit tests
* Shrink devref.unit\_tests, since info is in wiki
* Fix calls to mock.assert\_not\_called()
* VMware: reduce unit test times
* Fix wrong used ProcessExecutionError exception
* Clean up openstack-common.conf
* Revert "Address the comments of the merged image handler patch"
* Remove duplicated import in unit test
* Fix security group list when not defined for an instance
* Include pending task in log message on skip sync\_power\_state
* Make cells use Fault obj for create
* libvirt: Handle \`listDevices\` unsupported exception
* libvirt: Stub O\_DIRECT in test if not supported
* Deprecate instance\_fault\_create() from conductor
* Remove conductor usage from add\_instance\_fault\_from\_exc()
* Add create() method to InstanceFault object
* Remove use of service\_\* conductor calls from xenapi host.py
* Updated from global requirements
* Optimize validate\_networks to query neutron only when needed
* Remove quota-class logic from context and make unit tests pass
* VMware: spawn refactor - phase 1 - execute\_create\_vm
* xenapi: fixup agent tests
* Don't translate debug level logs in nova.spice, storage, tests and vnc
* libvirt: Refresh volume connection\_info after volume snapshot
* Fix instance cross AZ check when attaching volumes
* Raise descriptive error for over volume quota
* Fix broken version responses
* Don't translate debug level logs in objectstore, pci, rdp, servicegroup
* Don't translate debug level logs in cloudpipe, hacking, ipv6, keymgr
* Don't translate debug level logs in nova.cert, console and consoleauth
* Don't translate debug level logs in nova.cmd and nova.db
* Don't translate debug level logs in nova.objects
* Don't translate debug level logs in nova.compute
* Fix bad Mock calls to assert\_called\_once()
* VCDriver - No longer returns uptime due to multiple hosts
* Make live\_migration use instance objects
* wrap\_check\_security\_groups\_policy is already defined
* Updated from global requirements
* Don't translate debug level logs in nova.conductor
* Don't translate debug level logs in nova.cells
* Use strtime() specific timestamp regexp
* Use datetime object for fake network timestamps
* Use datetime object for stub created\_at timestamp
* Verify created\_at cloudpipe timestamp is isotime
* Verify next-available limit timestamps are isotime
* Verify created/updated timestamps are isotime
* Use timeutils.isotime() in images view builder
* Use actual fake timestamp in API templates
* Normalize API extension updated timestamp format
* Regenerate API samples for GET /extensions
* objects: remove unused utils module
* objects: restore some datetime field comments
* Add fault wrapper for rescue function
* Add x-openstack-request-id to nova v3 responses
* Remove unnecessary wrapper for 5 compute APIs
* Update block\_device\_info to contain swap and ephemeral disks
* Hacking: add rule number to HACKING.rst
* Create the image mappings BDMs earlier in the boot
* Delete in-process snapshot when deleting instance
* Imported Translations from Transifex
* Fixed many typos
* VMware: remove unneeded code
* Rename NotAuthorized exception to Forbidden
* Add warning to periodic\_task with interval 0
* Fix typo in unit tests
* Remove a bogus and unnecessary docstring
* Don't translate debug level logs in nova.api
* Don't translate debug level logs in nova.volume
* VMware: remove duplicate \_fake\_create\_session code
* libvirt: Make \`fakelibvirt.libvirtError\` match
* ec2utils: Use VolumeMapping object
* ec2: create volume mapping using nova object
* Add VolumeMapping object for use in EC2
* Add new ec2 volume db API calls
* Remove legacy block device usage in ec2 API
* Deprecate instance\_get\_active\_by\_window\_joined() from conductor
* Deprecate instance\_get\_all\_by\_filters() from conductor
* Don't translate debug level logs in nova.network
* Fix bad param name in method docstring
* Nova should pass device\_id='' instead of None to neutron.update\_port()
* Set default auth\_strategy to keystone
* Support multi-version pydevd
* replace NovaException with VirtualInterfaceCreate when neutron fails
* Spice proxy config setting to be read from the spice group in nova.conf
* xenapi: make auto\_config\_disk persist boot flag
* Deprecate compute\_unrescue() from conductor
* Deprecate instance\_destroy() from conductor
* libvirt: fix comment for get\_num\_instances
* Fix exception message being changed by nested exception
* DescribeInstances in ec2 shows wrong image-message
* Imported Translations from Transifex
* Remove unused nova.crypto.compute\_md5()
* VMware: spawn refactor - phase 1 - get\_vif\_info
* Remove comments and to-do for quota inconsistency
* Set the volume access mode during volume attach
* Fix a typo in compute/manager::remove\_volume\_connection()
* XenAPI: Use local rsync rather than remote if possible
* Delete image when backup operation failed on snapshot step
* Fix migrate\_instance\_\*() using DB for floating addresses
* Ignore errors when deleting non-existing vifs
* Use eventlet.tpool.Proxy for DB API calls
* Improve performance for checking hosts AZs
* Correct the log in conductor unshelve\_instance
* Imported Translations from Transifex
* Make instance\_exists() take an instance, not instance\_name
* Xen: Retry plugin call after connection reset
* Remove metadata's network-api dependence on the database
* Add helper method to determine disk size from instance properties
* Deprecate nova-manage flavor subcommand
* Updated from global requirements
* Imported Translations from Transifex
* VMware: remove unused variable
* Scheduler: enable scheduler hint to pass the group name
* Loosen import\_exceptions to cover all of gettextutils
* Don't translate debug level scheduler logs
* VMWare - Check for compute node before triggering destroy
* Update version aliases for rpc version control
* make ec2 errors not useless
* VMware: ensure rescue instance is deleted when instance is deleted
* Ensure info cache updates don't overwhelm cells
* Remove utils.reset\_is\_neutron() to avoid races
* Remove unnecessary call to fetch info\_cache
* Remove deprecated config option names: Juno Edition
* Don't overwrite instance object with dict in \_init\_instance()
* Add specific doc build option to tox
* Fix up import of conductor
* Use one query instead of two for quota\_usages
* VMware: Log additional details of suds faults
* Disable nova-manage network commands with Neutron V2
* Fix the explanations of HTTPNotFound for keypair's API
* remove unneeded call to network\_api on rebuild\_instance
* Deprecate network\_migrate\_instance\_\* from conductor
* Deprecate aggregate\_host\_\* operations in conductor
* Convert instance\_usage\_audit() periodic task to objects
* Return to using network\_api directly for migrations
* Make \_is\_multi\_host() use objects
* Remove unneeded call to fetch network info on shutdown
* Instance groups: add method get\_by\_hint
* Imported Translations from Transifex
* GET details REST API next link missing 'details'
* Don't explode if we fail to unplug VIFs after a failed boot
* nit: correct docstring for FilterScheduler.schedule\_run\_instance
* Revert "Fix network-api direct database hits in metadata server"
* ec2: use BlockDeviceMappingList object
* ec2: use SecurityGroup object
* ec2: get services using ServiceList object
* ec2: remove db.instance\_system\_metadata usage
* Remove nova-clear-rabbit-queues
* Allow -1 as the length of "get console output" API
* Fix AvailabilityZone check for hosts in multiple aggregates
* Move \_get\_locations to module level plus tests
* Define constants for the VIF model types
* Imported Translations from Transifex
* Make aggregate host operations use Aggregate object
* Convert poll\_rescued\_instances() periodic task to objects
* Make update\_available\_resource() use objects
* Add get\_by\_service() method to ComputeNodeList object
* Add with\_compute\_node to service\_get()
* Make \_get\_compute\_info() use objects
* Pass configured auth strategy to neutronclient
* Imported Translations from Transifex
* Make quota rollback checks more robust in conductor tests
* Updated from global requirements
* Remove duplicate code from nova.db.sqlalchemy.utils
* Downgrade the log level when automatic confirm\_resize fails
* Refactor unit tests for image service CRUD
* Finish \_delete\_instance() object conversion
* Make detach\_volume() use objects
* Add lock on API layer delete floating IP
* ec2: Convert instance\_get\_by\_uuid calls to objects
* Fix network-api direct database hits in metadata server
* Scheduler: remove test scheduling methods that are not used
* Add info\_cache as expected attribute when evacuate instance
* Make compute manager use network api method return values
* Allow user to specify image to use during rescue - V2 API changes
* Allow user to specify image to use during rescue
* Use debug level logging in unit tests, but don't save them
* Update user\_id length to match Keystone schema in volume\_usage\_cache
* Avoid the possibility of truncating disk info file
* Read deleted instances during lifecycle events
* Add RBAC policy for ec2 API security groups calls
* compute: using format\_message() to convert exception to string
* support local debug logging
* Fix bug detach volume fails with "KeyError" in EC2
* Fix straggling uses of direct-to-database queries in nova-network
* Xen: Do not resize root volumes
* Remove mention of nova-manage.conf from nova-manage.rst
* XenAPI: Add host information to glance download logs
* Check image exists before calling inject\_data
* xenapi: Cleanup tar process on glance error
* Missing catch InstanceNotFound in v3 API
* Recover from POWERING-\* state on compute manager start-up
* Remove the unused \_validate\_device\_name()
* Adds missing expected\_errors for V3 API multinic extension
* Correct test boundary for libvirt\_driver.get\_info
* Updated from global requirements
* Update docs to reflect new default filters
* Enable ServerGroup scheduler filters by default
* Revert "Use debug level logging during unit tests"
* Remove redundant tests from Qcow2TestCase
* libvirt: remove\_logical\_volumes should remove each separately
* VMware: Fixes the instance resize problem
* Fix anti-affinity server-group boot failure
* Nova utils: add in missing translation
* Add exception handling in "nova diagnostics"
* mark vif\_driver as deprecated and log warning
* Revert object-assuming changes to \_post\_live\_migration()
* Revert object-assuming changes to \_post\_live\_migration()
* libvirt: optimize pause mode support
* Check for None or timestamp in availability zone api sample
* Refactor Network API
* Require admin context for interfaces on ext network
* remove redundant copy of test\_cache\_base\_dir\_exists
* Make sure leases are maintained until release
* Add tests for remaining expected conductor exceptions
* Fix Jenkins translation jobs
* libvirt: pause mode is not supported by all drivers
* Reduce config access in scheduler
* VMWare: add power off vm before detach disk during unrescue
* Reduce logging in scheduler
* xenapi: add a test for \_get\_partitions
* Refactor network\_utils to new call\_xenapi pattern
* Sync request\_id middleware bug fix from oslo
* Make example 'entry\_points' parameter a dictionary
* Localized error exception message on delete host aggregate
* Note that XML support \*may\* be removed
* Change errors\_out\_migration decorator to work with RPC
* low hanging fruit oslo-incubator sync
* Fix description of ServerGroupAffinityFilter
* Added test cases in ConfKeyManagerTestCase to verify fixed\_key
* Moved the registration of lifecycle event handler in init\_host()
* Change NotFound to InstanceNotFound in server\_diagnostics.py
* Remove unnecessary passing of task\_state to check\_instance\_state
* Rename instance\_actions v3 to server\_actions
* Drop nova-rpc-zmq-receiver man-page
* Correct the keypairs-get-resp.json API sample file
* Make hypervisor\_version an int in fakeVirt driver
* Ensure network interfaces are in requested order
* Reserve 10 migrations for backports
* XenAPI: Calculate disk\_available\_least
* Open Juno development

2014.1.rc1
----------

* Fix getting instance events on subsequent attempts
* Improved logs for add/remove security group rules
* VMware: remove double import
* VMware: clean up VNC console handling
* Make conductor expect ActionEventNotFound for action methods
* Remove zmq-receiver from setup.cfg
* Add a note about deprecated group filters
* Fix the section name in CONTRIBUTING.rst
* Fix display of server group members
* Add new style instance group scheduler filters
* Automatically create groups that do not exist
* Add InstanceGroup.get\_by\_name()
* Remove unnecessary check for CONF.notify\_on\_state\_change
* Add nova.conf.sample to gitignore
* Use binding:vif\_details to control firewall
* Disable volume attach/detach for suspended instances
* Updated from global requirements
* Persist image format to a file, to prevent attacks based on changing it
* Add test cases for validate\_extra\_spec\_keys
* Catch InstanceInLocked exception for rescue and instance metadata APIs
* Imported Translations from Transifex
* Make 'VDI too big' more verbose
* Use osapi\_glance\_link\_prefix for image location header
* postgres incompatibility in InstanceGroup.get\_hosts()
* Add missing test for None in sqlalchemy query filter
* Use instance data instead of flavor in simple\_tenant\_usage extension
* Sync oslo imageutils, strutils to Nova
* Use correct project/user id in conductor.manager
* fix the extension of README in etc/nova
* Tell pip to install packages it sees globally
* Change exception type from HTTPBadRequest to HTTPForbidden
* Don't attempt to fill faults for instance\_list if FlavorNotFound
* Bypass the database if limit=0 for server-list requests
* Fix availability-zone option miss when creates an instance
* No longer any need to pass admin context to aggregate DB API methods
* Updated Setting up Developer Environment for Ubuntu
* Change libvirt close callback to use green thread
* Re-work how debugger CLI opts are registered
* Imported Translations from Transifex
* \_translate\_from\_glance() can cause an unnecessary HTTP request
* Add UNSHELVING and RESCUING into IoOPSFilter consideration state
* VMware: fix booting from volume
* Do not add current tenant to private flavor access
* Disable oslo.messaging debug logs
* Update vm\_mode when rebuilding instance with new image
* VMware: fix list\_instances for multi-node driver
* VMware: Add utility method to retrieve remote objects
* Use project/user from instance for quotas
* Refactors unit tests of image service detail()
* Refactors nova.image.glance unit tests for show()
* Revert deprecation warning on Neutron auth
* V2 API: remove unused imports
* Change HTTPUnprocessableEntity to HTTPBadRequest
* Rename \_post\_live\_migration instance\_ref arg
* Add a decorator decorator that checks func args
* Updated from global requirements
* Instance groups: cleanup
* Use the list when get information from libvirt
* Remove unused quota\_\* calls from conductor
* Use correct project/user for quotas
* Include proper Content-Type in the HTTP Headers
* Fix inconsistent quota usage for security group
* Handling unlimited values when updating quota
* Fix service API and cells
* Remove unnecessary stubbing in test\_services
* InvalidCPUInfo exception added to except block
* VMware: fix exception when no objects are returned
* Don't allow empty or 0 volume size for images
* Wait till message handling is done on service stop
* Remove PciDeviceList usage in pci manager
* Fix the rpc module import in the service module
* Revert "VMware Driver update correct disk usage stat"
* Catch HostBinaryNotFound exception in V2 API
* Ignore InstanceNotFound while getting console output
* Raise error on nova-api if missing subnets/fixed\_ips on networks/port
* Fix the explanations of HTTPNotFound for new APIs
* Remove the nova.config.sample file
* Refuse to block migrate instances with config drive
* Include next link when default limit is reached
* Catch NotImplementedError on Network Associate
* VMware: add a file to help config the firewall for vnc
* Change initial delay for servicegroup api reporting
* Fix KeyError if neutron security group is not TCP/UDP/ICMP and no ports
* Prevent rescheduling on block device failure
* Check if nfs/glusterfs export is already mounted
* Make compute API resize methods use Quotas objects
* Remove commented out code in test\_cinder\_cloud
* Update quantum to neutron in comment
* Add deleted\_at attribute in glance stub on delete()
* Add API sample files of "unshelve a server" API
* Remove unused method from fake\_network.py
* Don't refresh network cache for instances building or deleting
* GlanceImageService static methods to module scope
* Remove XenAPI driver deprecation warning log message
* VMware: bug fix for host operations when using VMwareVCDriver
* xenapi: boot from volume without image\_ref
* Use HTTPRequestV3 instead of HTTPRequest in v3 API tests
* Cells: Send instance object for instance\_delete\_everywhere
* Fix "computeFault" when v3 API "GET /versions/:(id)" is called
* VMware: ensure that the task completed for resize operation
* Change parameters of add\_timestamp in ComputeDriverCPUMonitor class
* Cells API calls return 501 when cells disabled
* Add version 2.0 of conductor rpc interface
* Added missing raise statement when checking the config driver format
* Make NovaObject report changed-ness of its children
* Increase volume creation max waiting time
* Remove action-args from nova-manage help
* VMware: fix rescue disk location when image is not linked clone
* Fix comment for block\_migration in nova/virt/libvirt/driver.py
* Don't import library guestfs directly
* Correct inheritance of nova.volume.cinder.API
* VMware: enable booting an ISO with root disk size 0
* Remove bad log message in get\_remote\_image\_service
* Raise NotImplementedError in NeutronV2 API
* Remove block\_device\_mapping\_destroy() from conductor API
* Make sure instance saves network\_info when we go ACTIVE
* Fix sqlalchemy utils test cases for SA 0.9.x
* Fix equal\_any() DB API helper
* Remove migration\_update() from conductor API
* Remove instance\_get() from conductor API
* Remove aggregate\_get\_by\_host() from conductor API
* add support for host driver cleanup during shutdown
* Add security\_group\_rule to objects registry
* Remove aggregate\_get() from conductor API
* Delete meaningless lines in test\_server\_metadata.py
* Imported Translations from Transifex
* Move log statement to expose actually info\_cache value
* Fix input validation for V2 API server group API extension
* Adds test for rebuild in compute api
* Specify spacing on periodic\_tasks in manager.py
* network\_info cache should be cleared before being rescheduled
* Don't sync [system\_]metadata down to cells on instance.save()
* Fixes the Hyper-V agent individual disk metrics
* VMware: remove unused code (\_delete method in vmops.py)
* Fix docstring for shelve\_offload\_instance in compute manager
* Block database access in nova-network binary
* Make nova-network use conductor for security groups refresh
* Make nova-network use quotas object
* Reverts change to default state\_path
* Fix raise\_http\_conflict\_for\_instance\_invalid\_state docstring
* Cells: Pass instance objects to update/delete\_instance\_metadata
* Don't detach root device volume
* Revert "Adding image multiple location support"
* Revert "Move libvirt RBD utilities to a new file"
* Revert "enable cloning for rbd-backed ephemeral disks"
* Add helper method for injecting data in an image
* Add helper method for checking if VM is booting from a volume
* Libvirt: Repair metadata injection into guests
* Make linux\_net use objects for last fixed ip query
* Add get\_by\_network() to FixedIPList
* Update aggregate should not allow duplicated names
* Recover from REBOOT-\* state on compute manager start-up
* VMware: raise an exception for unsupported disk formats
* VMware: ensure that deprecation does not appear for VC driver
* rename ExtensionsResource to ExtensionsController
* Ensure is\_image\_available handles V2 Glance API
* libvirt: fix blockinfo get\_device\_name helper
* Log Content-Type/Accept API request info
* Remove the docker driver
* xenapi: Speed up tests by not waiting on conductor
* Updated from global requirements
* xenapi: Fix test\_rescue test to ensure assertions are valid
* VMware: image cache aging
* Add py27local tox target
* Fix broken API os-migrations
* Catch FloatingIpNotFoundForHost exception
* Fix get\_download\_hander() typo
* Handle IpAddressGenerationClient neutron
* Delete ERROR+DELETING VMs during compute startup
* VMware: delete vm snapshot after nova snapshot
* Fix difference between mysql & psql of flavor-show
* Add version 3.0 of scheduler rpc interface
* Make libvirt wait for neutron to confirm plugging before boot
* Task cleanup\_running\_deleted\_instances can now use slave
* Do not add HPET timer config to non x86 targets
* Make test computations explicit
* Instance groups: only display valid instances for policy members
* Don't allow reboot when instance in rebooting\_hard
* VMware: add missing translations
* Fix typo and add test for refresh\_instance\_security\_rules
* Add declaration of 'refresh\_instance\_security\_rules' to virt driver
* Remove mention of removed dhcp\_options\_enabled
* Fix compute\_node stats
* Fix: Unshelving an instance uses original image
* Noted that tox is the preferred unit tester
* Updated development.environment.rst
* Use instance object instead of \_instance\_update()
* Remove compute virtapi BDM methods
* enable cloning for rbd-backed ephemeral disks
* Move libvirt RBD utilities to a new file
* Fixup debug log statements in the nova compute manager
* Use debug level logging during unit tests
* Fix debug message formatting in server\_external\_events
* VMware: VimException \_\_str\_\_ attempts to concatenate string to list
* Mark ESX driver as deprecated
* Volume operations should be blocked for non-null task state
* xenapi: fix spawn servers with ephemeral disks
* Fixes NoneType vcpu list returned by Libvirt driver
* Add conversion type to LOG.exception's string
* Remove compute API get\_instance\_bdms method
* Move run\_instance compute to BDM objects
* Move live migration callbacks to BDM objects
* Instance groups: validate policy configuration
* Add REST API for instance group api extension
* VMware: boot from iso support
* Store neutron port status in VIF model
* Correct network\_model tests and \_\_eq\_\_ operator
* Make network\_cache more robust with neutron
* Error out failed migrations
* Fix BDM legacy usage with objects
* Fix anti-affinity race condition on boot
* Initial scheduler support for instance\_groups
* Add get\_hosts to InstanceGroup object
* Add instance to instance group in compute.api
* Add add\_members to InstanceGroup object
* Remove run-time dependency on fixtures module by the nova baremetal
* Make compute manager prune instance events on delete and migrate
* Make compute manager's virtapi support waiting for events
* Add os-server-external-events V3 API
* Add os-server-external-events API
* Add external\_instance\_event() method to compute manager
* Fix invalid vim call in vim\_util.get\_dynamic\_properties()
* Rescue API handle NotImplementedError
* VMware: Add a test helper to mock the suds client
* VMware: Ensure test VM is running in rescue tests
* Move \_poll\_volume\_usage periodic task to BDM objects
* Move instance\_resize code paths to BDM objects
* Make swap\_volume code path use BDM objects
* Fix log messages typos in rebuild\_instance function
* Move detach\_volume and remove\_vol\_connection to BDM objects
* Move instance delete to new-world BDM objects
* VMware ESX: Boot from volume must not relocate vol
* Fix development environment docs for redhat-based systems
* neutron\_metadata\_proxy\_shared\_secret should not be written to log file
* VMware: create datastore utility functions
* Address the comments of the merged image handler patch
* Ignore the image name when booting from volume

2014.1.b3
---------

* Fix typo in devref
* VMware: refactor \_get\_volume\_uuid
* Add return value to some network API methods
* Fixing host\_ip configuration help message
* No longer call check\_uptodate.sh in pep8
* notifier middleware broken by oslo.messaging
* regenerate the config file to support 1.3.0a9
* Add doc update for 4 filters which is missing in filter\_scheduler.rst
* Remove 3 unnecessary variables in scheduler
* Adding image multiple location support
* Move all shelve code paths to BDM objects
* Move rebuild to BDM objects
* sync sslutils to not conflict with oslo.messaging
* Accurate comment in compute layer
* Refactor xenapi/host.py to new call\_xenapi pattern
* Add a missing space in a log message
* VMware: iscsi target discovery fails while attaching volumes
* Remove warn log in quota function on API layer
* Sync the latest DB code from oslo-incubator
* Prevent thrashing when deploying many bm instances
* Support configuring libvirt watchdog from flavors
* Add watchdog device support to libvirt driver
* Remove extra space at the end of help string
* Port libvirt copy\_image tests to mock
* Updated from global requirements
* Sync latest Guru Meditation Reports from Oslo
* Skip sqlite-specific tests if sqlite is not configured
* VMware: add in debug information for network selection
* vmwareapi:Fix nova compute service down issue when injecting pure IPv6
* Make compute use quota object existing function
* Fixes api samples for V2 os-assisted-volume-snapshots
* Raise exception if volume snapshot id not found instead of return
* Added os-security-groups prefix
* VMware Driver update correct disk usage stat
* attach/detach interface should raise exception when instance is locked
* Restore get\_available\_resource method in docker driver
* Make compute manager use InstanceInfoCache object for deletes
* Deprecate conductor instance\_type\_get() and remove from VirtAPI
* Make restore\_instance pass the Instance object to compute manager
* Use uuid instead of name for lvm backend
* Adds get\_console\_connect\_info API
* Remove log\_handler module from oslo-incubator sync
* Remove deleted module flakes from openstack-common.conf
* When a claim is rejected, explain why
* Move xenapi/agent.py to new call\_xenapi style
* xenapi plugins: Make sure subprocesses finish executing
* Update Oslo wiki link in README
* Refactor pool.py to remove calls to call\_xenapi
* Move vbd plug/unplug into session object
* xenapi: make session calls more discoverable
* Make error notifications more consistent
* Adds unit test for etc/nova/policy.json data
* Support IPv6 when booting instances
* xenapi: changes the debug log formatting
* libvirt: raises exception when attempt to resize disk down
* xenapi: stop destroy\_vdi errors masking real error
* Make resource\_tracker use Flavor object
* Make compute manager use Flavor object
* Make baremetal driver use Flavor object instead of VirtAPI
* Sync latest config file generator from oslo-incubator
* Fixes evacuate doesn't honor enable password conf for v3
* Removed copyright from empty files
* Fix the explanations of HTTPNotFound response
* VMware: support instance objects
* Add support for tenant\_id based authentication with Neutron
* Remove and recreate interface if already exists
* Prevent caller from specifying id during Aggregate.create()
* Enable flake8 H404 checking
* Imported Translations from Transifex
* Fix logic for aggregate\_metadata\_get\_by\_host\_with\_key test case
* Use oslo-common's logging fixture
* Re-Sync oslo-incubator fixtures
* Updated from global requirements
* Update pre\_live\_migration to take instance object
* Remove unused method inject\_file()
* Remove db query from deallocate\_fixed\_ip
* update deallocate\_for\_instance to take instance obj
* Update server\_diagnostics to use instance object
* Move the metrics update to get\_metrics
* Unmount the NFS and GlusterFS shares on detach
* Add a caching scheduler driver
* libvirt: image property variable already defined
* Replaces exception re-raising in Hyper-V
* Remove blank space after print
* VMware: add instance detail to detach log message
* libvirt: Enable custom video RAM setting
* Remove trailing comma from sample JSON
* Add pack\_action\_start/finish helper to InstanceAction object
* Rewrite InstanceActionEvent object testcase using mock
* Clean up \_make\_\*\_list in object models to use base.obj\_make\_list
* libvirt: remove explicit /dev/random rng default
* Document virt driver methods that take Instance objects
* Make interface attach and detach use objects
* Pass instance object to soft\_delete() and get\_info()
* libvirt: setting a correct driver name for iscsi volumes
* libvirt: host specific virtio-rng backend
* Fix HTTP methods for test\_attach\_interfaces
* Fix the calls of webob exception classes
* VMware: remove unused parameter from \_wait\_for\_task
* Downgrade the log level for floating IP associate
* Removing redundant validation for rebuild request
* VMware: add a test for driver capabilities
* Catch HostBinaryNotFound exception when updating a service
* VMware: ensure that datastore name exists prior to deleting disk
* Move compute's \_get\_instance\_volume\_block\_device\_info to BDM objects
* Use disk\_bus and device\_type in attaching volumes
* Add device bus and type to virt attach\_volume call
* Make volume attach use objects
* compute: invalid gettext message format
* VMware: fix the VNC port allocation
* VMware: fix datastore selection when token is returned
* Hyper-V log cleanups
* vmware: driver races to create instance images
* Introduce Guru Meditation Reports into Nova
* Updated from global requirements
* Revert "VMware: fix race for datastore directory existence"
* Use instance object for delete
* Update ubuntu dev env instructions
* VMware: fix race for datastore directory existence
* libvirt: adding a random number generator device to instances
* Add 'use\_slave' to instance\_get\_all\_by\_filter in conductor
* Fix the validation of flavor\_extraspecs v2 API
* Make webob.exc.HTTPForbidden return correct message
* Use image from the api in run\_instance, if present
* Remove unused variables in the xenapi.vmops module
* Describe addresses in ec2 api broken with neutron
* Cleanup v3 test\_versions
* Fix import order in log\_handler
* Emit message which merged user-supplied argument in log\_handler
* Adds service request parameter filter for V3 API os-hosts request
* Fix comment typo in nova/compute/api.py
* stop throwing deprecation warnings on init
* Remove broken quota-classes API
* VMware: fix instance lookup against vSphere
* Add a new compute API method for deleting retired services
* Fix instance\_get\_all\_by\_host to actually use slave
* Periodic task poll\_bandwidth\_usage can use slave
* Partially revert "XenAPI: Monitor the GC when coalescing"
* Mark XML as deprecated in the v2 API
* adjust version definition for v3 to be only json
* Fix option indenting in compute manager
* Adds create backup server extension for the V3 API
* Catch InstanceNotFound exceptions for V2 API instance\_actions
* Sync log.py from oslo
* Make floating\_ips module use FloatingIP for associations
* Remove \_\_del\_\_ usage in vmwareapi driver
* Fixed spelling errors in nova
* LibVirt: Disable hairpin when using Neutron
* VMware: optimize instance reference access
* Serialize the notification payload in json
* Add resource tracking to unshelve\_instance()
* Typo in the name 'libvirt\_snapshot\_compression'
* Refactor driver BDM attach() to cover all uses
* Fix assertEqual parameter order post V3 API admin-actions-split
* Fix copyright messages after admin actions split for V3 API
* Catch InstanceNotFound exceptions for V2 API virtual interfaces
* Correct the assert() order in test\_libvirt\_blockinfo
* Use disk\_bus when guessing the device name for vol
* libvirt: add virtio-scsi disk interface support
* libvirt: configuration element for virtual controller
* VMware: factor out management of controller keys and unit numbers
* Remove unused notifier and rpc modules from oslo sync
* Imported Translations from Transifex
* Remove XML support from schemas v3
* Treat port attachment failures correctly
* Add experimental warning for Cells
* Add boolean convertor to "create multiple servers" API
* VMware: prevent race for vmdk deletion
* VMware: raise more specific exceptions
* Disable IGMP snooping on hybrid Linux bridge
* libvirt: remove retval from libvirt \_set\_host\_enabled()
* VMware: remove unused class
* compute: format\_message is a method not an attribute
* MetricsWeigher: Added support of unavailable metrics
* Fix incorrect kwargs 'reason' for HTTPBadRequest
* Fix the indents of v3 API sample docs
* Refactor get\_iscsi\_initiator to a common location
* Fix compute\_node\_update() compatibility with older clients
* XenAPI: Add the mechanism to attach a pci device to a VM
* Remove underscore for the STATE\_MAP variable
* XenAPI: Add the support for updating the status of the host
* libvirt: support configurable wipe methods for LVM backed instances
* Fix InstanceNotFound error in \_delete\_instance\_files
* Ensure parent dir exists while injecting files
* Convert post\_live\_migration\_at\_destination to objects
* Convert remove\_fixed\_ip\_to\_instance to objects
* Convert add\_fixed\_ip\_to\_instance to objects
* Fix invalid facilities documented in rootwrap.conf
* VMware: improve unit test time
* Replace assertEqual(None, \*) with assertIsNone in tests
* Add comment/doc about utils.mkfs in rootwrap
* Add mkfs to the baremetal-deploy-helper rootwrap
* libvirt-volume: improve unit test time
* Move consoleauth\_manager option into nova.service and fix imports
* libvirt: improve unit test time
* Imported Translations from Transifex
* Make is\_neutron() thread-safe
* Update the mailmap
* Rewrite InstanceAction object test cases using mock
* Make floating\_ips module use FloatingIP for updates
* Make floating\_ips module use FloatingIP for (de-)allocations
* Make floating\_ips module use FloatingIP for all get queries
* Make floating\_ips module use Service object
* Make floating\_ips module use Instance object
* Make floating\_ips module use Network object
* Make floating\_ips module use FixedIP object
* Fix break in vm\_vdi\_cleaner after oslo changes
* Fixes the Hyper-V VolumeOpsTestCase base class
* libvirt: Uses available method get\_host\_state
* Add V3 api for pci support
* Update docstring for baremetal opportunistic tests
* Fix upper bound checking for flavor create parameters
* Fixed check in image cache unit test
* Count memory and disk slots once in cells state manager
* changed quantum to neutron in vif-openstack
* Convert unrescue\_instance to objects
* Don't allow compute\_node free\_disk\_gb to be None
* compute: removes unnecessary condition
* Rename Openstack to OpenStack
* Support setting a machine type to enable ARMv7/AArch64 guests to boot
* Catch InstanceNotFound exceptions for V2 API floating\_ips
* Explicity teardown on error in libguestfs setup()
* Catch InstanceNotFound exceptions for V2 API deferred delete
* Replace oslo.sphinx with oslosphinx
* Change assertTrue(isinstance()) by optimal assert
* Make nova\_ipam\_lib use Network, FixedIP, and FloatingIP objects
* Make nova-network use FixedIP for timeouts
* Make nova-network use FixedIP object for updates
* Make nova-network use FixedIP object for disassociations
* Use six.moves.urllib.parse instead of urlparse
* Add "body=" argument to v3 API unit tests
* Remove unused methods
* Adds migrate server extension for V3 API
* Move policy check of start/stop to api layer
* Refactor stats to avoid bad join
* Remove @author from copyright statements
* Remove character filtering from V3 API console\_output
* DB: logging exceptions should use save\_and\_reraise
* Fix incorrect check in aggregate/az test
* xenapi: set viridian=false for linux servers
* Delete baremetal image files after deployment
* Make sure "volumeId" in req body on volume actions
* Removes console output plugin from the core list
* Using six.add\_metaclass
* Fix bad log formatting
* Remove quota classes extension from the V3 API
* Group kvm image\_meta tests for get\_disk\_bus
* Prefix private methods with \_ in docker driver
* Fix the sample and unittest params of v3 scheduler-hints
* Add a instance lookup helper to v3 plugins
* Use raw string notation for regexes in hacking checks
* Improve detection of imports in hacking check
* Renumber some nova hacking checks
* Docker cannot start a new instance because of an internal error
* libvirt: configuration element for a random number generator device
* VMware: fix instance rescue bug
* Fix run\_tests.sh lockutils when run with -d
* Adds tests to sqlachemy.api.\_retry\_on\_deadlock
* Replace detail for explanation msgs on webob exceptions
* Allow operators to customize max header size
* Prevent caller from specifying id during Migration.create()
* Prevent caller from specifying id during KeyPair.create()
* Prevent caller from specifying id during Service.create()
* Prevent caller from specifying id during ComputeNode.create()
* Clean IMAGE\_SNAPSHOT\_PENDING state on compute manager start up
* Fix trivial typo in libvirt test comment
* Refactoring metadata/base
* Removes XML namespace from V3 API test\_servers
* correct the bugs reference url in man documents
* Objectify instance\_action for cell scheduler
* Remove tox locale overrides
* libvirt: use to\_xml() in post\_live\_migration\_at\_destination
* Removes os-instance-usage-audit-log from the V3 API
* VMware: update test name
* VMware: improve unit test performance
* Fix english grammar in the quota error messages
* Removes os-simple-tenant-usage from the V3 API
* Fix a couple of unit test typos
* Add HEAD api response for test s3 server BucketHandler
* Removes XML support from security\_groups v3 API
* Hyper-V driver RDP console access support
* Make consoleauth token verification pass an Instance object
* Adds RDP console support
* Fix migrations changing the type of deleted column
* Add hpet option for time drifting
* Typo in backwards compat names for notification drivers
* Support building wheels (PEP-427)
* Fix misspellings in nova
* Disable file injection in baremetal by default
* Drop unused dump\_ SQL tables
* Convert rescue\_instance to objects
* Convert set\_admin\_password to objects
* The object\_compat decorator should come first
* Default video type to 'vga' for PowerKVM
* Sync latest db.sqlalchemy from oslo-incubator
* Guard against oversize flavor rxtx\_factor float
* Make libvirt use Flavor object instead of using VirtAPI
* Fix instance metadata tracking during resets
* Make delete\_instance\_metadata() use objects
* Break out the meat of the object hydration  process
* V2 Pause: treat case when driver does not implement the operation
* VMware: fix bug for exceptions thrown in \_wait\_for\_task
* Nova Docker: Metadata service doesn't work
* nova: use RequestContextSerializer for notifications
* Fix auto instance unrescue after poll period
* Fix typos in hacking check warning numbers
* Fix exception handling miss in remote\_consoles
* Don't try to restore VM's in state ERROR
* Make it possible to disable polling for bandwidth usage
* XenAPI: Monitor the GC when coalescing
* Revert "Allow deleting instances while uuid lock is held"
* report port number for address already in use errors
* Update my mailmap
* libvirt: Adds missing tests to copy\_image
* Sync latest gettextutils from oslo-incubator
* Make change\_instance\_metadata() use objects
* Add XenAPI driver deprecation warning log message
* Adds host\_ip to hypervisor show API
* VMware: update the default 'task\_poll\_interval' time
* Fixes Hyper-V VHDX snapshot bigger than instance
* Define common "name" parameter for Nova v3 API
* Stacktrace on error from libvirt during unfilter
* Disable libvirt driver file injection by default
* Add super call to db Base class
* Fix baremetal stats type
* Fix bittorrent URL configuration option
* Fix VirtualInterfaceMacAddressException message
* Add serializer capability to fake\_notifier
* Avoid deadlock when stringifying NetworkInfo model
* Add hacking test to block cross-virt driver code usage
* Hyper-V: Change variable in debug log message
* Rename API schema modules with removing "\_schema"
* Fixed naming issue of variable in a debug statement formatting
* Use new images when spawning BM instances
* Remove get\_instance\_type and get\_active\_by\_window from nova compute API
* Make the simple\_tenant\_usage API use objects
* Add instance\_get\_active\_by\_window\_joined to InstanceList
* Update nova.conf.sample for python-keystoneclient 0.5.0
* Add ESX quality warning
* Set SCSI as the default cdrom bus for PowerKVM
* Enforce FlavorExtraSpecs Key format
* Fix scheduler\_hints parameter of v3 API
* Remove vi modelines
* VMware: Remove some unused variables
* Fix a bug in v3 API doc
* Move logging out of BDM attach method
* Add missing translation support
* libvirt: making set\_host\_enabled to be a private methods
* Remove unused variable
* Call get\_pgsql\_connection\_info from \_test\_postgresql\_opportunistically
* Port to oslo.messaging
* Sync latest config file generator from oslo-incubator
* Test guestfs without support for close\_on\_exit
* Make nova-network use FixedIP object for vif queries and bulk create
* Make nova-network use FixedIP for host and instance queries
* Make nova-network use FixedIP object for associations
* Make nova-network use FixedIP for get\_by\_address() queries
* Add FixedIP.floating\_ips dynamic property
* Add FloatingIP object implementation
* Add FixedIP Object implementation
* Deal with old versions of libguestfs
* Destroy docker container if spawn fails to set up network
* Adds suspend server extension for V3 API
* Adds pause server extension for V3 API
* Removes XML namespace definitions from V3 API plugins
* Remove XML support from migrations pci multiple\_create v3 API plugins
* Remove extra space in log message
* Allow deleting instances while uuid lock is held
* Add 'icehouse-compat' to [upgrade\_levels] compute=
* Make os-service API return correct error messages
* Make fixed\_ip\_get\_by\_address() take columns\_to\_join
* Refactor return value of fixed\_ip\_associate calls
* Make nova-network use Network object for deleting networks
* Make nova-network use Network for associations
* Make nova-network use Network object for set\_host() operation
* Make nova-network use Network object for updates
* Make nova-network use Network object for remaining "get" queries
* Make nova-network use NetworkList for remaining "all" queries
* Make nova-network use Network object for get-all-by-host query
* Make nova-network a "conductor-using service"
* Ignore 'dynamic' addr flag on bridge configuration
* Remove XML support from some v3 API plugins
* xenapi: clean up step decorator fake steps
* Use objects internally in DriverBlockDevice class
* Make snapshot\_volume\_backed use new-world objects
* Make volume\_snapshot\_{create,delete} use objects
* Move compute API is\_volume\_backed to BDM objects
* Add block device mapping objects implementation
* XenAPI: Wait for VDI on introduce
* Shelve: The snapshot should be removed when delete instance
* Revert "Allow deleting instances while uuid lock is held"
* Retry reservation commit and rollback on deadlock
* Adds lock server extension for V3 API
* Remove duplicated method in mock\_key\_mgr
* Add quality warning for non-standard libvirt configurations
* Add docker driver removal warning
* Remove V3 API XML entry points
* Remove XML support from admin\_password V3 API plugin
* Remove XML support from certificates v3 API
* Remove XML support from some v3 API plugins(e.g. services)
* Remove XML support from some extension v3 API plugins
* Remove XML support from some server v3 API plugins
* Remove XML support from quota and scheduler\_hints v3 API plugins
* Remove XML support from flavor v3 API plugins
* Revert "Fix race conditions between imagebackend and imagecache"
* Remove XML support from v3 API plugins
* Remove unused methods
* Remove trace XML from unittests
* removing xml from servers.py
* Remove xml unit tests for v3 api plugins
* Remove v3 xml API sample tests
* Adds dmcrypt utility module
* Adds ephemeral\_key\_uuid field to instance
* Error message is malformed when removing a sec group from an instance
* Do not set root device for libvirt+Xen
* Docker Set Container name to Instance ID
* Fix init of pci\_stats in resource tracker
* Catch NotImplementedError in get\_spice\_console in v2/v3 API
* Minor changes to make certificates test cases use HTTPRequestV3
* VMware: Only include connected hosts in cluster stats
* disk/api.py: refactors extends and adds missing tests
* Make nova-network use Network to create networks
* Make obj\_to\_primitive() handle netaddr types
* Add Network object
* Make service workers gracefully handle service creation race
* support stevedore >= 0.14
* Increase the default retry for iscsi connects
* Finish compacting pre-Icehouse database migrations
* Compact pre-Icehouse database migrations <= 210
* Compact pre-Icehouse database migrations <= 200
* Compact pre-Icehouse database migrations <= 190
* Fix cache lock for image not consistent
* VMware: fix image snapshot with attached volume
* Use block\_device\_info at post\_live\_migration\_at\_destination
* Update policy check on each action for certificates
* Use (# of CPUs) workers by default
* Remove policy check in db layer for aggregates
* Remove unused configurations
* VMware: fix exception when using multiple compute nodes
* Remove copyright from empty files in nova
* disk/api.py: resize2fs fails silently + adds tests
* remove 2 unused function in test\_volumes.py
* Update log message to support translations
* PCI address should be uniform
* Remove flavor-disabled related policy rules for v3 api
* Remove get\_all\_networks from nova.network.rpcapi
* Remove get\_network from nova.network.rpcapi
* Update nova.network to use DNSDomain object
* Remove some dead dnsdomain code
* Add DNSDomain object
* Add db.dnsdomain\_get\_all() method
* Update linux\_net to use VirtualInterface
* Update nova\_ipam\_lib to use VirtualInterface
* libvirt: Review of the code to use module units
* Update network.manager to use VirtualInterface
* Imported Translations from Transifex
* Updated from global requirements
* Define "supported\_instances" for fake compute
* Remove get\_vif\_by\_mac\_address from network rpcapi
* Remove unused method from network rpcapi
* Allow delete when InstanceInfoCache entry is missing
* libvirt: Fix root disk leak in live mig
* Additional check for qemu-nbd hang
* Correct host managers free disk calculation
* Correct the state for PAUSED instances on reboot
* XenAPI: Use get\_VALUE in preference to get\_record()['VALUE']
* XenAPI: Speedup get\_vhd\_parent\_uuid
* XenAPI: Report the CPU details correctly
* XenAPI: Tidy calls to get\_all\_ref\_and\_rec
* XenAPI: get\_info was very expensive
* Fix bug with not implemented virConnect.registerCloseCallback
* Make test\_poll\_volume\_usage\_with\_data more reliable
* Re-write sqlite BigInteger mapping test
* Small edits on help strings
* Make floating\_ip\_bulk\_destroy deallocate quota if not auto\_assigned
* Sync processutils from oslo-incubator
* Create common method for MTU treatment
* Move fake\_network config option to linux\_net
* libvirt: move unnecesary comment
* Sync log.py from oslo-incubator
* hyperv: Retry after WMI query fails to find dev
* vmwareapi:remove unused variables in volumeops
* Fix docstring in libvirt.driver.LibvirtDriver.get\_instance\_disk\_info()
* Hide VIR\_CONNECT\_BASELINE\_CPU\_EXPAND\_FEATURES where needed
* Make test\_different\_fname\_concurrency less racy
* VMware: improve exception logging in driver.py

2014.1.b2
---------

* Add instance faults during live\_migrate errors
* VMware: use .get() to access 'summary.accessible'
* Nova Docker driver must remove network namespace
* Added a new scheduler filter for metrics
* Sync module units from oslo
* Join pci\_devices for servers API
* VMware: fix missing datastore regex with ESX driver
* Fix the flavor\_ref type of unit tests
* Sync unhandled exception logging change from Oslo
* Fix race conditions between imagebackend and imagecache
* Add explicit discussion of dependencies to README.rst
* Add host and details column to instance\_actions\_events table
* Join pci\_devices when getting all servers in API
* Add sort() method to ObjectListBase
* Add VirtualInterface object
* VMware: Fix incorrect comment indentation
* vmwareapi: simple refactor of config drive tests
* Fix multi availability zone issue part 2
* Make exception message more friendly
* disable debug in eventlet.wsgi server
* Alphabetize core list for V3 API plugins
* Ensure MTU is set when the OVS vif driver is used
* remove redundant \_\_init\_\_() overwriting when getting ExtensionResources
* Fix bug for neutron network-name
* Fix rbd backend not working for none admin ceph user
* Set objects indirection API in network service
* Use oslo.rootwrap library instead of local copy
* Remove admin auth when getting the list of Neutron API extensions
* Fix the test parameter order for v3 evacuate test
* Add API schema for v3 evacuate API
* Remove unused code
* Take a vm out of SNAPSHOTTING after Glance error
* Corrected typo in metrics
* libvirt: handle exception while get vcpu info
* Fixed incorrect test case of test\_server\_metadata.py
* Add API schema for v3 rescue API
* Support preserve\_ephemeral in baremetal
* Show bm deploy how to preserve ephemeral content
* Add preserve\_ephemeral option to rebuild
* Fix string formatting of exception.NoUniqueMatch message
* docstring fix
* xenapi: stop server destroy on live\_migrate errors
* Ensure that exception raised in neutron are handled correctly
* Fix updating device names when defaulting
* libvirt: Fix confusing use of mox.StubOutWithMock
* Sync request\_id middleware for nova
* Calculate default security group into quota usage
* Allow run\_image\_cache\_manager\_pass to hit db slave
* Consolidate the blockdev related filters
* VMware: upload images to temporary directory
* Refactor CIDR field to use netaddr.IPNetwork
* Make nova-network use Instance objects
* Make nova-network use Service object
* Allow \_check\_instance\_build\_time to hit db slave
* Set objects indirection API in metadata service
* libvirt: Configuration element for sVirt support
* VMware: unnecessary session reconnection
* Add API schema for v3 multinic API
* API schema for v3 console\_output API
* Workers verification for WSGI service
* Remove unused dict BYTE\_MULTIPLIERS
* Optimize libvirt live migration workflow at source
* libvirt, fix test tpool\_execute\_calls\_libvirt
* Using staticmethod to mock LibvirtDriver.\_supports\_direct\_io
* Use the mangle checksum fill rule regardless to the multi\_host
* Enabled Libvirt driver to read 'os\_command\_line' from image properties
* Update nova.conf.sample
* Capture exception for JSON load in virt.storage\_users
* Ensure that headers are utf8, not unicode
* Attribute snapshot not defined in libvirt/config.py
* ec2 api should check 'max\_count'&'min\_count' para
* nova docker driver cannot find cgroup in /proc/mounts on RHEL
* VMware: fix rescue with disks are not hot-addable
* VMware: bug fix for VM rescue when config drive is configured
* Define common API parameter types
* Fixed a problem in iSCSI multipath
* Fix unhandled InvalidServerState exceptions in server start/stop
* Cells rebuild regression fix
* Fix potential fd leak
* Rename instance\_type to flavor in libvirt virt driver tests
* Rename instance\_type to flavor in vmware virt driver tests
* Improve error message in services API
* Make image props filter handle old vm\_modes
* XenAPI: Use direct IO for writing config drive
* Avoid unnecessary use of rootwrap for some network commands
* Remove unused copyright from nova.api.\_\_init\_\_
* replace type() to isinstance() in nova
* Make availability\_zone optional in create for aggregates
* libvirt: Fix infinite loop waiting for block job
* baremetal: stop deployment if block devices are not available
* Cleanup 'deleting' instances on restart
* Ignore duplicate delete requests
* Let drivers override default rebuild() behaviour
* Enable compute\_node\_update to tolerate deadlocks
* xenapi: resize up ephemeral disks
* xenapi: refactor generate\_ephemeral
* xenapi: refactor resize\_up\_root\_vdi
* Abstract add\_timestamp out of ComputeDriverCPUMonitor class
* Revert "Whitelist external netaddr requirement"
* The private method \_text\_node should be used as function
* Add finer granularity to host aggregate APIs
* Remove unused import
* Adds new method nova.utils.get\_hash\_str
* Make nova/quota use keypair objects
* VMware: update test file names
* Ensure instance action event list in order
* Docker Driver doesn't respect CPU limit
* libvirt: stop overwriting LibvirtConfigCPU in get\_host\_capabilities
* Cleanup the flake8 section of tox.ini
* Use the full string for localisation
* Don't deallocate/reallocate networks on reschedules
* Cleanup object usage in the rebuild path
* Fix test case with wrong parameter in test\_quota\_classes
* Remove unused variables in imagebackend.py
* Remove unused code in test\_attach\_interfaces.py
* Whitelist external netaddr requirement
* Better exception handling for deletes during build
* Translate the snapshot\_pending state for old instances
* Prevent Instance.refresh() from returning a new info cache
* Extends V3 os-hypervisor api for pci support
* Sync config generator from oslo-incubator
* Imported Translations from Transifex
* Remove uneeded dhcp\_opts initialization
* Update class/function name for test\_extended\_availability\_zone.py
* Allow deleting instances while uuid lock is held
* xenapi: add support for vcpu\_pin\_set
* xenapi: more info when assert\_can\_migrate fails
* fix ips to 'ips' in APIRouter
* Hyper-V:Preserve config drive image after the instance is resized
* fix log message in APIRouter
* VMware: use session.call\_method to invoke api's
* Rename instance\_type to flavor in hyper-v virt driver
* Rename instance\_type to flavor in xenapi virt driver
* Compact pre-Icehouse database migrations <= 180
* Change when exists notification is sent for rescue
* Revert change of default FS from ext3 to etx4
* Convert nova.compute.manager's \_spawn to objects
* Add alias as prefix for flavor\_rxtx v3
* Remove unused code in nova/api/ec2/\_\_init\_\_.py
* Remove unused import
* VMware: improve connection issue diagnostic
* Fixes messages logged on Glance plugin retries
* Aggregate: Hosts isolation based on image properties
* Fix for qemu-nbd hang
* Return policy error, not generic error
* Fix lxc rootfs attached two devices in some action
* Removes disk-config extension from v3 api
* Fix typo'ed deprecated flag names in libvirt.imagebackend
* Disable libguestfs' default atexit handlers
* Add API schema for v3 extended\_volumes API
* Catch InstanceIsLocked exception on server actions
* Fix inconsistent "image" value on \_get\_image()
* Add API schema for v3 keypairs API
* Add API schema for v3 flavor\_access API
* Add API schema for v3 agents API
* Add API schema for v3 admin\_password API
* Adds a PREPARED state after baremetal node power on
* Make scheduler rpcapi use object serializer
* Update log message when remove pci device
* Add unit test for ListOfStrings field in object models
* Sync oslo db.sqlalchemy.utils to nova
* Remove duplicated test
* Fixing availability-zone not take effect error
* Fix image cache periodic task concurrent access bug
* Fix interprocess locks for run\_tests.sh
* lxc: Fix a bug of baselineCPU parse failure
* platform independence for test\_virt unit tests
* Imagecache: fix docstring
* libvirt: Set "Disabled Reason" to None when enable nova compute
* Change log from ERROR to WARNING when instance absent
* VMware: clean up unnecessary help message of options
* Don't use deprecated module commands
* Add apache2 license header to appropriate files for enabling H102
* XenAPI: Allow use of clone\_vdi on all SR types
* Remove unused variables in test\_conductor.py
* Do not use contextlib.nested if only mock one function
* Remove update\_service\_capabilities from nova
* Adds user\_data extension to nova.api.v3.extensions
* Add wsgiref to requirements.txt
* pass the empty body into the controller
* Imported Translations from Transifex
* Revert recent change to ComputeNode
* sync oslo service to fix SIGHUP handling
* Fix parameter checking about quota update api
* Spelling fix resouce=>resource
* Change default ephemeral FS to ext4
* When inject admin password, no need to generate temp file
* Make \_change\_index\_columns use existing utility methods
* Fix interprocess locks when running unit-tests
* Cleanup object usage in the delete path
* Change RPC post\_live\_migration\_at\_destination from call to cast
* Pass rbd\_user id and conf path  as part of RBD URI for qemu-img
* Allow some instance polling periodic tasks to hit db slave
* Sync timeutils from oslo-incubator
* Catch NotImplementedError for vnc in the api
* List NotImplementedError as a client exception for vnc
* remove vmwareapi.vmops.get\_console\_output()
* Object-ify build\_and\_run\_instance
* Retry on deadlock in instance\_metadata\_update
* use 'os\_type' in ephemeral filename only if mkfs defined
* ValueError should use '%' instead of ','
* Setting the xen vm device id on vm record
* Rename instance\_type to flavor in nova.utils and nova.compute.utils
* Rename instance\_type to flavor in nova.cloudpipe
* Serialize instance object while building request\_spec
* Make rebuild use Instance objects
* Remove deprecated config aliases
* Changed error message to match usage
* Add configurable 120s timeout ovs-vsctl calls
* Clarify rebuild\_instance's recreate parameter
* Clean swap\_volume rollback, on libvirt exception
* Image cache: move all of the variables to a common place
* baremetal: set capabilites explicitly
* Remove docker's unsupported capabilities
* Set a sane default for state\_path
* Fix incorrect exception on os-migrateLive
* barematal: Cleanup the calls to assertEqual
* Refactor time conversion helper function for objects in db api
* Fixes ConfigDrive bug on Windows
* Remove smoketests
* Revert graceful shutdown patch
* Handle InstanceUserDataMalformed in create server v2 api
* Enable remote debugging for nova
* Fix race in unit tests, which can cause gate job to fail
* Add boolean convertor to cells sync\_instances API
* Initialize iptables rules on initialization of MetadataManager
* vmwareapi: raise on get\_console\_output
* hyperv: remove get\_console\_output method
* List NotImplementedError as client exception
* api: handle NotImplementedError for console output
* Make Serializer/Conductor able to backlevel objects
* Make ec2 use Flavor object
* Move restore and rebuild operations to Flavor objects
* Add flavor access methods to Instance object
* Rename instance\_type to flavor in nova.network tree
* Stop, Rescue, and Delete should give guest a chance to shutdown
* Remove middleware ratelimits from v3 api
* Remove unused variables in neutron api interface and neutron tests
* Remove unneeded call to conductor in network interface
* Return client tokens in EC2 DescribeInstances
* Require List objects to be able to backlevel their contents
* Make Instance object compatible with older compute nodes
* Deprecate/remove scheduler select\_hosts()
* Pass Instance object to console output virt driver api
* Send Instance object to validate\_console\_port
* Pass Instance object to compute vnc rpc api
* Update vnc virt driver api to take Instance object
* Add error as not-in-progress migration status
* Don't replace instance.info\_cache on each save
* Add boolean convertors for migrate\_live API
* VMWare: bug fix for Vim exception handling
* XenAPI: Synchronize on all VBD plug/unplug per VM
* Add IPAddress field type in object models
* Fixes errors on start/stop unittest
* Use a dictionary to eliminate the inner loop in \_choose\_host\_filters()
* Correct uses of :params in docstrings
* Delete iSCSI devices after volume detached
* Prevent spoofing instance\_id from neutron to nova
* Replaces call to lvs with blockdev
* Refactor PXE DHCP Option support
* Normalize the weights instead of using raw values
* Compact pre-Icehouse database migrations <= 170
* XenAPI: Speedup host\_ref cannot change - get it once
* Updated from global requirements
* Rename instance\_type to flavor in test\_utils and nova.tests.utils
* Rename instance\_type to flavor in baremetal virt driver
* VMware: fix bug when more than one datacenter exists
* Sync oslo lockutils for "fix lockutils.lock() to make it thread-safe"
* Move calls to os.path.exists() in libvirt imagebackend
* Ensure api\_paste\_conf is an absolute path
* Log exception in \_heal\_instance\_info\_cache
* Raise better exception if duplicate security groups
* Remove the largely obsolete basepath helper
* libvirt: Custom disk\_bus setting is being lost on hard\_reboot
* Libvirt: Making the video driver element configurable
* Give migrations tests more time to run
* Remove the api\_thread\_pool option from libvirt driver
* baremetal: volume driver refactoring and tests
* Sync middleware audit, base, and notifier from oslo
* Get test\_openAuth\_can\_refuse\_None\_uri to cleanup after itself
* Hide injected\_file related quotas for V3 API
* Make obj\_from\_primitive() preserve version information
* Cells: check states on resize/rebuild updates
* Make flavor\_access extension use Flavor object
* libvirt: add a test to guard against set\_host\_enabled raising an error
* Fix UnboundLocalError in libvirt.driver.\_close\_callback
* Quota violations should not cause a stacktrace in the logs
* Enforce permissions in snapshots temporary dir
* Sync rpc fix from oslo-incubator
* Fix changes-since filter for list-servers API
* Make it possible to override test timeout value
* Imported Translations from Transifex
* libvirt: consider minimal I/O size when selecting cache type
* Setup destination disk from virt\_disk\_size
* Add Flavor object
* Add atomic flavor access creation
* Add extra\_resources field to compute\_nodes table
* Recommend the right call instead of datetime.now()
* libvirt: remove unused imports from fake libvirt utils
* VMware: fix disk extend bug when no space on datastore
* Fix monkey\_patch docstring bug
* Change unit test for availability\_zones.reset\_cache
* Make compute support monitors and store metrics
* Added a new scheduler metrics weight plugin
* LXC: Image device should be reset in mount() and teardown()
* Add shutdown option to cleanup running periodic
* xenapi: Update VM memory overhead estimation
* Misc typos in nova
* Add default arguments for Connection class
* Update Instance from database after destroy
* Libvirt: Adding video device to instances
* Configuration element for describing video drivers
* Don't log stacktrace for UnexpectedTaskStateError
* Extends V3 servers api for pci support

2014.1.b1
---------

* LOG.warn() and LOG.error() should support translation
* Minor change for typo from patch 80b11279b
* network\_device\_mtu should be IntOpt
* Fix HTTP response code for network APIs and improve error message
* Use password masking utility provided in Oslo
* Sync log.py from Oslo-incubator
* xenapi: stop hang during glance download
* Clean up test cases for compute.manager.\_check\_instance\_build\_time
* Recover from IMAGE-\* state on compute manager start-up
* Document when config options were deprecated
* VMware: Fix unhandled session failure issues
* Use utils method when getting instance metadata and system metadata
* Add status mapping for shutoff instance when resize
* Fix docstring on SnapshotController
* Fix trivial typo 'descirption'
* Compact pre-Icehouse database migrations <= 160
* Compact pre-Icehouse database migrations <= 150
* Compact pre-Icehouse database migrations <= 140
* Remove redundant body validation for createBackup
* Change evacuate test hostnames to preferable ones
* Change conductor live migrate task to use select\_destinations()
* Ensure proper notifications are sent when build finishes
* Periodic task \_heal\_instance\_info\_cache can now use slave db
* docker: access system\_metadata as a dict
* Don't overwrite marker when checking if it exists
* There is no need to set VM status to ERROR on a failed migration
* DB migration 209: Clean up child rows as well
* Cleanup ec2/metadata/osapi address/port listen config option help
* Recover from build state on compute manager start-up
* Comply with new hacking 0.8 release
* Correct network\_device\_mtu help string
* Remove last of AssertEquals
* Fix Neutron Authentication for Metadata Service
* Update help for osapi\_compute\_listen\_port
* libvirt: host update disable/enable report HTTP 400
* Catch InstanceIsLocked exception on server actions
* VMware: enable driver to work with postgres database
* Make test\_evacuate from compute API DRYer
* Fix testcase config option imports
* Fix "in" comparisons with one element tuples
* Remove \_security\_group\_chain\_name from nova/virt/firewall.py
* Remove duplicate setting of os\_type in libvirt config builder
* Fix logic in LibvirtConnTestCase.\_check\_xml\_and\_uri
* Remove unused flag 'host\_state\_interval'
* Make object compat work with more positional args
* Fix LibvirtGenericVIFDriver.get\_config() for quota
* Fix a tiny double quote matching in field obj model
* Move flags in libvirt's volume to the libvirt group
* Check Neutron port quota during validate\_networks in API
* Failure during termination should always leave state as Error(Deleting)
* Remove duplicate FlavorNotFound exception handling in server create API
* Make check more pythonic
* Make sure report\_interval is less than service\_down\_time
* Set is\_public to False by default for volume backed snapshots
* Delete instance faults when deleting instance
* Pass Instance object to spice compute rpc api
* Pass Instance object to get\_spice\_console virt api
* Remove update\_service\_capabilities from scheduler rpc api
* Remove SchedulerDependentManager
* powervm: remove powervm virt driver from nova
* libvirt: Provide a port field for GlusterFS network disks
* Add API input validation framework
* Remove duplicate BuildAbortException block
* Remove compute 2.x rpc api
* Add v3 of compute rpc API
* Fix incorrect argument position in DbQuotaDriver
* Change ConductorManager to self.db when record cold\_migrate event
* instance state will be stuck in unshelving when unshelve fails
* Fix some i18n issue in nova/compute/manager.py
* Don't gate on E125
* Supplement 'os-migrateLive' in actions list
* Corrected typo in host\_manager
* Fix a lazy-load exception in security\_group\_update()
* fakevirt: return hypervisor\_version as an int instead of a string
* Bump to sqlalchemy-migrate 0.8.2
* ComputeFilter shouldn't generate a warning for disabled hosts
* Remove cert 1.X rpc api
* Add V2 rpc api for cert
* Remove console 1.X rpc api
* Do not hide exception in update\_instance\_cache\_with\_nw\_info
* Wrong handling of Instance expected\_task\_state
* XenAPI: Fix caching of images
* Extend LibvirtConfigGuest to parse guest cpu element info
* Rename instance\_type parameter in migrate\_disk\_and\_power\_off to flavor
* convert min\_count and max\_count to type int in nova v3 api
* Add decorator expected\_errors for flavors\_extraspecs v3
* Remove nullable=True in models.py which is set by default
* baremetal: Make api validate mac address
* Use 204 instead of 202 for delete of keypairs v3
* Fix log message format issue for api
* Remove "set()" from CoreAPIMissing exception
* Move flag in libvirt's vif to the libvirt group
* Move flag in libvirt's utils to the libvirt group
* Move flags in libvirt's imagebackend to the libvirt group
* Extend the scheduler HostState for metrics from compute\_node
* docker: return hypervisor\_version as an int rather than a string
* Sync Log Levels from OSLO
* Removes check CONF.dhcp\_options\_enabled from nova
* Improved debug ability for log message of cold migration
* Adjust the order of notification for shelve instance
* Add FloatField for objects
* XenAPI: Fix config section usage
* Fix performance of Server List with Neutron for Admins
* Add context as parameter for two libvirt APIs
* Add context as parameter for resume
* xenapi: move session into new client module
* xenapi: stop key\_init timeout failing set password
* xenapi: workaround vbd.plug race
* Address infinite loop in nova compute when getting network info
* Use of logging in native thread causes deadlock connecting to libvirtd
* Add v3 api samples for shelve
* Imported Translations from Transifex
* libvirt: Fix log message when disable/enable a host
* Fix missing format specifier in ImagePropertiesFilter log message
* Sync the DB2 communication error code change from olso
* baremetal: refactor out powervm dependency
* handle migration errors
* Make compute manager \_init\_instance use native objects
* Fix for reading the xenapi\_device\_id from image metadata
* Check if reboot request type is None
* Use model\_query() instead of session.query in db.instance\_destroy
* Fix up spelling mistake
* Periodic task \_poll\_unconfirmed\_resizes can now use slave db
* Include image block device maps in info
* Sync local from oslo
* objects: declare some methods as static
* Handle UnicodeEncodeError in validate\_integer
* Remove traces of V3 personality extension from api samples
* Removes os-personalities extension from the V3 API
* VMware: add support for VM diagnostics
* Remove useless api sample template files for flavor-rxtx v3
* Fix libvirt evacuate instance on shared storage fails
* Fixes get\_vm\_storage\_paths issue for Hyper-V V2 API
* Clean up how test env variables are parsed
* Add missing argument max\_size in libvirt driver
* VMware: Always upload a snapshot as a preallocated disk
* Fix empty selector XML bug
* Libvirt:Instance resize confirm issue against NFS
* Add V2 rpc api for console
* Fix sample parameter of agent API
* VMware: fix snapshot failure when host in maintenance mode
* Clean up unused variables
* Add a driver method to toggle instance booting
* Fix cells instance\_create extra kwarg
* handle empty network info in instance cache
* Remove deprecated instance\_type alias from nova-manage
* xenapi: kernel and ramdisk missing after live-migrate
* Remove V2 API version of coverage extensions
* Remove V3 API version of coverage extension
* Update openstack/common/periodic\_task
* Use 201 instead of 200 for action create of flavor-manage v3
* Enforce metadata string type on key/value pairs
* Fixes RequestContext initialization failure
* Move flags in libvirt's imagecache to the libvirt group
* Move base\_dir\_name option to somewhere more central
* Move some libvirt specific flags into a group
* Removed unused instance object helper function
* Update openstack/common/lockutils
* Rename InstanceType exceptions to Flavor
* Added monitor (e.g. CPU) to monitor and collect data
* Conditionalise automatic enabling of disabled host
* Users with admin role in Nova should not re-auth with Neutron
* Use 400 instead of 422 for invalid input in v3 servers core
* Fix limits v3 follow API v3 rules
* Remove used\_limits extension from the V3 API
* Remove reduntant call to update\_instance\_info\_cache
* Add flavor-extra-specs to core for V3 API
* Add flavor-access to core for V3 API
* Remove unused libvirt\_ovs\_bridge flag
* Fix AttributeError(s) from get\_v4/6\_ips\_by\_interface
* Raising exception for invalid floating\_ip's ID
* libvirt: Allow delete to complete when a volume disconnect fails
* replace assertNotEquals with assertNotEqual
* Add V3 api samples for access\_ips
* Add v3 api samples for scheduler-hints
* Add v3 api samples for availability\_zone
* Add V3 API sample for server's actions
* Cache Neutron Client for Admin Scenarios
* More instance\_type -> flavor renames in db.api
* Cache compute node info in Hypervisor api
* Reverse the quota reservation in revert\_resize
* Rename virtapi.instance\_type\_get to flavor\_get
* Xenapi: Allow windows builds with xentools 6.1 and 6.2
* Make baremetal support metadata for ephemeral block-device-mapping
* Make baremetal\_deploy\_helper understand ephemeral disks
* Removed unused methods from db.api
* Fix type mismatch errors in NetworkTestCase
* VMware: Detach volume should not delete vmdk
* xenapi: Fix agent update message format
* xenapi: Fix regression issue in agent update
* Shrink the exception handling range
* Moved quota headroom calculations into quota\_reserve
* Remove dup of LibvirtISCSIVolumeDriver in LibvirtISERVolumeDriver
* Replace assertEquals with assertEqual - tests/etc
* libvirt: pass instance to a log() call in the standard way
* xenapi: Move settings to their own config section
* domainEventRegisterAny called too often
* Allow configuring the wsgi pool size
* driver tests (loose ends): replace assertEquals with assertEqual
* baremetal: replace assertEquals with assertEqual
* image tests: replace assertEquals with assertEqual
* virt root tests: replace assertEquals with assertEqual
* Remove unnecessary steps for cold snapshots
* baremetal: Make volume driver use a correct source device
* Update quota-class-set/quota-set throw 500 error
* Add log\_handler to implement the publish\_errors config option
* Imported Translations from Transifex
* Enable non-ascii characters in flavor names
* Move docker specific options into a group
* Check return code of command instead of checking stderr
* Added tests for get\_disk\_bus\_for\_disk\_dev function
* Checking existence of index before dropping
* add hints to api\_samples documentation
* xenapi: check for IP address in live migration pre check
* Remove live\_snapshot plumbing
* Remove unused local variable in test\_compute
* Make v3 admin\_password parameters consistent
* Flavor name should not contain only white spaces
* fix a typo error in test\_libvirt\_vif.py
* Remove unused local variables in test case
* Rename \_get\_vm\_state to \_get\_vm\_status
* Ensure deleted instances' status is always DELETED
* Let resource\_tracker report right migration status
* Imported Translations from Transifex
* nit: fix indentation
* Always pass context to compute driver destroy()
* Imported Translations from Transifex
* db tests: replace assertEquals with assertEqual
* compute tests: replace assertEquals with assertEqual
* Catch exception while building due to instance being deleted
* Refactor UnexpectedTaskStateError for handling of deleting instances
* Parted 'invalid option' in XenAPI driver
* Specify DB URL on command-line for schema\_diff.py
* Fix \`NoopQuotaDriver.get\_(project|user)\_quotas\` format
* Send delete.end with latest instance state
* Add missing fields in DriverBlockDevice
* Fix the boto version comparison
* Add test for class InsertFromSelect
* Process image BDM earlier to avoid duplicates
* Clean BDM when snapshoting volume-backed instances
* Remove superflous 'instances' joinedload
* Fix OLE error for HyperV
* Make the vmware pause/unpause unit tests actually test something
* Fixes the destroy() method for the Docker virt driver
* xenapi: converting XenAPIVolumeTestCase to NoDB
* Move \`diff\_dict\` to compute API
* Add compatibility for InstanceMetadata and primitives
* Issue brctl/delif only if the bridge exists
* ensure we don't boot oversized images
* Add V3 API samples for config-drive
* Remove duplicated test
* Add notification for host operation
* Sync log from oslo
* Replace assertEquals with assertEqual - tests/scheduler
* Make non-admin users can unshelve a server
* Fix interface-attach removes existing interfaces from db
* Correct exception handling
* Utilizes assertIsNone and assertIsNotNone - tests/etc
* Use elevated context in resource\_tracker.instance\_claim
* Add updates and notifications to build\_and\_run\_instance
* Add network handling to build\_and\_run\_instance
* Make unshelve use new style BDM
* Make \_get\_instance\_nw\_info() use Instance object
* Convert evacuation code to use objects
* Deprecate two security\_group-related methods from conductor
* Make metadata server use objects for Instance and Security Groups
* Replace assertEquals with assertEqual - tests/api
* Remove security\_group-related methods from VirtAPI
* Make virt/firewall use objects for Security Groups and Rules
* Drop auth\_token configs for api-paste.ini
* Add auth\_token settings to nova.conf.sample
* Use \_get\_server\_admin\_password()
* Pass volume\_api to get\_encryption\_metadata
* Comments for db.api.compute\_node\_\*() methods
* Fix migration 185 to work with old fkey names
* Adds V3 API samples for user-data
* Enforce compute:update policy in V3 API
* tenant\_id implies all\_tenants for servers list in V3 API
* Move get\_all\_tenants policy enforcement to API
* all\_tenants=0 should not return instances from all tenants
* Utilizes assertIsNone and assertIsNotNone - tests/virt
* xenapi: workaround for failing vbd detach
* xenapi: strip base\_mirror after live-migrate
* xenapi: refactor get\_all\_vdis\_in\_sr
* Remove unused expected\_sub\_attrs
* Remove useless variable from libvirt/driver.py
* Add a metadata type validation when creating vm
* Update schema\_diff.py to use 'postgresql' URLs
* Disable nova-compute on libvirt connectivity exceptions
* Make InstanceInfoCache load base attributes
* Add SecurityGroupRule object
* Add ephemeral\_mb record to bm\_nodes
* Stylistic improvement of models.ComputeNodeStat
* clean up numeric expressions in tests
* replaced e.message with unicode(e)
* Add DeleteFromSelect to avoid database's limit
* Imported Translations from Transifex
* Utilizes assertIsNone and assertIsNotNone - tests/api
* Include name/level in unit test log messages
* Remove instance\_type\* proxy methods from nova.db.api
* Add InstanceList.get\_by\_security\_group()
* Make security\_group\_rule\_get\_by\_security\_group() honor columns
* Claim IPv6 is unsupported if no interface with IPv6 configured
* Pass thru credentials to allow re-authentication
* network tests: replace assertEquals with assertEqual
* Nova-all: Replace basestring by six for python3 compatability
* clean up numeric expressions with byte constants
* Adds upper bound checking for flavor create parameters
* Remove fake\_vm\_ref from test\_vmwareapi.py
* xen tests: replace assertEquals with assertEqual
* Fix tests to work with mysql+postgres concurrently
* Enable extension access\_ips for v3 API
* Correct update extension point's check\_func for v3 server's controller
* Updates the documentation for nova unit tests
* Remove consoleauth 1.X rpc api
* consoleauth: retain havana rpc client compat
* Pull system\_metadata for notifications on instance.save()
* Allow \_sync\_power\_states periodic task to hit slave DB
* Fix power manager hangs while executing ipmitool
* Update my mailmap
* Stored metrics into compute\_nodes as a json dictionary
* Bad except clauses order causes wrong text in http response
* Add nova.db.migration.db\_initial\_version()
* Fix consoleauth check\_token for rpcapi v2
* Nova db/api.py docstring cleanups..
* Adds XML namespace example for disk config extension
* Remove multipath mapping device descriptor
* VMware: fix VM resize bug
* VMware: fix bug for reporting instance UUID's
* Remove extra space in tox.ini
* Fix migrate w/ cells
* Add tests for compute (child) cell
* Call baselineCPU for full feature list
* Change testing of same flavor resize
* Fix bad typo in cloudpipe.py
* Fix compute\_api tests for migrate
* Replace basestring by six for python3 compatability
* Add flavor-manage to core for V3 API
* Refactor unit tests code for python3 compatability
* make libvirt driver get\_connection thread-safe
* Remove duplicates from exceptions list
* Apply six for metaclass
* Add byte unit constants
* Add block device handling to build\_and\_run\_instance
* Reply with a meaningful exception, when libvirt connection is broken
* Fix getting nwinfo for Instance obj
* Make cells info\_cache updates more tolerant
* Raise an error if module import fails
* Drop RPC securemessage.py and crypto module
* Remove deprecated libvirt VIF driver code
* nova.exception does not have a ProcessExecutionError
* Fix setting backdoor port in service start
* Sync lockutils from oslo
* Fix wrong description when updating quotas
* Expose additional status in baremetal API extension
* migrate server doesn't raise correct exception
* Make security\_group\_get() more flexible about joins
* Make Object FieldType take an object name instead of a class
* Hyper-v: Change the hyper-v error log for debug when resize failed
* Adds V3 API samples for the disk-config extension
* Utilizes assertIn - tests/etc
* Fix all scripts to honor the enabled\_ssl\_apis flag
* Updated from global requirements
* Fix i18n issue for nova/compute/manager.py
* Change tab to blank space in hypervisors-detail-resp
* Fixing ephemeral disk creation
* Merging two mkfs commands
* xenapi: ephemeral disk partition should fill disk
* Fix the ConsolesController class doc string
* xenapi: Speeding up the easy cases of test\_xenapi
* xenapi: Speeding up more tests by switching to NoDB
* Remove .pyc files before generating sample conf
* xenapi: migrate multiple ephemeral disks
* Fail quickly if file injection for boot volume
* Add obj\_make\_compatible()
* Updated from global requirements
* Make cells 'flavorid' for resizes
* Fixes unicode issue in the Hyper-V driver
* Add missing ' to extra\_specs debug message
* VMware: Fix ValueError unsupported format character in log message
* graceful-shutdown: add graceful shutdown into compute
* remove unused network module from certificates api extension
* Sync fixture module from oslo
* Fixes Invalid tag name error when using k:v tagname
* Fix tests for migration 227 to check sqlite
* Adds V3 API samples for console output
* Add V2 rpc api for consoleauth
* Update version aliases for rpc version control
* Improve object instantiation syntax in some tests
* A nicer calling convention for object instantiation
* Updates OpenStack Style Commandments link
* Updated from global requirements
* Adding support for multiple hypervisor versions
* Manage None value for the 'os\_type' property
* Add CIDR field type
* Validate parameters of agent API
* Adding Read-Only volume attaching support to Nova
* Update timeutils.py from oslo
* Fix docstring related to create\_backup API
* powervm tests: replace assertEquals with assertEqual
* Add V3 API sample for admin-password
* Remove duplicated test cases
* Add extension access\_ips for v3 API
* Ensure migration 209 works with NULL fkey values
* Cells: Fix instance deletes
* Uses oslo.imageutils
* Add testr concurrency option for run\_tests.sh
* Fix the image name of a shelved server
* xenapi: test\_driver should use NoDBTestCase
* xenapi: Speedup vm\_util and vmops tests
* xenapi: speedup test\_wait\_for\_instance\_to\_start
* Remove xenapi rpm building code
* Fixes datastore selection bug
* Fixes Hyper-V snapshot spawning issue
* Make SecurityGroup receive context
* Fix DB API mismatch with sqlalchemy API
* Remove aggregate metadata methods from conductor and virtapi
* Make XenAPI use Aggregate object
* libvirt: add missing i18n support
* Adds V3 API samples for attach-interfaces
* Make aggregate methods use new-world objects
* Add missing key attribute to AggregateList.get\_by\_host()
* Fix i18n issue for nova/virt/baremetal/virtual\_power\_driver.py
* Fix scheduler rpcapi deprecated method comment
* Send notifications on keypair create/delete
* Use \`versionutils.is\_compatible\` for Dom0 plugin
* Use \`versionutils.is\_compatible\` for Nova Objects
* Improve logging messages in libvirt driver
* xenapi: stop agent errors stopping build
* Fix NovaObject versioning attribute usage
* xenapi: removes sleep after final upload retry
* xenapi: stop using get\_all\_vdis\_in\_sr in spawn
* populate local-ipv4 address in config drive
* Harden version checking for boto
* Handle MarkerNotFound better in Flavor API
* Sanitize passwords when logging payload in wsgi
* Remove unnecessary "LOG.error()" statement
* xenapi: simplify \_migrate\_disk\_resizing\_up
* xenapi: revert on \_migrate\_disk\_resizing\_up error
* xenapi: make \_migrate\_disk\_resizing\_up use @step
* libvirt tests: replace assertEquals with assertEqual
* Use the oslo fixture module
* Port server actions unittests to V3 API Part 2
* Remove unused method \_get\_res\_pool\_ref from VMware
* Imported Translations from Transifex
* Check for None when cleaning PCI dev usage
* Fix vmwareapi driver get\_diagnostics calls
* Remove instance\_info\_cache\_update() from conductor
* compute api should throw exception if soft reboot invalid state VM
* Make a note about Object deepcopy helper
* Avoid caching quota.QUOTAS in Quotas object
* Remove transitional callable field interface
* Make the base object infrastructure use Fields
* Migrate some tests that were using callable fields
* Migrate NovaPersistentObject and ObjectListBase to Fields
* Migrate Instance object to Fields
* Utilizes assertIn - tests/api/etc
* Utilizes assertIn - tests/virt
* Utilizes assertIn - tests/api/contrib
* Utilizes assertIn - tests/api/v3
* Make scheduler disk\_filter take swap into account
* Add variable to expand for format string
* Make quota sets update type handling a bit safer
* Add test\_instance\_get\_active\_by\_window\_joined
* Fixes error on live-migration of volume-backed vm
* Migrate PciDevice object to Fields
* Migrate InstanceInfoCache object to Fields
* Migrate InstanceFault object to Fields
* Migrate Service object to Fields
* Migrate ComputeNode object to Fields
* Migrate Quotas object to Fields
* Migrate InstanceGroup object to Fields
* Migrate InstanceAction and InstanceActionEvent objects to Fields
* Move exception definitions out of db api
* Remove unused scheduler rpcapi from compute api
* Libvirt: disallow live-mig for volume-backed with local disk
* xeanpi: pass network\_info to generate\_configdrive
* Replace incorrect Null checking to return correctly
* Fix nova DB 215 migration script logic error
* Xenapi: set hostname when performing a network reset
* Fix "resource" length in project\_user\_quotas table
* Migrate SecurityGroup object to Fields
* Migrate Migration object to Fields
* VMware: fix regression attaching iscsi cinder volumes
* Remove whitespace from cfg options
* cleanup after boto 2.14 fix
* Add boto special casing for param changes in 2.14
* xenapi: simplify PV vs HVM selection logic
* fix missing host when unshelving
* Fix a typo of tabstop
* Fix error message of os-cells sync\_instances api
* Log which filter failed when on log level INFO
* Migrate KeyPair object to Fields
* Migrate Aggregate object to Fields
* Make field object support transitional call-based interface
* Add Field model and tests
* Fix conductor's object change detection
* Remove obsolete redhat-eventlet.patch
* Move is\_volume\_backed\_instance to new style BDM
* Add a get\_root\_bdm utility function
* Libvirt: allow more than one boot device
* Libvirt: make boot dev a list in GuestConfig
* Remove compute\_api\_class config option
* Libvirt: add boot\_index to block device info dicts
* Fixes Hyper-V issue with VHD file format
* Update log message for add\_host\_to\_aggregate
* Correct use of ConfigFilesNotFoundError
* hyperv tests: replace assertEquals with assertEqual
* Utilizes assertNotIn
* VMware tests: replace assertEquals with assertEqual
* Fix incorrect root partition size and compatible volume name
* Imported Translations from Transifex
* Utilize assertIsInstance
* Fix typos in nova/api code
* Make \`update\_test\` compatible with nose
* Add a custom iboot power driver for nova bm
* Fix FK violation errors in InstanceActionTestCase
* Fix test\_shadow\_tables() on PostgreSQL/MySQL
* Fix PCI devices DB API tests
* Fix DB API tests depending on the order of rows
* Use print function rather than print statement
* Update default for running\_deleted\_instance\_action
* Drop unused BM start\_console/stop\_console methods
* VMware: Network fallback in case specified one not found
* baremetal: Add missing method to volume driver
* baremetal: Use network API to get fixed IPs
* Replace decprecated method aliases in tests
* catch exception in start and stop server api
* Ensure that the netaddr import is in the 3rd party section
* Fix status code of server's action confirm\_resize for v3
* Remove duplicated method in test\_compute\_api.py
* Create flavor-access for the tenant when creating a private flavor
* Fix root disk not be detached after deleting lxc container
* fallocate image only when user has write access
* Fixes typo in ListTargets CLI in hyperv driver
* Fixes typos in nova/db code
* Fixes typos in the files in the nova folder
* Avoid clobbering {system\_,}metadata dicts passed to instance update
* Baremetal: Be more patient with IPMI and BMC
* VMware: fix bug with booting from volumes
* Fixes typos in nova/compute files
* Fixes typos in virt files
* Fix docstring for disk\_cachemodes
* Plug Vif into Midonet using Neutron port binding
* VMware: remove deprecated configuration variable
* Fix races in v3 cells extension tests
* Add V3 API samples for consoles
* Update allowvssprovider in xenstore\_data
* Fix races in cells extension tests
* Move \`utils.hash\_file\` -> \`imagecache.\_hash\_file\`
* Remove \`utils.timefunc\` function
* Remove \`utils.total\_seconds\`
* Remove \`utils.get\_from\_path\`
* Fix divergence in attach\_interfaces extensions
* Replace assert\_ with assertTrue
* Fixes several misc typos in scheduler code
* Fix libvirt test on systems with real iSCSI devices
* Reserve 10 migrations for backports
* Sync three-part RPC versions support from Oslo
* Remove unused dict functions from utils
* Avoid mutable default args in \_test\_populate\_filter\_props
* XenAPI: Add versioning for plugins
* Add Docstring to some scheduler/driver.py methods
* Libvirt: default device bus for floppy block devs
* Fix filter\_properties of unshelve API
* hyperv: Initialize target\_iqn in attach\_volume
* Log if a quota\_usages sync updates usage information

2013.2.rc1
----------

* Open Icehouse development
* baremetal: Fix misuse of "instance" parameter of attach/detach\_volume
* Fix the wrong params of attach/detach interface for compute driver
* Imported Translations from Transifex
* Adds missing entry in setup.cfg for V3 API shelve plugin
* Avoid spamming conductor logs with object exceptions
* Prefix \`utils.get\_root\_helper\` with underscore
* Remove \`utils.debug\`
* Remove \`utils.last\_octet\`
* Remove \`utils.parse\_mailmap\`
* Updated from global requirements
* Remove unecessary \`get\_boolean\` function
* Make Exception.format\_message aware of Messages
* Disable lazy gettext
* VMware: Check for the propSet attribute's existence before using
* VMware: fix bug for invalid data access
* Make rbd.libvirt\_info parent class compatible
* Host aggregate configuration throws exception
* VMware: Handle cases when there are no hosts in cluster
* VMWare: Disabling linked clone doesn't cache images
* Fixes inconsistency in flavors list with marker
* Fix indentation in virt.libvirt.blockinfo module
* Update jsonutils.py from oslo
* Fix loading instance fault in servers view
* Refactor test cases related to instance object
* Use system locale for default request language
* Update attach interface api to use new network model
* Adds V3 API specific urlmap tests
* Catch volume errors during local delete
* Fix processutils.execute errors on windows
* Fixes rescue doesn't honor enable password conf for v3
* VMware: Fix bug for root disk size
* Fix incorrect exception raised during evacuate
* Full sync of quota\_usages
* Fix log format error in lazy-load message
* xenapi: reduce impact of errors during SR.scan
* Forced scheduling should be logged as Audit not Debug
* xenapi: Resize operations could be faster
* Resource limits check sometimes enforced for forced scheduling
* Skip test if sqlite3 not installed
* Add notification for pause/unpause instance
* Make LiveMigrateTask use build\_request\_spec()
* Ensure image property not set to None in build\_request\_spec()
* Make sure periodic task sync\_power\_states continues on error
* get\_all\_flavors uses id as key to be unique
* fix the an Unexpected API Error issue in flavor API
* Adds V3 API samples for srvcs, tenant usage, server\_diagnostics
* VMware: Fix SwitchNotFound error when network exists
* Fix unicode string values missing in previous patch
* Fix stopping instance in sync\_power\_states
* Remove deprecated task states
* plug\_vif raise NotImplementedError instead of pass
* Check instance exists or not when evacuate
* xenapi: ignore 500 errors from agent resetnetwork
* Add flavor name validation when create flavor
* xenapi: enforce filters after live-migration
* xenapi: set vcpu cap to ensure weight is applied
* Get image metadata in to\_xml for generating xml
* Add notification on deleting instance without host
* Fix V3 API flavor returning empty string for attributes
* Fix v3 server rebuild deserializer checking with wrong access\_ip key
* Windows instances require the timezone to be "localtime"
* Don't wrap Glance exceptions in NovaExceptions
* Update rootwrap with code from oslo
* fix typo & grammer in comment 363-364
* Make Instance.refresh() extra careful about recursive loads
* Log object lazy-loads
* Ensure we don't end up with invalid exceptions again
* Fix console db can't load attribute pool
* Fix HTTP response for PortNotFound during boot (v3 API)
* Fixes assertion bug in test\_cells\_weights.py
* Remove \_get\_compute\_info from filter\_scheduler.py
* VMware: fix bug for incorrect cluster access
* Add V3 API samples for security-groups
* Correct lock path for storage-registry-lock
* Moved registration of lifcycle events handler in init\_host()
* Rebuilding stopped instance should not set terminated\_at
* Require oslo.config 1.2.0 final
* Removes pre\_live\_migration need for Fixed IPs
* Move call to \_default\_block\_device\_names() inside try block
* Fix several flake8 issues in the plugins/xenserver code
* Fix type is overwritten when UPDATE cell without type specified
* Adds v3 API samples for hide server addresses and keypairs
* Always filter out multicast from reflection
* VMware: fix bug with booting from volume
* VMware: enable VNC access without user having to enter password
* Remove exceptions.Duplicate
* Add v3 API samples for rescue
* Added 'page\_size' param to image list
* Fix SecurityGroupsOutputTest v3 security group tests
* Fixes file mode bits of compute/manager.py
* Adds v3 API samples for hosts extension
* Only update PCI stats if they are reported from the host
* xenapi: Cleanup pluginlib\_nova
* Fix Instance object assumptions about joins
* Bring up interface when enslaving to a bridge
* v3 API samples for servers
* xenapi: refactor: move UpdateGlanceImage to common
* Imported Translations from Transifex
* Fixes modules with wrong file mode bits in virt package
* Adds v3 API samples for ips and server\_metadata extensions
* Fix V3 API server metadata XML serialization
* libvirt: add test case for \_hard\_reboot
* Add tests for pre\_live\_migration
* Adds V3 API samples for evacuate,ext-az,ext-serv-attrs
* Add V3 API samples for ext-status,hypervisor,admin-actions
* Code change for regex filter matching
* Convert TestCases to NoDBTestCase
* VMware: ensure that resource exists prior to accessing
* Fixes modules with wrong file mode bits
* Fixes test scripts with wrong bitmode
* Update sample config generator script
* Instance object incorrectly handles None info\_cache
* Don't allow pci\_devices/security\_groups to be None
* Allow for nested object fields that cannot be None
* Object cleanups
* Convert TestCases to NoDBTestCase
* Convert TestCases to NoDBTestCase
* Actually fix info\_cache healing lazy load
* Fixes host stats for VMWareVCDriver
* libvirt: ignore false exception due to slow NFS on resize-revert
* Syncs install\_venv\_common.py from oslo-incubator
* Correct deleted\_at value in notification messages
* VMwareVCDriver Fix sparse disk copy error on spawn
* Remove unused \_instance\_update() method in compute api
* Change service id to compute for compute/api.py
* XenAPI raise InstanceNotFound in \_get\_vm\_opaque\_ref
* Replace OpenStack LLC with OpenStack Foundation
* Send notification for any updates to instance objects
* Add flag to make baremetal.pxe file injection optional
* Force textmode consoles on baremetal
* Typo: certicates=>certificates in nova.conf
* Remove print statement from test\_quotas that fails H233 check
* Fix for os-availability-zone/detail returning 500
* Convert TestCases to NoDBTestCase
* Fixes the usage of PowerVMFileTransferFailed class
* MultiprocessWSGITest wait for workers to die bug
* Prune node stats at compute node delete time
* VMware: datastore regex not honoured
* VMware: handle exceptions from RetrievePropertiesEx correctly
* VMware: Fix volume detach failure
* Remove two unused config options in baremetal
* Adds API samples and unitests for os-server-usage V3 extension
* xenapi: Make rescue safer
* Add V3 API samples for quota-sets/class-sets,inst-usage-audit-log
* Fix problem with starting Windows 7 instances using VMware Driver
* VMware: bug fix for instance deletion with attached volume
* Fix migration 201 tests to actually test changes
* Don't change the default attach-method
* Fix snapshot failure with VMwareVCDriver
* Fix quota direct DB access in compute
* Add new-world Quota object
* Fix use of bare list/dict types in instance\_group object
* Fix non-unicode string values on objects
* Add missing get\_available\_nodes() refresh arg
* Make Instance.Name() not lazy-load things
* Add debugging to ComputeCapabilitiesFilter
* xenapi: fix pep8 violations in nova plugins
* Retry on deadlock in instance\_metadata\_delete
* Make virt drivers use a consistent hostname
* [VMware] Fix problem transferring files with ipv6 host
* VMware: Fix ensure\_vlan\_bridge to work properly with existing DVS
* Fix network info injection in pure IPv6 environment
* delete a non existent flavor extra spec returns 204
* Don't use ModelBase.save() inside of transaction
* send the good binding to neutron after live-migration
* Add linked clone related unit tests for VMware Hyper
* Ensure anti affinity scheduling works
* pci passthrough bug fix:hasattr dones not work for dict
* Fix rename q\_exc to n\_exc (from quantum to neutron)
* Improve "keypair data is invalid" error message
* Enable fake driver can live migration
* Don't use sudo to discover ipv4 address
* xenapi: Fix rescue
* Fix create's response is different with requested for sec-grps V3
* Fix logging of failed baremetal commands
* Add v3 API samples for os-extended-volumes
* Better help for generate config
* Fix hyper-v vhd real size bigger than flavor issue
* Remove unused and duplicate code
* Policy check for forced\_host should be before the instance is created
* Remove cached console auth token after migration
* Don't generate notifications when reaping running\_deleted instances
* Add instance\_flavor\_id to the notification message
* Edits for nova.conf.sample
* xenapi: fix where root\_gb=0 causes problems
* Wire in ConfKeyManager.\_generate\_hex\_key!
* Drop unused logger from keymgr/\_\_init\_\_.py
* Move required keymgr classes out of nova/tests
* Translate more REST API error messages
* pci passthrough fails while trying to decode extra\_info
* Update requirements not to boto 2.13.0
* Port server actions unittests to V3 API Part 1
* Remove unused method in scheduler driver
* Ignore H803 from Hacking
* Fixes misuse of assertTrue in virt test scripts
* Add missing notifications for rescue/unrescue
* Libvirt: volume driver set correct device type
* Make v3 API  versions extensions core
* Make Instance.save() log missing save handlers
* Don't fail if volume has no image metadata
* Get image properties instead of the whole image
* Remove extra 'console' key for index in extensions consoles v3
* Fix V3 API server extension point exception propagation
* VMware: nova-compute crashes if VC not available
* Update mailmap for jhesketh
* Code change for nova support glance ipv6 address
* disassociate\_address response should match ec2
* Adds V3 API samples for remote consoles, deferred delete
* Fix asymmetric view of object fields
* Use test.TestingException where possible
* Add encryption support for volumes to libvirt
* VMware: fix driver support for hypervisor uptime
* Wrong arguments when calling safe\_utils.getcallargs()
* Add key manager implementation with static key
* Remove duplication in disk checks
* Change the duplicate class name TestDictMatches in test\_matches.py
* Add alias as prefix to request params for config\_drive v3
* xenapi: Add per-instance memory overhead values
* Fixes misuse of assertTrue in test scripts
* Remove unused and wrong code in test\_compute.py
* Remove cases of 'except Exception' in tests.image
* Remove \_assert\_compute\_node\_has\_enough\_memory from filter\_scheduler.py
* Fix regression issues with cells target filter
* Remove out of date list of jenkins jobs
* Don't lose exception info
* Add filter for soft-deleted instances to periodic cleanup task
* Don't return query from db API
* Update fedora dev env instructions
* Only return requested network ID's
* Ensure get\_all\_flavors returns deleted items
* Fix the order of query output for postgres
* Fix migration 211 to downgrade with MySQL
* Removed duplicated class in exception.py
* Fix console api pass tuple as topic to console rpc api
* Enable test\_create\_multiple\_servers test for V3 API
* VMware image clone strategy settings and overrides
* Reduce DB load caused by heal instance info cache
* Clean up object comparison routines in tests
* Clean up duplicated change-building code in objects
* disable direct mounting of qcow2 images by default
* xenapi: ensure finish\_migration cleans on errors
* xenapi: regroup spawn steps for better progress
* xenapi: stop injecting the hostname during resize
* xenapi: add tests for finish\_migration and spawn
* xenapi: tidy ups to some spawn related methods
* xenapi: move kernel/ramdisk methods to vm\_utils
* xenapi: ensure pool based migrate is live
* Fix live-migrate when source image deleted
* Adds v3 API samples for limits and simple tenant usage
* Return a NetworkInfo object instead of a list
* Fix compute\_node\_get\_all() for Nova Baremetal
* Add Neutron port check for the creation of multiple instances
* Remove unused exceptions
* Add V3 API samples for flavor-manage,flavor-extra-specs
* Add V3 API samples for flavors,flavor-rxtx,flavor-access
* Catch more accuracy exception for \_lookup\_by\_name
* Fixes race cond between delete and confirm resize
* Fixes unexpected exception message in ProjectUserQuotaNotFound
* Fixes unexpected exception message in PciConfigInvalidWhitelist
* Add missing indexes back in from 152
* Fix the bootfile\_name method call in baremetal
* update .mailmap
* Don't stacktrace on ImageNotFound in image\_snapshot
* Fix PCIDevice ignoring missing DB attributes
* Revert "Call safe\_encode() instead of str()"
* Avoid errors on some actions when image not usable
* Add methods to get image metadata from instance
* Fix inconsistent usages for network resources
* Revert baremetal v3 API extension
* Fixes misuse of assertTrue in compute test scripts
* add conf for number of conductor workers
* xenapi: Add efficient impl of instance\_exists()

2013.2.b3
---------

* Updated from global requirements
* Fix failure to emit notification on Instance.save()
* MultiprocessWSGITest wait for workers to die bug
* Synchronize the key manager interface with Cinder
* Remove indirect dependency from requirements.txt
* Clean up check for migration 213
* Add V3 API samples for instance-actions,extenions
* fix conversion type missing
* Enable libvirt driver to use the new BDM format
* Allow block devices without device\_name
* Port to oslo.messaging.Notifier API
* Add expected\_errors for extension aggregates v3
* Refresh network info cache for secgroups
* Port "Make flavors is\_public option .." to v3 tree
* Add missing Aggregate object tests
* Generalize the \_make\_list() function for objects
* PCI passthrough Libvirt vm config
* Add columns\_to\_join to instance\_update\_and\_get\_original
* XenAPI: Allow 10GB overhead on VHD file check size
* Adds ephemeral storage support for Hyper-V
* Adds Hyper-V VHDX support
* Create mixin class for common DB fields
* Deprecate conductor migration\_get()
* Change finish\_revert\_resize paths to use objects
* Change finish\_resize paths to use objects
* Change resize\_instance paths to use objects
* VMware: Nova boot from cinder volume
* VMware: Multiple cluster support using single compute service
* Nova support for vmware cinder driver
* Adds Hyper-V dynamic memory support
* xenapi: Fix download\_handler fallback
* Ensure old style images can be resized
* Add nova.utils.get\_root\_helper()
* Inherit base image properties on instance creation
* Use utils.execute instead of subprocess
* Fixes misuse of assertTrue in Cells test scripts
* Remove versioning from IOVisor APIs PATH
* Revert "Importing correlation\_id middleware from oslo-incubator"
* update neutronclient to 2.3.0 minimum
* Adds metrics collection support in Hyper-V
* Port all rpcapi modules to oslo.messaging interface
* Fix a gross duplication of context code in objects tests
* Make compute\_api use Aggregate objects
* Add Aggregate object model
* Add dict and list utility functions for object typing
* VMware: remove conditional suds validation
* Limit instance fault messages to 255 characters
* Add os-assisted-volume-snapshots extension
* Scheduler rpcapi 2.9 is not backwards compatible
* Adds support for Hyper-V WMI V2 namespace
* Port flavormanage extension to v3 API Part 2
* Add os-block-device-mapping to v3 API
* Improves Hyper-V vmutils module for subclassing
* xenapi: add support for auto\_disk\_config=disabled
* Check ephemeral and swap size in the API
* Adds V3 API samples for cells and multinic
* Increase volume created checking retries to 60
* Fix changes\_since for V3 API
* Make v3 API console-output extension core
* Makes v3 API keypairs extension core
* Add support for API message localization
* Fix typo and indent error in isolated\_hosts\_filter.py
* Adds 'instance\_type' param to build\_request\_spec
* Guest-assisted-snaps libvirt implementation
* Improve EC2 API error responses
* Remove EC2 postfix from InvalidInstanceIDMalformedEC2
* Introduce InternalError EC2 error code
* Introduce UnsupportedOperation EC2 error code
* Introduce SecurityGroupLimitExceeded EC2 error code
* Introduce IncorrectState EC2 error code
* Introduce AuthFailure EC2 error code
* Fix ArchiveTestCase on PostgreSQL
* Fix AggregateDBApiTestCase on PostreSQL and MySQL
* Port Cheetah templates to Jinja2
* Libvirt: call capabilites before getVersion()
* Remove \_report\_driver\_status from compute/manager.py
* Interpret BDM None size field as 0 on compute side
* Add test cases for resume\_state\_on\_host\_boot
* Add scheduler support for PCI passthrough
* Fix v3 swap volume with wrong signature
* vm\_state and task\_state not updated during instance delete
* VMware: use VM uuid for volume attach and detach
* xenapi: support raw tgz image download
* xenapi: refactor - extract image\_utils
* Add block\_device\_mapping\_get\_all\_by\_instance to virtapi
* Sync rpc from oslo-incubator
* Fix the multi-instance quota message
* Fix virtual power driver fails silently
* VMware: Config Drive Support
* xenapi: skip metadata updates when VM not found
* Make resource\_tracker record host\_ip
* Disable compute fanout to scheduler
* Make image\_props\_filter use information from DB not RPC
* Make compute\_capabilities\_filter use information from DB not RPC
* XenAPI: More operations with LVM-based SRs
* XenAPI: make\_partition fixes for Dom0
* Fix wrong method call in baremetal
* powervm: make start\_lpar timeout
* Disable retry filter with force\_hosts or force\_nodes
* Call safe\_encode() instead of str()
* Fix usage of classmethod in various places
* Fix V3 API quota\_set tests using V3 url and request
* Handle port over-quota when allocating network for instance
* Fix warning log message typo in resource\_tracker.instance\_claim
* Sync filetuils from oslo-incubator
* Fix VMware fakes
* DRY up use of @wrap\_exception() decorator
* Remove unused fake run\_instance() method
* Use ExceptionHelper to bypass @client\_exceptions
* Added new hypervisor to support Docker containers
* Introduce InvalidPermission.Duplicate EC2 error code
* Fix and gate on H302 (import only modules)
* On snapshot errors delete the image
* Remove dis/associate actions from security\_groups v3
* Add volume snapshot delete API test case
* Assisted snapshots compute API plumbing
* Adds V3 API samples for agents, aggregates and certificates
* Adds support for security\_groups for V3 API server create
* powervm: Use FixedIntervalLoopingCall for polling LPAR status
* xenapi: agent not inject ssh-key if cloud-init
* Tenant id filter test is not correct
* Add PCI device tracker to compute resource tracker
* PCI devices resource tracker
* PCI device auto discover
* Add PCI device filters support
* Avoid swallowing exceptions in network manager
* Make compute\_api use Service and ComputeNode objects
* Adding VIF Driver to support Mellanox Plugin
* Change prep\_resize paths to use objects
* Make backup and snapshot use objects
* Deprecate conductor migration\_create()
* Make inject\_network\_info use objects
* Convert reset\_network to use instance object
* Make compute\_api use objects for lock/unlock
* Add REUSE\_EXT in \_swap\_volume call to blockRebase
* Remove unused \_decompress\_image\_file from powervm operator class
* powervm: actually remove files after migration
* Fix to disallow server name with all blank spaces (v3 API)
* Add mock to test-requirements
* xenapi: Improve test\_xenapi unit testing performance
* Sets policy settings so V3 API extensions are discoverable
* Pass objects for revert and confirm resizes
* Convert \_poll\_unconfirmed\_resizes to use Migration object
* Make compute\_api confirm/revert resize use objects
* Make compute\_api migrate/resize paths use instance objects
* Fix race when running initialize\_gateway\_device()
* fix bad usage of exc\_info=True
* Use implicit nullable=True in sqlalchemy model
* Introduce Invalid\* EC2 error codes
* Improve parameter related EC2 error codes
* Disconnect from iSCSI volume sessions after live migration
* Correct default ratelimits for v3
* Improve db\_sqlalchemy\_api test coverage
* Safe db.api.compute\_node\_get\_all() performance improvement
* Remove a couple of unused stubs
* Fix Instance object issues
* Adds API version discovery support for V3
* Port multiple\_create extension to V3 API
* Add context information to download plugins
* Adds V3 API samples for migrations
* Filter network by project id
* Added qemu guest agent support for qemu/kvm
* PCI alias support
* Add PCI stats
* Raise timeout in fake RPC if no consumers found
* Stub out instance\_update() in build instance tests
* Mock out action event calls in build instance test
* powervm: revert driver to pass for plug\_vifs
* Remove capabilities.enabled from test\_host\_filters
* xenapi: through-dev raw-tgz image upload to glance
* Add PCI device object support
* Store CONF.baremetal.instance\_type\_extra\_specs in DB
* Pci Device DB support
* VMware: remove redundant default=None for config options
* Move live-migration control flow from scheduler to conductor
* Fix v3 extensions inherit from wrong controller
* Fix network creation in Vlan mode
* compute rpcapi 2.29 is not backwards compatible
* Fix the message of coverage directory error
* Fix error messages in v3 aggregate API
* compute rpcapi 2.37 is not backwards compatible
* use 'exc\_info=True' instead of import traceback
* Add env to make\_subprocess
* Remove unused nova.common module
* Adds Flavor ID validations
* Imported Translations from Transifex
* Add DocStrings for function allocate\_for\_instance
* Removes V3 API images and image\_metadata extensions
* Powervm driver now logs ssh stderr to warning
* Update availability\_zone on time if it was changed
* Add db.block\_device\_mapping\_get\_by\_id
* Add volume snapshot APIs to driver interface
* Pass the destination file name to download modules
* Fix typo in baremetal docs
* VMware: clean up get\_network\_with\_the\_name
* Stylistic improvement of compute.api.API.update()
* Removes fixed ips extension from V3 API
* Libvirt: fix KeyError in set\_vif\_bandwidth\_config
* Add expected\_errors for migrations v3
* Add alias as prefix to request params for user\_data v3
* Fix migrations index
* Should finish allocating network before VM reaches ACTIVE
* Fixes missing host in Hyper-V get\_volume\_connector
* Fix various cells issues due to object changes
* Document CONF.default\_flavor is for EC2 only
* Revert task state when terminate\_instance fails
* Revert "Make compute\_capabilities\_filter use ..."
* Add resource tracking to build\_and\_run\_instance
* Link Service.compute\_node with ComputeNode object
* Add ComputeNode object implementation
* Add Service object implementation
* Make compute\_api use KeyPair objects
* Add KeyPair object
* Fix spice/vnc console api samples tests
* Fix network manager tests to use correct network host
* Stub out get\_console\_topic() in test\_create\_console
* Stub out instance\_fault\_create() in compute tests
* Fix confirm\_resize() mock in compute tests
* Fix rpc calls on pre/post live migration tests
* Stub out setup\_networks\_on\_host() in compute tests
* maint: remove redundant disk\_cachemode validation entry
* Fix unicode key of azcache can't be stored to memcache
* XenAPI: SR location should default to location stored in PBD
* XenAPI: Generic Fake.get\_all\_records\_where implementation
* XenAPI: Return platform\_version if no product\_version
* XenAPI: Support local connections
* Delete expired instance console auth tokens
* Fix aggregate creation/update with null or too long name
* Fix live migration test for no scheduler running
* Fix get\_diagnostics() test for no compute consumer
* Stubout reserve\_block\_device\_name() in test
* Stubout deallocate\_for\_instance() in compute tests
* Stub out net API sooner in servers API test
* PCI utils
* Object support for instance groups
* Add RBD supporting to libvirt for creating local volume
* Add alias as prefix to request params for availability\_zone v3
* Remove deprecated legacy network info model in Hypervisor drivers
* Correct the authorizer for extended-volumes v3
* emit warning while running flake8 without virtual env
* Adds Instance UUID to rsync debug logging
* Fixes sync issue for user level resources
* Fix Fibre Channel attach for single WWN
* nova.conf configurable gzip compression level
* Stub out more net API methods floating IP DNS test
* Enable CastAsCall for test\_api\_samples
* Stub out attach\_volume() in test\_api\_samples
* Fix remove\_fixed\_ip test with CastAsCall
* Add add\_aggregate\_to\_host() to FakeDriver
* Fix api samples image service stub
* Add CastAsCall fixture
* Enable consoleauth service during ec2 tests
* Disable periodic tasks during integration tests
* Use ExceptionHelper to bypass @client\_exceptions
* Clean up some unused wrap\_exception() stuff
* Add new compute method for building an instance
* VMware: provide a coherent message to user when viewing console log
* Use new BDM syntax when determining boot metadata
* Allow more than one ephemeral device in the DB
* Port flavormanage extension to v3 API part 1
* Correct the status code to 201 for create v3
* Pop extra keys from context in from\_dict()
* Don't initialize neutronv2 state at module import
* Remove instance exists check from rebuild\_instance
* Remove unused variables in test\_compute\_cells
* Fix fake image\_service import in v3 test\_disk\_config
* Updates tools/config/README
* xenapi: Added iPXE ISO boot support
* Log exception details setting vm\_state to error
* Fix instance metadata access in xenapi
* Fix prep\_resize() stale system\_metadata issue
* Implement hard reboot for powervm driver
* Use the common function is\_neutron in servers.py
* Make xenapi capabilities['enabled'] use service enabled
* Remove duplicate test from V3 version of test\_hosts
* Remove unused nova.tests.image.fake code
* Remove unused fake run\_instance() method
* Remove use of fake\_rabbit in Nova
* libvirt: fix {attach,detach}\_interface()
* Added test case in test\_migrations for migration 208
* Add flag to make IsolatedHostsFilter less restrictive
* Add unique constraint to AggregateMetadata
* Fix a typo in test\_migrations for migration 209
* Remove duplicate variable \_host\_state
* enhance description of share\_dhcp\_address option
* Adds missing V3 API scheduler hints testcase
* [v3] Show detail of an quota in API os-quota-sets
* Remove legacy network model in tests and compute manager
* Remove redundant \_create\_instance method from test\_compute
* Add jsonschema to Nova requirements.txt
* Remove docstrings in tests
* Fix scheduler prep\_resize deprecated comments
* Search filters for get\_all\_system\_metadata should use lists
* fix volume swap exception cases
* Set VM back to its original state if cold migration failed
* Enforce flavor access during instance boot
* Stub out entry points in LookupTorrentURLTestCase
* Port volumes swap to the new API-v3
* correct the name style issue of ExtendedServerAttributes in v3 api
* Fix IVS vif to correctly delete interfaces on unplug
* Adding support for iSER transport protocol
* libvirt: allow passing 'os\_type' property to glance
* Fixes auto confirm invalid error
* Fix ratelimiting
* quantum pxeboot-port support for baremetal
* baremetal: Log IPMI power on/off timeouts
* VMware: Added check for datastore state before selection
* Boot from image destination - volume
* Virt driver flag for different BDM formats
* Refactor how BDMs are handled when booting
* Change RPC to use new BDM format for instance boot
* Make API part of instance boot use new BDM format
* Add Migration object
* Fix untranslated log messages in libvirt driver
* Fix migration 210 tests for PostgreSQL
* Handle InstanceInvalidState of soft\_delete
* Don't pass RPC connection to pre\_start\_hook
* VMware: Ensure Neutron networking works with VMware drivers
* Unimplemented suspend/resume should not change vm state
* Fix project\_user\_quotas\_user\_id\_deleted\_idx index
* Allow Cinder to specify file format for NFS/GlusterFS
* Add migration with missing fkeys
* Implement front end rate-limiting for Cinder volume
* Update mailmap
* Fixup some non-unity-ness to conductor tests
* Add scheduler utils unit tests
* Convert admin\_actions ext tests to unit tests
* Unit-ify the compute API resize tests
* Raises masked AssertionError in \_test\_network\_api
* Have tox install via setup.py develop
* Set launch\_index to right value
* Add passing a logging level to processutils.execute
* Clear out service disabled reason on enable for V3 API
* Fix HTTP response for PortInUse during boot (v3 API)
* Adds infra for v3 API sample creation
* Remove deprecated CONF.fixed\_range
* Offer a paginated version of flavor\_get\_all
* Port integrated tests for V3 API
* Refactor integrated tests to support V2 and V3 API testing Part 2
* Refactor integrated tests to support V2 and V3 API testing
* Fix cells manager RPC version
* Upgrade to Hacking 0.7
* Fix logic in add\_host\_to\_aggregate()
* Enforce compute:update policy in API
* Removed the duplicated \_host\_state = None in libvirt driver
* Sync gettextutils from oslo-incubator
* Fix typo in exception message
* Fix message for server name with whitespace
* Demote personalities from core of API v3 as extensions os-personality
* Port disk\_config API to v3 Part 2
* remove \_action\_change\_password the attribute in V3 server API
* Fix exception handling in V3 API coverage extension
* Remove "N309 Python 3.x incompatible construct"
* Allow swap\_volume to be called by Cinder
* Remove trivial cases of unused variables
* Handle NeutronClientException in secgroup create
* Fix bad check for openstack versions (vendor\_data/config drive)
* Make compute\_capabilities\_filter use information from DB not RPC
* Make affinity\_filters use host\_ip from DB not RPC
* db: Add host\_ip and supported\_instances to compute\_nodes
* Add supported\_instances to get\_available\_resource to all virt drivers
* libvirt: sync get\_available\_resources and get\_host\_stats
* Clean up unimplemented methods in the powervm driver
* Make InvalidInstanceIDMalformed an EC2 exception
* Fix one port can be attached to more devices
* Removed code duplication in test\_get\_server\_\*\_by\_id
* Add option for QEMU Gluster libgfapi support
* Moves compute.rpcapi.prep\_resize call to conductor
* Fix get\_available\_resource docstrings
* Fix spelling in image\_props\_filter
* Fix FK violation in ConsoleTestCase
* Fix ReservationTestCase on PostgreSQL
* Fix instance\_group\_delete() DB API method
* Fix capitalization, it's OpenStack
* Add test cases to validate neutron ports
* Add expected\_errors for extension quota\_classes v3
* Fix leaking of image BDMs
* Moved tests for server.delete
* Fix VMwareVCDriver to support multi-datastore
* Fixes typo in \_\_doc\_\_ of /libvirt/blockinfo.py
* User quota update should not exceed project quota
* Port "Accept is\_public=None .." to v3 tree
* Remove clear\_rabbit\_queues script
* Don't need to init testr in run\_tests.sh
* Imported Translations from Transifex
* Deprecate conductor's compute\_reboot() interface
* Deprecate conductor's compute\_stop() interface
* Make compute\_api use InstanceAction object
* Add basic InstanceAction object
* Add delete() operation to InstanceInfoCache
* Make compute\_api use Instance.destroy()
* Add Instance.destroy()
* Make compute\_api use Instance.create()
* Change swap\_volume volume\_api calls to use ID
* Fix H501: Do not use locals() for string formatting
* fix libguestfs mount order when inspecting
* Imported Translations from Transifex
* powervm: add test case for get\_available\_resource
* Fix to allow ipv6 in host\_ip for ESX/vSphere driver
* Improve performance of driver's get\_available\_nodes
* Cleanup exception handling on evacuate
* Removed code for modular exponentiation, pow() already does this
* Remove unsafe XML parsing
* Fix typo with network manager service\_name
* Remove old legacy network info model in libvirt driver
* maint: remove redundant default=None for config options
* Fix simultaneous timeout with smart iptables usage
* xenapi: send identity headers from glance plugin
* Catch ldap ImportError
* xenapi: refactor - extract get\_virtual\_size
* xenapi: refactor - extract get\_stream\_funct\_for
* xenapi: test functions for \_stream\_disk
* Check host exists before evacuate
* Fix EC2 API Fault wrapper
* Fix deferred delete use of objects
* Remove unsafe XML parsing
* Update BareMetal driver to current nova.network.model
* Personality files can be injected during server rebuild
* Need to allow quota values to be set to zero
* Merged flavor\_disabled extension into V3 core api
* Merged flavorsextraspecs extension into core API
* Code dedup in test\_update\_\*
* Move tests test\_update\_\* to separate class
* VMware: fix rescue/unrescue instance
* Add an exception when doesn't have permissions to operate vm on hyper-v
* Remove dead capabilities code
* Spelling correction in test\_glance.py
* Enhance object inheritance
* Enable no\_parent and file\_only security
* Add Instance.create()
* Pull out instance object handling for use by create also
* Make fake\_instance handle security groups
* Fix instance actions testing
* Sync models with migrations
* Wrong unique key name in 200 migration
* Remove unused variable
* Make NovaObject.get() avoid lazy-load when defaulting
* Fix migration downgrade 146 with mysql
* Remove the indexes on downgrade to work with MySQL
* Downgrade MySQL to the same state it used to be
* Format CIDR strings as per storage
* Fix migration downgrade 147 with mysql
* Fix typo in compute.rpcapi comments
* Imported Translations from Transifex
* Avoid extra glance v2 locations call!
* xenapi: Adding BitTorrent download handler
* xenapi: remove dup code in make\_step\_decorator
* Retry failed instance file deletes
* xenapi: retry when plugin killed by signal
* Do not use context in db.sqla.api private methods
* Finish DB session cleanup
* Clean up session in db.sqla.api.migration\_\* methods
* Clean up session in db.sqla.api.network\_\* and sec\_groups\_\* methods
* Don't inject files while resizing instance
* Convert CamelCase attribute naming to camel\_case for servers V3 API
* Convert camelCase attribute naming to camel\_case
* Add plug-in modules for direct downloads of glance locations
* Allow user and admin lock of an instance
* Put fault message in the correct field
* Fix Instance objects with empty security groups
* db: Remove deprecated assert\_unicode attribute
* VlanManager creates superfluous quota reservations
* xenapi: allow non rsa key injection
* Add expected\_errors for extensions simple\_tenant\_usage v3
* Clean destroy for project quota
* Add expected\_errors for extension Console v3
* Add expected\_errors for extension baremetal v3
* Clean up session in db.sqla.api.get\_ec2 methods
* Clean up db.sqla.api.instance\_\* methods
* remove improper usage of 'assert'
* Support networks without gateway
* Raise 404 when instance not found in admin\_actions API
* Switch to Oslo-Incubator's EnvFilter rootwrap
* xenapi: Moving Glance fetch code into image/glance:download\_vhd
* Performs hard reboot if libvirt soft reboot raises libvirtError
* xenapi: Rename imageupload image
* Make nbd reservation thread-safe
* Code dedup in class QuotaReserveSqlAlchemyTestCase
* Fix multi availability zone issue part 1
* Fix instance\_usage\_audit\_log v3 follow REST principles
* Update mailmap
* Add obj\_attr\_is\_set() method to NovaObject
* Add ObjectActionFailed exception and make Instance use it
* Fix change detection logic in conductor
* Convert pause/unpause to use objects
* Make delete/soft\_delete use objects
* Refactor compute API's delete to properly do local soft\_deletes
* Add identity headers while calling glanceclient
* xenapi: Reduce code duplication in vmops
* vendor-data minor format / style cleanups
* maint: remove unused exceptions
* Add support for Neutron https endpoint
* Add index to reservations.uuid column
* Refactor EC2 API error handling code
* Cleanup copy/paste in test\_quota\_sets
* Make EvacuateTest DRYer
* Add expected\_errors for extensions quota\_sets and hypervisors
* Remove generic exception catching for admin\_actions API v3
* Demote admin-passwd from core of API v3 as extensions os-admin-password
* handle auto assigned flag on allocate floating ip
* Add expected\_errors for extension shelve v3
* Use cached nwinfo for secgroup rules
* Sync config.generator from Oslo
* Remove \* import from xenserver plugins
* EC2-API: Fix ambiguous ipAddress/dnsName issue
* xenapi: no image upload retry on certain errors
* Add error checking around host service checking
* add vendor\_data to the md service and config drive
* Moves compute.rpcapi.prep\_resize call to scheduler.manager
* Removed scheduler doc costs section
* Fix formatting on scheduler documentation
* Add expected\_errors for extension server\_diagnostics V3
* Fix extensions agent follow API v3 rules
* XenAPI: Change the default SR to be the pool default
* Fix flavor\_access extension follow API V3 rules
* Add notification for live migration call
* Correct status code and response for quota\_sets API v3
* Fixes for v3 API servers tests
* Remove sleep from service group db and mc tests
* [xenapi] Unshadow an important test case class
* Fix and Gate on H303 (no wildcard imports)
* Remove unreachable code
* powervm: pass on unimplemented aggregate operations
* Fix timing issue in SimpleTenantUsageSample test
* Code dedup in virt.libvirt.test\_imagecache.test\_verify\_checksum\_\*
* Move tests test\_verify\_checksum\_\* to separate class
* Logging virtual size of the QCOW2
* Add expected\_errors for extension certificates v3
* Support setting block size for block devices
* Set the image\_meta for the instance booted from a volume
* return 429 on API rate limiting occur
* Add task\_state filter for nova list
* Port server\_usage API to v3 part 2
* Port server\_usage API to v3 part 1
* Adds factory methods to load Hyper-V utils classes
* Fix 2 pep8 errors in tests
* Enabled hacking check for Python3 compatible print (H233)
* Fix race between aggregate list and delete
* Enforce authenticated connections to libvirt
* Enabled the hacking warning for Py3 compatible octal literals (H232)
* Remove fping plugin from V3 API
* Moves scheduler.rpcapi.prep\_resize call on compute.api to conductor
* Fix some Instance object class usage errors
* xenapi: remove pv detection
* Add expected\_errors for extension keypair and availablity\_zone
* Add expected\_errors for extension console\_output v3
* Fix extension hosts follow API v3 rules
* Use project quota as default user quota
* Adds NoAuthMiddleware for V3
* xenapi: remove propagate xenapi\_use\_agent key
* Update references with new Mailing List location
* MinDisk size based on the flavor's Disk size
* Use RetrievePropertiesEx instead of RetrieveProperties
* Speed up test BareMetalPduTestCase.test\_exec\_pdutool
* Port ips-extended to API-v3 ips core API Part 2
* Disable per-user rate limiting by default
* Support EC2 API wildcards for DescribeTags filters
* Remove the monkey patching of \_ into the builtins
* Sync lockutils from Oslo
* Set lock\_path in tests
* Port ips-extended to API-v3 ips core API Part 1
* Fix postgresql failures related to Data type to API-v3 fixed-ip
* Bypass queries which cause a contradiction
* Add basic BDM format validation in the API layer
* Servers API for the new BDM format
* Fixes Hyper-V issues on versions prior to 2012
* Add expected\_errors for extension instance\_actions v3
* Fix extension server\_meta follow API v3 rules
* Ensure that uuid is returned with mocked instance
* Code dedup in class InstanceTypeExtraSpecsTestCase
* Add expected\_errors for extension cells V3
* Add expected\_errors for extension\_info V3
* Add latest oslo DB support
* Add note why E712 is ignored
* Clarify instance\_type vs flavor in nova-manage
* Fix leaky network tests
* Fix HTTP response for PortNotFound during boot
* Don't pass empty image to filter on live migration
* Start using hacking 0.6
* Set VM back to its original state if cold migration failed
* xenapi: ensure vcpu\_weight configured correctly
* Fix failing network manager unit tests
* Add expected\_errors for extensions services and server\_password v3
* Update oslo.config.generator
* Fix the is\_volume\_backed\_instance check
* Add support for volume swap
* Fix policy failure on image\_metadata calls
* Sync models for AgentBuild, Aggregates, AggregateHost tables
* Imported Translations from Transifex
* Make ServerXMLSerializationTest DRYer
* Port migrations extension to v3 API part 2
* Port migrations extension to v3 API part 1
* xenapi: Fix console rotate script
* Sync some of Instance\* models with migrations
* Fix extension rescue follow API v3 rules
* Per-project-user-quotas for more granularity
* Add unique constraint to InstanceTypeExtraSpecs
* Remove instance\_metadata\_get\_all\* from db api
* Merged flavorextradata extension (ephemeral disk size) into core API
* Fixed tests for flavor swap extension after merging in core API
* Remove hostname param from XenApi after first boot
* Cell Scheduler support for hypervisor versions
* Fix flavor v3 follow API v3 rules
* Sync sample config file generator with Oslo
* Allow exceptions to propagate through stevedore map
* Create vmware section
* Sync latest rpc changes from oslo-incubator
* Check instance on dest once during block migration
* Revert "Add requests requirement capped <1.2.1."
* Unit-ify compute\_api delete tests
* Convert network API to use InfoCache object
* Make InfoCache.network\_info be the network model
* Make shelve pass old-world instance object to conductor
* Make admin API state resets use Instance.save()
* Deduplicate data in TestAddressesXMLSerialization
* Move \_validate\_int\_value controller func to utils
* Correct the action name for admin\_actions API v3
* Fixing dnsdomain\_get call in nova.network.manager
* Raise exception if both port and fixed-ip are in requested networks
* Sync eventlet\_backdoor from oslo-incubator
* Fix up trivial license mismatches
* Implements host uptime API call for cell setup
* Ensure dates are dates, not strings
* Use timeutils.utcnow() throughout the code
* Add indexes to sqlite
* Fix iptables rules when metadata\_host=127.0.0.1
* Sync gettextutils from oslo
* Handle instance objects in conductor compute\_stop
* Config drive attached as cdrom
* Change EC2 client tokens to use system\_metadata
* Check that the configuration file sample is up to date
* Make servers::update() use Instance.save() to do the work
* Make Instance.save() handle cells DB updates
* Convert suspend/resume to use objects
* Make compute\_api.reboot() use objects
* Fix HTTP response for PortInUse during boot
* Fix DB access when refreshing the network cache
* Use valid IP addresses values in tests
* Add ability to factor in per-instance overheads
* Send updated aggregate to compute on add/rm host
* Fix inconsistency between Nova-Net and Neutron
* Fix parse\_transport\_url when url has query string
* xenapi: no glance upload retry on 401 error
* Code dedup in test\_libvirt\_vif
* Raise exceptions when Spice/VNC are unavailable
* xenapi: Pass string arguments to popen
* Add rpcapi tests for shelving calls
* Create key manager interface
* Remove duplicate cells\_rpcapi test
* ec2-api: Disable describing of instances using deleted tags as filter
* Disable ssl layer compression for glance requests
* Missed message -> msg\_fmt conversion
* Refresh network cache when reassigning a floating IP in Neutron
* Remove unnecessary comments for instance rebuild tests
* Add missing tests for console\_\* methods
* Force reopening eventlet's hub after fork
* Remove project\_id from alternate image link path
* Fixes wrong action comment 'lock' to 'unlock'
* Add expected\_errors for extension extended\_volumes v3
* port BaremetalNodes API into v3 part2
* port baremetal\_nodes API into v3 part1
* Add validation of available\_zone during instance create
* Move resource usage sync functions to db backend
* Remove locals() from various places
* Add expected\_errors for extension evacuate v3
* Add expected\_errors for extension deferred\_delete v3
* Fix accessing to '/' of metadata server without any checks to work
* Fix duplicate osapi\_hide\_server\_address\_states config option
* API for shelving
* Fix shelve's use of system\_metadata
* Fix Instance object handling of implied fields
* Make Instance object properly update \*metadata
* Support Client Token for EC2 RunInstances
* Change get\_all\_instance\_metadata to use \_get\_instances\_by\_filters
* Add a new GroupAffinityFilter
* Move a migration test to MigrationTestCase
* Use db.flavor\_ instead of db.instance\_type\_
* Periodic task for offloading shelved instances
* Shelve/unshelve an instance
* Code dedup in class ImagesControllerTest
* Assert backing\_file should exist before attempting to create it
* Add API-v3 merged core API into core API list
* Don't ignore 'capabilities' flavor extra\_spec
* Support scoped keys in aggregate extra specs filter
* Fix blocking issue when powervm calculate checksum
* Avoid shadowing Exception 'message' attribute
* Code dedup in class TestServerActionRequestXMLDeserializer
* Fix mig 186 downgrade when using sqlalchemy >= 0.8
* Move test\_stringified\_ips to InstanceTestCase
* Move \*\_ec2\_\* tests in test\_db\_api to own test case
* Code dedup in class ImageXMLSerializationTest
* Fix malformed format string
* Fix EC2 DescribeTags filter
* Code dedup in test\_libvirt\_volume
* Port AttachInterfaces API to v3 Part 2
* Make ServersViewBuilderTest DRYer
* Move test\_security\_group\_update to SecurityGroupTestCase
* Code dedup in class ServersControllerCreateTest
* Code dedup in tests for server.\_action\_rebuild
* Moved tests for server.\_action\_rebuild
* Move bw\_usage\_\* tests in test\_db\_api to own test case
* Move dnsdomain\_\* tests in test\_db\_api to own test case
* Remove redundant if statements in cells.state
* Move special cells logic for start/stop
* Port used limits extension to v3 API Part 2
* Avoid deleting user-provided Neutron ports if VM spawn fails
* Fix nic order not correct after reboot
* Porting os-aggregates extensions to API v3 Part 2
* Porting os-aggregates extensions to API v3 Part 1
* Porting server metadata core API to API v3 Part 2
* Porting server metadata core api to API v3 Part 1
* Port limits core API to API-v3 Part 2
* xenapi: Only coalesce VHDs if needed
* Don't attach to multiple Quantum networks by default
* Load cell data from a configuration file
* Fix filtering aggregate metadata by key
* remove python-glanceclient cap
* Remove duplicated key\_pair\* tests from test\_db\_api
* Porting limits core api to API v3 Part 1
* Add missing tests for db.api.instance\_\* methods
* Fix IPAddress and CIDR type decorators
* Complete deletion when compute manager start-up
* Port user\_data API to v3 Part 2
* Add legacy flag to get\_instance\_bdms
* XenAPI: Refactor Fake to create pools, SRs and VIFs automatically
* Port flavor\_rxtx extension to v3 API Part 2
* Port flavor\_rxtx extension to v3 API Part 1
* Fix aggregate\_get\_by\_host host filtering
* Fix v3 hypervisor extension servers action follow REST principles
* xenapi:populating hypervisor version in host state
* Port attach and detach of volume-attachment into os-extended-volume v3
* Port deferredDelete API to v3 Part 2
* Fix status code for coverage API v3
* Port instance\_actions API to v3 Part 2
* port instance\_actions API into v3 part1
* Prompt error message when creating aggregate without aggregate name
* Port used limits extension to v3 API Part 1
* Makes \_PATH\_CELL\_SEP a public global variable
* port disk\_config API into v3 part1
* Imported Translations from Transifex
* Remove locals() from virt directory
* Handle ImageNotAuthorized exception
* Port AvailabilityZone API to v3 Part 2
* port AvailabilityZone API into v3 part1
* Port service API to v3 Part 2
* Imported Translations from Transifex
* Unify duplicate code for powering on an instance
* Port hide srvr addresses extension to v3 API Pt2
* Sync v2/v3 console\_output API extensions
* Port extended status extension to v3 API Part 2
* Port os-console-output extension to API v3 Part 2
* Changes select\_destinations to return dicts instead of objects
* Better start/stop handling for cells
* Make notifications properly string-convert instance datetimes
* Fix default argument values on get\_all\_by\_filters()
* Make db/api strip timezones for datetimes
* Fix object\_compat decorator for non-kwargs
* Imported Translations from Transifex
* Remove unused recreate-db options from run\_test.sh
* update Quantum usage to Neutron
* Convert cells to use a transport URL
* Fix aggregate update
* Passing volume ID as id to InvalidBDMVolume exception
* Handle instance being deleted while in filter scheduler
* Port extended-availability-zone API into v3 part2
* Fix extensions os-remote-consoles to follow API v3 rules
* Add unique constraints to AggregateHost
* Unimplemented pause should not change vm state on PowerVM
* Port server password extension to v3 API Part 2
* xenapi: Add disk config value to xenstore
* Port hide srvr addresses extension to v3 API Pt1
* Add -U to the command line for pip
* xenapi: support ephemeral disks bigger than 2TB
* Cells: Make bandwidth\_update\_interval configurable
* Add \_set\_instance\_obj\_error\_state() to compute manager
* Update v3 servers API with objects changes
* xenapi: enable attach volumes to non-running VM
* Change force\_dhcp\_release default to True
* Revert "Sync latest rpc changes from oslo-incubator"
* Sync 10 DB models and migrations
* Make compute\_api.get() use objects natively
* port Host API into v3 part2
* Port admin-actions API into v3 part2
* Fix cells manager rpc api version
* Allow ::/0 for IPv6 security group rules
* Fix issue with pip installing oslo.config-1.2.0
* Sort output for unit tests in test\_describe\_tags before compare
* Document rate limiting is per process
* Properly pin pbr and d2to1 in setup.py
* Add support for live\_snapshot in compute
* xenapi: Stub out \_add\_torrent\_url for Vhd tests
* Add Instance.get\_by\_id() query method
* Fix duplicate fping\_path config option
* Port images metadata functionality to v3 API Part 2
* Add unique constraint to ConsolePool
* Enable core API-v3 to be optional when unit testing
* Clarify flavorid vs instance\_type\_id in db
* Sync db.models.Security\* and db.models.Volume\*
* Sync db.models.Instance\* with migrations
* Add "ExtendedVolumes" API extension
* Fix misc issues with os-multinic v3 API extension
* Port multinic extension to v3 API Part 2
* Port security groups extension to v3 API Part 2
* Port security groups extension to v3 API Part 1
* Add missing help messages for nova-manage command
* Validate volume\_size in block\_device\_mapping
* Imported Translations from Transifex
* Fix info\_cache and bw\_usage update race
* xenapi: glance plugin should close connections
* Change db.api.instance\_type\_ to db.api.flavor\_
* Replace get\_instance\_metadata call in api.ec2.cloud.\_format\_instances
* Add unique constraint to AgentBuild
* Ensure flake8 tests run on all api code
* Sync notifier change from oslo-incubator
* Sync harmless changes from oslo-incubator
* Sync latest rpc changes from oslo-incubator
* Add missing matchmaker\_ring
* Port extended-server-attributes API into v3 part2
* List migrations through Admin API
* Add a VIF driver for IOVisor engine
* port Service API into v3 part1
* Port admin-actions API into v3 part1
* Port fping extension to v3 API Part 2
* Disassociate fixed IPs not known to dnsmasq
* Imported Translations from Transifex
* Allow filters to only run once per request if their data is static
* Port extended-availability-zone API into v3 part1
* Update openstack.common.config
* Export just the volume metadata for the database to be populated
* port Deferred\_delete API into v3 part1
* Misc fixes for v3 evacuate API extension
* Imported Translations from Transifex
* Baremetal ensures node is off before powering on
* Remove references to deprecated DnsMasqFilter
* Port user\_data API to v3 Part 1
* Update instance.node on evacuate
* Fix formatting errors in documentation
* Use oslo.sphinx and remove local copy of doc theme
* Remove doc references to distribute
* Sync install\_venv\_common from oslo
* Make EC2 API request objects instead of converting them
* Make instance show and index use objects
* Remove conductor usage from consoleauth service
* xenapi: Stub out entry points for BitTorrent tests
* Fix debug message for GroupAntiAffinityFilter
* Add unique constraints to Service
* Add unique constraint to FixedIp
* Fixed columns list in indexes
* Add cinder cleanup to migrations
* Change unique constraint in VirtualInterface
* Changes ComputeTaskManager class to inherit base.Base
* Moves populate retry logic to the scheduler utils
* Exceptions raised by quantum validate\_networks result in 500 error
* Fix and gate on E125
* Add object (de)serialization support to cells
* Add cells get\_cell\_type() method
* Add fill\_faults() batch operation to InstanceList
* Make api\_samples reboot test use a plausible scenario
* Fix compute\_api object handling code in cells messaging
* Fix power\_state lookup in confirm\_resize
* Make flavors is\_public option actually work
* Imported Translations from Transifex
* hyperv: Fix vmops.get\_info raises InstanceNotFound KeyError
* Make instance\_update() string-convert IP addresses
* Refactor compute\_api reboot tests to be unit-y
* Refactors select\_destinations to return HostState objects
* PowerVM resize and migrate test cases
* Clear out service disabled reason on enable
* Port agent API to v3 Part 2
* Fix v3 hypervisor extension search action follow REST principles
* Fix resize ordering for COW VHD
* Add inst\_type parameter
* Store volume metadata as key/value pairs
* Fixes a typo on AggregateCoreFilter documentation
* xenapi: Tidy up Popen calls to avoid command injection attacks
* Remove notify\_on\_any\_change option
* Add unique constraints to Quota
* Port images metadata functionality to v3 API Part 1
* Port scheduler hints extension to v3 API Part 2
* Adding action based authorization for keypairs
* Port multinic extension to v3 API Part 1
* Port hypervisor API into v3 part2
* port Instance\_usage\_audit\_log API into v3 part2
* port Instance\_usage\_audit\_log  API into v3 part1
* Fix metadata for create in child cell
* update xen/vmware virt drivers not to hit db directly
* Reduce nesting in instance\_usage\_audit
* Port os-console-output extension to API v3 Part 1
* Fix to integer cast of length in console output extension
* Imported Translations from Transifex
* Add notifiers to both attach and detach volumes
* Make test\_deferred\_delete() be deterministic
* Added functionality for nova hooks pass functions
* Fix compatibility with older confirm\_resize() calls
* Pass instance host-id to Quantum using port bindings extension
* libvirt: Fix spurious backing file existence check
* Add unique constraint for security groups
* powervm: make get\_host\_uptime output consistent with other virt drivers
* Remove locals() from virt/vmwareapi package
* Add HACKING check for db session param
* Select disk driver for libvirt+Xen according to the Xen version
* Port coverage API into v3 part2
* Port coverage API into v3 part1
* Fix grizzly compat issue in conducor rpc api
* Xenapi shutdown should return True if vm is shutdown
* Break out Compute Manager unit tests
* Break out compute API unit tests
* port Host API into v3 part1
* Imported Translations from Transifex
* Standardize use of nova.db
* Check system\_metadata type in \_populate\_instance\_for\_create
* Clean up and make HACKING.rst DRYer
* Sync db.models with migrations
* Refactor ServerStatusTest class
* Move tests db.api.instance\_\* to own class
* Add tests for \`db.console\_pool\_\*()\` functions
* Fix binding of SQL query params in DB utils
* Make db.fakes stub out API not sqlalchemy
* Reassign MAC address for vm  when resize\_revert
* test\_xmlutil.py covers more code in xmlutil.py
* Handle UnexpectedTaskState and InstanceNotFound exceptions
* Port quota classes extension to v3 API Part 2
* Ports image\_size extension to v3 API
* xenapi: Add configurable BitTorrent URL fetcher
* remove locals() from virt/hyperv package
* Add resume state on host boot function to vmware Hyper
* Port server\_diagnostics extension to v3 API Part2
* Port images functionality to v3 API Part 2
* Port cells extension to v3 API Part 2
* Notification support for host aggregate related operation
* Fix vol\_usage\_update() DB API tests
* Port consoles extension API into v3 part2
* Port consoles extension API into v3 part1
* Imported Translations from Transifex
* New select\_destinations scheduler call
* Session cleanup for db.security\_group\_\* methods
* fix invalid logging
* Port scheduler hints extension to v3 API Part 1
* Port config\_drive API to v3 Part 2
* Port config drive API to v3 Part 1
* Port images functionality to v3 API Part 1
* Moves scheduler.manager.\_set\_vm\_state\_and\_notify to scheduler.utils
* VNC console does not work with VCDriver
* Sane rest API rate limit defaults
* Ignore lifecycle events for non-existent instances
* Fix resizes with attached file-based volumes
* Remove trivial cases of unused variables (3)
* Remove locals() from compute directory
* Hypervisor uptime fails if service is disabled
* Fix metadata access in prep for instance objects
* Sync to\_primitive() IPAddress support from Oslo
* Merged flavor\_swap extension into core API
* Fix typo for instance\_get\_all\_by\_filters() function
* Implement get\_host\_uptime for powervm driver
* Port flavor\_disabled extension to v3 API Part 2
* Fix sqlalchemy utils
* Port flavor\_disabled extension to v3 API Part 1
* Port flavor\_access extension to v3 API Part 2
* Port flavor\_access extension to v3 API Part 1
* Fixes for quota\_sets v3 extension
* Port server password extension to v3 API Part 1
* Port Simple\_tenant\_usage API to v3 Part 2
* xenapi: Remove vestigial \`compile\_metrics\` code
* Add update() method to NovaObject for dict compatibility
* Add obj\_to\_primitive() to recursively primitiveize objects
* Make sure periodic instance reclaims continues on error
* Remove broken config\_drive image\_href support
* Report the az based on the value in the instance table
* Allow retrying network allocations separately
* Imported Translations from Transifex
* Better default for my\_ip if 8.8.8.8 is unreachable
* Fix a couple typos in the nova.exception module
* Make fake\_network tolerant of objects
* Prepare fake instance stubs for objects
* Make info\_cache handle when network\_info is None
* Fix instance object's use of a db query method parameter
* Make NovaObject support the 'in' operator
* Add Instance.fault
* Add basic InstanceFault model
* xenapi: Make BitTorrent url more flexible
* xenapi: Improve cross-device linking error message
* db.compute\_node\_update: ignore values['update\_at']
* Make sure periodic cleanup of instances continues on error
* Fix for failure of periodic instance cleanup
* Update instance properties values in child cells to create instance
* port Attach\_interface API into v3 part1
* Sync models.Console\* with migrations
* Port quota API into v3 part2
* Stop creating folders in virt unit tests
* Imported Translations from Transifex
* Refresh volume connections when starting instances
* Fix trivial mismatch of license header
* Exeption message of 'live migration' is not appropriate
* Sync rpc from oslo-incubator
* Fix types in test\_ec2\_ids\_not\_found\_are\_printable
* Port quota API into v3 part1
* Skip security group code when there is no network
* Sync db.models and migrations
* Update pyparsing to 1.5.7
* Make InstanceList filter non-column extra attributes
* Add Instance.security\_groups
* Add basic SecurityGroup model
* Revert XenApi virt driver should throw exception
* Imported Translations from Transifex
* Avoid redefining host to none in get\_instance\_nw\_info(...)
* Extract live-migration scheduler logic from the scheduler driver
* Fix the filtered characters list from console-log
* Add invalid number checking in flavor creation api
* Port quota classes extension to v3 API Part 1
* Remove usage of locals() from powervm virt package
* Fix xenstore-rm race condition
* Refactor db.security\_group\_get() instance join behavior
* Fix serialization of iterable types
* Fix orphaned instance from get\_by\_uuid() and \_from\_db\_object()
* refactor security group api not to raise http exceptions
* Perform additional check before live snapshotting
* Do not raise NEW exceptions
* Baremetal\_deploy\_helper error message formatting
* Fix sys\_meta access in prep for instance object
* Cells: Pass object for start/stop
* Clarify the compute API is\_volume\_backed\_instance method
* Add AggregateCoreFilter
* Port extended-server-attributes into v3 part1
* Add AggregateRamFilter
* Fix KeyError exception when scheduling to child cell
* Port missing bits from httplib2 to requests
* Revert "fixes nova resize bug when force\_config\_drive is set."
* Port extended status extension to v3 API Part 1
* Fix quota logging on exceptions
* XenApi virt driver should throw exception on failure
* Retry quota\_reserve on DBDeadlock
* Handle NoMoreFixedIps in \_shutdown\_instance
* Make sure instance\_type has extra\_specs
* Remove locals() from nova/virt/libvirt package
* Fix importing InstanceInfoCache during register\_all()
* Make \_poll\_unconfirmed\_resizes() use objects
* Revert "Add oslo-config-1.2.0a2 and pbr>=0.5.16 to requirements."
* Preserve network order when using ConfigDrive
* Revert "Initial scheduler support for instance\_groups"
* fixes nova resize bug when force\_config\_drive is set
* Add troubleshoot to baremetal PXE template
* Sync db.models.Quota\* with migrations
* Modify \_assertEqualListsOfObjects() function
* Port hypervisor API into v3 part1
* Remove a layer of nesting in \_poll\_unconfirmed\_resizes()
* Use InstanceList for \_heal\_instance\_info\_cache()
* Remove straggling use of all-kwarg object methods
* Allow scheduler manager NoValidHost exception to pass over RPC
* Imported Translations from Transifex
* Add oslo-config-1.2.0a2 and pbr>=0.5.16 to requirements
* Remove usage of locals() for formatting from nova.scheduler.\*
* Libvirt driver: normalize variable names (part1)
* xenapi: script to rotate the guest logs
* Clean up scheduler tests
* Drop unused \_virtual\_power\_settings global
* Remove junk file when ftp transfer failure
* xenapi: revisit error handling around calls to agent
* Remove the unused plugins framework
* Added unit tests for vmware cluster driver
* Adds expected\_errors decorator for API v3
* Sync oslo-incubator gettextutils
* port Simple\_tenant\_usage  API into v3 part1
* Remove db session hack from conductor's vol\_usage\_update()
* Converts scheduler.utils.build\_request\_spec return to json primitive
* Revert "Delegate authentication to quantumclient"
* Retry the sfdisk command up to 3 times
* No support for double nested 64 bit guest using VCDriver
* Fill context on objects in lists
* Setting static ip= for baremetal PXE boot
* Add tests for libvirt's reboot functionality
* Check the instance ID before creating it
* Add missing tests for nova.db.api.instance\_system\_metadata\_\*
* Add err\_msg param to baremetal\_deploy\_helper
* Remove \_is\_precooked pre-cells Zones hacks
* Raise max header size to accommodate large tokens
* Make NovaObject support extra attributes in items()
* Imported Translations from Transifex
* Fix instance obj refresh()
* Fix overzealous conductor test for vol\_usage\_update
* Add missing tests for certificate\_\* methods
* Log xml in libvirt \_create\_domain failures
* Add unique constraints to Cell
* Accept is\_public=None when listing all flavors
* Add missing tests for cell\_\* methods
* Add missing tests for nova.db.api.instance\_metadata\_\*
* Don't deallocate network if destroy time out
* Port server\_diagnostics extension to v3 API Part1
* Add old display name to update notification
* Port fping extension to v3 API Part 1
* libvirt fix resize/migrates with swap or ephemeral
* Allow reboot or rebuild from vm\_state=Error
* Initial scheduler support for instance\_groups
* Fix the ServerPasswordController class doc string
* Imported Translations from Transifex
* Cleanup certificate API extension
* Enforce sqlite-specific flow in drop\_unique\_constraint
* Remove unused cert db method
* Fix bad vm\_state change in reboot\_instance()
* Add rpc client side version control
* xenapi: ensure agent check respects image flags
* Drop \`bm\_pxe\_ips\` table from baremetal database
* Adding fixed\_ip in create.end notification
* Improved tests for instance\_actions\_\*
* Refactored tests for instance\_actions\_\*
* Add missing tests for provider\_fw\_rule\_\* methods
* Session cleanup for db.security\_group\_rule\_\* methods
* Add tests for nova.db.api.security\_group\_rule\_\* methods
* Refactors qemu image info parsing logic
* Port cells extension to v3 API Part 1
* Organize limits units and per-units constants
* Fix flavor extra\_specs filter doesn't work for number
* Replace utils.to\_bytes() with strutils.to\_bytes()
* Updates nova.conf.sample
* Remove bin lookup in conf sample generator
* Refactor conf sample generator script
* Remove unused arg from make\_class\_properties.getter method
* Fix obj\_load() in NovaObject base class
* Backup and restore object registry for tests
* Fix the wrong reference by CONF
* Port flavors core API to v3 tree
* Remove usage of locals() from xenapi package
* Remove trivial cases of unused variables (1)
* Don't make nova-compute depend on iSCSI
* Change resource links when url has no project id
* Make sync\_power\_state routines use InstanceList
* Enhance the validation of the quotas update
* Add missing tests for compute\_node\_\* methods
* Fix VMware Hyper can't honor hw\_vif\_model image property
* Remove use of locals() in db migrations
* Don't advertise mute cells capabilities upwards
* Allow confirm\_resize if instance is in 'deleting' status
* Port certificates API to v3 Part 2
* port agent API into v3 part1
* Port certificates API to v3 Part 1
* Naming instance directory by uuid in VMware Hyper
* Revert "Fix local variable 'root\_uuid' ref before assign"
* Use Python 3.x compatible octal literals
* Fix and enable H403 tests
* Remove usage of locals() from manager.py
* Fix local variable 'root\_uuid' ref before assign
* Improve the performance of migration 186
* Update to the latest stevedore
* Quantum API \_get\_floating\_ip\_by\_address mismatch with Nova-Net
* xenapi: remove auto\_disk\_config check during resize
* xenapi: implement get\_console\_output for XCP/XenServer
* Check libvirt version earlier
* update\_dns() method optimization
* Sync can\_send\_version() helper from oslo-incubator
* Remove unused db api call
* Quantumapi returns an empty network list
* Add missing tests for nova.db.api.network\_\*
* Cleanup overshadowing in test\_evacuate.py
* Give a way to save why a service has been disabled
* Cells: Add support for global cinder
* Fix race conditions with xenstore
* Imported Translations from Transifex
* Remove explicit distribute depend
* Fix assumed port has port\_security\_enabled
* Rename functions in nova.compute.flavors from instance\_type
* Remove redundant architecture property update in powervm snapshot
* Use an inner join on aggregate\_hosts in aggregate\_get\_by\_host
* xenapi: ensure instance metadata always injected into xenstore
* Nova instance group DB support
* Fix to disallow server name with all blank spaces
* Replace functions in utils with oslo.fileutils
* Refactors get\_instance\_security\_groups to only use instance\_uuid
* Create an image BDM for every instance
* DB migration to the new BDM data format
* Fix dangling LUN issue under load with multipath
* Imported Translations from Transifex
* Add missing tests for s3\_image\_\* methods
* Register libvirt driver with closed connection callback
* Enhance group handling in extract\_opts
* Removed code duplication in conductor.api
* Refactored tests for instance\_fault\_\*
* Added verbose error message in tests helper mixin
* Adds v3 API extension discovery filtering
* Adds support for the Indigo Virtual Switch (IVS)
* Some libvirt driver lookups lacks proper exception handling
* Put VM UUID to live migration error notification
* Fix db.models.Instance description
* Fix db.models.Certificate description
* Fix db.models.ComputeNodeStats description
* Fix db.models.ComputeNode description
* Fix db.models.Service description
* BDM class and transformation functions
* Remove unused method in VMware driver
* Cleanup nova exception message conversion
* Update analyze\_opts to work with new nova.conf sample format
* Remove unused methods from VirtAPI
* Make xenapi use Instance object for host\_maintenance\_mode()
* Make xenapi/host use instance objects for \_uuid\_find
* Use InstanceList object for init\_host
* Add Instance.info\_cache
* Use Instance Objects for Start/Stop
* Add lists of instance objects
* Add base mixin class for object lists
* Add deleted flag to NovaObject base
* Export volume metadata to new instances
* Sending volume IO usage broken
* Rename unique constraints due to new convention
* Replace openstack-common with oslo in HACKING.rst
* Fixes test\_config\_drive unittest
* Port evacuate API to v3 Part 2
* Port evacuate API to v3 Part 1
* Speeding up scheduler tests
* Port rescue API to v3 Part 2
* Port rescue API to v3 Part 1
* Handle security group quota exceeded gracefully
* Adds check that the core V3 API is loaded
* Call virt.driver.destroy before deallocating network
* More KeypairAPI cleanups
* Improve Keypair error messages in osapi
* Fix Keypair exception messages
* Moving more tests to appropriate locations
* Skip ipv6 tests on system without ipv6 support
* Keypair API test cleanup
* Alphabetize v3 API extension entry point list
* Add missing exception to cell\_update()
* Refactors scheduler.chance.select\_hosts to raise NoValidHost
* Enhance unit test code coverage for availability zone
* Converts 'image' to json primitive on compute.rpcapi.prep\_resize
* Import osapi\_v3/enabled option in nova/test
* Regenerate missing resized backing files
* Moving \`test\_misc\` tests to better locations
* Allocate networks in the background
* Make the datetime utility function coerce to UTC
* API to get the Cell Capacity
* Update rpc/impl\_qpid.py from oslo
* More detailed log in failing aggregate extra filter
* xenapi: Added logging for sparse copy
* Make object actions pass positional arguments
* Don't snat all traffic when force\_snat\_range set
* Add x-compute-request-id header when no response body
* Call scheduler for run\_instance from conductor
* correctly set iface-id in vmware driver
* Fix a race where a soft deleted instance might be removed by mistake
* Fix quota checks while resizing up by admin
* Refactor libvirt driver exception handling
* Avoiding multiple code loops in filter scheduler
* Don't log warn if v3 API is disabled
* Link to explanation of --checksum-full rule
* Imported Translations from Transifex
* Stop libvirt errors from outputting to strerr
* Delete unused bin directory
* Make instance object tolerate isotime strings
* Add fake\_instance.py
* Fix postgresql failures related to Data type
* hardcode pbr and d2to1 versions
* Silence exceptions from qpid connection.close() (from oslo)
* Add Davanum to the mailmap
* Fix VMwareVCdriver reporting incorrect stats
* Adds ability to black/whitelist v3 API extensions
* Clean up vmwareapi.network\_util.get\_network\_with\_the\_name
* Imported Translations from Transifex
* Normalize path for finding api\_samples dir
* Add yolanda to the mailmap
* Add notes about how doc generation works
* python3: Add py33 to tox.ini
* Improve Python 3.x compatibility
* Ports consoles API to v3 API
* Fix nova-compute fails to start if quantum is down
* Handle instance directories correctly for migrates
* Remove unused launch\_time from instance
* Launch\_at and terminated\_at on server(s) response
* Fixed two minor docs niggles
* Adds v3 API disable config option
* Fix bug where consoleauth depended on remote conductor service
* Only update cell capabilites once
* Ports ips api to v3 API
* Make pylint ignore nova/objects/
* Set resized instance back to original vm\_state
* Add power\_on flag to virt driver finish/revert migration methods
* Cosmetic fix to parameter name in DB API
* compute.api call conductor ComputeTaskManager for live-migrate
* Removed session from reservation\_create()
* Raise exception instances not exception classes
* \_s3\_create handles image being deleted
* Imported Translations from Transifex
* Add instance object
* Add base object model
* Enhance multipath parsing
* Don't delete sys\_meta on instance delete
* Fix volume IO usage notifications been sent too often
* Add missing os.path.abspath around csrfile
* Fix colorizier thowing exception when a test fails
* Add db test that checks that shadow tables are up-to-date
* Sync shadow table for 159 migration
* Sync shadow table for 157 migration
* Sync shadow table for 156 migration
* Add missing tests for nova.db.api.quota\_\* methods
* Add tests for some db.security\_group\_\* methods
* Fix \_drop\_unique\_constraint\_in\_sqlite() function
* Clean up failed image transfers in instance spawn
* Make testr preserve existing OS\_\* env vars values
* Fix msg version type sent to cells RPC API
* Verify that CONF.compute\_driver is defined
* Fix EC2 RegisterImage ImageLocation starts with /
* Support Cinder mount options for NFS/GlusterFS
* Raise exception instances, not exception classes
* Add update method of security group name and description
* Cell weighing class to handle mute child cells
* Add posargs support to flake8 call
* Enumerate Flake8 E12x ignores
* Fix and enable flake8 F823
* Fix and enable flake8 F812
* libvirt: improve the specification of network disks
* Imported Translations from Transifex
* In utils.tempdir, pass CONF.tempdir as an argument
* Delegate authentication to quantumclient
* Pull binary name from sys.argv[0]
* Rename policy auth for V3 os-fixed-ips
* Fix internationalization for some LOG messages
* Enumerate Flake8 Fxxx ignores
* Enable flake8 E721
* Removing misleading error message
* No relevant message when stop a stopped VM
* Cells: Add filtering and weight support
* API Extensions framework for v3 API Part 2
* fix a misleading docstring
* xenapi: make the xenapi agent optional per image
* Fix config drive code logical error
* Add missing conversion specifier to ServiceGroupUnavailable
* Deprecate compute\_api\_class option in the config
* Add node as instance attribute for notification
* removes project\_id/tenant\_id from v3 api urls
* Set up 'compute\_task' conductor namespace
* Removed superflous eval usage
* Fix log message
* Sync shadow table for 179 migration
* Remove copy paste from 179 migration
* Sync shadow table for 175 and 176 migration
* Change db \`deleted\` column type utils
* Fix tests for sqlalchemy utils
* Add missing tests for nova.db.api.quota\_class\_\*
* Moved sample network creation out of unittest base class constructor
* Add missing tests for db.api.reservation\_\*
* add xml api sample tests to os-tenant-network
* Remove locals() usage from nova.virt.libvirt.utils
* IPMI driver sets bootdev option persistently
* update mailmap
* Imported Translations from Transifex
* Remove tempest hack for create/rebuild checks
* Better error message on malformed request url
* virt: Move generic virt tests to nova/tests/virt/
* vmwareapi: Move tests under tests/virt/vmwareapi/
* hyperv: Move tests under nova/tests/virt/hyperv
* Fix UnboundLocalError in powervm lvm cleanup code
* Delete a quota through admin api
* Remove locals() usage from nova.virt.libvirt.volume
* Importing correlation\_id middleware from oslo-incubator
* Make a few places tolerant of sys\_meta being a dict
* Remove locals() from scheduler filters
* Rename requires files to standard names
* Imported Translations from Transifex
* translates empty remote\_ip\_prefix to valid cidr for nova
* Reset task\_state when resetting vm\_state to ACTIVE
* xenapi: Moving tests under tests/virt/xenapi/
* xenapi: Disable VDI size check when root\_gb=0
* Remove ImageTooLarge exception
* Move ImageTooLarge check to Compute API
* Share checks between create and rebuild
* Remove path\_exists from NFS/GlusterFS drivers
* Removed session from fixed\_ip\_\*() functions
* Catch InstanceNotFound in instance\_actions GET
* Using unicode() to handle image's properties
* Adds live migration support to cells API
* Raise AgentBuildNotFound on updating/destroying deleted object
* Add missing tests for nova.db.api.agent\_build\_\* methods
* Don't update API cell on get\_nwinfo
* Optimize SecurityGroupsOutputController by len(servers)
* get\_instance\_security\_groups() fails if no name on security group
* libvirt: Moving tests under tests/virt/libvirt
* Make it easier to add namespaced rpc APIs
* baremetal: Move tests under tests/virt/baremetal
* Disallow resize if image not available
* powervm: Move tests under tests/virt/powervm
* Sync RPC serializer changes from Oslo
* Fix missing argument to logging warning call
* set ERROR state when scheduler hits max attempts
* Sync latest RPC changes from oslo
* Add notification for live migration
* Add requests requirement capped <1.2.1
* Adding tests for rebuild image checks
* Add ImageNotActive check for instance rebuild
* Fix error in instance\_get\_all\_by\_filters() use of soft\_deleted filter
* Fix resize when instance has no image
* Fixes encoding issues for nova api req body
* Update run\_tests.sh to run flake8 too
* Added validation for networks parameter value
* Added attribute 'ip' to server search options
* Make nova-api use servicegroup.API.service\_is\_up()
* Add memorycache import into the oslo config
* Fix require\_context() decorators
* Imported Translations from Transifex
* Remove locals() from nova/cells/\*
* Update mailmap
* Strip exec\_dirs prefix from rootwrap filters
* Clean up test\_api\_samples a bit
* Remove unnecessary parens in test\_volumes
* Use strict=True instead of \`is\_valid\_boolstr\`
* Editable default quota support
* Remove usage of locals() for formatting from nova.api.\*
* Switch to flake8+hacking
* Fix flake8 errors in anticipation of flake8
* Don't update DB records for unchanged stats
* baremetal: drop 'prov\_mac\_address' column
* The vm\_state should not be modified until the task is complete
* Return Customer's Quota Usage through Admin API
* Use prettyxml output
* Remove locals() from messages in virt/disk/api.py
* 'm1.tiny' now has root\_gb=1
* Cast \`size\` to int before comparison
* Don't raise unnecessary stack traces in EC2 API
* Mox should cleanup before stubs
* Reverse compare arguments in filters tests
* Don't inject settings for dynamic network
* Add ca cert file support to cinder client requests
* libvirt: Catch VIR\_ERR\_NO\_DOMAIN in list\_instances
* Revert "Include list of attached volumes with instance info"
* Sync rpc from oslo
* Remove openstack.common.version
* Fix for missing multipath device name
* Add missing tests for db.fixed\_ip\_\*(). functions
* xenapi: ensure vdi is not too big when resizing down
* Cells: Don't allow active -> build
* Fix whitespace issue in indent
* Pass the proper admin context to update\_dhcp
* Fix quantum security group driver to accept none for from/to\_port
* Reverse path SNAT for DNAT floating-ip
* Use Oslo's \`bool\_from\_string\`
* Handle IPMI transient failures better
* Improve unit tests for DB archiving
* Remove "#!/usr/bin/env python" from .py files under nova/cmd
* Add missing unique constraint to KeyPair model
* Refactored tests for db.key\_pair\_\*() functions
* Refactor nova.volume.cinder.API to reduce roundtrips with Cinder
* Fix response from snapshot create stub
* Hide lock\_prefix argument using synchronized\_with\_prefix()
* Cleanups for create-flavor
* Cleanup create flavor tests
* Imported Translations from Transifex
* Test for remote directory creation before shutting down instance
* Fix run\_tests.sh usage of tools/colorizer.py
* Move get\_table() from test\_migrations to sqlalchemy.utils
* Convert Nova to use Oslo service infrastructure
* Show the cause of virt driver error
* Detach volume fails when using multipath iscsi
* API extensions framework for v3 API
* Sync service and threadgroup modules from oslo
* Fix header issue for baremetal\_deploy\_helper.py
* Extract getting instance's AZ into a helper module
* Allow different paths for deploy-helper helpers
* Show exception details for failed deploys
* Imported Translations from Transifex
* Check QCOW2 image size during root disk creation
* Adds useful debug logging to filter\_scheduler
* fix non reporting of failures with floating IP assignment
* Improve message and logging for corrupt VHD footers
* Cleanup for test\_create\_server\_with\_deleted\_image
* Check cached SSH connection in PowerVM driver
* Allow a floating IP to be associated to a specific fixed IP
* Record smoketest dependency on gFlags
* Make resize/migrated shared storage aware
* Imported Translations from Transifex
* Add pointer to compute driver matrix wiki page
* xenapi: cleanup vdi when disk too big exception raised
* Update rootwrap with code from oslo
* Fixes typo in server-evacuate-req.xml
* Fix variable referenced before assginment in vmwareapi code
* Remove invalid block\_device\_mapping volume\_size of ''
* Architecture property updated in snapshot libvirt
* Add sqlalchemy migration utils.create\_shadow\_table method
* Add sqlalchemy migration utils.check\_shadow\_table method
* Change type of cells.deleted from boolean to integer
* Pass None to image if booted from volume in live migration
* Raise InstanceInvalidState for double hard reboot
* Removes duplicate assertEqual
* Remove insecure default for signing\_dir option
* Removes unnecessary check for admin context in evacuate
* Fix zookeeper import and tests
* Make sure that hypervisor nodename is set correctly in FakeDriver
* Optimize db.instance\_floating\_address\_get\_all method
* Session cleanup for db.floating\_ip\_\* methods
* Optimize instance queries in compute manager
* Remove duplicate gettext.install() calls
* Include list of attached volumes with instance info
* Catch volume create exception
* Fixes KeyError bug with network api associate
* Add unitests for VMware vif, and fix code logical error
* Fix format error in claims
* Fixes mock calls in Hyper-V test method
* Adds instance root disk size checks during resize
* Rename nova.compute.instance\_types to flavors
* Convert to using newly imported processutils
* Import new additions to oslo's processutils
* Imported Translations from Transifex
* Enable live block migration when using iSCSI volumes
* Nova evacuate failed when VM is in SHUTOFF status
* Transition from openstack.common.setup to pbr
* Remove random print statements
* Remove security\_group\_handler
* Add cpuset attr to vcpu conf in libvirt xml
* Imported Translations from Transifex
* Remove referances to LegacyFormatter in example logging.conf
* libvirt: ignore NOSTATE in resume\_state\_on\_host\_boot() method
* Sync oslo-incubator print statement changes
* Fix stub\_instance() to include missing attributes
* Add an index to compute\_node\_stats
* Convert to using oslo's execute() method
* Import latest log module from oslo
* Being more defensive around the use\_ipv6 config option
* Update hypervisor\_hostname after live migration
* Make nova-network support requested nic ordering
* nova coverage creates lots of empty folders
* fix broken WSDL logic
* Remove race condition (in FloatingIps)
* Add missing tests for db.floating\_ip\_\* methods
* Deprecate show\_host\_resources() in scheduler manager
* Add force\_nodes to filter properties
* Adds --addn-hosts to the dnsmasq arg list
* Update our import of oslo's processutils
* Update oslo-incubator import
* Delete InstanceSystemMetadata on instance deletion
* vmwareapi: Add supported\_instances to host state
* xenapi: Always set other\_config for VDIs
* Copy the RHEL6 eventlet workaround from Oslo
* Move db.fixed\_ip\_\* tests from DbApiTestCase to FixedIpTestCase
* Checks if volume can be attached
* Call format\_message on InstanceTypeNotFound exception
* xenapi: Don't swallow missing SR exception
* Prevent rescuing a VM with a partially mounted volume
* Fix key error when create lpar instance failed
* Reset migrating task state for MigrationError exceptions
* Volume IO usage gets reset to 0 after a reboot / crash
* Sync small and safe changes from oslo
* Sync jsonutils from oslo
* Fix EC2 instance bdm response
* Rename \_check\_image\_size to \_get\_and\_check\_image\_metadata
* Convert the cache key from unicode to a string
* Catch glance image create exceptions
* Update to using oslo periodic tasks implementation
* Import oslo periodic tasks support
* import and install gettext in vm\_vdi\_cleaner.py
* Fix baremetal get\_available\_nodes
* Fix attach when running as root without sysfsutils
* Make \_build\_network\_info\_model testable
* Fix building quantumapi network model with network list
* Add the availability\_zone to the volume.usage notifications
* Add delete\_net\_interface function
* Performance optimization for contrib.flavorextraspecs
* Small whitespace tweak
* Kill off usage of locals() in the filter\_scheduler
* Remove local variable only used in logging
* Create instance with deleting image
* Refactor work with db.instance\_type\_\* methods
* Fix flakey TestS3ImageService bug
* Add missing snapshot image properties for VMware Hyper
* Imported Translations from Transifex
* Fix VMware Hyper console url parameter error
* Update NovaBase model per changes on oslo.db.sqlalchemy
* Send a instance create error notification
* Refactor \_run\_instance() to unify control flow
* set bdm['volume\_id'] to None rather than delete it
* Destroy conntrack table on source host during migration
* Adds tests for isolated\_hosts\_filter
* Fixes race condition of deleting floating ip
* Imported Translations from Transifex
* Wrong proxy port in nova.conf for Spice proxy
* Fix missing kernel output via VNC/Spice on boot
* Fix bug in db.instance\_type\_destroy
* Move get\_backdoor\_port to base rpc API
* Move db.instance\_type\_extra\_specs\_\* to db.instance\_type\_\* methods
* Add missing test for db.instance\_type\_destroy method
* Fix powervm driver resize instance error
* Support FlatDHCP network for VMware Hyper
* Imported Translations from Transifex
* Deprecate conductor ping method
* Add an rpc API common to all services
* If rescue fails don't error the instance
* Make os.services.update work with cells
* Fix fixed\_ip\_count\_by\_project in DB API
* Add unit tests for /db/api.py#fixed\_ip\_\*
* Add option to exclude joins from instance\_get\_by\_uuid
* Remove unnecessary method argument
* Improve Python 3.x compatibility
* ec2 CreateVolumes/DescribeVolumes status mapping
* Can now reboot rescued instances in xenapi
* Allows xenapi 'lookup' to look for rescue mode VMs
* Adds tests to xenapi.vm\_utils's 'lookup' method
* Imported Translations from Transifex
* Stop vm\_state reset on reboot of rescued vm
* Fix hyperv copy file error logged incorrect
* Fix ec2 CreateVolumes/DescribeVolumes status
* Imported Translations from Transifex
* Don't swallow PolicyNotAuthorized for resize/reboot actions
* Remove unused exception and variable from scheduler
* Remove unnecessary full resource audits at the end of resizes
* Update the log module from oslo-incubator
* Translate NoMoreFloatingIps exception
* Imported Translations from Transifex
* Fix up regression tester
* Delete extra space to api/volumes message
* Map internal S3 image state to EC2 API values
* removing unused variable from a test
* Translate cinder NotFound exception
* hypervisor tests more accurate db
* Added comments to quantum api client
* Cleanup and test volume usage on volume detach
* Import and convert to oslo loopingcall
* Remove orphaned db method instance\_test\_and\_set
* baremetal: VirtualPowerDriver uses mac addresses in bm\_interfaces
* Sync rpc from oslo-incubator
* Correct disk's over committed size computing error
* Imported Translations from Transifex
* Allow listing fixed\_ips for a given compute host
* Imported Translations from Transifex
* baremetal: Change input for sfdisk
* Make sure confirm\_resize finishes before setting vm\_state to ACTIVE
* Completes the power\_state mapping from compute driver and manager
* Make compute/manager use conductor for unrescue()
* Add an extension to show the mac address of a ip in server(s)
* Cleans up orphan compute\_nodes not cleaned up by compute manager
* Allow for the power state interval to be configured
* Imported Translations from Transifex
* Fix bug in os-availability-zone extension
* Remove unnecessary db call in scheduler driver live-migration code
* baremetal: Change node api related to prov\_mac\_address
* Don't join metadata twice in instance\_get\_all()
* Imported Translations from Transifex
* Don't hide stacktraces for unexpected errors in rescue
* Fix issues with check\_instance\_shared\_storage
* Remove "undefined name" pyflake errors
* Optimize some of compute/manager's periodic tasks' DB queries
* Optimize some of the periodic task database queries in n-cpu
* Change DB API instance functions for selective metadata fetching
* Replace metadata joins with another query
* xenapi: Make \_connect\_volume exc handler eventlet safe
* Fix typo: libvir => libvirt
* Remove multi scheduler
* Remove unnecessary LOG initialisation
* Remove unnecessary parens
* Simplify random host choice
* Add NOVA\_LOCALEDIR env variable
* Imported Translations from Transifex
* Clarify volume related exception message
* Cleanup trailing whitespace in api samples
* Add tenant/ user id to volume usage notifications
* Security groups may be unavailable
* Encode consoleauth token in utf-8 to make it a str
* Catch NoValidHost exception during live-migration
* Evacuated instance disk not deleted
* Fix a bad tearDown method in test\_quantumv2.py
* Import eventlet in \_\_init\_\_.py
* Raise correct exception for duplicate networks
* Add an extension to show the network id of a virtual interface
* Fix error message in pre\_live\_migration
* Add reset function to nova coverage
* Imported Translations from Transifex
* nova-consoleauth start failed by consoleauth\_manager option missing
* set timeout for paramiko ssh connection
* Define LOG globally in baremetal\_deploy\_helper
* Allow describe\_instances to use tags for searches
* Correct network uuid field for os-network extension
* Only call getLogger after configuring logging
* Add SecurityGroups API sample tests
* Cannot boot vm if quantum plugin does not support L3 api
* Add missing tests for instance\_type\_extra\_specs\_\* methods
* Remove race condition (in InstanceTypeProjects)
* Deprecate old vif drivers
* Optimize resource tracker queries for instances
* baremetal: Integrate provisioning and non-provisioning interfaces
* Move console scripts to entrypoints
* Remove deprecated Grizzly code
* Fallback to conductor if types are not stashed
* Imported Translations from Transifex
* Resolve conflicting mac address in resize
* Simplify and correct the bm partition sizes
* Fix legacy\_net\_info guard
* Fix SecurityGroups XML sample tests
* Modify \_verify\_response to validate response codes
* Fix a typo in attach\_interface error path
* After migrate, catch and remove deleted instances
* Grab instance for migration before updating usage
* Explain why the give methods are whitelisted
* libvirt: Get driver type from base image type
* Guard against content being None
* Limit the checks for block device becoming available
* Fix \_error\_out\_instance exception handler
* Raise rather than generating millions of IPs
* Add unit tests for nova.volume.cinder.API
* Update latest oslo.setup
* baremetal: Drop unused columns in bm\_nodes
* Remove print statements
* Imported Translations from Transifex
* Fix the python version comparison
* Remove gettext.install() from nova/\_\_init\_\_.py
* Sync latest gettextutils from oslo-incubator
* Return 409 on creating/importing same name keypair
* Delete tests.baremetal.util.new\_bm\_deployment()
* Return proper error message when network conflicts
* Better iptables DROP removal
* Query quantum once for instance's security groups
* quantum security group driver nova list shows same group
* Sync in matchmaker and qpid Conf changes from oslo
* improve handling of an empty dnsmasq --domain
* Fix automatic confirmation of resizes for no-db-compute
* 'injected\_files' should be base 64 encoded
* Add missing unit tests for FlavorActionController
* Set default fixed\_ip quota to unlimited
* Accepts aws-sdk-java timestamp format
* Imported Translations from Transifex
* get context from req rather than getting a new admin context
* Use Cluster reference to reduce SDK calls
* Fix missing punctuation in docstring
* xenapi: fix support for iso boot
* Ensure only pickle-able objects live in metadata
* sync oslo db/sqlalchemy module
* Convert host value from unicode to a string
* always quote dhcp-domain, otherwise dnsmasq can fail to start
* Fix typo in the XML serialization os-services API
* Add CRUD methods for tags to the EC2 API
* Fix migrating instance to the same host
* Rework time handling in periodic tasks
* Show quota 'in\_use' and 'reserved' info
* Imported Translations from Transifex
* Fix quantum nic allocation when only portid is specified
* Make tenant\_usage fall back to instance\_type\_id
* Use format\_message on exceptions instead of str()
* Add a format\_message method to the Exceptions
* List AZs fails if there are disabled services
* Switch nova-baremetal-deploy-helper to use sfdisk
* Bring back colorizer again with error results
* Imported Translations from Transifex
* Adds Tilera back-end for baremetal
* Always store old instance\_type during a migration
* Make more readable error msg on quantum client authentication failure
* Adding netmask to dnsmasq argument --dhcp-range
* Add missing tests for db.instance\_type\_access\_\* methods
* Remove race condition (in InstanceTypes)
* Add missing tests for db.instance\_type\_\* methods
* Imported Translations from Transifex
* set up FakeLogger for root logger
* Fix /servers/<instance-id>os-security-groups using quantum
* NoneType exception thrown if driver live-migration check returns None
* Add missing info to docstring
* Include Co-authored-by entries in AUTHORS
* Do not test foreign keys with SQLite version < 3.7
* Avoid using whitespace in test\_safe\_parse\_xml
* xenapi: Retrieve VM uuid from xenstore
* Reformat openstack-common.conf
* Imported Translations from Transifex
* Fixes Nova API /os-hosts missing element "zone"
* disable colorizer as it swallows fails
* Make iptables drop action configurable
* Fixes argument order of quantumv2.api.get\_instance\_nw\_info
* Make \_downsize\_quota\_delta() use stashed instance types
* py2.6 doesn't support TextTestRunner resultclass
* Reset ec2 image cache between S3 tests
* Sync everything from oslo-incubator
* Sync rpc from oslo-incubator
* Don't log traceback on rpc timeout
* Adds return-type in two functions' docstrings
* Remove unnecessary checks in api.py
* translate cinder BadRequest exception
* Initialize compute manager before loading driver
* Add a comment to placeholder migrations
* xenapi: fix console for rescued instance
* Fixes passing arbitrary conductor\_api argument
* Make nova.virt.fake.FakeDriver useable in integration testing
* Remove unnecessary DB call to find EC2 AZs
* Remove outdated try except block in ec2 code
* nova-manage vm list fails looking 'instance\_type'
* Update instance network info cache to include vif\_type
* Bring back sexy colorized test results
* Don't actually connect to libvirtd in unit tests
* Add placeholder migrations to allow backports
* Change arguments to volume\_detach()
* Change type of ssh\_port option from Str to Int
* xenapi: rpmbuild fixes
* Set version to 2013.2

2013.1.rc1
----------

* Fix Hyper V instance conflicts
* Add caching for ec2 mapping ids
* Imported Translations from Transifex
* fix add-fixed-ip with quantum
* Update the network info when using quantum
* List InstanceNotFound as a client exception
* Refactor db.service\_destroy and db.service\_update methods
* Fix console support with cells
* Fix missing argument to QemuImageInfo
* Add missing tests for db.virtual\_interface\_\* methods
* Fix multiple fixed-ips with quantum
* Add missing tests for db.service\_\* methods
* Ensure that headers are returned as strings, not integers
* Enable tox use of site-packages for libvirt
* Require netaddr>=0.7.6 to avoid UnboundLocalError
* Pass project id in quantum driver secgroup list
* Fixes PowerVM spawn failed as missing attr supported\_instances
* Fix RequestContext crashes w/ no service catalog
* Prevent volume-attach/detach from instances in rescue state
* Fix XenAPI performance issue
* xenapi: Adding logging for migration plugin
* libvirt: Tolerate existing vm(s) with cdrom(s)
* Remove dead code
* Remove unused virt.disk.api methods bind/unbind
* Imported Translations from Transifex
* Revert "Remove the usage of instance['extra\_specs'
* Add standard methods to the Limits API
* Store project\_id for instance actions
* rstrip() strips characters, not strings
* Fix use of libvirt\_disk\_prefix
* Revert 1154253 causes XenServer image compat issue
* Reset migrating task state for more Exceptions
* Fix db archiving bug with foreign key constraints
* Imported Translations from Transifex
* Update migration 153 for efficiency
* Don't include traceback when wrapping exceptions
* Fix exception message in Networks API extension
* Make conductor's quota methods pass project\_id properly
* Fix: improve API error responses from os-hosts extension
* Add missing API doc for networks-post-req
* Make os-services API extensions consistent
* Fix system\_metadata "None" and created\_at values
* Add the serial to connection info for boot volumes
* Do not accept invalid keys in quota-update
* Add quotas for fixed ips
* Makes safe xml data calls raise 400 http error instead of 500
* Fixes an iSCSI connector issue in the Hyper-V driver
* Check keypair destroy result operation
* Resize/Migrate refactoring fixes and test cases
* Fixes Hyper-V live migration with attached volumes
* Force nova to use keystone v2.0 for auth\_token
* Fix issues with cells and resize
* Fix copyright - from LLC to Foundation
* Don't log traceback on expected console error
* Generalize console error handling during build
* Remove sqlalchemy calling back to DB API
* Make ssh key injection work with xenapi agent
* Fix use of potentially-stale instance\_type in tenant\_usage
* Drop gzip flag from tar command for OVF archives
* Fix reconnecting to libvirt
* List ComputeHostNotFound as a client exception
* Fix: Nova aggregate API throws an uncaught exception on invalid host
* Do cleaning up resource before rescheduling
* nova-manage: remove unused import
* Read instance resource quota info from "quota" namespace
* LibvirtGenericVIFDriver update for stp
* Switch to final 1.1.0 oslo.config release
* Skip deleted fixed ip address for os-fixed-ips extension
* Return error details to users in "dns-create-private-domain"
* Lazy load CONF.quota\_driver
* Fix cells instance deletion
* Don't load system\_metadata when it isn't joined
* List ConsoleTypeInvalid as a client exception
* Make run\_instance() bail quietly if instance has been deleted
* Delete instance metadata when delete VM
* Virtual Power Driver list running vms quoting error
* Refactor work with session in db.block\_device\_mapping\_\* methods
* Add missing tests for db.block\_device\_mapping\_\* methods
* websockify 0.4 is busted
* Sync rpc from oslo-incubator
* Fix: nova-manage throws uncaught exception on invalid host/service
* Fix more OS-DCF:diskConfig XML handling
* Fix: Managers that incorrectly derive from SchedulerDependentManager
* Fix nova-manage --version
* Pin SQLAlchemy to 0.7.x
* Deprecate CONF.fixed\_range, do dynamic setup
* Remove the usage of instance['extra\_specs']
* Fix behaviour of split\_cell\_and\_item
* Fix quota issues with instance deletes
* Fixes instance task\_state being left as migrating
* Force resource updates to update updated\_at
* Prepare services index method for use with cells
* Handle vcpu counting failures gracefully
* Return XML message with objectserver 404
* xenapi: Fix reboot with hung volumes
* Rename LLC to Foundation
* Pass migration\_ref when when auto-confirming
* Revert changing to FQDN for hostnames
* Add numerous fixes to test\_api\_samples
* Fixes instance action exception in "evacuate" API
* Remove instance['instance\_type'] relationship from db api
* Refactor db tests to ensure that notdb driver is used
* Rewrap two lines
* Server create will only process "networks" if os-networks is loaded
* Fixes nbd device can't be released error
* Correct exception args in vfs/guestfs
* Imported Translations from Transifex
* Prevent nova services' coverage data from combining into nova-api's
* Check if flavor id is an empty string
* Simple syntax fix up
* Fixes volume attach on Hyper-V with IPv6
* Add ability to control max utilization of a cell
* Extended server attributes can show wrong hypervisor\_hostname
* Imported Translations from Transifex
* Remove uses of instance['instance\_type'] from nova/notifications
* Libvirt driver create images even without meta
* Prevent rescue for volume-backed instances
* Fix OS-DCF:diskconfig XML handling
* Imported Translations from Transifex
* Compile BigInteger to INTEGER for sqlite
* Add conductor to nova-all
* Make bm model's deleted column match database
* Update to Quantum Client 2.2.0
* Remove uses of instance['instance\_type'] from nova/scheduler
* Remove uses of instance['instance\_type'] from nova/api
* Remove uses of instance['instance\_type'] from nova/network
* Remove uses of instance['instance\_type'] from nova/compute
* Correct substring matching of baremetal VPD node names
* Fix Wrong syntax for set:tag in dnsmasq startup option
* Fix instance evacuate with shared storage
* nova-manage: remove redundant 'dest' args
* clear up method parameters for \_modify\_rules
* Check CONF values \*after\* command line args are parsed
* Make nova-manage db archive\_deleted\_rows more explicit
* Fix for delete error in Hyper-V - missing CONF imports
* add .idea folder to .gitignore pycharm creates this folder
* Make 'os-hosts/node1' case sensitivity defer to DB
* Fix access\_ip\_\* race
* Add MultipleCreate template and fix conflict with other templates
* Update tox.ini to support RHEL 6.x
* Fix instance type cleanup when doing a same-id migration
* Tiny typo
* Remove unnecessary setUp() and tearDown() methods
* Remove duplicate API logging
* Remove uses of instance['instance\_type'] from libvirt driver
* Remove uses of instance['instance\_type'] from powervm driver
* Remove uses of instance['instance\_type'] from xenapi driver
* Fixed image filter support for vmware
* Switch to oslo.config
* Fix instance\_system\_metadata deleted columns
* Remove parameters containing passwords from Notifications
* Add missing action\_start if deleting resized inst
* Fix issues with re-raising exceptions
* Don't traceback in the API on invalid keypair
* delete deleted image 500 bug
* Moves Hyper-V options to the hyperv section
* Fix 'to integer' conversion of max and min count values
* Standarize ip validation along the code
* Adjusts reclaim instance interval of deferred delete tests
* Fix Network object encoding issue when using qpid
* Rename VMWare to VMware
* Put options in a list
* Bump instance updated\_at on network change
* Catching InstanceNotFound exception during reboot instance
* Imported Translations from Transifex
* Remove completed FIXME
* quantum security\_group driver queries db regression
* Prevent reboot of rescued instance
* Baremetal deploy helper sets ODIRECT
* Read baremetal images from extra\_specs namespace
* Rename source\_(group\_id/ip\_prefix) to remote\_(group\_id/ip\_prefix)
* docs should indicate proper git commit limit
* Imporove db.sqlalchemy.api.\_validate\_unique\_server\_name method
* Remove unused db calls from nova.db.api
* Fixes oslo-config update for deprecated\_group
* fix postgresql drop race
* Compute manager should remove dead resources
* Fix an error in compute api snapshot\_volume\_backed bdm code
* Fixes disk size issue during image boot on Hyper-V
* Updating powervm driver snapshot with update\_task\_state flow
* Imported Translations from Transifex
* Add ssh port and key based auth to VPD
* Make ComputeManager \_running\_deleted\_instances query by uuid
* Refactor compute manager \_get\_instances\_by\_driver
* Fix target host variable from being overwritten
* Imported Translations from Transifex
* Fixes live migration with attached volumes issue
* Don't LOG.error on max\_depth (by default)
* Set vm\_state to ERROR on net deallocate failure
* validate security\_groups on server create
* Fix IBM copyright strings
* Implement rules\_exist method for quantum security group driver
* Switch to using memorycache from oslo
* Remove pylint errors for undefined GroupException members
* Sync timeutils and memorycache from oslo
* instance\_info\_cache\_update creates wrongly
* Tone down logging while waiting for conductor
* Add os-volumes extension to api samples
* Regenerate nova.conf.sample
* Fix ephemeral devices on LVM don't get mkfs'd
* don't stack trace if long ints are passed to db
* Pep8/pyflakes cleanup of deprecated\_api
* Fix deprecated network api
* Fixes the Hyper-V driver's method signature
* Imported Translations from Transifex
* Fixes a Hyper-V live migration issue
* Don't use instance['instance\_type'] for scheduler filters in migration
* Fallback coverage backdoor telnet connection to lo
* Add instance\_type\_get() to virt api
* Make compute manager revert crashed migrations on init\_host()
* Adds API Sample tests for Volume Attachments
* Ensure that FORWARD rule also supports DHCP
* Remove duplicate options(joinedload) from aggregates db code
* Shrink size of aggregate\_metadata\_get\_by\_host sql query
* Remove old commented out code in sqlalchemy models
* Return proper error messages while disassociating floating IP
* Don't blindly skip first migration
* Imported Translations from Transifex
* Suppress retries on UnexpectedTaskStateErrors
* Fix \`with\_data\` handling in test-migrations
* BM Migration 004: Actually drop column
* Actually run baremetal migration tests
* Adds retry on upload\_vhd for xapi glance plugin
* ec2 \_format\_security\_group() accesses db when using quantum\_driver
* Remove un-needed methods
* Prevent hacking.py from crashing on unexpected import exception
* Bump python-quantumclient version to 2.1.2
* Improve output msgs for \_compare\_result
* Add a 'hw\_' namespace to glance hardware config properties
* Makes sure required powervm config options are set
* Update OpenStack LLC to Foundation
* Improve hackings docstring detection
* Make sure no duplicate forward rules can exist
* Use min\_ram of original image for snapshot, even with VHD
* Revert IP Address column length to 39
* Additional tests for safe parsing with minidom
* Make allocate\_for\_instance() return only info about ports allocated
* Fix crash in quantumapi if no network or port id is specified
* Unpin PasteDeploy dependency version
* Unpin routes dependency version
* Unpin suds dependency version
* Unpin Cheetah dependency version
* Allow zk driver be imported without zookeeper
* Retry floating\_ip\_fixed\_ip\_associate on deadlock
* Fix hacking.py to handle 'cannot import x'
* Add missing import to fakelibvirt
* Migration 148: Fix drop table dependency order
* Minor code optimization in \_compute\_topic
* Fix hacking.py to handle parenthesise in from import as
* Fix redefinition of function test\_get\_host\_uptime
* Migration 147: Prevent duplicate aggregate\_hosts
* Rework instance actions to work with cells
* Fix incorrect zookeeper group name
* Sync nova with oslo DB exception cleanup
* Fix broken baremetal migration tests
* if reset fails, display the command that failed
* Remove unused nova.db.api:instance\_get\_all\_by\_reservation
* Add API Sample tests for Snapshots extension
* Run libguestfs API calls in a thread pool
* Change nova-dhcpbridge FLAGFILE to a list of files
* Imported Translations from Transifex
* Readd run\_tests.sh --debug option
* Clean unused kernels and ramdisks from image cache
* Imported Translations from Transifex
* Ensure macs can be serialized
* Remove Print Statement
* Prevent default security group deletion
* libvirt: lxml behavior breaks version check
* Add missing import\_opt for flat\_injected
* Add processutils from oslo
* Updates to OSAPI sizelimit middleware
* Remove compat cfg wrapper
* Fix exception handling in baremetal API
* Make guestfs use same libvirt URI as Nova
* Make LibvirtDriver.uri() a staticmethod
* Enable VM DHCP request to reach DHCP agent
* Don't set filter name if we use Noop driver
* Removes unnecessary qemu-img dependency on powervm driver
* Migration 146: Execute delete call
* Add \`post\_downgrade\` hook for migration tests
* Fix migration snake-walk
* BM Migrations 2 & 3: Fix drop\_column statements
* Migration 144: Fix drop index statement
* Remove function redefinitions
* Migration 135: Fix drop\_column statement
* Add missing ec2 security group quantum mixin
* Fix baremetal migration skipping
* Add module prefix to exception types
* Flush tokens on instance delete
* Fix launching libvirt instances with swap
* Spelling: compatable=>compatible
* import base\_dir\_name config option into vmwareapi
* Fix ComputeAPI.get\_host\_uptime
* Move DB thread pooling to DB API
* Use a fake coverage module instead of real one
* Standardize the coverage initializations
* Sync eventlet\_backdoor from oslo-incubator
* Sync rpc from oslo-incubator
* Fix message envelope keys
* Remove race condition (in Networks)
* Move some context checking code from sqlalchemy
* Baremetal driver returns accurate list of instance
* Identify baremetal nodes by UUID
* Improve performance of baremetal list\_instances
* Better error handling in baremetal spawn & destroy
* Wait for baremetal deploy inside driver.spawn
* cfg should be imported from oslo.config
* Add Nova quantum security group proxy
* Add a volume driver in Nova for Scality SOFS
* Make nova security groups more pluggable
* libvirt: fix volume walk of /dev/disk/by-path
* Add better status to baremetal deployments
* Fix handling of source\_groups with no-db-compute
* Improve I/O performance for periodic tasks
* Allow exit code 21 for 'iscsiadm -m session'
* Removed duplicate spawn code in PowerVM driver
* Add API Sample tests for Hypervisors extension
* Log lifecycle events to log INFO (not ERROR)
* Sync rpc from oslo-incubator
* sync oslo log updates
* Adding ability to specify the libvirt cache mode for disk devices
* Sync latest install\_venv\_common.py
* Make add-fixed-ip update nwfilter wth in libvirt
* Refactor nwfilter parameters
* ensure we run db tests in CI
* More gracefully handle TimeoutException in test
* Multi-tenancy isolation with aggregates
* Fix pep8 issues with test\_manager.py
* Fix broken logging imports
* Fix hacking test to handle namespace packages
* Use oslo-config-2013.1b4
* support preallocated VM images
* Fix instance directory path for lxc
* Add snapshot methods to fakes.py
* PowerVMDiskAdapter detach/cleanup refactoring
* Make  ComputeTestCase.test\_state\_revert faster
* Add an extension to show image size
* libvirt: Use uuid for instance directory name
* Support running periodic tasks immediately at startup
* Fix XMLMatcher error reporting
* Fix XML config tests for disk/net/cpu tuning
* Add support for network adapter hotplug
* Handle lifecycle events in the compute manager
* Add support for lifecycle events in the libvirt driver
* Enhance IPAdresses migration tests
* Add basic infrastructure for compute driver async events
* Fix key check in instance actions formatter
* Add a safe\_minidom\_parse\_string function
* Documentation cleanups for nova devref
* Fix leak of loop/nbd devices in injection using localfs
* Add support for instance CPU consumption control
* Add support for instance disk IO control
* Retry bw\_usage\_update() on innodb Deadlock
* Change CIDR column size on migration version 149
* Provide way to pass rxtx factor to quantum
* Fibre channel block storage support (nova changes)
* Default SG rules for the Security Group "Default"
* create new cidr type for data storage
* Ensure rpc result is primitive types
* Change all instances of the non-word "inteface" to "interface"
* Remove unused nova.db.api:network\_get\_by\_bridge
* Fix a typo in two comments.  networksa -> networks
* Live migration with an auto selection of dest
* Remove unused nova.db.api:network\_get\_by\_instance
* Fix network list and show with quantum
* Remove unused db calls from nova.db.sqlalchemy.api
* Remove unused db calls
* Small spelling fix in sqlalchemy utils
* Fix \_get\_instance\_volume\_block\_device\_info call parameter
* Do not use abbreviated config group names (zookeeper)
* Prevent the unexpected with nova-manage network modify
* Fix hacking tests on osx
* Enable multipath for libvirt iSCSI Volume Driver
* Add select\_hosts to scheduler manager rpc
* Add and check data functions for test\_migrations 141
* fix incorrectly defined ints as strs
* Remove race condition (in TaskLog)
* Add generic dropper for duplicate rows
* Imported Translations from Transifex
* Fix typo/bug in generic UC dropper
* remove intermediate libvirt downloaded images
* Add support for instance vif traffic control
* Add libvirt XML schema support for resource tuning parameters
* Fix instance can not be deleted after soft reboot
* Correct spelling of quantum
* Make pep8 tests run inside virtualenv
* Remove tests for non-existing SimpleScheduler
* libvirt: Fix LXC container creation
* Rename 'connection' to 'driver' in libvirt HostState
* Ensure there is only one instance of LibvirtDriver
* Stop unit test for prompting for a sudo password
* clean up missing whitespace after ':'
* Push 'Error' result from event to instance action
* Speedup the revert\_state test
* Add image to request\_spec during resize
* Ensure start time is earlier than end time in simple\_tenant\_usage
* Split out body of loop in \_sync\_power\_states in compute manager
* Remove dead variable assignment in compute manager
* Assign unique names with os-multiple-create
* Nova network needs to take care of existing alias
* Delete baremetal interfaces when their parent node is deleted
* Harmonize PEP8 checking between tox and run\_tests.sh
* VirtualPowerDriver catches ProcessExecutionError
* [xenapi] Cooperatively yield during sparse copy
* Allow archiving deleted rows to shadow tables, for performance
* Adds API Sample tests for FlavorAccess extension
* Add an update option to run\_tests.sh
* filter\_scheduler: Select from a subset of hosts
* use nova-conductor for live-migration
* Fix script argument parsing
* Add option to allow cross AZ attach configurable
* relocatable roots doesn't handle testr args/opts
* Remove a log message in test code
* add config drive to api\_samples
* Don't modify injected\_files inside PXE driver
* Synchronize code from oslo
* Canonizes IPv6 before insert it into the db
* Only dhcp the first ip for each mac address
* Use connection\_info on resize
* Fix add-fixed-ip and remove-fixed-ip
* API extension for accessing instance\_actions
* Use joinedload for system\_metadata in db
* Add migration with data test for migration 151
* Correct misspelling in PowerVM comment
* Add GlusterFS libvirt volume connector
* Module import style checking changes
* Stub additional FloatingIP methods in FlatManager
* Resize/Migrate functions for PowerVM driver
* Added a service heartbeat driver using Memcached
* Use a more specific error reporting invalid disk hardware
* Allow VIF model to be chosen per image
* Check the length of flavor name in "flavor-create"
* Add API sample tests to Services extension
* VMWare driver to use current nova.network.model
* Add "is not" test to hacking.py
* Update tools/regression\_tester
* Fix passing conductor to get\_instance\_nw\_info()
* Imported Translations from Transifex
* Make compute manager use conductor for stopping instances
* Move allowvssprovider=false to vm-data field
* Allow aggregate create to have None as the az
* Forces flavorRef to be string in servers resize api
* xenapi: Remove unecessary exception handling
* Sync jsonutils from openstack-common
* Simplify and optimize az server output extension
* Add an extension to show the type of an ip
* Ensure that only one IP address is allocated
* Make the metadata paths use conductor
* Fix nova-compute use of missing DBError
* Adding support for AoE block storage SANs
* Update docs about testing
* Allow generic rules in context\_is\_admin rule in policy
* Implements resize / cold migration on Hyper-V
* test\_(dis)associate\_by\_non\_existing\_security\_group\_name missing stub
* Make scheduler remove dead nodes from its cache
* More conductor support for resizes
* Allow fixed to float ping with external gateway
* Add generic UC dropper
* Remove locking declarator in ServiceGroup \_\_new\_\_()
* Use ServiceGroup API to show node liveness
* Refine PowerVM MAC address generation algorithm
* Fixes a bug in attaching volumes on Hyper-V
* Fix unconsumed column name warning in test\_migrations
* Fix regression in non-admin simple\_usage:show
* Ensure 'subunit2pyunit' is run in venv from run\_tests.sh
* Fix inaccuracies in the development environment doc
* preserve order of pre-existing iptables chains
* Adds API Sample tests for FloatingIPDNS extension
* Don't call 'vif.plug' twice during VM startup
* Disallow setting /0 for network other than 0.0.0.0
* Fix spelling in comment
* Imported Translations from Transifex
* make vmwareapi driver pass quantum port-id to ESX
* Add control-M to list of characters to strip out
* Update to simplified common oslo version code
* Libvirt: Implement snapshots for LVM-backed roots
* Properly write non-raw LVM images on creation
* Changes GA code for tracking cross-domain
* Return dest\_check\_data as expected by the Scheduler
* Simplify libvirt snapshot code path
* fix VM power state to be NOSTATE when instance not found
* Fix missing key error in libvirt.driver
* Update jsonutils from oslo-incubator
* Update nova/compute/api to handle instance as dict
* Use joined version of db.api calls
* l3.py,add\_floating\_ip: setup NAT before binding
* Regenerate nova.conf.sample
* Fixes a race condition on updating security group rules
* Ensure that LB VIF drivers creates the bridge if necessary
* Remove nova.db call from baremetal PXE driver
* Support for scheduler hints for VM groups
* Fixed FlavorAccess serializer
* Add a virtual PowerDriver for Baremetal testing
* Optimize rpc handling for allocate and deallocate
* Move floating ip db access to calling side
* Implement ZooKeeper driver for ServiceGroup API
* Added the build directory to the tox.ini list pep8 ignores
* support reloctable venv roots in testing framework
* Change to support custom nw filters
* Allow multiple dns servers when starting dnsmasq
* Clean up extended server output samples
* maint: remove unused imports from bin/nova-\*
* xenapi: Cleanup detach\_volume code
* Access DB as dict not as attributes part 5
* Introduce support for 802.1qbg and 802.1qbh to Nova VIF model
* Adds \_(prerun|check)\_134 functions to test\_migrations
* Extension for rebuild-for-ha
* Support hypervisor supplied macs in nova-network
* Recache or rebuild missing images on hard\_reboot
* Cells: Add cells support to hypervisors extension
* Cells: Add cells support to instance\_usage\_audit\_log api extension
* Update modules from common required for rpc with lock detection
* Fix lazy load 'system\_metadata' failed problem
* Ban database access in nova-compute
* Move security\_groups refreshes to conductor
* Fix inject\_files for storing binary file
* Add regression testing tool
* Change forward\_bridge\_interface to MultiStrOpt
* Imported Translations from Transifex
* hypervisor-supplied-nics support in PowerVM
* Default the last parameter (state) in task\_log\_get to None
* Sync latest install\_venv\_common from oslo
* Remove strcmp\_const\_time
* Adds original copyright notice to refactored files
* Update .coveragerc
* Allow disk driver to be chosen per image
* Refactor code for setting up libvirt disk mappings
* Refactor instance usage notifications for compute manager
* Flavor Extra Specs should require admin privileges
* Remove unused methods
* Return to skipping filters when using force\_hosts
* Refactor server password metadata to avoid direct db usage
* lxc: Clean up namespace mounts
* Move libvirt volume driver tests to separate test case
* Move libvirt NFS volume driver impl into volume.py
* replace ssh-keygen -m with a python equivalent
* Allow connecting to self-signed quantum endpoints
* Sync latest db and importutils from oslo
* Use oslo database code
* Fix check instance host for instance action
* Make get\_dev\_name\_for\_instance() use stashed instance\_type info
* Added Postgres CI opportunistic test case
* Remove remaining instance\_types query from compute/manager
* Make cells\_api fetch stashed instance\_type info
* Teach resource tracker about stashed instance types
* Fix up instance types in sys meta for resizes
* lxc: virDomainGetVcpus is not supported by driver
* Fix incorrect device name being raised
* VMware VC Compute Driver
* Default value of monkey\_patch\_modules is broken
* Adds evacuate method to compute.api
* Fix import for install\_venv.py
* allow disabling file injection completely
* separate libvirt injection and configdrive config variables
* Add API sample tests to os-network
* Fix incorrect logs in network
* Update HACKING.rst per recent changes
* Allow for specifying nfs mount options
* Add REST API to show availability\_zone of instance
* Make NFS mount hashes consistent with Cinder
* Parse testr output through subunit2pyunit
* Imported Translations from Transifex
* Optimize floating ip list to make one db query
* Remove hardcoded topic strings in network manager
* Reimplement is\_valid\_ipv4()
* Tweakify is\_valid\_boolstr()
* Fix update quota with invalid value
* Make system\_metadata update in place
* Mark password config options with secret
* Record instance actions and events
* Postgres does not like empty strings for type inet
* Add 'not in' test to tools/hacking.py
* Split floating ip functionality into new file
* Optimize network calls by moving them to api
* Fixes unhandled exception in detach\_volume
* Fixes FloatingIPDNS extension 'show' method
* import tools/flakes from oslo
* Use conductor for instance\_info\_cache\_update
* Quantum metadata handler now uses X-Forwarded-For
* instance.update notifications don't always identify the service
* Handle compute node not available for live migration
* Fixes 'not in' operator usage
* Fixes "is not" usage
* Make scheduler modules pass conductor to add\_instance\_fault
* Condense multiple authorizers into a single one
* Extend extension\_authorizer to enable cleaner code
* Remove unnecessary deserializer test
* Added sample tests to FlavorExtraSpecs API
* Fix rebuild with volumes attached
* DRYing up volume\_in\_mapping code
* Use \_prep\_block\_device in rebuild
* xenapi: Ax unecessary \`block\_device\_info\` params
* Code cleanup for rebuild block device mapping
* Fix eventlet/mysql db pooling code
* Add support for compressing qcow2 snapshots
* Remove deprecation notice in LibvirtBridgeDriver
* Fix boto capabilities check
* Add api samples to fping extension
* Fix SQL Error with fixed ips under devstack/postgresql
* Pass testropts in to setup.py in run\_tests.sh
* Nova Hyper-V driver refactoring
* Fixed grammar problems and typos in doc strings
* Add option to control where bridges forward
* xenapi: Add support for different image upload drivers
* Removed print stmts in test cases
* Fix get and update in FlavorExtraSpecs
* Libvirt: Add support for live snapshots
* Move task\_log functions to conductor
* erase outdated comment
* Keep flavor information in system\_metadata
* Add instance\_fault\_create() to conductor
* Adds API Sample tests for os-instance\_usage\_audit\_log extension
* validate specified volumes to boot from at the API layer
* Refactor libvirt volume driver classes to reduce duplication
* Change ''' to """ in bin/nova-{novncproxy,spicehtml5proxy}
* Pass parameter 'filter' back to model layer
* Fix boot with image not active
* refactored data upgrade tests in test\_migrations
* Fix authorized\_keys file permissions
* Finer access control in os-volume\_attachments
* Stop including full service catalog in each RPC msg
* Make sure there are no unused import
* Fix missing wrap\_db\_error for Session.execute() method
* Use install\_venv\_common.py from oslo
* Add Region name to quantum client
* Removes retry of set\_admin\_password
* fix nova-baremetal-manage version printing
* Refactoring/cleanup of compute and db apis
* Fix an error in affinity filters
* Fix a typo of log message in \_poll\_unconfirmed\_resizes
* Allow users to specify a tmp location via config
* Avoid hard dependency on python-coverage
* iptables-restore error when table not loaded
* Don't warn up front about libvirt loading issues in NWFilterFirewall
* Relax API restrictions around the use of reboot
* Strip out Traceback from HTTP response
* VMware Compute Driver OVF Support
* VMware Compute Driver Host Ops
* VMware Compute Driver Networking
* Move policy checks to calling side of rpc
* Add api-samples to multinic extension
* Add system\_metadata to db.instance\_get\_active\_by\_window\_joined
* Enable N302: Import modules only
* clean up api\_samples documentation
* Fix bad imports that cause nova-novncproxy to fail
* populate dnsmasq lease db with valid leases
* Support optional 4 arg for nova-dhcpbridge
* Add debug log when call out to glance
* Increase maximum URI size for EC2 API to 16k
* VMware Compute Driver Glance improvement
* Refactored run\_command for better naming
* Fix rendering of FixedIpNotFoundForNetworkHost
* Fix hacking N302 import only modules
* Avoid db lookup in info\_from\_instance()
* Fixes task\_log\_get and task\_log\_get\_all signatures
* Make failures in the periodic tests more detailed
* Clearer debug when test\_terminate\_sigterm fails
* Skip backup files when running pep8
* Added sample tests to floating-ip-pools API
* \_sync\_compute\_node should log host and nodename
* Don't pass the entire list of instances to compute
* VMware Compute Driver Volume Management
* Bump the base rpc version of the network api to 1.7
* Remove compute api from scheduler driver
* Remove network manager from compute manager
* Adds SSL support for API server
* Provide creating real unique constraints for columns
* Add version constraint for coverage
* Correct a format string in virt/baremetal/ipmi.py
* Add REST api to manage bare-metal nodes
* Adding REST API to show all availability zones of an region
* Fixed nova-manage argument parsing error
* xenapi: Add cleanup\_sm\_locks script
* Fix double reboot during resume\_state\_on\_host\_boot
* Add support for memory overcommit in live-migration
* Adds conductor support for instance\_get\_active\_by\_window\_joined
* Make compare\_result show the difference in lists
* Don't limit SSH keys generation to 1024 bits
* Ensure service's servicegroup API is created first
* Drop volume API
* Fix for typo in xml API doc sample in nova
* Avoid stuck task\_state on snapshot image failure
* ensure failure to inject user files results in startup error
* List servers having non-existent flavor should return empty list
* Add version constraint for cinder
* Remove duplicated tapdev creation code from libvirt VIF
* Move helper APIs for OVS ports into linux\_net
* Add 'ovs\_interfaceid' to nova network VIF model
* Replace use of mkdtemp with fixtures.TempDir
* Add trust level cache to trusted\_filter
* Fix the wrong datatype in task\_log table
* Cleanup of extract\_opts.py
* Baremetal/utils should not log certain exceptions
* Use setup.py testr to run testr in run\_tests.sh
* Fix nova coverage
* PXE driver should rmtree directories it created
* Fix floating ips with external gateway
* Add support for Option Groups in LazyPluggable
* Fix incorrect use of context object
* Unpin testtools
* fix misspellings in logs, comments and tests
* fix mysql race in tests
* Fix get Floating ip pools action name to match with its policy
* Generate coverage even if tests failed
* Allow snapshots of paused and suspended instances
* Update en\_US message translations
* Sync latest cfg from oslo-incubator
* Avoid testtools 0.9.25
* Cells: Add support for compute HostAPI()
* Refactor compute\_utils to avoid db lookup
* ensure zeros are written out when clearing volumes
* fix service\_ref undefined problem
* Add rootwrap filters for password injection with localfs
* fix floating ip test that wasn't running
* Prevent metadata updates until instance is active
* More consistent libvirt XML handling and cleanup
* pick up eventlet backdoor fix from oslo
* Run\_as\_root to ensure resize2fs succeed for all image backends
* libvirt: Fix typo in configdrive implementation
* Refactor EC2 keypairs exception
* Directly copy a file URL from glance
* Remove restoring soft deleted entries part 2
* Remove restoring soft deleted entries part 1
* Use conductor in the servicegroup db driver
* Add service\_update to conductor
* Remove some db calls from db servicegroup driver
* XenAPI: Fix volume detach
* Refactor: extract method: driver\_dict\_from\_config
* Cells: Fix for relaying instance info\_cache updates
* Fix wrong quota reservation when deleting resizing instance
* Go back to the original branch after pylint check
* Ignore auto-generated files by lintstack
* Add host to instance\_faults table
* Clean up db network db calls for fixed and float
* Remove obsolete baremetal override of MAC addresses
* Fix multi line docstring tests in hacking.py
* PXE driver should not accept empty kernel UUID
* Use common rootwrap from oslo-incubator
* Remove network\_host config option
* Better instance fault message when rescheduling
* libvirt: Optimize test\_connection and capabilities
* don't allow crs in the code
* enforce server\_id can only be uuid or int
* Allow nova to use insecure cinderclient
* Makes sure compute doesn't crash on failed resume
* Fix fallback when Quantum doesn't provide a 'vif\_type'
* Move compute node operations to conductor
* correcting for proper use of the word 'an'
* Correcting improper use of the word 'an'
* Save password set through xen agent
* Add encryption method using an ssh public key
* Make resource tracker use conductor for listing instances
* Make resource tracker use conductor for listing compute nodes
* Updates prerequisite packages for fedora
* Expose a get\_spice\_console RPC API method
* Add a get\_spice\_console method to nova.virt.ComputeDriver API
* Add nova-spicehtml5proxy helper
* Pull NovaWebSocketProxy class out of nova-novncproxy binary
* Add support for configuring SPICE graphics with libvirt
* Add support for setting up <channel> elements in libvirt config
* Add common config options for SPICE graphics
* Create ports in quantum matching hypervisor MAC addresses
* Make nova-api logs more useful
* Override floating interface on callee side
* Reject user ports that have MACs the hypervisor cannot use
* Remove unused import
* Reduce number of iptable-save restore loops
* Clean up get\_instance\_id\_by\_floating\_address
* Move migration\_get\_...\_by\_host\_and\_node to conductor
* Make resource tracker use conductor for migration updates
* minor improvements to nova/tests/test\_metadata.py
* Cells: Add some cells support to admin\_actions extension
* Populate service list with availability zone and correct unit test
* Correct misspelling of fake\_service\_get\_all
* Add 'devname' to nova.network.model.VIF class
* Use testrepository setuptools support
* Cleaning up exception handling
* libvirt: use tap for non-blockdevice images on Xen
* Export the MAC addresses of nodes for bare-metal
* Cells: Add cells API extension
* More HostAPI() cleanup for cells
* Break out a helper function for working with bare metal nodes
* Renames the new os-networks extension
* Define a hypervisor driver method for getting MAC addresses
* enables admin to view instance fault "details"
* Revert "Use testr setuptools commands."
* Revert "Populate service list with availability zone"
* Fix typos in docstring
* Fix problem with ipv6 link-local address(es)
* Adds support for Quantum networking in Hyper-V
* enable hacking.py self tests
* Correct docstring on sizelimit middleware
* sync latest log and lockutils from oslo
* Fix addition of CPU features when running against legacy libvirt
* Fix nova.availability\_zones docstring
* Fix uses of service\_get\_all\_compute\_by\_host
* VMware Compute Driver Rename
* use postgresql INET datatype for storing IPs
* Extract validation and provision code to separate method
* Implement Quantum support for addition and removal of fixed IPs
* Keep self and context out of error notification payload
* Populate service list with availability zone
* Add Compute API validations for block device map
* Cells: Commit resize quota reservations immediately
* Cells: Reduce the create\_image call depth for cells
* Clean up compute API image\_create
* Fix logic error in periodic task wait code
* Centralize instance directory logic
* Chown doesn't work on mounted vfat
* instances\_path is now defined here
* Convert ConfigDriveHelper to being a context manager itself
* Use testr setuptools commands
* Move migration\_create() to conductor
* Move network call from compute API to the manager
* Fix incorrect comment, and move a variable close to use
* Make sure reboot\_instance uses updated instance
* Cleanup reboot\_instance tests
* Fix use of stale instance data in compute manager
* Implements getPasswordData for ec2
* Add service\_destroy to conductor
* Make nova.service get service through conductor
* Add service\_create to conductor
* Handle waiting for conductor in nova.service
* Allow forcing local conductor
* Make pinging conductor a part of conductor API
* Fix some conductor manager return values
* Handle directory conflicts with html output
* Fix error in NovaBase.save() method
* Skip domains on libvirt errors in get\_vcpu\_used()
* Fix state sync logic related to the PAUSED VM state
* Remove more unused opts from nova.scheduler.driver
* Fix quota updating when admin deletes common user's instance
* Tests for PXE bare-metal provisioning helper server
* Correct the calculating of disk size when using lvm disk backend
* Adding configdrive to xenapi
* Validated device\_name value in block device map
* Fix libvirt resume function call to get\_domain\_xml
* Make it clearer that network.api.API is nova-network specific
* Access instance as dict, not object in xenapi
* Expand quota logging
* Move logic from os-api-host into compute
* Create a directory for servicegroup drivers
* Move update\_instance\_info\_cache to conductor
* Change ComputerDriver.legacy\_nwinfo to raise by default
* Cleanup pyflakes in nova-manage
* Add user/tenant shim to RequestContext
* make runtests -p act more like tox
* fix new N402 errors
* Add host name to log message for \_local\_delete
* Try out a new nova.conf.sample format
* Regenerate nova.conf.sample
* Make Quantum plugin fill in the 'bridge' name
* Make nova network manager fill in vif\_type
* Add some constants to the network model for drivers to use
* Move libvirt VIF XML config into designer.py
* Remove bogus 'unplug' calls from libvirt VIF test
* Fix bash syntax error in run\_tests.sh
* Update instance's cell\_name in API cell
* Fix init\_host checking moved instances
* Fix test cases in integrated.test\_multiprocess\_api
* Map libvirt error to InstanceNotFound in get\_instance\_disk\_info
* Fixed comment typo
* Added sample tests to FlavorSwap API
* Remove unused baremetal PXE options
* Remove unused opt import in scheduler.driver
* Move global service networking opts to new module
* Move memcached\_servers opt into common.memorycache
* Move service\_down\_time to nova.service
* Move vpn\_key\_suffix into pipelib
* fix N402 on tools/
* fix N402 for nova-manage
* fix N402 for rest of nova
* fix N402 for nova/c\*
* fix N402 for nova/db
* don't clear the database dicts in the tearDown method
* Fixed typos in doc strings
* Enhance wsgi to listen on ipv6 address
* Adds a flag to allow configuring a region
* Fix double reboot issue during soft reboot
* Remove baremetal-compute-pxe.filters
* Fix pyflakes issues in integrated tests
* Adds option to rebuild instance with existing disk
* Move common virt driver options to virt.driver
* Move vpn\_image\_id to pipelib
* Move enabled\_apis option into nova.service
* Move default\_instance\_type into nova.compute
* Move osapi\_compute\_unique\_server\_name\_scope to db
* Move api\_class options to where they are used
* Move manager options into nova.service
* Move compute\_topic into nova.compute.rpcapi
* fix N402 for nova/network
* fix N402 for nova/scheduler
* fix N402 for nova/tests
* Fix N402 for nova/virt
* Fix N402 for nova/api
* New instance\_actions and events table, model, and api
* Cope better with out of sync bm data
* Import latest timeutils from oslo-incubator
* Remove availability\_zones from service table
* Enable Aggregate based availability zones
* Sync log from oslo-incubator
* Clarify the DBApi object in cells fakes
* Fix lintstack check for multi-patch reviews
* Adds to manager init\_host validation for instances location
* Add to libvirt driver instance\_on\_disk method
* add to driver option to keep disks when instance destroyed
* Fix serialization in impl\_zmq
* Added sample tests to FlavorRxtx API
* Refresh instance metadata in-place
* xenapi: Remove dead code, moves, tests
* Fix baremetal VIFDriver
* Adds a new tenant-centric network extension
* CLI for bare-metal database sync
* Move scheduler\_topic into nova.scheduler.rpcapi
* Move console\_topic into nova.console.rpcapi
* Move network\_topic into nova.network.rpcapi
* Move cert\_topic into nova.cert.rpcapi
* Move global s3 opts into nova.image.s3
* Move global glance opts into nova.image.glance
* Remove unused osapi\_path option
* attach/detach\_volume() take instance as a parameter
* fix N401 errors, stop ignoring all N4\* errors
* Add api extension to get and reset password
* powervm: Implement snapshot for local volumes
* Add exception handler for previous deleted flavor
* Add NoopQuotaDriver
* Conductor instance\_get\_all replaces \_by\_filters
* Support cinderclient http retries
* Sync rpc and notifier from oslo-incubator
* PXE bare-metal provisioning helper server
* Added sample tests to QuotaClasses API
* Changed 'OpenStack, LLC' message to 'OpenStack Foundation'
* Convert short doc strings to be on one line
* Get instances from conductor in init\_host
* Invert test stream capture logic for debugging
* Upgrade WebOb to 1.2.3
* Make WebOb version specification more flexible
* Refactor work with TaskLog in sqlalchemy.api
* Check admin context in bm\_interface\_get\_all()
* Provide a PXE NodeDriver for the Baremetal driver
* Handle compute node records with no timestamp
* config\_drive is missing in xml deserializer
* Imported Translations from Transifex
* NovaBase.delete() rename to NovaBase.soft\_delete()
* livbirt: have a single source of console log file naming
* Remove the global DATA
* Add ping to conductor
* Add two tests for resize action in ServerActionsControllerTest
* Move service\_get\_all operations to conductor
* Move migration\_get\_unconfirmed\_by\_dest\_compute to conductor
* Move vol\_usage methods to conductor
* Add test for resize server in ComputeAPITestCase
* Allow pinging own float when using fixed gateway
* Use full instance in virt driver volume usage
* Imported Translations from Transifex
* Refactor periodic tasks
* Cells: Add periodic instance healing
* Timeout individual tests after one minute
* Fix regression in RetryFilter
* Cells: Add the main code
* Adding two snapshot related task states
* update version urls to working v2 urls
* Add helper methods to nova.paths
* Move global path opts in nova.paths
* Remove unused aws access key opts
* Move fake\_network opt to nova.network.manager
* Allow larger encrypted password posts to metadata
* Move instance\_type\_get() to conductor
* Move instance\_info\_cache\_delete() to conductor
* Move instance\_destroy() to conductor
* Move instance\_get\_\*() to conductor
* Sync timeutils changes from Oslo
* Remove system\_metadata db calls from compute manager
* Move block\_device\_mapping destroy operations to conductor
* Clean up setting of control\_exchange default
* fix floating-ip in multihost case
* Invalid EC2 ids should make the entire request fail
* improve libguestfs exception handling
* fix resize of unpartitioned images with libguestfs
* xenapi: Avoid hotplugging volumes on resize
* Remove unused VMWare VIF driver abstraction
* Delete pointless nova.virt.VIFDriver class
* Clarify & fix docs for nova-novncproxy
* Removes unused imports
* Imported Translations from Transifex
* Fix spelling mistakes in nova.virt
* Cells: Add cells commands to nova-manage
* Add remaining get\_backdoor\_port() rpc calls to coverage
* Fix race in resource tracker
* Move block\_device\_mapping get operations to conductor
* Move block\_device\_mapping update operations to conductor
* Improve baremetal driver error handling
* Add unit test to update server metadata
* Add unit test to revert resize server action
* Add compute build/resize errors to instance faults
* Add unit test for too long metadata for server rebuild action
* Adds os-volume\_attachments 'volume\_id' validation
* Raise BadRequest when updating 'personality'
* Imported Translations from Transifex
* Ensure that Quantum uses configured fixed IP
* Add conditions in compute APIRouter
* Imported Translations from Transifex
* CRUD on flavor extra spec extension should be admin-only
* Report failures to mount in localfs correctly
* Add API sample tests to FixedIPs extension
* baremetal power driver takes \*\*kwargs
* Implement IPMI sub-driver for baremetal compute
* Fix tests/baremetal/test\_driver.py
* Move baremetal options to [BAREMETAL] OptGroup
* Adds test for HTTPUnprocessableEntity when rebooting
* Make sure the loadables path is the absolute path
* Fix bug and remove update lock in db.instance\_test\_and\_set()
* Periodic update of DNS entries
* Fix error in test\_get\_all\_by\_multiple\_options\_at\_once()
* Remove session.flush() and session.query() monkey patching
* Update nova-cert man page
* Allow new XML API sample file generation
* Remove unused imports
* spelling in test\_migrations
* Imported Translations from Transifex
* Check for image\_meta in libvirt.driver.spawn
* Adds test for 'itemNotFound' errors in 'Delete server'
* Remove improper NotFound except block in list servers
* Spelling: Compatability=>Compatibility
* Imported Translations from Transifex
* Ensure we add a new line when appending to rc.local
* Verify the disk file exists before running qemu-img on it
* Remove lxc attaching/detaching of volumes
* Teardown container rootfs in host namespace for lxc
* Fix cloudpipe instances query
* Ensure datetimes can be properly serialized
* Imported Translations from Transifex
* Database metadata performance optimizations
* db.network\_delete\_safe() method performance optimization
* db.security\_group\_rule\_destroy() method performance optimization
* Import missing exception
* Ignore double messages to associate the same ip
* Imported Translations from Transifex
* Database reservations methods performance optimization
* Using query.soft\_delete() method insead of soft deleting by hand
* Create and use subclass of sqlalchemy Query with soft\_delete() method
* Remove inconsistent usage of variable from hyperv
* Log last compute error when rescheduling
* Removed unused imports
* Make libvirt driver default to virtio for KVM/QEMU NICs
* Refactor libvirt VIF classes to reduce duplicate code
* Makes sure to call crypto scripts with abspath
* Enable nova exception format checking in tests
* Eliminate race conditions in floating association
* Imported Translations from Transifex
* Provide a configdrive helper which uses contextlib
* Add extension to allow hiding of addresses
* Add html reports to report action in coverage extension
* Add API samples tests for the coverage extension
* Fix \_find\_ports() for when backdoor\_port is None
* Parameterize database connection in test.py
* fixing the typo of the error message from nbd
* add 'random\_seed' entry to instance metadata
* Baremetal VIF and Volume sub-drivers
* Fix revert resize failure with disk.local not found
* Fix a test isolation error in compute.test\_compute
* New Baremetal provisioning framework
* Move baremetal database tests to fixtures
* address uuid overwriting
* Add get\_backdoor\_port to cert
* Add get\_backdoor\_port to scheduler
* Add get\_backdoor\_port to console
* Make libvirt driver.listinstances return defined
* Add get\_backdoor\_port to consoleauth
* Export custom SMBIOS info to QEMU/KVM guests
* Make configdrive.py use version.product\_string()
* Allow loading of product/vendor/package info from external file
* Remove obsolete VCS version info completely
* Trap exception when trying to write csr
* Define a product, vendor & package strings in version.py
* Extract image metadata from Cinder
* Add expected exception to aggregate\_metadata\_delete()
* Move aggregate\_get() to conductor
* Add .testrepository/ directory to gitginore
* Make load\_network\_driver load passed in driver
* Fix race condition of resize confirmation
* libvirt: Make vif\_driver.plug() returns None
* Add an iptables mangle rule per-bridge for DHCP
* Make NBD retry logic more generic, add retry to loop
* Reliably include OS type in ephemeral filenames
* Allow specification of libvirt guest interface backend driver
* Fix "image\_meta" data passed in libvirt test case
* Fix typos in vncserver\_listen config param help description
* Traceback when user doesn't have permission
* removed duplicate function definitions
* network/api add\_fixed\_ip correctly passes uuid
* Import cfg module in extract\_opts.py
* Raise old exception instance instead of new one
* Update exceptions to pass correct kwargs
* Add option to make exception format errors fatal
* allow for the ability to run partial coverage
* Remove fake\_tests opt from test.py
* Execute pygrub using nova-rootwrap in xenapi
* Add DBDuplicateEntry exception for unique constraint violations
* Fix stack trace on incorrect nova-manage args
* Use service fixture in DB servicegroup tests
* fix instance rescue without cmdline params in xml.rescue
* Added sample tests to FlavorDisabled API
* Reset the IPv6 API backend when resetting the conf stack
* libvirt: Skip intermediate base files with qcow2
* fix test\_nbd using stubs
* Imported Translations from Transifex
* Properly remove the time override in quota tests
* Fix API samples generation
* Move TimeOverride to the general reusable-test-helper place
* Added conf support for security groups
* Add accounting for orphans to resource tracker
* Add more association support to network API
* Remove the WillNotSchedule exception
* Replace fixtures.DetailStream with fixtures.StringStream
* Move network\_driver into new nova.network.driver
* Move DNS manager options into network.manager
* Refactor xvp console
* Move agent\_build\_get\_by\_triple to conductor
* Move provider\_fw\_rule\_get\_all to conductor
* Move security\_group operations in VirtAPI to conductor
* Retry NBD device allocation
* Use testr to run nova unittests
* Add a developer trap for api samples
* Update command on devref doc
* Fixed deleting instance booted from invalid vol
* Add general mechanism for testing api coverage
* Add the missing replacement text in devref doc
* Allow xenapi to work with empty image metadata
* Imported Translations from Transifex
* Fix for broken switch for config\_drive
* Fix use of osapi\_compute\_extension option in api\_samples
* Remove sleep in test\_consoleauth
* Fix errors in used\_limits extension
* Fix poll\_rescued\_instances periodic task
* Add syslogging to nova-rootwrap
* Clean up run\_tests.sh
* Ensure that sql\_dbpool\_enable is a boolean value
* Stop nbd leaks, remove pid race
* Fixes KeyError: 'sr\_uuid' when booting from volume on xenapi
* Add VirtAPI tests
* Move remaining aggregate operations to conductor
* remove session param from instance\_get
* remove session param from instance\_get\_by\_uuid
* Use nova.test.TestCase as the base test class
* Ensure datetimes can be properly serialized
* Fixes string formatting error
* Adds API Sample tests for DiskConfig extension
* Fix for correctly parsing snapshot uuid in ec2api
* Autodetect nbd devices
* Add Jian Wen to .mailmap
* Move metadata\_{host,port} to network.linux\_net
* Move API extension opts to api.openstack.compute
* Move osapi\_max\_limit into api.openstack.common
* Move link\_prefix options into api.openstack.common
* Move some opts into nova.utils
* Properly scope password options
* Remove the deprecated quantum v1 code and directory
* add and removed fixed ip now refresh cache
* Implement an XML matcher
* Add support for parsing the <uuid> from libvirt host capabilities
* Add support for libvirt domain <smbios> XML config
* Add support for libvirt domain <sysinfo> XML config
* Add coverage extension to nova API
* Allow rpc-silent FloatingIP exceptions in n-net
* Allow conductor exceptions to pass over RPC silently
* Don't leak info from libvirt LVM backed instances
* Add get\_backdoor\_port to nova-conductor
* Properly scope isolated hosts config opts
* Move monkey patch config opts into nova.utils
* Move zombie\_instance\_updated\_at\_window option
* Move some options into nova.image.glance
* Move cache\_images to nova.virt.xenapi.vm\_utils
* Move api\_rate\_limit and auth\_strategy to nova.api
* Move api\_paste\_config option into nova.wsgi
* Port to argparse based cfg
* Cleanup the test DNS managers
* Move all temporary files into a single /tmp subdir
* Modified sample tests to FlavorExtraData API
* Fix KeyError of log message in virt/libvirt/utils.py
* Allows an instance to post encrypted password
* Make nova/virt use aggregate['metadetails']
* Revert "Simplify how ephemeral disks are created and named."
* Fix bw\_usage\_update issue with conductor
* Correctly init XenAPIDriver in vm\_vdi\_cleaner.py
* Set instance\_ref['node'] in \_set\_instance\_host\_and\_node
* Consider reserved count in os-user-limits extension
* Make DNS drivers inherit interface
* Map cinder snapshot statuses to ec2
* i18n raise Exception messages
* Set default DNS driver to No-op
* Access DB values as dict not as attributes. Part 4
* Use conductor for bw\_usage operations
* libvirt: enable apic setting for Xen or KVM guest
* Improve virt/disk/mount/nbd test coverage
* Add NFS to the libvirt volume driver list
* Use admin user to read Quantum port
* Add vif\_type to the VIF model
* Make the nbd mounter respect CONF.max\_nbd\_devices
* Imported Translations from Transifex
* Raise NotImplementedError in dns\_driver.DNSDriver
* Unpin lxml requirements
* Added sample tests to FlavorManage API
* Use fixtures library for nova test fixtures
* Catch ProcessExecutionError when building config drives
* Fix fname concurrency tests
* Imported Translations from Transifex
* Make ignore\_hosts and force\_hosts work again
* Run test objectstore server on arbitrary free port
* Fix network manager ipv6 tests
* Prevent creation of extraneous resource trackers
* Remove unused bridge interfaces
* Use conductor for migration\_get()
* Reset node to source in finish\_revert\_resize()
* Simplify how ephemeral disks are created and named
* Order instance faults by created\_at and id
* Sync RPC logging-related bits from oslo
* Fix bugs in test\_migrations.py
* Fix regression allowing quotas to be applied to projects
* Improve nova-manage usability
* Add new cliutils code from oslo-incubator
* Update tools/flakes to work with pydoc
* Fix pep8 exclude logic for 1.3.3
* Avoid vm instance shutdown when power state is NOSTATE
* Fix handling of unimplemented host actions
* Fix positional arg swallow decorator
* Fix minidns delete\_entry to work for hostname with mixed case chars
* powervm: Refactored run\_command for better naming
* Sync latest openstack.common.rpc
* Ensure prep\_resize arguments can be serialized
* Add host to get\_backdoor\_port() for network api
* Add agent build API support for list/create/delete/modify agent build
* Added sample tests to extended status API
* Imported Translations from Transifex
* Make policy.json not filesystem location specific
* Use conductor for resourcetracker instance\_update
* network managers: Pass elevated cxtx to update\_dhcp
* Volume backed live migration w/o shared storage
* Add pyflakes option to tox
* Adds API Sample tests for Quotas extension
* Boot from volume without image supplied
* Implements volume usage metering
* Configurable exec\_dirs to find rootwrap commands
* Allow newer boto library versions
* Add notifications when libvirtd goes down
* Make update\_service\_capabilities() accept a list of capabilities
* update mailmap to add my perferred mail
* Fix test suite to use MiniDNS
* Add support for new WMI iSCSI initiator API
* Added sample tests to deferred delete API
* On confirm\_resize, update correct resource tracker
* Renaming xml test class in sample tests of consoles API
* remove session param from certificate\_get
* improve sessions for key\_pair\_(create,destroy)
* powervm: add DiskAdapter for local volumes
* Access DB values as dict not as attributes. Part 3
* Patch fake\_libvirt\_utils with fixtures.MonkeyPatch
* Open test xenapi/vm\_rrd.xml relative to tests
* Reset notifier\_api before each test
* Reset volume\_api before cinder cloud tests
* Fix rpc control\_exchange regression
* Add generic customization hooks via decorator
* add metadata support for overlapping networks
* Split out part of compute's init\_host
* Use elevated cxtx in resource\_tracker.resize\_claim
* Fix test\_migrations for postgres
* Add vpn ip/port setting support for CloudPipe
* Access DB values as dict not as attributes. Part 2
* Enable debug in run\_tests using pdb
* Add POWERVM\_STARTING state to powervm driver
* Fix test\_inject\_admin\_password for OSX
* Multi host DHCP networking and local DNS resolving
* use file instead of tap for non-blockdevice images on Xen
* use libvirt getInfo() to receive number of physical CPUs
* Don't run the periodic task if ticks\_between\_runs is below zero
* Fix args to AggregateError exception
* Fix typo in inherit\_properties\_from\_image
* Access DB values as dict not as attributes
* Fix KeyError of log message in compute/api.py
* Fix import problem in test\_virt\_disk\_vfs\_localfs
* Remove start\_guests\_on\_host\_boot config option
* Add aggregate\_host\_add and \_delete to conductor
* Imported Translations from Transifex
* Call plug\_vifs() for all instances in init\_host
* Make compute manager use conductor for instance\_gets
* Fixes HyperV compute "resume" tests
* Convert datetimes for conductor instance\_update
* Update migration so it supports PostgreSQL
* Include 'hosts' and 'metadetails' in aggregate
* Verify doc/api\_samples files along with the templates
* Remove default\_image config option
* Move ec2 config opts to nova.api.ec2.cloud
* Move imagecache code from nova.virt.libvirt.utils
* Use flags() helper method to override config in tests
* RetryFilter checks 'node' as well as 'host'
* Make resize and multi-node work properly together
* Migration model update for multi-node resize fix
* Add version to conductor migration\_update message
* Validate rxtx\_factor as a float
* Display errors when running nosetests
* Respect the base\_dir\_name flag in imagebackend
* Add exceptions to baremetal/db/api
* Clean up unused methods in scheduler/driver
* Provide better error message for aggregate-create
* Imported Translations from Transifex
* Allow multi\_host compute nodes to share dhcp ip
* Add blank nova/virt/baremetal/\_\_init\_\_.py
* Add migration\_update to conductor
* Remove unnecessary topic argument
* Add pluggable ServiceGroup monitoring APIs
* Add SSL support to utils.generate\_glance\_url()
* Add eventlet db\_pool use for mysql
* Make compute manager use nova-conductor for instance\_update
* Missing instance\_uuid in floating\_ip notifications
* Make nova-dhcpbridge use CONFIG\_FILE over FLAGFILE
* Rename instance\_info\_cache unique key constraints
* Cleanup compute multi-node assignment of node
* Imported Translations from Transifex
* maint: remove an unused import from libvirt.utils
* Encode consoleauth token in utf-8 to make it a str
* nova-dhcpbridge should require the FLAGFILE is set
* Added cpu\_info report to HyperV Compute driver
* Remove stale flags unit tests
* Truncate large console logs in libvirt
* Move global fixture setup into nova/test.py
* Complete API samples for Hosts extension
* Fix HostDeserializer to enable multiple line xml
* adjust rootwrap filters for recent file injection changes
* Don't hard code the xen hvmloader path
* Don't update arch twice when create server
* remove db access in xen driver
* Imported Translations from Transifex
* Move compute\_driver into nova.virt.driver
* Re-organize compute opts a bit
* Move compute opts from nova.config
* Add a CONTRIBUTING file
* Compute doesn't set the 'host' field in instance
* Xenapi: Don't resize down if not auto\_disk\_config
* Cells: Re-add DB model and calls
* Use more specific SecurityGroupHandler calls
* Fix wait\_for\_deleted function in SmokeTests
* Wrap log messages with \_()
* Add methods to Host operations to fake hypervisor
* Move sql options to nova.db.sqlalchemy.session
* Add debug logging to disk mount modules
* Remove the libguestfs disk mount API implementation
* Remove img\_handlers config parameter usage
* Convert file injection code to use the VFS APIs
* Introduce a VFS implementation backed by the libguestfs APIs
* Introduce a VFS implementation mapped to the host filesystem
* Adds API for bulk creation/deletion of floating IPs
* Remove obsolete config drive init.d example
* Imported Translations from Transifex
* Rename sql\_pool\_size to sql\_max\_pool\_size
* Detect shared storage; handle base cleanup better
* Allow VMs to be resumed after a hypervisor reboot
* Fix non-primitive uses of instance in compute/manager
* Remove extra space in exception
* Adds missing index migrations by instance/status
* Convert migrations.instance\_uuid to String(36)
* Add missing binary
* Change all tenants servers listing as policy-based
* Fixes a bug in get\_info in the Hyper-V Driver
* refactor: extract method: connect\_volume
* Handle instances not being found in EC2 API responses
* Pin pep8 to 1.3.3
* Return an error response if the specified flavor does not exists. (v4)
* Send block device mappings to rebuild\_instance
* Move db lookup for block device mappings
* Use CONF.import\_opt() for nova.config opts
* Imported Translations from Transifex
* Remove nova.config.CONF
* Add keystoneclient to pip-requires
* Pass rpc connection to pre\_start\_hook
* Fix typo: hpervisor=> hypervisor
* Fix reversed args to call to \_reschedule
* Add the beginnings of the nova-conductor service
* remove old baremetal driver
* Remove useless function quota\_usage\_create
* Fix calls to private method in linux\_net
* Drop unused PostgreSQL sequences from Folsom
* Compact pre-Grizzly database migrations
* Fix os-hosts extension can't return xml response correctly
* Set node\_availability\_zone in XenAPIAggregateTestCase
* Ignore editor backup files
* Imported Translations from Transifex
* Remove nova.flags
* Remove FLAGS
* Make fping extension use CONF
* Use disk image path to setup lxc container
* Use the auth\_token middleware from keystoneclient
* improve session handling around instance\_ methods
* add index to fixed\_ips
* add instance\_type\_extra\_specs to instances
* Change a toplevel function comment to a docstring
* Ensure cat process is terminated
* Add some sqlalchemy tweakables
* Fixes an error reporting bug on Hyper-V
* update api\_samples add os-server-start-stop
* update api\_samples add os-services module
* Switch to using eventlet\_backdoor from oslo
* Sync eventlet\_backdoor from oslo
* Added sample tests to consoles API
* Fix use of 'volume' variable name
* Ditch unused import and variable
* Make ec2\_instance\_create db method consistant across db apis
* Adds documentation for Hyper-V testing
* Adds support for ConfigDriveV2 in Hyper-V
* don't explode if a 413 didn't set Retry-After
* Fix a couple uses of FLAGS
* Remove nova.flags imports from scheduler code
* Remove some unused imports from compute/\*
* Remove importing of flags from compute/\*
* Remove nova.flags imports from bin/\*
* Move nova shared config options to nova.config
* Fix use\_single\_default\_gateway
* Update api\_samples README.rst to use tox
* Do not alias stdlib uuid module as uuidutils, since nova has uuidutils
* Allow group='foo' in self.flags() for tests
* updated api\_samples with real hypervisor\_hostname
* Issue a hard shutdown if clean fails on resize up
* Introduce a VFS api abstraction for manipulating disk images
* Fix network RPC API backwards compat
* create\_db\_entry\_for\_new\_instance did not call sgh for default
* Add support for backdoor\_port to be returned with a rpc call
* Refactor scheduling filters
* Unpin amqplib and kombu requirements
* Add module for loading specific classes
* Make sure instance data is always refreshed
* Move all mount classes into a subdirectory
* Add support for resizes to resource tracker
* Fixes create instance \*without\* config drive test
* Update db entry before upate the DHCP host file
* Remove gen\_uuid()
* Enhance compute capability filter to check multi-level
* API extension for fpinging instances
* Allow controller extensions to extend update/show
* Isolate tests from the environment variable http\_proxy
* Handle image cache hashing on shared storage
* fix flag type define error
* Simplify libvirt volume testing code
* Migrate floating ip addresses in multi\_host live\_migration
* Add DB query to get in-progress migrations
* Try hard shutdown if clean fails on resize down
* Restore self.test\_instance at LibvirtConnTestCase.setUp()
* Fixes usage of migrate\_instance\_start
* added getter methods for quantumv2 api
* fix LVM backed VM logial volumes can't be deleted
* Clean up \_\_main\_\_ execution from two tests for consistency
* Imported Translations from Transifex
* Update uuidutils from openstack common
* Remove volume.driver and volume.iscsi
* Use base image for rescue instance
* Make xenapi shutdown mode explicit
* Fix a bug in XenAPISession's use of virtapi
* Ban db import from nova/virt
* Update vol mount smoketest to wait for volume
* Add missing webob to exc
* Add missing exception NetworkDuplicated
* Fix misuse of exists()
* Rename config to vconfig
* Move agent\_build\_get\_by\_triple to VirtAPI
* Fix \_setup\_routes() signature in APIRouter
* Move libvirt specific cgroups setup code out of nova.virt.disk.api
* make libvirt with Xen more workable
* script for configuring a vif in Xen in non-bridged mode
* Upgrade pylint version to 0.26.0
* Removes fixed\_ip\_get\_network
* improve session handling around virtual\_interfaces
* improve sessions for reservation
* improve session handling around quotas
* Remove custom test assertions
* Add nova option osapi\_compute\_unique\_server\_name\_scope
* Add REST API support for list/enable/disable nova services
* Switch from FLAGS to CONF in nova.compute
* Switch from FLAGS to CONF in tests
* Get rid of pylint E0203 in filter\_scheduler.py
* Updated scheduler and compute for multiple capabilities
* Switch from FLAGS to CONF in nova.db
* Removed two unused imports
* Remove unused functions
* Fixes a bug in api.metadata.base.lookup() on Windows
* Fixes a bug in nova.utils, due to Windows compatibility issues
* improve session handling of dnsdomain\_list
* Make tox.ini run pep8/hacking checks on bin
* Fix import ordering in /bin scripts
* add missing opts to test\_db\_api.py
* clean up dnsdomain\_unregister
* Make utils.mkfs() set label when fs=swap
* Another case of dictionary access
* Remove generic topic support from filter scheduler
* Clarify server\_name, hostname, host
* Refactor scheduling weights
* update nova.conf.sample
* Check instance\_type in compute capability filter
* Sync latest code from oslo-incubator
* Adds REST API support for Fixed IPs
* Added separate bare-metal MySQL DB
* Added bare-metal host manager
* Remove unused volume exceptions
* Adds a conf option for custom configdrive mkisofs
* Fixed HyperV to get disk stats of instances drive
* powervm: failed spawn should raise exception
* Enable Quantum linux bridge VIF driver to use "bridge" type
* Remove nova-volume DB
* make diagnostics workable for libvirt with Xen
* Avoid unnecessary system\_metadata db lookup
* Make instance\_system\_metadata load with instance
* Add some xenapi Bittorrent tests
* Move security groups and firewall ops to VirtAPI
* Move host aggregate operations to VirtAPI
* Simplify topic handling in network rpcapi
* Sync rpc from openstack-common
* Send instance\_type to resize\_instance
* Remove instance\_type db lookup in prep\_resize
* Send all aggregate data to remove\_aggregate\_host
* Fix incorrect LOG.error usage in \_compare\_cpu
* Limit formatting routes when adding resources
* Removes unnecessary db query for instance type
* Fix verification in test\_api\_samples.py
* Yield in between hash runs for the image cache manager
* Remove unused function require\_instance\_exists
* Refactor resource tracker claims and test logic
* Remove out-of-date comment
* Make HostManager.get\_all\_host\_states() return an iterator
* Switch from FLAGS to CONF in nova.virt
* 'BackupCreate' rotation parameter >= 0
* Corrects usage of db.api.network\_get
* Switch from FLAGS to CONF in nova.console
* Map NotAuthorized to 403 in floating ips extension
* Decouple EC2 API from using instance id
* libvirt: Regenerates xml instead of using on-disk
* Imported Translations from Transifex
* Fix to include error message in instance faults
* Include hostname in notification payloads
* Fix quota updating during soft delete and restore
* Fix warnings found with pyflakes
* make utils.mkfs() more general
* Fixes snapshot instance failure on libvirt
* Make ComputeDrivers send hypervisor\_hostname
* Fixed instance deletion issue from Nova API
* De-duplicate option: console\_public\_hostname
* Don't verify image hashes if checksumming is disabled
* Imported Translations from Transifex
* Look up stuck-in-rebooting instances in manager
* Use chance scheduler in EC2 tests
* Send all aggregate data to add\_aggregate\_host
* Send all migration data to finish\_revert\_resize
* Send all migration data to revert\_resize
* Fix migrations when not using multi-host network
* Fix bandwidth polling exception
* Fixes volume attach issue on Hyper-V
* Shorten self.compute.resource\_tracker in test\_compute.py
* Cleanup nova.db.sqlalchemy.api import
* Use uuidutils.is\_uuid\_like for uuid validation
* Add uuidutils module
* Imported Translations from Transifex
* Switch from FLAGS to CONF in nova.scheduler
* Switch from FLAGS to CONF in nova.network
* Switch from FLAGS to CONF in misc modules
* Switch from FLAGS to CONF in nova.api
* Switch from FLAGS to CONF in bin
* Remove flags.DECLARE
* Move parse\_args to nova.config
* Forbid resizing instance to deleted instance types
* Imported Translations from Transifex
* Fix unused variables and wrong indent in test\_compute
* Remove unnecessary db call from xenapi/vmops
* xenapi: place boot lock when doing soft delete
* Detangle soft delete and power off
* Fix signing\_dir option for auth\_token middleware
* Fix no attribute 'STD\_OUT\_HANDLE' on windows
* Use elevated context in disassociate\_floating\_ip
* Remove db.instance\_get\* from nova/virt
* sync deprecated log method from openstack-common
* move python-cinderclient to pip-requires
* Tiny resource tracker cleanup
* Fix Quantum v2 API method signatures
* add doc to standardize session usage
* improve sessions around floating\_ip\_get\_by\_address
* Bump the base rpc version of the network api
* Eliminates simultaneous schedule race
* Introduce VirtAPI to nova/virt
* Add some hooks for managers when service starts
* Fix backwards compat of rpc to compute manager
* xenapi: Make agent optional
* Add xenapi host\_maintenance\_mode() test
* refactor: extract \_attach\_mapped\_block\_devices
* Make bdms primitive in rpcapi.terminate\_instance
* Ability to specify a host restricted to admin
* Improve EC2 describe\_security\_groups performance
* Increased MAC address range to reduce conflicts
* Move to a more canonicalized output from qemu-img info
* Read deleted flavors when using to\_xml()
* Fix copy-paste bug in block\_device\_info\_generation
* Remove nova-volume scheduling support
* Remove duplicate api\_paste\_config setting
* Fixes hypervisor based image filtering on Hyper-V
* make QuantumV2 support requested nic ordering
* Add rxtx\_factor to network migration logic
* Add scheduler retries for prep\_resize operations
* Add call to reset quota usage
* Make session.py reusable
* Remove redundant code from PowerVM driver
* Force earlier version of sqlalchemy
* refactor: extract method vm\_ref\_or\_raise
* Use env to set environ when starting dnsmasq
* pep8 fixes for nova-manage
* Fix VM deletion from down compute node
* Remove database usage from libvirt check\_can\_live\_migrate\_destination
* Clean up xenapi VM records on failed disk attaches
* Remove nose detailed error reporting
* Validate is-public parameter to flavor creation
* refactor: extract \_terminate\_volume\_connections
* improve sessions around compute\_node\_\*
* Fix typo in xenapi/host.py
* Remove extra print line in hacking.py
* Ensures compute\_driver flag can be used by bdm
* Add call to trigger\_instance[add/remove]\_security\_group\_refresh quantum
* Validates Timestamp or Expiry time in EC2 requests
* Add API samples to Admin Actions
* Add live migration helper methods to fake hypervisor driver
* Use testtools as the base testcase class
* Clean up quantumv2.get\_client
* Fix getattr usage
* Imported Translations from Transifex
* removes the nova-volume code from nova
* Don't elevate context when calling run\_instance
* remove session parameter from fixed\_ip\_get
* Make instance\_get\_all() not require admin context
* Fix compute tests abusing admin context
* Fix use of elevated context for resize methods
* Fix check for memory\_mb
* Imported Translations from Transifex
* Fix nova-network MAC collision logic
* Fix rpcapi version for new methods
* Remove useless return
* Change hacking.py N306 to use logical\_lines
* Add missing live migration methods to ComputeDriver base class
* Fix hacking.py naivete regarding lines that look like imports
* details the reboot behavior that a virt driver should follow
* xenapi: refactor: Agent class
* Send usage event on revert\_resize
* Fix config-file overrides for nova-dhcpbridge
* Make nova-rootwrap optional
* Remove duplicated definition of is\_loaded()
* Let scheduler know services' capabilities at startup
* fetch\_images() method no more needed
* Fix hardcoded topic strings with constants
* Save exceptions earlier in finish\_resize
* Correct \_extract\_query\_params in image.glance
* Fix Broken XML Namespace Handling
* More robust checking for empty requested\_networks
* Imported Translations from Transifex
* Rehydrate NetworkInfo in reboot\_instance()
* Update common
* Use cat instead of sleep for rootwrap test
* Addtional 2 packages for dev environment on ubuntu
* Let VlanManager keep network's DNS settings
* Improve the performance of quantum detection
* Support for nova client list hosts with specific zone
* Remove unused imports in setup.py
* Fixes fake for testing without qemu-img
* libvirt: persist volume attachments into config
* Extend IPv6 subnets to /64 if network\_size is set smaller than /64
* Send full migration data to finish\_resize
* Send full migration to confirm\_resize
* Send full migration to resize\_instance
* Migrate to fileutils and lockutils
* update sample for common logging
* Add availability zone extension to API samples test
* Refactor: config drive related functions
* Fix live migration volume assignment
* Remove unused table options dicts
* Add better log line for undefined compute\_driver
* Remove database usage from libvirt imagecache module
* Return empty list when listing servers with bad status value
* Consistent Rollback for instance creation failures
* Refactor: move find\_guest\_agent to xenapi.agent
* Fix Incorrect Exception when metadata is over 255 characters
* Speed up volume and routing tests
* Speed up api.openstack.compute.contrib tests
* Allow loading only selected extensions
* Migrate network of an instance
* Don't require quantumclient when running nova-api
* Handle the case where we encounter a snap shot correctly
* Remove deprecated root\_helper config
* More specific exception handling in migration 091
* Add virt driver capabilities definition
* Remove is\_admin\_context from sqlalchemy.api
* Remove duplicate methods from network/rpcapi.py
* SanISCSIDriver SSH execution fixes
* Fix bad Log statement in nova-manage
* Move mkfs from libvirt.utils to utils
* Fixes bug Snapshotting LXC instance fails
* Fix bug in a test for the scheduler DiskFilter
* Remove mountpoint from parse\_volume\_info
* limit the usage of connection\_info
* Sync with latest version of openstack.common.timeutils
* nova-compute sends its capabilities to schedulers ASAP
* Enable custom eventlet.wsgi.server log\_format
* Fix the fail-on-zero-tests case so that it is tolerant of no output
* add port support when QuantumV2 subclass is used
* Add trove classifiers for PyPI
* Fix and enable pep8 E502, E712
* Declare vpn client option in pipelib
* Fix nova-volume-usage-audit
* Fix error on invalid delete\_on\_termination value
* Add Server diagnostics extension api samples
* Add meaningful server diagnostic information to fake hypervisor
* Use instance\_exists to check existence
* Fix nova-volume-usage-audit
* Imported Translations from Transifex
* Avoid leaking BDMs for deleted instances
* Deallocate network if instance is deleted in spawn
* Create Flavors without Optional Arguments
* Update policies
* Add DNS records on IP allocation in VlanManager
* update kwargs with args in wrap\_instance\_fault
* Remove ComputeDriver.update\_host\_status()
* Do not call directly vmops.attach\_volume
* xenapi: fix bfv behavior when SR is not attached
* Use consoleauth rpcapi in nova-novncproxy
* Change install\_venv to use setup.py develop
* Fixes syntax error in nova.tools.esx.guest\_tools.py
* Allow local rbd user and secret\_uuid configuration
* Set host prior to allocating network information
* Remove db access for block devices and network info on reboot
* Remove db access for block devices on terminate\_instance
* Check parameter 'marker' before make request to glance
* Imported Translations from Transifex
* Internationalize nova-manage
* Imported Translations from Transifex
* Fixes live\_migration missing migrate\_data parameter in Hyper-V driver
* handles empty dhcp\_domain with hostname in metadata
* xenapi: Tag volumes in boot from volume case
* Stops compute api import at import time
* Fix imports in openstack compute tests
* Make run\_tests.sh fail if no tests are actually run
* Implement snapshots for raw backend
* Used instance uuid rather than id in remove-fixed-ip
* Migrate DHCP host info during resize
* read\_deleted snapshot and volume id mappings
* Make sure sleep can be found
* Pass correct task\_state on snapshot
* Update run\_tests.sh pep8 ignore list for pep8 1.2
* Clean up imports in test\_servers
* Revert "Tell SQLite to enforce foreign keys."
* Add api samples to simple tenant usage extension
* Avoid RPC calls while holding iptables lock
* Add util for image conversion
* Add util for disk type retrieval
* Fixes test\_libvirtr spawn\_with\_network\_info test
* Remove unneeded temp variable
* Add version to network rpc API
* Remove cast\_to\_network from scheduler
* Tell SQLite to enforce foreign keys
* Use paramiko.AutoAddPolicy for the smoketests
* nova-manage doesn't validate key to update the quota
* Dis-associate an auto-assigned floating IP should return proper warning
* Proxy floating IP calls to quantum
* Handle invalid xml request to return BadRequest
* Add api-samples to Used limits extension
* handle IPv6 race condition due to hairpin mode
* Imported Translations from Transifex
* XenAPI should only snapshot root disk
* Clarify trusted\_filter conf options
* Fix pep8 error in bin/nova-manage
* Set instance host field after resource claim
* powervm: add polling timeout for LPAR stop command
* Drop claim timeouts from resource tracker
* Update kernel\_id and ramdisk\_id while rebuilding instance
* Add Multiple Create extension to API sample tests
* Fix typo in policy docstring
* Fix reserve\_block\_device\_name while attach volume
* Always use bdm in instance\_block\_mapping on Xen
* Centralize sent\_meta definition
* Move snapshot image property inheritance
* Set read\_deleted='yes' for instance\_id\_mappings
* Fix XML response for return\_reservation\_id
* Stop network.api import on network import
* libvirt: ignore deleted domain while get block dev
* xenapi: Refactor snapshots during resize
* powervm: remove broken instance filtering
* Add ability to download images via BitTorrent
* powervm: exception handling improvements
* Return proper error messages while associating floating IP
* Create util for root device path retrieval
* Remove dependency on python-ldap for tests
* Add api samples to Certificates extension
* Add nova-cert service to integrated\_helpers
* Compare lists in api samples against all matches
* ip\_protocol for ec2 security groups
* Remove unneeded lines from aggregates extension API sample tests
* Remove deprecated Folsom code: config convert
* Make resource tracker uses faster DB query
* Remove deprecated Folsom code: bandwith\_poll\_interval
* Add TestCase.stub\_module to make stubbing modules easier
* Imported Translations from Transifex
* Update tools hacking for pep8 1.2 and beyond
* Remove outdated moduleauthor tags
* remove deprecated connection\_type flag
* Add aggregates extension to API samples test
* Update RPM SPEC to include new bandwidth plugin
* Remove TestCase.assertNotRaises
* Imported Translations from Transifex
* Imported Translations from Transifex
* Use self.flags() instead of manipulating FLAGS by hand
* Use test.TestCase provided self.mox and self.stubs
* Remove unnecessary setUp, tearDown and \_\_init\_\_ in tests
* xenapi: implement resume\_state\_on\_host\_boot
* Revert "Add full test environment."
* Synchronize docstring with actual implementation
* Num instances scheduler filter
* Add api samples to cloudpipe extension
* Fix CloudPipe extension XML serialization
* Max I/O ops per host scheduler filter
* libvirt: continue detach if instance not found
* libvirt: allows attach and detach from all domains
* Fixes csv list required for qemu-img create
* Added compute node stats to HostState
* libvirt: Improve the idempotency of iscsi detach
* Pass block\_device\_info to destroy in revert\_resize
* Enable list with no dict objects to be sorted in api samples
* Fixes error message for flavor-create duplicate ID
* Loosen anyjson dependency to avoid clash with ceilometer
* xenapi: make it easier to recover from failed migrations
* Remove unnecessary check if migration\_ref is not None
* Bump the version of SQLAlchemy in pip-requires
* optimize slightly device lookup with LXC umounts
* Support for several HA RabbitMQ servers
* xenapi: Removing legacy swap-in-image
* xenapi: increase timeout for resetnetwork agent request
* Replaced default hostname function from gethostname to getfqdn
* Fix issues deleting instances in RESIZED state
* Modified 404 error response to show specific message
* Updated code to update attach\_time of a volume while detaching
* Check that an image is active before spawning instances
* Fix issues with device autoassignment in xenapi
* Deleting security group does not mark rules as deleted
* Collect more accurate bandwidth data for XenServer
* Zmq register opts fix in receiver
* Revert explicit usage of tgt-adm --conf option
* Fix booting a raw image on XenServer
* Add servers/ips api\_samples tests
* LOG.exception() should only be used in exception handler
* Fix XenServer's ability to boot xen type images
* all\_extensions api\_samples testing for server actions
* Fixes remove\_export for IetAdm
* libvirt: Fix \_cleanup\_resize
* Imported Translations from Transifex
* xenapi: fix undefined variable in logging message
* Spelling: ownz=>owns
* Fix NetAppCmodeISCSIDriver.\_get\_lun\_handle() method
* Integration tests virtual interfaces API extension
* Allow deletion of instance with failed vol cleanup
* Fixes snapshotting of instances booted from volume
* Move fakeldap.py from auth dir to tests
* Remove refs to ATAoE from nova docs
* Imported Translations from Transifex
* Set volume status to error if scheduling fails
* Update volume detach smoke test to check status
* Fix config opts for Storwize/SVC volume driver
* Ensure hybrid driver creates veth pair only once
* Cleanup exception handling
* Imported Translations from Transifex
* Add lun number (0) to model\_update in HpSanDriver
* libvirt: return after soft reboot successfully completes
* Fixes to the SolarisISCSI Driver
* Fix live migration when volumes are attached
* Clarify dangerous use of exceptions in unit tests
* Cleanup test\_api\_samples:\_compare\_result
* Fix testContextClaimWithException
* Fix solidfire unit tests
* Stop double logging to the console
* Recreate nw\_info after auto assigning floating ip
* Re-generate sample config file
* Use test.TestingException instead of duplicating it
* Fix startup with DELETED instances
* Fix solidfire option declaration
* Restore SIGPIPE default action for subprocesses
* Raise NotFound for non-existent volume snapshot create
* Catch NotFound exception in FloatingIP add/remove
* Adds API sample testing for rescue API extension
* Fix bugs in resource tracker and cleanup
* Replace builtin hash with MD5 to solve 32/64-bit issues
* Properly create and delete Aggregates
* No stack trace on bad nova aggregate-\* command
* Clean up test\_state\_revert
* Fix aggregate\_hosts.host migration for sqlite
* Call compute manager methods with instance as keyword argument
* Adds deserialization for block\_device\_mapping
* Fix marker pagination for /servers
* Send api.fault notification on API service faults
* Always yield to other greenthreads after database calls
* fix unused import
* Don't include auto\_assigned ips in usage
* Correct IetAdm remove\_iscsi\_target
*   Cleanup unused import in manager.py
* xapi: fix create hypervisor pool
* Bump version to 2013.1
* Add Keypairs extension to API samples test
* sample api testing for os-floating-ips extension
* Update quota when deleting volume that failed to be scheduled
* Update scheduler rpc API version
* Added script to find unused config options
* Make sure to return an empty subnet list for a network without sunbet
* Fix race condition in CacheConcurrencyTestCase
* Makes scheduler hints and disk config xml correct
* Add lookup by ip via Quantum for metadata service
* Fix over rate limit error response
* Add deserialization for multiple create and az
* Fix doc/README.rst to render properly
* Add user-data extension to API samples tests
* Adds API sample testing for Extended server attributes extension
* Inherit the base images qcow2 properties
* Correct db migration 91
* make ensure\_default\_security\_group() call sgh
* add ability to clone images
* add get\_location method for images
* Adds new volume API extensions
* Add console output extension to API samples test
* Raise BadRequest while creating server with invalid personality
* Update 'unlimited' quota value to '-1' in db
* Modified 404 error response for server actions
* Fix volume id conversion in nova-manage volume
* Improve error handling of scheduler
* Fixes error handling during schedule\_run\_instance
* Include volume\_metadata with object on vol create
* Reset the task state after backup done
* Allows waiting timers in libvirt to raise NotFound
* Improve entity validation in volumes APIs
* Fix volume deletion when device mapper is used
* Add man pages
* Make DeregisterImage respect AWS EC2 specification
* Deserialize user\_data in xml servers request
* Add api samples to Scheduler hints extension
* Include Schedule Hints deserialization to XML API
* Add admin actions extension
* Allow older versions of libvirt to delete vms
* Add security groups extension to API samples test
* Sync a change to rpc from openstack-common
* Add api\_samples tests for servers actions
* Fix XML deserialization of rebuild parameters
* All security groups not returned to admins by default
* libvirt: Cleanup L2 and L3 rules when confirm vm resize
* Corrects use of instance\_uuid for fixed ip
* Clean up handling of project\_only in network\_get
* Add README for doc folder
* Correct typo in memory\_mb\_limit filter property
* Add more useful logging around the unmount fail case
* Imported Translations from Transifex
* Make compute/manager.py use self.host instead of FLAGS.host
* Add a resume delete on volume manager startup
* Remove useless \_get\_key\_name() in servers API
* Add entity body validation helper
* Add 422 test unit test for servers API
* Use tmpdir and avoid leaving test files behind
* Includes sec group quota details in limits API response
* Fixes import issue on Windows
* Overload comment in generated SSH keys
* Validate keypair create request body
* Add reservations parameter when cast "create\_volume" to volume manager
* Return 400 if create volume snapshot force parameter is invalid
* Fix FLAGS.volumes\_dir help message
* Adds more servers list and servers details samples
* Makes key\_name show in details view of servers
* Avoid VM task state revert on instance termination
* Avoid live migrate overwriting the other task\_state
* Backport changes from Cinder to Nova-Volume
* Check flavor id on resize
* Rename \_unplug\_vifs to unplug\_vifs
* PowerVM: Establish SSH connection at use time
* libvirt: Fix live block migration
* Change comment for function \_destroy
* Stop fetch\_ca from throwing IOError exceptions
* Add 'detaching' to volume status
* Reset task state before rescheduling
* workaround lack of quantum/nova floatingip integration
* fix rpcapi version
* Added description of operators for extra\_specs
* Convert to ints in VlanManager.create\_networks
* Remove unused AddressAlreadyAllocated exception
* Remove an unused import
* Make ip block splitting a bit more self documenting
* Prevent Partial terminations in EC2
* Add flag cinder\_endpoint\_template to volume.cinder
* Handle missing network\_size in nova-manage
* Adds API sample test for Flavors Extra Data extension
* More specific lxml versions in tools/pip-requires
* Fixes snat rules in complex networking configs
* Fix flavor deletion when there is a deleted flavor
* Make size optional when creating a volume from a snapshot
* Add documentation for scheduler filters scope
* Add and fix tests for attaching volumes
* Fix auth parameter passed to libvirt openAuth() method
* xapi: Fix live block migration
* Add a criteria to sort a list of dict in api samples
* delete a module never used
* Update SolidFire volume driver
* Adds get\_available\_resource to hyperv driver
* Create image of volume-backed instance via native API
* Improve floating IP delete speed
* Have device mapping use autocreated device nodes
* remove a never used import
* fix unmounting of LXC containers in the presence of symlinks
* Execute attach\_time query earlier in migration 98
* Add ServerStartStop extension API test
* Set install\_requires in setup.py
* Add Server Detail and Metadata tests
* xenapi: Make dom0 serialization consistent
* Refer to correct column names in migration 98
* Correct ephemeral disk cache filename
* Stop lock decorator from leaving tempdirs in tests
* Handle missing 'provider\_location' in rm\_export
* Nail the pip requirement at 1.1
* Fix typo in tgtadm LOG.error() call
* Call driver for attach/detach\_volume
* rbd: implement create\_volume\_from\_snapshot
* Use volume driver specific exceptions
* Fake requests in tests should be to v1
* Implement paginate query use marker in nova-api
* Simplify setting up test notifier
* Specify the conf file when creating a volume
* Generate a flavorid if needed at flavor creation
* Fix EC2 cinder volume creation as an admin user
* Allow cinder catalog match values to be configured
* Fix synchronized decorator path cleanup
* Fix and cleanup compute node stat tracking
* avoid the buffer cache when copying volumes
* Add missing argument to novncproxy websockify call
* Use lvs instead of os.listdir in \_cleanup\_lvm
* Fixing call to hasManagedSaveImage
* Fix typo in simple\_tenant\_usage tests
* Move api\_samples to doc dir
* Add a tunable to control how many ARPs are sent
* Get the extension alias to compose the path to save the api samples
* Add scope to extra\_specs entries
* Use bare container format by default
* Sync some updates from openstack-common
* Fix simple\_tenant\_usage's handing of future end times
* Yield to another greenthread when some time-consuming task finished
* Automatically convert device names
* Fix creation of iscsi targets
* Makes sure new flavors default to is\_public=True
* Optimizes flavor\_access to not make a db request
* Escape ec2 XML error responses
* Skip tests in OSX due to readlink compat
* Allow admins to de-allocate any floating IPs
* Fix xml metadata for volumes api in nova-volume
* Re-attach volumes after instance resize
* Speed up creating floating ips
* Adds API sample test for limits
* Fix vmwareapi driver spawn() signature
* Fix hyperv driver spawn() signature
* Add API samples to images api
* Add method to manage 'put' requests in api-sample tests
* Add full python path to test stubbing modules for libvirt
* Rename imagebackend arguments
* Fixes sqlalchemy.api.compute\_node\_get\_by\_host
* Fix instances query for compute stats
* Allow hard reboot of a soft rebooting instance
* On rebuild, the compute.instance.exists
* Fix quota reservation expiration
* Add api sample tests for flavors endpoint
* Add extensions for flavor swap and rxtx\_factor
* Address race condition from concurrent task state update
* Makes sample testing handle out of order output
* Avoid leaking security group quota reservations
* Save the original base image ref for snapshots
* Fixed boot from snapshot failure
* Update zmq context cleanup to use term
* Fix deallocate\_fixed\_ip invocation
* fix issues with Nova security groups and Quantum
* Clear up the .gitignore file
* Allow for deleting VMs from  down compute nodes
* Update nova-rpc-zmq-receiver to load nova.conf
* FLAG rename: bandwith\_poll\_\*=>bandwidth\_poll\_\*
* Spelling: Persistant=>Persistent
* Fix xml metadata for volumes extension
* delete unused valiables
* Clean up non-spec output in flavor extensions
* Adds api sample testing for extensions endpoint
* Makes api extension names consistent
* Fixes spawn method signature for PowerVM driver
* Spelling fix Retrive=> Retrieve
* Update requires to glanceclient >=0.5.0
* Sort API extensions by alias
* Remove scheduler RPC API version 1.x
* Add version 2.0 of the scheduler RPC API
* Remove some remnants of VSA support
* hacking: Add driver prefix recommendation
* Implements PowerVM get\_available\_resource method
* Add a new exception for live migration
* Assume virt disk size is consumed by instances
* External locking for image caching
* Stop using scheduler RPC API magic
* Adds api sample testing for versions
* Do not run pylint by default
* Remove compute RPC API version 1.x
* Add version 2.0 of compute RPC API
* Accept role list from either X-Roles or X-Role
* Fix PEP8 issues
* Fix KeyError when test\_servers\_get fails
* Update nova.conf.sample
* Fixes backwards compatible rpc schedule\_run
* Include launch-index in openstack style metadata
* Port existing code to utils.ensure\_tree
* Correct utils.execute() to check 0 in check\_exit\_code
* Add the self parameter to NoopFirewallDriver methods
* request\_spec['instance\_uuids'] as list in resize
* Fix column variable typo
* Add ops to aggregate\_instance\_extra\_specs filter
* Implement project specific flavors API
* Correct live\_migration rpc call in test
* Allow connecting to a ssl-based glance
* Move ensure\_tree to utils
* Define default mode and device\_id\_string in Mount
* Update .mailmap
* Fix path to example extension implementation
* Remove test\_keypair\_create\_quota\_limit()
* Remove duplicated test\_migrate\_disk\_and\_power\_off()
* Add missing import webob.exc
* Fix broken SimpleScheduler.schedule\_run\_instance()
* Add missing user\_id in revoke\_certs\_by\_user\_and\_project()
* Rename class\_name to project\_id
* Use the compute\_rpcapi instance not the module
* Remove duplicated method VM\_migrate\_send
* Add missing context argument to start\_transfer calls
* Remove unused permitted\_instance\_types
* Add lintstack error checker based on pylint
* Make pre block migration create correct disk files
* Remove unused and old methods in hyperv and powervm driver
* Trap iscsiadm error
* Check volume status before detaching
* Simplify network create logic
* Clean up network create exception handling
* Adding indexes to frequently joined database columns
* Ensure hairpin\_mode is set whenever vifs is added to bridge
* Returns hypervisor\_hostname in xml of extension
* Adds integration testing for api samples
* Fix deallocate\_fixed\_ip() call by unifying signature
* Make instance\_update\_and\_get\_original() atomic
* Remove unused flags
* Remove test\_instance\_update\_with\_instance\_id test
* Remove unused instance id-to-uuid function
* Re-work the handling of firewall\_driver default
* Include CommonConfigOpts options in sample config
* Re-generate nova.conf.sample
* Ensure log formats are quoted in sample conf
* Don't include hostname and IP in generated sample conf
* Allow generate\_sample.sh to be run from toplevel dir
* Let admin list instances in vm\_states.DELETED
* Return actual availability zones
* Provide a hint for missing EC2 image ids
* Check association when removing floating ip
* Add public network support when launching an instance
* Re-define libvirt domain on "not found" exception
* Add two prereq pkgs to nova devref env guide
* Fix hyperv Cfgs: StrOpt to IntOpt
* continue deleting instance even if quantum port delete fails
* Typo fix: existant => existent
* Fix hacking.py git checks to propagate errors
* Don't show user-data when its not sent
* Clarify nwfilter not found error message
* Remove unused \_create\_network\_filters()
* Adds missing assertion to FloatingIP tests
* Restore imagebackend in test\_virt\_drivers.py
* Add nosehtmloutput as a test dependency
* Remove unused exceptions from nova/exception.py
* Cleanup pip dependencies
* Make glance image service check base exception classes
* Add deprecated warning to SimpleScheduler
* Have compute\_node\_get() join 'service'
* XCP-XAPI version fix
* add availability\_zone to openstack metadata
* Remove stub\_network flag
* Implements sending notification on metadata change
* Code clean up
* Implement network creation in compute API
* Debugged extra\_specs\_ops.py
* Fix typo in call in cinder.API unreserve\_volume
* xenapi: Tag nova volumes during attach\_volume
* Allow network to call get\_fixed\_ip\_by\_address
* Add key\_name attribute in XML servers API
* Fix is\_admin check via policy
* Keep the ComputeNode model updated with usage
* Remove hard-coded 'admin' role checking and use policy instead
* Introduce ImagePropertiesFilter scheduler filter
* Return HTTP 422 on bad server update PUT request
* Makes sure instance deletion ok with deleted data
* OpenStack capitalization added to HACKING.rst
* Fix get\_vnc\_console race
* Fix a TypeError that occurs in \_reschedule
* Make missing imports flag in hacking settable
* Makes sure tests don't leave lockfiles around
* Update FilterScheduler doc
* Disable I18N in Nova's test suites
* Remove logging in volume tests
* Refactor extra specs matching into a new module
* Fix regression in compute\_capabilities filter
* Refactor ComputeCapabilitiesFilter test cases
* Revert per-user-quotas
* Remove unused imports
* Fix PEP8 issues
* Sync changes from openstack common
* Implement GET (show) in OS API keypairs extension
* Fix spelling typos
* Ignoring \*.sw[op] files
* xenapi: attach root disk during rescue before boot
* Allows libvirt to set a serial number for a volume
* Adds support for serial to libvirt config disks
* Remove unused variables
* Always create the run\_instance records locally
* Fix use of non-existant var pool
* Adds Hyper-V support in nova-compute (with new network\_info model), including unit tests
* Update sqlite to use PoolEvents for regexp
* Remove unused function in console api
* Allow nova to guess device if not passed to attach
* Update disk config to check for 'server' in req
* Changes default behavior of ec2
* Make ComputeFilter verify compute-related instance properties
* Collect instance capabilities from compute nodes
* Move volume size validation to api layer
* Change IPtablesManager to preserve packet:byte counts
* Add get\_key\_pair to compute API
* Defined IMPL in global ipv6 namespace
* xenapi: remove unnecessary json decoding of injected\_files
* Remove unnecessary try/finally from snapshot
* Port pre\_block\_migration to new image caching
* Adding port attribute in network parameter of boot
* Add support for NFS-based virtual block devices
* Remove assigned, but unused variables from nova/db/sqlalchemy/api.py
* xenapi: Support live migration without pools
* Restore libvirt block storage connections on reboot
* Added several operators on instance\_type\_extra\_specs
* Revert to prior method of executing a libvirt hard\_reboot
* Set task\_state=None when finished snapshotting
* Implement get\_host\_uptime in libvirt driver
* continue config-drive-v2, add openstack metadata api
* Return values from wrapped functions in decorators
* Allow XML payload for volume creation
* Add PowerVM compute driver and unit tests
* Revert task\_state on failed instance actions
* Fix uuid related bug in console/api
* Validate that min\_count & max\_count parameters are numeric
* Allow stop API to be called in Error
* Enforce quota limitations for instance resize
* Fix rpc error with live\_migration
* Simple checks for instance user data
* Change time.sleep to greenthread.sleep
* Add missing self. for parent
* Rewrite image code to use python-glanceclient
* Fix rpc error with live\_migration
* volumes: fix check\_for\_export() in non-exporting volume drivers
* Avoid {} and [] as default arguments
* Improve bw\_usage\_update() performance
* Update extra specs calls to use deleted: False
* Don't stuff non-db data into instance dict
* Fix type error in state comparison
* update python-quantumclient dependency to >=2.0
* Key auto\_disk\_config in create server off of ext
* Implement network association in OS API
* Fix TypeError conversion in API layer
* Key requested\_networks off of network extension
*  Key config\_drive off of config-drive extension
* Make sure reservations is initialized
* import module, not type
* Config drive v2
* Don't accept key\_name if not enabled
* Fix HTTP 500 on bad server create
* Default behavior should restrict admins to tenant for volumes
* remove nova code related to Quantum v1 API
* Make sure ec2 mapping raises proper exceptions
* Send host not ComputeNode into uptime RPC call
* Making security group refresh more specific
* Sync with latest version of openstack.common.cfg
* Sync some cleanups from openstack.common
* maint: compare singletons with 'is' not '=='
* Compute restart causes period of network 'blackout'
* Revert "Remove unused add\_network\_to\_project() method"
* Add error log for live migration
* Make FaultWrapper handle exception code = None
* Don't accept scheduler\_hints if not enabled
* Avoid double-reduction of quota for repeated delete
* Traceback when over allocating IP addresses
* xenapi: ensure all calls to agent get logged
* Make update\_db an opt arg in scheduler manager
* Key min\_count, max\_count, ret\_res\_id off of ext
* Key availability\_zone in create server off of ext
* Fix the inject\_metadata\_into\_fs in the disk API
* Send updated instance model to schedule\_prep\_resize
* Create unique volumes\_dir for testing
* Fix stale instances being sent over rpc
* Fix setting admin\_pass in rescue command
* Key user\_data in create server off of extension
* Key block\_device\_mapping off of volume extension
* Moves security group functionality into extension
* Adds ability to inherit wsgi extensions
* Fixes KeyError when trying to rescue an instance
* Make TerminateInstances compatible with EC2 api
* Uniqueness checks for floating ip addresses
* Driver for IBM Storwize and SVC storage
* scheduler prep\_resize should not update instance['host']
* Add a 50 char git title limit test to hacking
* Fix a bug on remove\_volume\_connection in compute/manager.py
* Fix a bug on db.instance\_get\_by\_uuid in compute/manager.py
* Make libvirt\_use\_virtio\_for\_bridges flag works for all drivers
* xenapi: reduce polling interval for agent
* xenapi: wait for agent resetnetwork response
* Fix invalid exception format strings
* General host aggregates part 2
* Update devref for general host aggregates
* Cleanup consoles test cases
* Return 409 error if get\_vnc\_console is called before VM is created
* Move results filtering to  db
* Prohibit file injection writing to host filesystem
* Added updated locations for iscsiadm
* Check against unexpected method call
* Remove deprecated use Exception.message
* Remove temporary hack from checks\_instance\_lock
* Remove temporary hack from wrap\_instance\_fault
* Fix up some instance\_uuid usage
* Update vmops to access metadata as dict
* Improve external locking on Windows
* Fix traceback when detaching volumes via EC2
* Update RPC code from common
* Fixes parameter passing to tgt-admin for iscsi
* Solve possible race in semaphor creation
* Rename private methods of compute manager
* Send full instance to compute live\_migration
* Add underscore in front of post\_live\_migration
* Send full instance to scheduler live\_migration
* Send full instance to run\_instance
* Use dict style access for image\_ref
* Use explicit arguments in compute manager run\_instance
* Remove topic from scheduler run\_instance
* Use explicit args in run\_instance scheduler code
* Update args to \_set\_vm\_state\_and\_notify
* Reduce db access in prep\_resize in the compute manager
* Remove instance\_id fallback from cast\_to\_compute\_host()
* Remove unused InstanceInfo class
* Adds per-user-quotas support for more detailed quotas management
* Remove list\_instances\_detail from compute drivers
* Move root\_helper deprecation warning into execute
* Flavor extra specs extension use instance\_type id
* Fix test\_resize\_xcp testcase - it never ran
* tests: avoid traceback warning in test\_live\_migration
* ensure\_tree calls mkdir -p
* Only log deprecated config warnings once
* Handle NetworkNotFound in \_shutdown\_instance
* Drop AES functions and pycrypto dependency
* Simplify file hashing
* Allow loaded extensions to be checked from servers
* Make extension aliases consistent
* Remove old exception type
* Fix test classes collision
* Remove unused variables
* Fix notification logic
* Improve external lock implementation
* maint: remove an unused import in libvirt.driver
* Require eventlet >= 0.9.17
* Remove \*\*kwargs from prep\_resize in compute manager
* Updates to the prep\_resize scheduler rpc call
* Migrate a notifier patch from common:
* Update list\_instances to catch libvirtError
* Audit log messages in nova/compute/api.py
* Rename \_self to self according to Python convention
* import missing module time
* Remove unused variables
* Handle InstanceNotFound in libvirt list\_instances
* Fix broken pep8 exclude processing
* Update reset\_db to call setup if \_DB is None
* Migrate a logging change from common:
* Send 'create volume from snapshot' to the proper host
* Fix regression with nova-manage floating list
* Remove unused imports
* Simple refactor of some db api tests
* fix unmounting of LXC containers
* Update usage of 'ip' to handle more return codes
* Use function registration for policy checks
* Check instance lock in compute/api
* Fix a comment typo in db api
* Audit log messages in nova/compute/manager.py
* XenAPI: Add script to destroy cached images
* Fix typo in db test
* Fix issue with filtering where a value is unicode
* Avoid using logging in signal handler
* Fix traceback when using s3
* Don't pass kernel args to Xen HVM instances
* Sync w/ latest openstack common log.py
* Pass a full instance to rotate\_backups()
* Remove agent\_update from the compute manager
* Move tests.test\_compute\_utils into tests.compute
* Send a full instance in terminate\_instance
* maint: don't require write access when reading files
* Fix get\_diagnostics RPC arg ordering
* Fix failed iscsi tgt delete errors with new tgtadm
* Deprecate root\_helper in favor of rootwrap\_config
* Use instance\_get instead of instance\_by
* Clarify TooManyInstances exception message
* Setting root passwd no longer fails silently
* XenAPI: Fix race-condition with cached images
* Prevent instance\_info\_cache from being altered post instance
* Update targets information when creating target
* Avoid recursion from @refresh\_cache
* Send a full instance in change\_instance\_metadata
* Send a full instance in unrescue\_instance
* Add check exit codes for vlans
* Compute: Error out instance on rebuild and resize
* Partially revert "Remove unused scheduler functions"
* Use event.listen() instead of deprecated listeners kwarg
* Avoid associating floating IP with two instances
* Tidy up nova.image.glance
* Fix arg to get\_instance\_volume\_block\_device\_info()
* Send a full instance in snapshot\_instance
* Send a full instance in set\_admin\_password
* Send a full instance in revert\_resize
* Send a full instance in rescue\_instance
* Send a full instance in remove\_volume\_connection
* Send a full instance in rollback\_live\_migration\_at\_destination
* Send a full instance in resume\_instance
* Send a full instance in resize\_instance
* Send a full instance in reset\_network
* Convert virtual\_interfaces to using instance\_uuid
* Compute: VM-Mode should use instance dict
* Fix image\_type=base after snapshot
* Send a full instance in remove\_fixed\_ip\_from\_instance
* Send a full instance in rebuild\_instance
* Reverts fix lp1031004
* sync openstack-common log changes with nova
* Set default keystone auth\_token signing\_dir loc
* Resize.end now includes the correct instance\_type
* Fix rootwrapper with tgt-admin
* Use common parse\_isotime in GlanceImageService
* Xen: VHD sequence validation should handle swap
* Revert "Check for selinux before setting up selinux."
* reduce debugging from utils.trycmd()
* Avoid error during snapshot of ISO booted instance
* Add a link from HACKING to wiki GitCommitMessages page
* Instance cleanups from detach\_volumes
* Check for selinux before setting up selinux
* Prefer instance in reboot\_instance
* maint: libvirt imagecache: remove redundant interpreter spec
* Support external gateways in VLAN mode
* Turn on base image cleanup by default
* Make compute only auto-confirm its own instances
* Fix state logic for auto-confirm resizes
* Explicitly send primitive instances via rpc
* Allow \_destroy\_vdis if a mapping has no VDI
* Correct host count in instance\_usage\_audit\_log extension
* Return location header on volume creation
* Add persistent volumes for tgtd
* xenapi: Use instance uuid when calling DB API
* Fix HACKING violation in nova/api/openstack/volume/types.py
* Remove ugly instance.\_rescue hack
* Convert to using dict style key lookups in XenAPI
* Implements notifications for more instance changes
* Fix ip6tables support in xenapi bug 934603
* Moving where the fixed ip deallocation happens
* Sanitize xenstore keys for metadata injection
* Don't store system\_metadata in xenstore
* use REDIRECT to forward local metadata request
* Only enforce valid uuids if a uuid is passed
* Send a full instance in pre\_live\_migration
* Send a full instance in power\_on\_instance and start\_instance
* Send a full instance in power\_off\_instance and stop\_instance
* Make instance\_uuid backwards compat actually work
* Send a full instance via rpc for post\_live\_migration\_at\_destination
* Send a full instance via rpc for inject\_network\_info
* Send a full instance via rpc for inject\_file
* Send a full instance via rpc for get\_vnc\_console
* Remove get\_instance\_disk\_info from compute rpcapi
* Send a full instance via rpc for get\_diagnostics
* Send a full instance via rpc for finish\_revert\_resize
* Ensure instance is moved to ERROR on suspend failure
* Avoid using 'is' operator when comparing strings
* Revert "Add additional capabilities for computes"
* Allow power\_off when instance doesn't exist
* Fix resizing VDIs on XenServer >= 6
* Refactor glance image service code
* Don't import libvirt\_utils in disk api
* Call correct implementation for quota\_destroy\_all\_by\_project
* Remove return values from some compute RPC methods
* Reinstate instance locked error logging
* Send a full instance via rpc for finish\_resize
* Fix exception handling in libvirt attach\_volume()
* Convert fixed\_ips to using instance\_uuid
* Trim volume type representation
* Fix a couple of PEP8 nits
* Replace subprocess.check\_output with Popen
* libvirt driver: set os\_type to support xen hvm/pv
* Include architecture in instance base options passed to the scheduler
* Fix typo of localhost's IP
* Enhance nova-manage to set flavor extra specs
* Send a full instance via rpc for detach\_volume
* Remove unused methods from compute rpcapi
* Send a full instance via rpc for confirm\_resize
* Send a full instance via rpc for check\_can\_live\_migrate\_source
* Send a full instance via rpc for check\_can\_live\_migrate\_destination
* Remove unused scheduler functions
* Send a full instance via rpc for attach\_volume
* Send a full instance via rpc for add\_fixed\_ip\_to\_instance
* Send a full instance via rpc for get\_console\_output
* Send a full instance via rpc for suspend\_instance
* Send a full instance via rpc for (un)pause\_instance
* Don't use rpc to lock/unlock an instance
* Convert reboot\_instance to take a full instance
* Update decorators in compute manager
* Include name in a primitive Instance
* Shrink Simple Scheduler
* Allow soft deletes from any state
* Handle NULL deleted\_at in migration 112
* Add support for snapshots and volume types to netapp driver
* Inject instance metadata into xenstore
* Add missing tempfile import to libvirt driver
* Fix docstring for SecurityGroupHandlerBase
* Don't log debug auth token when using cinder
* Remove temporary variable
* Define cross-driver standardized vm\_mode values
* Check for exception codes in openstack API results
* Add missing parameters to novas cinder api
* libvirt driver: set driver name consistently
* Allow floating IP pools to be deleted
* Fixes console/vmrc\_manager.py import error
* EC2 DescribeImageAttribute by kernel/ramdisk
* Xen: Add race-condition troubleshooting script
* Return 400 in get\_console\_output for bad length
* update compute\_fill\_first\_cost\_fn docstring
* Xen: Validate VHD footer timestamps
* Xen: Ensure snapshot is torn down on error
* Provide rootwrap filters for nova-api-metadata
* Fix a bug in compute\_node\_statistics
* refactor all uses of the \`qemu-img info\` command
* Xen: Fix snapshots when use\_cow=True
* tests: remove misleading docstrings on libvirt tests
* Update NovaKeystoneContext to use jsonutils
* Use compute\_driver in vmware driver help messages
* Use compute\_driver in xenapi driver help messages
* Add call to get hypervisor statistics
* Adds xcp disk resize support
* Log snapshot UUID and not OpaqueRef
* Remove unused user\_id and project\_id arguments
* Fix wrong regex in cleanup\_file\_locks
* Update jsonutils from openstack-common
* Return 404 when attempting to remove a non-existent floating ip
* Implements config\_drive as extension
* use boto's HTTPResponse class for versions of boto >=2.5.2
* Migrations for deleted data for previously deleted instances
* Add image\_name to create and rebuild notifications
* Make it clear subnet\_bits is unused in ipam case
* Remove unused add\_network\_to\_project() method
* Adding networking rules to vm's on compute service startup
* Avoid unrecognized content-type message
* Updates migration 111 to work w/ Postgres
* fixes for nova-manage not returning a full list of fixed IPs
* Adds non\_inheritable\_image\_properties flag
* Add git commit message validation to hacking.py
* Remove unnecessary use of with\_lockmode
* Improve VDI chain logging
* Remove profane words
* Adds logging for renaming and hardlinking
* Don't create volumes if an incorrect size was given
* set correct SELinux context for injected ssh keys
* Fixes nova-manage fixed list with deleted networks
* Move libvirt disk config setup out of main get\_guest\_config method
* Refactor libvirt imagebackend module to reduce code duplication
* Move more libvirt disk setup into the imagebackend module
* Don't hardcode use of 'virtio' for root disk in libvirt driver
* Ensure to use 'hdN' for IDE disk device in libvirt driver
* Don't set device='cdrom' for all disks in libvirt driver
* Move setup of libvirt disk cachemode into imagebackend module
* Get rid of pointless 'suffix' parameter in libvirt imagebackend
* Revert "Attach ISO as separate disk if given proper instruction"
* Ensure VHDs in staging area are sequenced properly
* Fix error in error handler in instance\_usage\_audit task
* Fix SQL deadlock in quota reservations
* Ensure 413 response for security group over-quota
* fixes for nova-manage network list  if network has been deleted
* Allow NoMoreFloatingIps to bubble up to FaultWrapper
* Fix cloudpipe keypair creation. Add pipelib tests
* Don't let failure to delete filesystem block deletion of instances in libvirt
* Static FaultWrapper status\_to\_type map
* Make flavorextradata ignore deleted flavors
* Tidy up handling of exceptions in floating\_ip\_dns
* Raise NotImplementedError, not NotImplemented singleton
* Fix the mis-use of NotImplemented
* Update FilterSchedulerTestCase docstring
* Remove unused testing.fake
* Make snapshot work for stopped VMs
* Split ComputeFilter up
* Show all absolute quota limits in /limits
* Info log to see which compute driver has loaded
* Rename get\_lock() to \_get\_lock()
* Remove obsolete line in host\_manager
* improve efficiency of image transfer during migration
* Remove unused get\_version\_from\_href()
* Add debug output to RamFilter
* Fixes bare-metal spawn error
* Adds generic retries for build failures
* Fix docstring typo
* Fixes XenAPI driver import in vm\_vdi\_cleaner
* Display key\_name only if keypairs extension is used
* Fix EC2 CreateImage no\_reboot logic
* Reject EC2 CreateImage for instance-store
* EC2 DescribeImages reports correct rootDeviceType
* Support EC2 CreateImage API for boot-from-volume
* remove unused clauses[] variable
* Partially implements blueprint xenapi-live-migration
* Improved VM detection for bandwidth polling (XAPI)
* Sync jsonutils from openstack-common
* Adding granularity for quotas to list and update
* Remove VDI chain limit for migrations
* Refactoring required for blueprint xenapi-live-migration
* Add the plugin framework from common; use and test
* Catch rpc up to the common state-of-the-art
* Support requested\_networks with quantum v2
* Return 413 status on over-quota in the native API
* Fix venv wrapper to clean \*.pyc
* Use all deps for tools/hacking.py tests in tox
* bug 1024557
* General-host-aggregates part 1
* Attach ISO as separate disk if given proper instruction
* Extension to show usage of limited resources in /limits response
* Fix SADeprecationWarning: useexisting is deprecated
* Fix spelling in docstrings
* Fix RuntimeWarning nova\_manage not found
* Exclude openstack-common from pep8 checks
* Use explicit destination user in xenapi rsync call
* Sync gettextutils fixes from openstack-common
* Sync importutils from openstack-common
* Sync cfg from openstack-common
* Add SKIP\_WRITE\_GIT\_CHANGELOG to setup.py
* Remove unnecessary logging from API
* Sync a commit from openstack-common
* Fix typo in docstring
* Remove VDI chain limit for snapshots
* Adds snapshot\_attached\_here contextmanager
* Change base rpc version to 1.0 in compute rpcapi
* Use \_lookup\_by\_name instead of \_conn.lookupByName
* Use the dict syntax instead of attribute to access db objects
* Raise HTTP 500 if service catalog is not json
* Floating\_ip create /31,32 shouldn't silent error
* Convert remaining network API casts to calls
* network manager returns empty list, not raise an exception
* add network creation call to network.api.API
* overriden VlanManager.create\_networks must return a result
* When over quota for floating ips, return HTTPRequestEntityTooLarge
* Remove deprecated auth-related db code
* Fix .mailmap to generate unique AUTHORS list
* Imports base64 to fix xen file injection
* Remove deprecated auth from GlanceImageService
* Adds bootlocking to the xenserver suspend and resume
* ensure libguestfs mounts are cleaned up
* Making docs pretty!
* allows setting accessIPvs to null via update call
* Re-add nova.virt.driver import to xenapi driver
* Always attempt to delete entire floating IP range
* Adds network labels to the fixed ips in usages
* only mount guest image once when injecting files
* Remove unused find\_data\_files function in setup.py
* Use compute\_api.get\_all in affinity filters
* Refactors more snapshot code into vm\_utils
* Clarifying which vm\_utils functions are private
* Refactor instance\_usage\_audit. Add audit tasklog
* Fixes api fails to unpack metadata using cinder
* Remove deprecated auth docs
* Raise Failure exception when setting duplicate other\_config key
* Split xenapi agent code out to nova.virt.xenapi.agent
* ensure libguestfs has completed before proceeding
* flags documentation to deprecate connection\_type
* refactor baremetal/proxy => baremetal/driver
* refactor xenapi/connection => xenapi/driver
* refactor vmwareapi\_conn => vmwareapi/driver
* Don't block instance delete on missing block device volume
* Adds diagnostics command for the libvirt driver
* associate\_floating\_ip an ip already in use
* When deleting an instance, avoid freakout if iscsi device is gone
* Expose over-quota exceptions via native API
* Fix snapshots tests failing bug 1022670
* Remove deprecated auth code
* Remove deprecated auth-related api extensions
* Make pep8 test work on Mac
* Avoid lazy-loading errors on instance\_type
* Fetch kernel/ramdisk images directly
* Ignore failure to delete kernel/ramdisk in xenapi driver
* Boot from volume for Xen
* Fix 'instance %s: snapshotting' log message
* Fix KeyError 'key\_name' when KeyPairExists raised
* Propagate setup.py change from common
* Properly name openstack.common.exception
* Janitorial:  Catch rpc up with a change in common
* Make reboot work for halted xenapi instances
* Removed a bunch of cruft files
* Update common setup code to latest
* fix metadata file injection with xen
* Switch to common notifiers
* Implements updating complete bw usage data
* Fix rpc import path in nova-novncproxy
* This patch stops metadata from being deleted when an instance is deleted
* Set the default CPU mode to 'host-model' for Libvirt KVM/QEMU guests
* Fallback to fakelibvirt in test\_libvirt.py test suite
* Properly track VBD and VDI connections in xenapi fake
* modify hacking.py to not choke on the def of \_()
* sort .gitignore for readability
* ignore project files for eclipse/pydev
* Add checks for retrieving deleted instance metadata for notification events
* Allow network\_uuids that begin with a prefix
* Correct typo in tools/hacking.py l18n -> i18n
* Add \*.egg\* to .gitignore
* Remove auth-related nova-manage commands
* Remove unnecessary target\_host flag in xenapi driver tests
* Remove unnecessary setUp() method in xenapi driver tests
* Finish AUTHORS transition
* Don't catch & ignore exceptions when setting up LXC container filesystems
* Ensure system metadata is sent on new image creation
* Distinguish over-quota for volume size and number
* Assign service\_catalog in NovaKeystoneContext
* Fix some hacking violations in the quantum tests
* Fix missing nova.log change to nova.openstack.common.log
* Add Cinder Volume API to Nova
* Modifies ec2/cloud to be able to use Cinder
* Fix nova-rpc-zmq-receiver
* Drop xenapi session.get\_imported\_xenapi()
* Fix assertRaises(Exception, ...) HACKING violation
* Make possible to store snapshots not in /tmp directory
* Prevent file injection writing to host filesystem
* Implement nova network API for quantum API 2.0
* Expand HACKING with commit message guidelines
* Add ServiceCatalog entries to enable Cinder usage
* Pass vdi\_ref to fake.create\_vbd() not a string
* Switch to common logging
* use import\_object\_ns for compute\_driver loading
* Add compatibility for CPU model config with libvirt < 0.9.10
* Sync rpc from openstack-common
* Redefine the domain's XML on volume attach/detach
* Sync jsonutils from openstack-common
* Sync iniparser from openstack-common
* Sync latest importutils from openstack-common
* Sync excutils from openstack-common
* Sync cfg from openstack-common
* Add missing gettextutils from openstack-common
* Run hacking tests as part of the gate
* Remove duplicate volume\_id
* Make metadata content match the requested version of the metadata API
* Create instance in DB before block device mapping
* Get hypervisor uptime
* Refactoring code to kernel Dom0 plugin
* Ability to read deleted system metadata records
* Add check for no domains in libvirt driver
* Remove passing superfluous read\_deleted argument
* Flesh out the README file with a little more useful information
* Remove unused 'get\_open\_port' method from libvirt utils
* deallocate\_fixed\_ip attempts to update deleted ip
* Dom0 plugin now returns data in proper format
* Add PEP8 checks back for Dom0 plugins
* Add missing utils declaration to RPM spec
* Fixes bug 1014194, metadata keys are incorrect for kernel-id and ramdisk-id
* Clean up cruft in nova.image.glance
* Retry against different Glance hosts
* Fix some import ordering HACKING violations
* Deal with unknown instance status
* OS API should return SHUTOFF, not STOPPED
* Implement blueprint ec2-id-compatibilty
* Add multi-process support for API services
* Allow specification of the libvirt guest CPU model per host
* Refactor Dom0 Glance plugin
* Switch libvirt get\_cpu\_info method over to use config APIs
* Remove tpool stub in xenapi tests
* Use setuptools-git plugin for MANIFEST
* Remove duplicate check of server\_dict['name']
* Add missing nova-novncproxy to tarballs
* Add libvirt config classes for handling capabilities XML doc
* Refactor libvirt config classes for representing CPU models/features
* Fix regression in test\_connection\_to\_primitive libvirt testcase
* Rename the instance\_id column in instance\_info\_caches
* Rename GlanceImageService.get to download
* Use LOG.exception instead of logging.exception
* Align run\_tests.py pep8 with tox
* Add hypervisor information extension
* Remove GlanceImageService.index in favor of detail
* Swap VDI now uses correct name label
* Remove image service show\_by\_name method
* Cleanup of image service code
* Adds default fall-through to the multi scheduler. Fixes bug 1009681
* Add missing netaddr import
* Make nova list/show behave nicely on instance\_type deletion
* refactor libvirt from connection -> driver
* Switch to using new config parsing for vm\_vdi\_cleaner.py
* Adds missing 'owner' attribute to image
* Ignore floatingIpNotAssociated during disassociation
* Avoid casts in network manager to prevent races
* Stop nova\_ipam\_lib from changing the timeout setting
* Remove extra DB calls for instances from OS API extensions
* Allow single uuid to be specified for affinity
* Fix invalid variable reference
* Avoid reset on hard reboot if not supported
* Fix several PEP-8 issues
* Allow access to metadata server '/' without IP check
* Fix db calls for snaphsot and volume mapping
* Removes utils.logging\_error (no longer used)
* Removes utils.fetch\_file (no longer used)
* Improve filter\_scheduler performance
* Remove unnecessary queries for network info in notifications
* Re-factor instance DB creation
* Fix hacking.py failures..
* fix libvirt get\_memory\_mb\_total() with xen
* Migrate existing routes from flat\_interface
* Add full test environment
* Another killfilter test fix for Fedora 17
* Remove unknown shutdown kwarg in call to vmops.\_destroy
* Refactor vm\_vdi\_cleaner.py connection use
* Remove direct access to glance client
* Fix import order of openstack.common
* metadata: cleanup pubkey representation
* Make tgtadm the default iscsi user-land helper
* Move rootwrap filters definition to config files
* Fixes ram\_allocation\_ratio based over subscription
* Call libvirt\_volume\_driver with right mountpoint
* XenAPI: Fixes Bug 1012878
* update refresh\_cache on compute calls to get\_instance\_nw\_info
* vm state and task state management
* Update pylint/pep8 issues jenkins job link
* Addtional CommandFilters to fix rootwrap on SLES
* Tidy up exception handling in contrib api consoles
* do sync before fusermount to avoid busyness
* Fix bug 1010581
* xenapi tests: changes size='0' to size=0
* fixes a bug in xenapi tests where a string should be int
* Minor HACKING.rst exception fix
* Make libvirt LoopingCalls actually wait()
* Add instance\_id in Usage API response
* Set libvirt\_nonblocking to true by default for Folsom
* Admin action to reset states
* Use rpc from openstack-common
* add nova-manage bash completion script
* Spelling fixes
* Fix bug 1014925: fix os-hosts
* Adjust the libvirt config classes' API contract for parsing
* Move libvirt version comparison code into separate function helper
* Remove two obsolete libvirt cheetah templates from MANIFEST.in
* Propose nova-novncproxy back into nove core
* Fix missing import in compute/utils.py
* Add instance details to notifications
* Xen Storage Manager: tests for xensm volume driver
* SM volume driver: DB changes and tests
* moved update cache functionality to the network api
* Handle missing server when getting security groups
* Imports cleanup
* added deprecated.warn helper method
* Enforce an instance uuid for instance\_test\_and\_set
* Replaces functions in utils.py with openstack/common/timeutils.py
* Add CPU arch filter scheduler support
* Present correct ec2id format for volumes and snaps
* xensm: Fix xensm volume driver after uuid changes
* Cleanup instance\_update so it only takes a UUID
* Updates the cache
* Add libvirt min version check
* Ensure dnsmasq accept rules are preset at startup
* Re-add private \_compute\_node\_get call to sql api
* bug #996880 change HostNotFound in hosts to HTTPNotFound
* Unwrap httplib.HTTPConnection after WsgiLimiterProxyTest
* Log warnings instead of full exceptions for AMQP reconnects
* Add missing ack to impl\_qpid
* blueprint lvm-disk-images
* Remove unused DB calls
* Update default policies for KVM guest PIT & RTC timers
* Add support for configuring libvirt VM clock and timers
* Dedupe native and EC2 security group APIs
* Add two missing indexes for instance\_uuid columns
* Revert "Fix nova-manage backend\_add with sr\_uuid"
* Adds property to selectively enable image caching
* Remove utils.deprecated functions
* Log connection\_type deprecation message as WARNING
* add unit tests for new virt driver loader
* Do not attempt to kill already-dead dnsmasq
* Only invoke .lower() on non-None protocols
* Add indexes to new instance\_uuid columns
* instance\_destroy now only takes a uuid
* Do not always query deleted instance\_types
* Rename image to image\_id
* Avoid partially finished cache files
* Fix power\_state mis-use bug 1010586
* Resolve unittest error in rpc/impl\_zmq
* Fix whitespace in sqlite steps
* Make eventlet backdoor play nicer with gettext
* Add user\_name project\_name and color option to log
* fixes bug 1010200
* Fixes affinity filters when hints is None
* implement sql-comment-string stack traces
* Finalize tox config
*  Fixes bug lp:999928
* Convert consoles to use instance uuid
* Use OSError instead of ProcessExecutionError
* Replace standard json module with openstack.common.jsonutils
* Don't query nova-network on startup
* Cleans up power\_off and power\_on semantics
* Refactor libvirt create calls
* Fix whitespace in sqlite steps
* Update libvirt imagecache to support resizes
* separate Metadata logic away from the web service
* Fix bug 1006664: describe non existent ec2 keypair
* Make live\_migration a first-class compute API
* Add zeromq driver. Implements blueprint zeromq-rpc-driver
* Fix up protocol case handling for security groups
* Prefix all nova binaries with 'nova-'
* Migrate security\_group\_instance\_association to use a uuid to refer to instances
* Migrate instance\_metadata to use a uuid to refer to instances
* Adds \`disabled\` field for instance-types
* More meaningful help messages for libvirt migration options
* fix the instance quota overlimit message
* fix bug lp:1009041,add option "-F" to make mkfs non-interactive
* Finally ack consumed message
* Revert "blueprint <multi-process-api-service>"
* Use openstack-common's policy module
* Use openstack.common.cfg.CONF
* bug #1006094 correct typo in addmethod.openstackapi.rst
* Correct use of uuid in \_get\_instance\_volume\_bdm
* Unused imports cleanup (folsom-2)
* Quantum Manager disassociate floating-ips on instance delete
* defensive coding against None inside bdm resolves bug 1007615
* Add missing import to quantum manager
* Add a comment to rpc.queue\_get\_for()
* Add shared\_storage\_test methods to compute rpcapi
* Add get\_instance\_disk\_info to the compute rpcapi
* Add remove\_volume\_connection to the compute rpcapi
* blueprint <multi-process-api-service>
* Implements resume\_state\_on\_host\_boot for libvirt
* Fix libvirt rescue to work with whole disk images
* Finish removing xenapi.HelperBase class
* Remove network\_util.NetworkHelper class
* Remove volume\_util.VolumeHelper class
* Remove vm\_utils.VMHelper class
* Start removing unnecessary classes from XenAPI driver
* XenAPI: Don't hardcode userdevice for VBDs
* convert virt drivers to fully dynamic loading
* Add compare\_cpu to the compute rpcapi
* Add get\_console\_topic() to the compute rpcapi
* Add refresh\_provider\_fw\_rules() to compute rpcapi
* Use compute rpcapi in nova-manage
* Add post\_live\_migration\_at\_destination() to compute rpcapi
* Add pre\_live\_migration() to the compute rpcapi
* Add rollback\_live\_migration\_at\_destination() to compute rpcapi
* Add finish\_resize() to the compute rpcapi
* Add resize\_instance() to the compute rpcapi
* Add finish\_revert\_resize() to the compute rpcapi
* Add get\_console\_pool\_info() to the compute rpcapi
* Fix destination host for remove\_volume\_connection
* Don't deepcopy RpcContext
* Remove resize function from virt driver
* Cleans up extraneous volume\_api calls
* Remove list\_disks/list\_interfaces from virt driver
* Remove duplicate words in comments
* Implement blueprint host-topic-matchmaking
* Remove unnecessary setting of XenAPI module attribute
* Prevent task\_state changes during VERIFY\_RESIZE
* Eliminate a race condition on instance deletes
* Make sure an exception is logged when config file isn't found
* Removing double quotes from sample config file
* Backslash continuation removal (Nova folsom-2)
* Update .gitignore
* Add a note on why quota classes are unused in Nova
* Move queue\_get\_for() from db to rpc
* Sample config file tool updates
* Fix instance update notification publisher id
* Use cfg's new global CONF object
* Make xenapi fake match real xenapi a bit closer
* Align ApiEc2TestCase to closer match api-paste.ini
* Add attach\_time for EC2 Volumes
* fixing issue with db.volume\_update not returning the volume\_ref
* New RPC tests, docstring fixes
* Fix reservation\_commit so it works w/ PostgreSQL
* remove dead file nova/tests/db/nova.austin.sqlite
* Fix the conf argument to get\_connection\_pool()
* Remove Deprecated auth from EC2
* Revert "API users should not see deleted flavors."
* Grammar fixes
* Record instance architecture types
* Grammar / spelling corrections
* cleanup power state (partially implements bp task-management)
* [PATCH] Allow [:print:] chars for security group names
* Add scheduler filter for trustedness of a host
* Remove nova.log usage from nova.rpc
* Remove nova.context dependency from nova.rpc
* \_s3\_create update only pertinent metadata
* Allow adding fixed IPs by network UUID
* Fix a minor spelling error
* Run coverage tests via xcover for jenkins
* Localize rpc options to rpc code
* clean-up of the bare-metal framework
* Use utils.utcnow rather than datetime.utcnow
* update xen to use network\_model
* fixes bug 1004153
* Bugfix in simple\_tenant\_usage API detail view
* removed a dead db function register\_models()
* add queue name argument to TopicConsumer
* Cleanup tools/hacking using flake8
* Expose a limited networks API for users
* Added a instance state update notification
* Remove deprecated quota code
* Update pep8 dependency to v1.1
* Nail pep8 dependencies to 1.0.1
* API users should not see deleted flavors
* Add scheduler filter: TypeAffinityFilter
* Add help string to option 'osapi\_max\_request\_body\_size'
* Permit deleted instance types to be queried for active instances
* Make validate\_compacted\_migration into general diff tool
* Remove unused tools/rfc.sh
* Finish quota refactor
* Use utils.parse\_strtime rather than datetime.strptime
* Add version to compute rpc API
* Add version to scheduler rpc API
* Add version to console rpc API
* Remove wsgiref from requirements
* More accurate rescue mode testing for XenAPI
* Add tenant id in self link in /servers call for images
* Add migration compaction validation tool
* Enable checking for imports in alphabetical order
* Include volume-usage-audit in tarballs
* Fix XenServer diagnostics to provide correct details
* Use cfg's new behavior of reset() clearing overrides
* Sync with latest version of openstack.common.cfg
* Only permit alpha-numerics and .\_- for instance type names
* Use memcache to store consoleauth tokens
* cert/manager.py not using crypto.fetch\_crl
* Cleanup LOG.getLoggers to use \_\_name\_\_
* Imported Translations from Launchpad
* Alphabetize imports in nova/tests/
* Fix Multi\_Scheduler to process host capabilities
* fixed\_ip\_get\_by\_address read\_deleted from context
* Fix for Quantum LinuxBridge Intf driver plug call
* Add additional logging to compute filter
* use a RequestContext object instead of context module
* make get\_all\_bw\_usage() signature match for fake virt driver
* Add unit test coverage for bug 1000261
* Moving network tests into the network folder
* Add version to consoleauth rpc API
* Add version to the cert rpc API
* Add base support for rpc API versioning
* fixes typo that completely broken Quantum/Nova integration
* Make Iptables FW Driver handle dhcp\_server None
* Add aliases to .mailmap for comstud and belliott
* Add eventlet backdoor to facilitate troubleshooting
* Update nova's copy of image metadata on rebuild
* Optional timeout for servers stuck in build
* Add configurable timeout to Quantum HTTP connections
* Modify vm\_vdi\_cleaner to handle \`-orig\`
* Add \_\_repr\_\_ to least\_cost scheduler
* Bump XenServer plugin version
* handle updated qemu-img info output
* Rearchitect quota checking to partially fix bug 938317
* Add s3\_listen and s3\_listen\_port options
* Misused and not used config options
* Remove XenAPI use of eventlet tpool
* Fixed compute periodic task. Fixes bug 973331
* get instance details results in volumes key error
* Fix bug 988034 - Quantum Network Manager - not clearing ips
* Stop using nova.exception from nova.rpc
* Make use of openstack.common.jsonutils
* Alphabetize imports in nova/api/
* Remove unused \_get\_target code from xenapi
* Implement get\_hypervisor\_hostname for libvirt
* Alphabetize imports
* Alphabetize imports in nova/virt/
* Adding notifications for volumes
* Pass 'nova' project into ConfigOpts
* fixes bug 999206
* Create an internal key pair API
* Make allocation failure a bit more friendly
* Avoid setting up DHCP firewall rules with FlatManager
* Migrate missing license info
* Imported Translations from Launchpad
* Fix libvirt Connection.get\_disks method
* Create a utf8 version of the dns\_domains table
* Setup logging, particularly for keystone middleware
* Use default qemu-img cluster size in libvirt connection driver
* Added img metadata validation. Fixes bug 962117
* Remove unnecessary stubout\_loopingcall\_start
* Actually use xenapi fake setter
* Provide a transition to new .info files
* Store image properties with instance system\_metadata
* Destroy system metadata when destroying instance
* Fix XenServer windows agent issue
* Use ConfigOpts.find\_file() to find paste config
* Remove instance Foreign Key in volumes table, replace with instance\_uuid
* Remove old flagfile support
* Removed unused snapshot\_instance method
* Report memory correctly on Xen. Fixes bug 997014
* Added image metadata to compute.instance.exists
* Update PostgreSQL sequence names for zones/quotas
* Minor help text related changes
* API does need new image\_ref on rebuild immediately
* Avoid unnecessary inst lookup in vmops \_shutdown
* implement blueprint floating-ip-notification
* Defer image\_ref update to manager on rebuild
* fix bug 977007,make nova create correct size of qcow2 disk file
* Remove unnecessary shutdown argument to \_destroy()
* Do not fail on notify when quantum and melange are out of sync
* Remove instance action logging mechanism
* httplib throw "TypeError: an integer is required" when run quantum
* fix bug 992008, we should config public interface on compute
* A previous patch decoupled the RPC drivers from the nova.flags, breaking instance audit usage in the process. This configures the xvpvncproxy to configure the RPC drivers properly with FLAGS so that xvpvncproxy can run
* Fix bug 983206 : \_try\_convert parsing string
* pylint cleanup
* Fix devref  docs
* Remove Deprecated AuthMiddleware
* Allow sitepackages on jenkins
* Replaces exceptions.Error with NovaException
* Docs for vm/task state transitions
* Fix a race with rpc.register\_opts in service.py
* Mistake with the documentation about cost function's weight corrected
* Remove state altering in live-migration code
* Register fake flags with rpc init function
* Generate a Changelog for Nova
* Find context arg by type rather than by name
* Default auto-increment for int primary key columns
* Adds missing copyright to migration 082
* Add instance\_system\_metadata modeling
* Use fake\_libvirt\_utils for libvirt console tests
* Fix semantics for migration test environment var
* Clean up weighted\_sum logic
* Use ConfigOpts.find\_file() to locate policy.json
* Sync to newer openstack.common.cfg
* Fix test\_mysql\_innodb
* Implement key pair quotas
* Ensure that the dom0 we're connected to is the right one
* Run ip link show in linux\_net.\_device\_exists as root
* Compact pre-Folsom database migrations
* Remove unused import
* Pass context to notification drivers when we can
* Use save\_and\_reraise\_exception() from common
* Fix innodb tests again
* Convert Volume and Snapshot IDs to use UUID
* Remove unused images
* Adding 'host' info to volume-compute connection information
* Update common.importutils from openstack-common
* Provide better quota error messages
* Make kombu support optional for running unit tests
* Fix nova.tests.test\_nova\_rootwrap on Fedora 17
* Xen has to create it's own tap device if using libvirt and QuantumLinuxBridgeVIFDriver
* Fix test\_migrations to work with python 2.6
* Update api-paste.ini to remove unused settings
* Fix test\_launcher\_app to ensure service actually got started
* Minor refactor of servers viewbuider
* A previous patch decoupled the RPC drivers from the nova.flags, breaking instance audit usage in the process. This configures the instance audit usage to configure the RPC drivers properly with FLAGS so that the job can run
* Allow blank passwords in changePassword action
* Allow blank adminPass on server create
* Return a BadRequest on bad flavors param values
* adjust logging levels for utils.py
* Update integration tests to listen on 127.0.0.1
* Log instance consistently
* Create name\_label local variable for logging message
* Remove hack for xenapi driver tests
* Migrate block\_device\_mapping to use instance uuids
* Remove unnecessary return statements
* Clean up ElementTree usage
* Adds better bookending and robustness around the instance audit usage generation
* Pass instance to resize\_disk() to fix exception
* Minor spelling fix
* Removes RST documentation and moves it to openstack-manuals
* Trivial spelling fix
* Remove workaround for sqlalchemy-migration < 0.6.4
* Remove unnecessary references to resize\_confirm\_window flag
* Fix InnoDB migration bug in migrate script 86
* Use openstack.common.importutils
* Ignore common code in coverage calculations
* Use additional task states during resize
* Add libvirt get\_console\_output tests: pty and file
* Keep uuid with bandwidth usage tracking to handle the case where a MAC address could be recycled between instances
* Added the validation for name check for rebuild of a server
* Make KillFilter to handle 'deleted' w/o rstrip
* Fix instance delete notifications
* Disconnect stale instance VDIs when starting nova-compute
* Fix timeout in EC2 CloudController.create\_image()
* Add additional capabilities for computes
* Move image checksums into a generic file
* Add instance to several log messages
* Imports to human alphabetical order
* Fixes bug 989271, fixes launched\_at date on notifications
* Enable InnoDB checking
* make all mysql tables explicitly innodb
* Use instance\_get\_by\_uuid since we're looking up a UUID
* Use nova\_uuid attribute instead of trying to parse out name\_label
* Add a force\_config\_drive flag
* Fix 986922
* Improvement for the correct query extraction
* Fixes bug 983024
* Make updating hostId raises BadRequest
* Disallow network creation when label > 255. Fixes bug 965008
* Introduced \_atomic\_restart\_dhcp() Fixes Bug 977875
* Make the filename that image hashes are written to configurable
* Xen: Pass session to destroy\_vdi
* Add instance logging to vmware\_images.py
* Add instance logging to vmops.py
* fix bug #980452 set net.ipv4.ip\_forward=1 on network
* Log instance
* Log instance information for baremetal
* Include instance in log message
* Log instance
* Ensure all messages include instance
* Add instance to log messages
* Include instance in log message
* Refactor nova.rpc config handling
* Don't leak RPC connections on timeouts or other exceptions
* Small cleanup to attach\_volume logging
* Implements EC2 DescribeAddresses by specific PublicIp
* Introduced flag base\_dir\_name. Fixes bug 973194
* Set a more reasonable default RPC thread pool size
* Number of missing imports should always be shown
* Typo fix in bin/instance-usage-audit
* Improved tools/hacking.py
* Scope coverage report generation to nova module
* Removes unnecessary code in \_run\_instance
* Validate min\_ram/min\_disk on rebuild
* Adding context to usage notifications
* Making \`usage\_from\_instance\` private
* Remove \_\_init\_\_.py from locale dir
* Fixes bug 987335
* allow power state "BLOCKED" for live migrations if using Xen by libvirt
* Exclude xenapi plugins from pep8/hacking checks
* Imported Translations from Launchpad
* Remove unnecessary power state translation messages
* Add instance logging
* Use utils.save\_and\_reraise\_exception
* Removing XenAPI class variable, use session instead
* Log instance consistently
* Keep nova-manage commands sorted
* Log instances consistently
* Moves \`usage\_from\_instance\` into nova.compute.utils
* Log instance
* nova.virt.xenapi\_conn -> nova.virt.xenapi.connection
* Remove unused time keyword arg
* Remove unused variable
* support a configurable libvirt injection partition
* Refactor instance image property inheritance out to a method
* Refactor availability zone handling out to a method
* Include name being searched for in exception message
* Be more tolerant of deleting failed builds
* Logging updates in IptablesFirewallDriver
* Implement security group quotas
* Do not allow blank adminPass attribute on set password
* Make rebuilds with an emtpy name raise BadRequest
* Updates launched\_at in the finish and revert\_migration calls
* Updated instance state on resize error
* Reformat docstrings in n/c/a/o/servers as per HACKING
* fix bug 982360, multi ip block for dmz\_cidr
* Refactor checking instance count quota
* Small code cleanup for config\_disk handling
* Refactors kernel and ramdisk handling into their own method
* Improve instance logging in compute/manager
* Add deleted\_at to instance usage notification
* Simplify \_get\_vm\_opaque\_ref in xenapi driver
* Test unrescue works as well
* Remove unused variable
* Port types and extra specs to volume api
* Make exposed methods clearer in xenapi.vmops
* Fix error message to report correct operation
* Make run\_tests.sh just a little bit less verbose
* Log more information when sending notifications
* xenapi\_conn -> xenapi.connection
* Renamed current\_audit\_period function to last\_completed\_audit\_period to clarify its purpose
* QuantumManager will start dnsmasq during startup. Fixes bug 977759
* Fixed metadata validation err. Fixes bug 965102
* Remove python-novaclient dependency from nova
* Extend instance UUID logging
* Remove references to RemoteError in os-networks
* Fix errors in os-networks extension
* Removes dead code around start\_tcp in Server
* Improve grammar throughout nova
* Improved localization testing
* Log kwargs on a failed String Format Operation
* Standardize quota flag format
* Remove nova Direct API
* migration\_get\_all\_unconfirmed() now uses lowercase "finished" Fixes bug 977719
* Run tools/hacking.py instead of pep8 mandatory
* Delete fixed\_ips when network is deleted
* Remove unecessary --repeat option for pep8
* Create compute.api.BaseAPI for compute APIs to use
* Give all VDIs a reasonable name-label and name-description
* Remove last two remaining hyperV references
* bug 968452
* Add index to fixed\_ips.address
* Use 'root' instead of 'os' in XenAPI driver
* Information about DifferentHostFilter and SameHostFilter added
* HACKING fixes, sqlalchemy fix
* Add test to check extension timestamps
* Fixes bug 952176
* Update doc to mention nova tool for type creation
* Change Diablo document reference to trunk
* Imported Translations from Launchpad
* Cloudpipe tap vpn not always working
* Allow instance logging to use just a UUID
* Add the serialization of exceptions for RPC calls
* Cleanup xenapi driver logging messages to include instance
* Stop libvirt test from deleting instances dir
* Move product\_version to XenAPISession
* glance plugin no longer takes num\_retries parameter
* Remove unused user\_id and project\_id parameters to fetch\_image()
* Cleanup \_make\_plugin\_call()
* Push id generation into \_make\_agent\_call()
* Remove unused path argument for \_make\_agent\_call()
* Remove unused xenstore methods
* Combine call\_xenapi and call\_xenapi\_request
* Fixed bug 962840, added a test case
* Use -1 end-to-end for unlimited quotas
* fix bug where nova ignores glance host in imageref
* Remove unused \_parse\_xmlrpc\_value
* Fix traceback in image cache manager
* Fixes regression in release\_dhcp
* Use thread local storage from openstack.common
* Extend FilterScheduler documentation
* Add validation on quota limits (negative numbers)
* Get unit tests functional in OS X
* Make sure cloudpipe extension can retrieve network
* Treat -1 quotas as unlimited
* Auto-confirming resizes would bail on exceptions
* Grab the vif directly on release instead of lookup
* Corrects an AttributeError in the quota API
* Allow unprivileged RADOS users to access rbd volumes
* Remove nova.rpc.impl\_carrot
* Sync openstack.common.cfg from openstack-common
* add libvirt\_inject\_key flag fix bug #971640
* Do not fail to build a snapshot if base image is not found
* fix TypeError with unstarted threads in nova-network
* remove unused flag: baremetal\_injected\_network\_template baremetal\_uri baremetal\_allow\_project\_net\_traffic
* Imported Translations from Launchpad
* fixed postgresql flavor-create
* Add rootwrap for touch
* Ensure floating ips are recreated on reboot
* Handle instances being missing while listing floating IPs
* Allow snapshots in error state to be deleted
* Ensure a functional database connection
* Add a faq to vnc docs
* adjust logging levels for linux\_net
* Handle not found in check for disk availability
* Acccept metadata ip so packets aren't snatted
* bug 965335
* Export user id as password to keystone when using noauth
* Check that DescribeInstance works with deleted image
* Check that volume has no snapshots before deletion
* Fix libvirt rescue
* Check vif exists before releasing ip
* Make kombu failures retry on IOError
* Adds middleware to limit request body sizes
* Add validation for OSAPI server name length
* adjust logging levels for libvirt error conditions
* Fix exception type in \_get\_minram\_mindisk\_params
* fixed bug lp:968019 ,fix network manager init floating ip  problem
* When dnsmasq fails to HUP log an error
* Update KillFilter to handle 'deleted' exe's
* Fix disassociate query to remove foreign keys
* Touch in use image files when they're checked
* Base image signature files are not images
* Support timestamps as prefixes for traceback log lines
* get\_instance\_uuids\_by\_ip\_filter to QM
* Updated docstrings in /tools as per HACKING
* Minor xenapi driver cleanups
* Continue on the the next tenant\_id on 400 codes
* Fix marker behavior for flavors
* Remove auth\_uri, already have auth\_host, auth\_port
* A missing checksum does not mean the image is corrupt
* Default scheduler to spread-first
* Reduce the image cache manager periodic interval
* Handle Forbidden and NotAuthenticated glance exc
* Destroy src and dest instances when deleting in RESIZE\_VERIFY
* Allow self-referential groups to be created
* Fix unrescue in invalid state
* Clean up the shared storage check (#891756)
* Don't set instance ACTIVE until it's really active
* Fix traceback when sending invalid data
* Support sql\_connection\_debug to get SQL diagnostic information
* Improve performance of safe\_log()
* Fix 'nova-manage config convert'
* Add another libvirt get\_guest\_config() test case
* Fix libvirt global name 'xml\_info' is not defined
* Clean up read\_deleted support in host aggregates code
* ensure atomic manipulation of libvirt disk images
* Import recent openstack-common changes
* makes volume versions display properly
* Reordered the alphabet
* Add periodic\_fuzzy\_delay option
* Add a test case for generation of libvirt guest config
* Convert libvirt connection class to use config APIs for CPU comparisons
* Introduce a class for storing libvirt CPU configuration
* Convert libvirt connection class to use config APIs for guests
* Convert libvirt connection class to use config APIs for filesystem devices
* Introduce a class for storing libvirt snapshot configuration
* Move NIC devices back after disk devices
* Convert libvirt connection class to use config APIs for disk devices
* Convert libvirt connection class to use config APIs for input devices
* Convert libvirt connection class to use config APIs for serial/console devices
* Convert libvirt connection class to use config APIs for graphics
* Convert libvirt vif classes over to use config API
* Convert libvirt volume classes over to use config API
* Delete the test\_preparing\_xml\_info libvirt test
* Introduce a set of classes for storing libvirt guest configuration
* Send a more appropriate error response for 403 in osapi
* Use key in locals() that actually exists
* Fix launching of guests where instances\_path is on GlusterFS
* Volumes API now uses underscores for attrs
* Remove unused certificate SQL calls
* Assume migrate module missing \_\_version\_\_ is old
* Remove tools/nova-debug
* Inlining some single-use methods in XenAPI vmops
* Change mycloud.com to example.com (RFC2606)
* Remove useless dhcp\_domain flags in EC2
* Handle correctly QuotaError in EC2 API
* Avoid unplugging VBDs for rescue instances
* Imported Translations from Launchpad
* Rollback create\_disks handles StorageError exception
* Capture SIGTERM and Shut down python services cleanly
* Fixed status validation. Fixes bug 960884
* Clarify HACKING's shadow built-in guidance
* Strip auth token from log output
* Fail-fast for invalid read\_deleted values
* Only shutdown rescue instance if it's not already shutdown
* Modify nova.wsgi.start() should check backlog parameter
* Fix unplug\_vbd to retry a configurable number of times
* Don't send snapshot requests through the scheduler
* Implement quota classes
* Fixes bug 949038
* Open Folsom
* Fixes bug 957708
* Improvements/corrections to vnc docs
* Allow rate limiting to be disabled via flag
* Improve performance of generating dhcp leases
* Fix lxc console regression
* Strip out characters that should be escaped from console output
* Remove unnecessary data from xenapi test
* Correct accessIPv6 error message
* Stop notifications from old leases
* Fix typo in server diagnostics extension
* Stub-implement floating-ip functions on FlatManager
* Update etc/nova.conf.sample for ship
* Make sqlite in-memory-db usable to unittest
* Fix run/terminate race conditions
* Workaround issue with greenthreads and lockfiles
* allow the compute service to start with missing libvirt disks
* Destroy rescue instance if main instance is destroyed
* Tweak security port validation for ICMP
* Debug messages for host filters
* various cleanups
* Remove Virtual Storage Array (VSA) code
* Re-instate security group delete test case
* db api: Remove check for security groups reference
* Allow proper instance cleanup if state == SHUTOFF
* Use getLogger for nova-all
* Stop setting promisc on bridge
* Fix OpenStack Capitalization
* Remove improper use of redirect for hairpin mode
* Fix OpenStack Capitalization
* HACKING fixes, TODO authors
* Keep context for logging intact in greenthreads
* fix timestamps to match documented ec2 api
* Include babel.cfg in tarballs
* Fix LXC volume attach issue
* Make extended status not admin-only by default
* Add ssl and option to pass tenant to s3 register
* Remove broken bin/\*spool\* tools
* Allow errored volumes to be deleted
* Fix up docstring
* libvirt/connection.py: Set console.log permissions
* nonblocking libvirt mode using tpool
* metadata speed - revert logic changes, just caching
* Refix mac change to work around libvirt issue
* Update transfer\_vhd to handle unicode correctly
* Fixes bug 954833 By adding the execute bit to the xenhost xenapi plugin
* Cleanup flags
* fix bug 954488
* Fix backing file cp/resize race condition
* Use a FixedIp subquery to find networks by host
* Changes remove\_fixed\_ip to pass the instance host
* Map image ids to ec2 ids in metadata service
* Remove date\_dhcp\_on\_disassociate comment and docs
* Make fixed\_ip\_disassociate\_all\_by\_timeout work
* Refactor glance id<->internal id conversion for s3
* Sort results from describe\_instances in EC2 API
* virt/firewall: NoopFirewallDriver::instance\_filter\_exists must return True
* fix nova-manage floating delete
* fixed list warn when ip allocated to missing inst
* Removes default use of obsolete ec2 authorizor
* Additional extensions no longer break unit-tests
* Use cPickle and not just pickle
* Move (cast|call)\_compute\_message methods back into compute API class
* Fix libvirt get\_console\_output for Python < 2.7
* doc/source/conf.py: Fix man page building
* Update floating auto assignment to use the model
* Make nova-manage syslog check /var/log/messages
* improve speed of metadata
* Fix linux\_net.py interface-driver loading
* Change default of running\_deleted\_instance\_action
* Nuke some unused SQL api calls
* Avoid nova-manage floating create <IP addr>/32
* Add a serializer for os-quota-sets/defaults
* Import nova.exception so exception can be used
* refactoring code, check connection in Listener. refer to Bug #943031
* Fix live-migration in multi\_host network
* add convert\_unicode to sqlalchemy connection arguments
* Fixes xml representation of ext\_srv\_attr extension
* Sub in InstanceLimitExceeded in overLimit message
* Remove update lockmode from compute\_node\_get\_by\_host
* Set 'dhcp\_server' in \_teardown\_network\_on\_host
* Bug #922356 QuantumManager does not initiate unplug on the linux\_net driver
* Clean up setup and teardown for dhcp managers
* Display owner in ec2 describe images
* EC2 KeyName validation
* Fix issues with security group auths without ports
* Replaced use of webob.Request.str\_GET
* Allow soft\_reboot to work from more states:
* Make snapshots with qemu-img instead of libvirt
* Use utils.temporary\_chown to ensure permissions get reset
* Add VDI chain cleanup script
* Reduce duplicated code in xenapi
* Since 'net' is of nova.network.model.VIF class and 'ips' is an empty list, net needs to be pulled from hydrated nw\_info.fixed\_ips(), and appended to ips
* Fix nova-manage backend\_add with sr\_uuid
* Update values in test\_flagfile to be different
* Switch all xenapi async plugin calls to be sync
* Hack to fixup absolute pybasedir in nova.conf.sample
* fixup ldapdns default config
* Use cache='none' for all disks
* Update cfg from openstack-common
* Add pybasedir and bindir options
* Simply & unify console handling for libvirt drivers
* Cleanup XenAPI tests
* fix up nova-manage man page
* Don't use glance when verifying images
* Fixes os-volume/snapshot delete
* Use a high number for our default mac addresses
* Simplify unnecessary XenAPI Async calls to be synchronous
* Remove an obsolete FIXME comment
* Fixing image snapshots server links
* Wait for rescue VM shutdown to complete before destroying it
* Renaming user friendly fault name for HTTP 409
* Moving nova/network tests to more logical home
* Change a fake classes variable to something other than id
* Increase logging for xenapi plugin glance uploads
* Deprecate carrot rpc code
* Improve vnc proxy docs
* Require a more recent version of glance
* Make EC2 API a bit more user friendly
* Add kwargs to RequestContext \_\_init\_\_
* info\_cache is related to deleted instance
* Handle kwargs in deallocate\_fixed\_ip for FlatDHCP
* Add a few missing tests regarding exception codes
* Checks image virtual size before qemu-img resize
* Set logdir to a tempdir in test\_network
* Set lock\_path to a tempdir in TestLockCleanup
* Exceptions unpacking rpc messages shouldn't hang the daemon
* Use sqlalchemy reflection in migration 080
* Late load rabbit\_notifier in test\_notifier
* boto shouldn't be required for production deploys
* Don't use ec2 IDs in scheduler driver
* pyflakes cleanups on libvirt/connection.py
* Validate VDI chain before moving into SR
* Fix racey snapshots
* Don't swallow snapshot exceptions
* allow block migration to talk to glance/keystone
* Remove cruft and broken code from nova-manage
* Update paste file to use service tenant
* Further cleanup of XenAPI
* Fix XML namespaces for limits extensions and versions
* Remove the <acpi/> feature from UML/LXC guests
* setup.py: Fix doc building
* Add adjustable offset to audit\_period
* nova-manage: allow use of /32 IP range
* Clear created attributes when tearing down tests
* Fix multi\_host column name in setup\_networks..
* HACKING fixes, all but sqlalchemy
* Remove trailing whitespaces in regular file
* remove undocumented, unused mpi 'extension' to ec2 metadata
* Minor clarifications for the help strings in nova config options
* Don't use \_ for variable name
* Make test\_compute console tests more robust
* test\_compute stubs same thing multiple times
* Ignore InstanceNotFound when trying to set instance to ERROR
* Cleans up the create\_conf tool
* Fix bug 948611. Fix 'nova-manage logs errors'
* api-paste.ini: Add /1.0 to default urlmap
* Adds nova-manage command to convert a flagfile
* bug 944145: race condition causes VM's state to be SHUTOFF
* Cleanup some test docstrings
* Cleans up a bunch of unused variables in XenAPI
* Shorten FLAGS.rpc\_response\_timeout
* Reset instance to ACTIVE when no hosts found
* Replaces pipelines with flag for auth strategy
* Setup and teardown networks during migration
* Better glance exception handling
* Distinguish rootwrap Authorization vs Not found errors
* Bug #943178: aggregate extension lacks documentation
* Rename files/dirs from 'rabbit' to 'rpc'
* Change references to RabbitMQ to include Qpid
* Avoid running code that uses logging in a thread
* No longer ignoring man/novamanage
* Fixing incorrect use of instance keyword in logging
* Fix rst formatting and cross-references
* Provide a provider for boto.utils
* Only pass image uuids to compute api rebuild
* Finally fix the docs venv bug
* Get rid of all of the autodoc import errors
* Rename DistributedScheduler as FilterScheduler
* Allows new style config to be used for --flagfile
* Add support for lxc consoles
* Fix references to novncproxy\_base\_url in docs
* Add  assertRaises check to tools/hacking.py as N202
* fix restructuredtext formatting in docstrings that show up in the developer guide
* Raise 409 when rescuing instance in RESCUE mode
* Log a certain rare instance termination exception
* Update fixed\_ip\_associate to not use relationships
* Remove unnecessary code in test setUp/tearDown
* Imported Translations from Launchpad
* Only raw string literals should be used with \_()
* assertRaises(Exception, ...) considered harmful
* Added docs on MySQL queries blocking main thread
* Fix test\_attach\_volume\_raise\_exception
* Fix test\_unrescue to actually test unrescue
* bug #941794 VIF and intf drivers for Quantum Linux Bridge plugin
* Ensures that we don't exceed iptables chain max
* Allows --flat\_interface flag to override db
* Use self.mox instead of create a new self.mocker
* Fix test\_migrate\_disk\_and\_power\_off\_exception
* fakes.fake\_data\_store doesn't exist, so don't reset it
* populate glance 'name' field through ec2-register
* Remove unused \_setup\_other\_managers method from test case
* Remove unused test\_obj parameter to setUp()
* Use stubout instead of manually stubbing out os.path.exists
* Remove superfluous \_\_init\_\_ from test case
* Use test.TestCase instead of manually managing stubout
* Handle InstanceNotFound during server update
* Use stubout instead of manually stubbing out versions.VERSIONS
* Remove unused session variable in test setup
* Cleanup swap in \_create\_vm undo
* Do not invoke kill dnsmasq  if no pid file was found
* Fixes for ec2 images
* Retry download\_vhd with different glance host each time
* Display error for invalid CIDR
* Remove empty setUp/tearDown methods
* Call super class tearDown correctly
* Fixes bug 942556 and bug 944105
* update copyright, add version information to footer
* Refactor spawn to use UndoManager
* Fail gracefully when the db doesn't speak unicode
* Remove unnecessary setting up and down of mox and stubout
* Remove unnecessary variables from tests
* Ensure image status filter matches glance format
* fix for bug 821252.  Smarter default scheduler
* blueprint sphinx-doc-cleanup bug 944381
* Adds soft-reboot support to libvirt
* Minor cleanup based on HACKING
* libvirt driver calls unplug() twice on vm reboot
* Add missing format string type on some exception messages
* Fixing a request-id header bug
* Test creating a server with metadata key too long
* Fixes lp931801 and a key\_error
* notifications for delete, snapshot and resize
* Ensure that context read\_deleted is only one of 'no', 'yes' or 'only'
* register Cell model, not Zone model
* Option expose IP instead of dnshost in ec2 desc'
* Fix \_sync\_power\_states to obtain correct 'state'
* Ensures that keypair names are only AlphaNumeric
* Cast vcpu\_weight to string before calling xen api
* Add missing filters for new root commands
* Destroy VM before VDIs during spawn cleanup
* Include hypervisor\_hostname in the extended server attributes
* Remove old ratelimiting code
* Perform image show early in the resize process
* Adds netapp volume driver
* Fixes bug 943188
* Remove unused imports and variables from OS API
* Return empty list when volume not attached
* Be consistent with disabling periodic tasks
* Cast volume-related ids to str
* Fix for bug 942896: Make sure network['host'] is set
* Allow xvd\* to be supplied for volume in xenapi
* Initialize progress to 0 for build and resize
* Fix issue starting nova-compute w/ XenServer
* Provide retry-after guidance on throttled requests
* Use constant time string comparisons for auth
* Rename zones table to cells and Instance.zone\_name to cell\_name
* Ensure temporary file gets cleaned up after test
* Fixes bug 942549
* Use assertDictMatch to keep 2.6 unit tests passing
* Handle case where instance['info\_cache'] is None
* sm volume driver: fix backend adding failure
* sm vol driver: Fix regression in sm\_backend\_conf\_update
* TypeError API exceptions get logged incorrectly
* Add NoopFirewallDriver
* Add utils.tempdir() context manager for easy temp dirs
* Check all migrations have downgrade in test\_misc
* Remove monkey patching in carrot RPC driver
* Call detach\_volume when attach fails
* Do not hit the network\_api every poll
* OS X Support fixed, bug 942352
* Make scheduler filters more pluggable
* Adds temporary chown to sparse\_copy
* make nova-network usable with Python < 2.6.5
* Re-adds ssl to kombu configuration and adds flags that are needed to pass through to kombu
* Remove unused import
* Make sure detail view works for volume snaphots
* Imported Translations from Launchpad
* Decode nova-manage args into unicode
* Cleanup .rescue files in libvirt driver unrescue
* Fixes cloudpipe extension to work with keystone
* Add missing directive to tox.ini
* Update EC2KeystoneAuth to grab tenant 'id'
* Monkey patch migrate < 0.7.3
* Fixes bug lp#940734 - Adding manager import so AuthMiddleware works
* Clean stale lockfiles on service startup : fixes bug 785955
* Fix nova-manage floating create docs
* Fix MANIFEST.in to include missing files
* Example config\_drive init script, label the config drive
* fix unicode triggered failure in AuthManager
* Fix bug 900864 Quantum Manager flag for IP injection
* Include launch\_index when creating instances
* Copy data when migration dst is on a different FS
* bigger-than-unit test for cleanup\_running\_deleted\_instances
* Nova options tool enhancements
* Add hypervisor\_hostname to compute\_nodes table and use it in XenServer
* Fixes error if Melange returns no networks
* Print error if nova-manage should be run as root
* Don't delete security group in use from OS API
* nova-network can't deallocate ips from deleted  instances
* Making link prefixes support https
* Prevent infinite loop in PublishErrorsHandler
* blueprint host-aggregates: host maintenance - xenapi implementation
* bug 939480
* libvirt vif-plugging fixes.  Fixes bug 939252 , bug 939254
* Speeding up resize down with sparse\_copy
* Remove network\_api fallback for info\_cache from APIs
* Improve unit test coverage per bug/934566
* Return 40x for flavor.create duplicate
* refactor a conditional for testing and understanding
* Disable usb tablet support for LXC
* Add Nexenta volume driver
* Improve unit test coverage per bug/934566
* nova-manage: Fix 'fixed list'
* Add lun number to provider\_location in create\_volume \* Fixes bug 938876
* Fix WeightedHost
* Fix instance stop in EC2 create\_image
* blueprint host-aggregates: improvements and clean-up
* Move get\_info to taking an instance
* Support fixed\_ip range that is a subnet of the network block
* xenapi: nova-volume support for multiple luns
* Fix error that causes 400 in flavor create
* Makes HTTP Location Header return as utf-8 as opposed to Unicode
* blueprint host-aggregates: host maintenance
* blueprint host-aggregates: xenapi implementation
* Rework base file checksums
* Avoid copying file if dst is a directory
* Add 'nova-manage export auth'
* Alter output format of volume types resources
* Scheduler notifications added
* Don't store connection pool in RpcContext
* Fix vnc docs: novaclient now supports vnc consoles
* Clarify use of Use of deprecated md5 library
* Extract get\_network in quantum manager
* Add exception SnapshotIsBusy to be handled as VolumeIsBusy
* Exception cleanup
* Stop ignoring E202
* Support tox-based unittests
* Add attaching state for Volumes
* Fix quantum get\_all\_networks() signature (lp#936797)
* Escape apostrophe in utils.xhtml\_escape() (lp#872450)
* Backslash continuations (nova.api.openstack)
* Fix broken method signiture
* Handle OSError which can be thrown when removing tmpdir. Fixes bug 883326
* Update api-paste.ini with new auth\_token settings
* Imported Translations from Launchpad
* Don't tell Qpid to reconnect in a busy loop
* Don't inherit controllers from each other, we don't want the methods of our parent
* Improve unit test coverage per bug/934566
* Setting access ip values on server create
* nova.conf sample tool
* Imported Translations from Launchpad
* Add support for admin\_password to LibVirt
* Add ephemeral storage to flavors api
* Resolve bug/934566
* Partial fix for bug 919051
* fix pre\_block\_migration() interaction with libvirt cache
* Query directly for just the ip
* bug 929462: compile\_diagnostics in xenapi erronously catch XenAPI.Failure
* Use new style instance logging in compute api
* Fix traceback running instance-usage-audit
* Actual fix for bug 931608
* Support non-UTC timestamps in changes-since filter
* Add additional information to servers output
* Adding traceback to async faults
* Pulls the main components out of deallocate
* Add JSONFormatter
* Allow file logging config
* LOG.exception does not take an exc\_info keyword
* InstanceNotFound exceptions for terminate\_intance now Log warning instead of throwing exeptions
* bug 933620: Error during ComputeManager.\_poll\_bandwidth\_usage
* Make database downgrade works
* Run ovs-ofctl as root
* 077\_convert\_to\_utf8: Convert \*all\* FK tables early
* Fix bug 933147 Security group trigger notifications
* Fixes nova-volume support for multiple luns
* Normalize odd date formats
* Remove all uniqueness constraints in migration 76
* Add RPC serialization checking, fix exposed problems
* Don't send a SQLAlchemy model over rpc
* Adds back e2fsck exit code checking
* Syncs vncviewer mouse cursor when connected to Windows VMs
* Backslash continuations (nova.tests)
* The security\_group name should be an XML attribute
* Core modifications for future zones service
* Remove instance\_get stubs from server action tests
* removed unused method and added another test
* Enables hairpin\_mode for virtual bridge ports, allowing NAT reflection
* Removed zones from api and distributed scheduler
* Fix bug 929427
* Tests for a melange\_ipam\_lib, who is missing tests
* Create a flag for force\_to\_raw for images
* Resolve bug/927714 -- get instance names from db
* Fix API extensions documentation, bug 931516
* misc networking fixes
* Print friendly message if no floating IPs exist
* Catch httplib.HTTPException as well
* Expand Quantum Manager Unit Tests + Associated Fixes
* bw\_usage takes a MAC address now
* Adding tests for NovaException printing
* fix a syntax error in libvirt.attach\_volume() with lxc
* Prevent Duplicate VLAN IDs
* tests: fix LdapDNS to allow running test\_network in isolation
* Fix the description of the --vnc\_enabled option
* Different exit code in new versions of iscsiadm
* improve injection diagnostics when nbd unavailable. Bug 755854
*  remove unused nwfilter methods and tests
* LOG.exception only works while in an exception handler
* \_() works best with string literals
* Remove unnecessary constructors for exceptions
* Don't allow EC2 removal of security group in use
* improve stale libvirt images handling fix. Bug 801412
* Added resize support for Libvirt/KVM
* Update migration 076 so it supports PostgreSQL
* Replace ApiError with new exceptions
* Simple way of returning per-server security groups
* Declare deprecated auth flag before its used
* e2fsck needs -y
* Standardize logging delaration and use
* Changing nova-manage error message
* Fix WADL/PDF docs referenced in describedby links
* bug 931604: improve how xenapi RRD records are retrieved
* Resolve bug/931794 -- add uuid to fake
* Use new style instance logging in compute manager
* clean pyc files before running unit tests
* Adding logging for 500 errors
* typo fix
* run\_tests.sh fix
* get\_user behavior in ldapdriver
* Fsck disk before removing journal
* Don't query database with an empty list for IN clause
* Use stubs in libvirt/utils get\_fs\_info test
* Adding (-x | --stop) option back to runner.py
* Remove duplicate variable
* Fixing a unicode related metadata bug
* bug 931356: nova-manage prints libvirt related warnings if libvirt isn't installed
* Make melange\_port an integer
* remove a private duplicate function
* Changes for supporting fast cloning on Xenserver. Implements blueprint fast-cloning-for-xenserver 	1. use\_cow\_images flag is reused for xenserver to check if copy on write images should be used. 	2. image-id is used to tag an image which has already been streamed from glance. 	3. If cow is true, when an instance of an image is created for the first time on a given xenserver, the image is streamed from glance and copy on write disk is created for the instance. 	4. For subsequent instance creation requests (of the same image), a copy on write disk is created from the base image that is already present on the host. 	5. If cow is false, when an instance of an image is created for the first time on a host, the image is streamed from glance and its copy is made to create a virtual disk for the instance. 	6. For subsequent instance creation requests, a copy of disk is made for creating the disk for the instance. 	7. Snapshot creation code was updated to handle cow=true. Now there can be upto 3 disks in the chain. The base disk needs to be uploaded too. 	8. Also added a cache\_images flag. Depending on whether the flag is turned on on not, images will be cached on the host
* Completes fix for LP #928910 - libvirt performance
* Add some more comments to \_get\_my\_ip()
* remove unused and buggy function from S3ImageService
* Fix minor typo in runner.py
* Remove relative imports from scheduler/filters
* Converting db tables to utf8
* remove all instance\_type db lookups from network
* Remedies LP Bug #928910 - Use libvirt lookupByName() to check existence
* Force imageRef to be a string
* Retry on network failure for melange GET requests
* Handle network api failures more gracefully
* Automatic confirmation of resizes on libvirt
* Fix exception by passing timeout as None
* Extend glance retries to show() as well
* Disable ConfigParser interpolation (lp#930270)
* fix FlatNetworkTestCase.test\_get\_instance\_nw\_info
* remove unused and buggy function from baremetal proxy
* Remove unused compute\_service from images controller
* Backslash continuations (nova.virt.baremetal)
* fixed bug 928749
* Log instance id consistently inside the firewall code
* Remove the last of the gflags shim layer
* Fix disk\_config typo
* Pass instance to log messages
* Fix logging in xenapi vmops
* Ensures that hostId's are unique
* Fix confirm\_resize policy handling
* optimize libvirt image cache usage
* bug 929428: pep8 validation on all xapi plugins
* Move translations to babel locations
* Get rid of distutils.extra
* Backslash continuations (network, scheduler)
* Remove unnecessary use of LoopingCall in nova/virt/xenapi/vm\_utils.py
* Stop using LoopingCall in nova.virt.xenapi\_conn:wait\_for\_task()
* Handle refactoring of libvirt image caching
* linux\_net: Also ignore shell error 2 from ip addr
* Consistently update instance in nova/compute/manager.py
* Use named logger when available
* Fix deprecated warning
* Add support for LXC volumes
* Added ability to load specific extensions
* Add flag to include link local in port security
* Allow e2fsck to exit with 1
* Removes constraints from instance and volume types
* Handle service failures during finish\_resize gracefully
* Set port security for all allocated ips
* Move connection pool back into impl\_kombu/qpid
* pep8 check on api-paste.ini when using devstack
* Allows test\_virt\_drivers to work when run alone
* Add an alias to the ServerStartStop extension
* tests.integrated fails with devstack
* Backslash continuations (nova.virt)
* Require newer versions of SA and SA-Migrate
* Optimizes ec2 keystone usage and handles errors
* Makes sure killfilter doesn't raise ValueError
* Fixes volume snapshotting issues and tests
* Backslash continuations (misc.)
* nova-rootwrap: wait() for return code before exit
* Fix bug 921814 changes handling of adminPass in API
* Send image properties to Glance
* Check return code instead of output for iscsiadm
* Make swap default to vdb if there is no ephemeral
* Handle --flagfile by converting to .ini style
* Update cfg from openstack-common
* Fix xvpvncproxy error in nova-all (lp#928489)
* Update MANIFEST.in to account for moved schemas
* Remove ajaxterm from Nova
* Adding the request id to response headers. Again
* Update migration to work when data already exists
* Fix support for --flagfile argument
* Implements blueprint heterogeneous-tilera-architecture-support
* Add nova/tests/policy.json to tarball
* Fix quantum client filters
* Store the correct tenant\_id/project\_id
* dont show blank endpoint headers
* Pass in project\_id in ext. authorizer
* Fix \_poll\_bandwidth\_usage if no network on vif
* Fix nova.virt.firewall debugging message to use UUID
* Fix debugging log message to print instance UUID
* mkfs takes vfat, not fat32
* Pass partition into libvirt file injection
* bug 924266: connection\_type and firewall\_driver flags mismatch
* bug 927507: fix quantum manager get\_port\_by\_attachment
* Fix broken flag in test\_imagecache
* Don't write a dns directive if there are no dns records in /etc/network/interfaces
* Imported Translations from Launchpad
* Backslash continuations (nova.db)
* Add initiator to initialize\_connection
* Allows nova to read files as root
* Re-run nova-manage under sudo if unable to read conffile
* Fix status transition when reverting resize
* Adds flags for href prefixes
* X\_USER is deprecated in favor of X\_USER\_ID
* Move cfg to nova.openstack.common
* Use Keystone Extension Syntax for EC2 Creds
* Remove duplicate instances\_path option
* Delete swap VDI if not used
* Raise ApiError in response to InstanceTypeNotFound
* Rename inst in \_create\_image, and pass instance to log msgs
* Fix bug #924093
* Make sure tenant\_id is populated
* Fix for bug 883310
* Increased coverage of nova/auth/dbdriver.py to 100%. Fixes 828609
* Make crypto use absolute imports
* Remove duplicate logging\_debug\_format option
* blueprint nova-image-cache-management phase1
* Set rescue instance hostnames appropriately
* Throw an user error on creating duplicate keypairs Fixes bug 902162
* Fixes uuid lookup in virtual interfaces extension
* Add comments to injected keys and network config
* Remove hard coded m1.tiny behavior
* Fix disassociation of fixed IPs when using FlatManager
* Provides flag override for vlan interface
* remove auto fsck feature from file injection. Bug 826794
* DRYing up Volume/Compute APIRouters
* Excise M2Crypto!
* Add missing dev. Fixes LP: #925607
* Capture bandwidth usage data before resize
* Get rid of DeprecationWarning during db migration
* Don't block forever for rpc.(multi)call response
* Optionally disable file locking
* Avoid weird test error when mox is missing
* fix stale libvirt images on download failure. Bug 801412
* cleanup test case to use integers not strings
* Respect availability\_zone parameter in nova api
* Fix admin password skip check
* Add support for pluggable l3 backends
* Improve dom0 and template VM avoidance
* Remove Hyper-V support
* Fix logging to log correct filename and line numbers
* Support custom routes for extensions
* Make parsing of usage stats from XS more robust
* lockfile.FileLock already appends .lock
* Ties quantum, melange, and nova network model
* Make sure multiple calls to \_get\_session() aren't nested
* bug 921087: i18n-key and local-storage hard-coded in xenapi
* optimize libvirt raw image handling. Bug 924970
* Boto 2.2.x failes. Capping pip-requires at 2.1.1
* fixed bug 920856
* Expand policies for admin\_actions extension
* Correct checking existence of security group rule
* Optionally pass a instance uuid to log methods
* remove unsupported ec2 extensions
* Fix VPN ping packet length
* Use single call in ExtendedStatus extension
* Add mkswap to rootwrap
* Use "display\_name" in "nova-manage vm list"
* Fix broken devref docs
* Allow for auditing of API calls
* Use os.path.basename() instead of string splitting
* Remove utils.runthis()
* Empty connection pool after test\_kombu
* Clear out RPC connection pool before exit
* Be more explicit about emptying connection pool
* fixes melange ipam lib
* bug 923798: On XenServer the DomU firewall driver fails with NotImplementedError
* Return instancesSet in TerminateInstances ec2 api
* Fix multinode libvirt volume attachment lp #922232
* Bug #923865: (xenapi driver)instance creation fails if no guest agent is avaiable for admin password configuration
* Implementation of new Nova Volume driver for SolidFire ISCSI SAN
* Handle kepair delete when not found
* Add 'all\_tenants' filter to GET /servers
* Use name filter in GlanceImageService show\_by\_name
* Raise 400 if bad kepair data is provided
* Support file injection on boot w/ Libvirt
* Refactor away the flags.DEFINE\_\* helpers
* Instances to be created with a bookmark link
* fix \`nova-manage image convert\` exception
* Added validation of name when creating a new keypair
* Ignore case in policy role checks
* Remove session arg from sm\_backend\_conf\_update
* Remove session arguments from db.api
* Add a note explaining why unhandled exceptions shouldn't be returned to users
* Remove fetching of networks that weren't created via nova-manage
* uses the instance uuid in libvirt by introducing a new variable 'uuid' for the used template instead of using a random uuid in libvirt
* Fixing a rebuild race condition bug
* Fixes bug 914418
* Remove LazySerializationMiddleware
* Bug #921730: plugins/xenserver/xenapi/etc/xapi.d/plugins/objectstore no longer in use
* Adding live migration server actions
* bug 921931: fix Quantum Manager VM launch race condition
* Fix authorization checks for simple\_usage.show
* Simplify somewhat complicated reduce() into sum()
* Ignore connection\_type when no instances exist
* Add authorization checks to flavormanage extension
* rootwrap: Fix KillFilter matching
* Fix uptime calculation in simple\_usage
* Fixing rebuilds on libvirt, seriously
* Don't pass filter\_properites to managers
* Fixing rebuilds on libvirt
* Fix bug 921715 - 'nova x509-create-cert' fails
* Return 403 instead of 401 when policies reject
* blueprint host-aggregates: OSAPI extensions
* blueprint host-aggregates: OSAPI/virt integration, via nova.compute.api
* Fixes bug 921265 - i'nova-manage flavor create|list'
* Remove unused flags.Help\*Flag
* Convert vmwareapi code to UNIX style line endings
* Blueprint xenapi-provider-firewall and Bug #915403
* Adds extension for retrieving certificates
* Add os-start/os-stop server actions to OSAPI
* Create nova cert worker for x509 support
* Bug #916312: nova-manage network modify --network flag is inconsistent
* Remove unused nova/api/mapper.py
* Add nova.exception.InvalidRPCConnectionReuse
* Add support for Qpid to nova.rpc
* Add HACKING compliance testing to run\_test.sh
* Remove admin\_only ext attr in favor of authz
* usage: Fix time filtering
* Add an API extension for creating+deleting flavors
* extensions: Allow registering actions for create + delete
* Explicitly encode string to utf8 before passing to ldap
* Make a bunch of dcs into single-entry lists
* Abstract out \_exact\_match\_filter()
* Adds a bandwidth filter DB call
* KVM and XEN Disk Management Parity
* Tweak api-paste.ini to prepare for a devstack change
* Remove deprecated serialization code
* Add affinity filters updated to use scheduler\_hints and have non-douchey names
* Do not output admin\_password in debug logs
* Handle error in associate floating IP (bug 845507)
* Brings back keystone middleware
* Remove sensitive info from rpc logging
* Error out instance on set password failure
* Fixed limiting for flavors
* Adds availability zone filter
* Fixes nova-manage fixed list
* API version check cleanups
* ComputeNode Capacity support
* blueprint host-aggregates: maintenance operations to host OSAPI exts
* Add a specific filter for kill commands
* Fix environment passing in DnsmasqFilter
* Cleanups for rootwrap module
* Fix 'nova-manage config list'
* Add context and request spec to filter\_properties
* Allow compute manager prep\_resize to accept kwargs
* Adds isolated hosts filter
* Make start\_instance cast directly to compute host
* Refactor compute api messaging calls to compute manager
* Refactor test\_scheduler into unit tests
* Forgot to update chance scheduler for ignore\_hosts change
* Add SchedulerHints compute extension
* Add floating IP support to Quantum Manager
* Support filter based on CPU core (over)allocation
* bug 917397
* Add option to force hosts to scheduler
* Change the logic for deleting a record dns\_domains
* Handle FlavorNotFound on server list w/ filter
* ERROR out instance if unrescue fails
* Fix xenapi rescue without swap
* Pull out ram\_filter into a separate filter
* pass filter\_properties into scheduling requests for run\_instance
* Fixes bug #919390 - Block Migration fails when keystone is un use
* Fix nova-manage floating list (fixes bug 918804)
* Imported Translations from Launchpad
* scheduler host\_manager needs service for filters
* Allow Quantum Manager to run in "Flat" mode
* aws/ec2 api validation
* Fix for bug 918502
* Remove deprecated extension code
* Validating image id for rebuild
* More cleanup of Imports to match HACKING
* chmod nova-logspool
* nova/network: pass network\_uuid to linuxnet\_interface\_driver and vif driver
* Clean up crypto.py
* Fix missing imports and bad call caught by pyflakes
* Clarify error messages for admin passwords
* Log uuid when instances fail to spawn
* Removed references to FLAGS.floating\_ip\_dns\_domains
* Removed some vestigial default args from DNS drivers
* Allow config of vncserver\_proxyclient\_address
* Rename 'zone' to 'domain.'
* disk\_config extension now uses OS prefix
* Do not write passwords to verbose logs. bug 916167
* Automatically clean up DNS when a floating IP is deallocated
* Fix disassociating of auto assigned floating ips
* Cleanup Imports to match HACKING guidelines
* Added an LDAP/PowerDNS driver
* Add dns domain manipulation to nova
* fixes bug lp914962
* Fixed bug 912701
* Fix bug #917615
* Separate scheduler host management
* Set instance\_ref property when creating snapshots
* Implements blueprint vnc-console-cleanup
* Rebuild/Resize support for disk-config
* Allow instances in 'BUILD' state to be deleted
* Stop allowing blank image names on snapshot/backup
* Only update if there are networks to update
* Drop FK constraint if it exists in migration 064
* Fix an error that prevents message from getting substituted
* blueprint host-aggregates
* Add missing scripts to setup.py (lp#917676)
* Fixes bug 917128
* Clean up generate fingerprint
* Add policy checking to nova.network.api.API
* Add default policy rule
* Super is not so super
* Fixed the log line
* Add tests for volume list and detail through new volume api, and fix error that the tests caught
* Typofix for impl\_kombu
* Refactoring logging \_log function
* Update some extensions (1)
* DECLARE osapi\_compute\_listen\_port for auth manager
* Increase robustness of image filtering by server
* Update some extensions (2)
* Implement BP untie-nova-network-models
* Add ipv4 and ipv6 validation
* greenlet version inconsistency
* Add policy checks to Volume.API
* Remove unused extension decorator require\_admin
* Fix volume api typo
* Convert nova.volume.api.API to use volume objects
* Remove a whole bunch of unused imports
* have all quota errors return an http 413
* This import is not used
* Refactor request and action extensions
* Prefixing the request id with 'req-' to decrease confusion when looking at logs
* Fixing a bug that was causing the logging to display the context info for the wrong user. bug: 915608
* Modify the fake ldap driver to fix compatibility
* Create an instance DNS record based on instance UUID
* Implements blueprint separate-nova-volumeapi
* Implement more complete kombu reconnecting
* First implementation of bp/live-migration-resource-calc
* Remove 'status' from default snapshot properties
* Clean up disk\_format mapping in xenapi.vm\_utils
* Remove skipping of 2 tests
* Make authz failures use proper response code
* Remove compute.api.API.add\_network\_to\_project
* Adds test for local.py
* Fix policy import in nova.compute.api
* Remove network\_api from Servers Controller
* minor fix in comment
* Updates linux\_net to ignore some shell errors
* Add policy checks to Compute.API
* Ensure nova is compatible with WebOb 1.2+
* improve handling of the img\_handlers config list
* Unbreak start instance and fixes bug 905270
* catch InstanceInvalidState in more places
* Fix some cfg test case naming conflicts
* Remove 'location' from GlanceImageService
* Makes common/cfg.py raise AttributeError
* Call to instance\_info\_cache\_delete to use uuid
* Bug #914907: register\_models in db/sqlalchemy/models.py references non-existent ExportDevice
* Update logging in compute manager to use uuids
* Do not overwrite project\_id from request params
* Add optional revision field to version number
* Imported Translations from Launchpad
* nova-manage floating ip fixes
* Add a modify function to the floating ip dns api
* Adding the request id to response headers
* Add @utils.deprecated()
* Blueprint xenapi-security-groups
* Fix call to compute\_api.resize from \_migrate
* Fix metadata mapping in s3.\_s3\_parse\_manifest
* Fix libguestfs operation with specified partitions
* fix reboot\_instance typo
* Fix bad test cases in smoketest
* fix bug 914049: private key in log
* Don't overwrite local context on elevated
* Bug 885267: Fix GET /servers during instance delete
* Adds support for floating ip pools
* Adds simple policy engine support
* Refactors utils.load\_cached\_file
* Serialization, deserialization, and response code decorators
* Isolate certain images on certain hosts
* Workaround bug 852095 without importing mox
* Bug #894683: nova.service does not handle attribute specific exceptions and client hangs
* Bug #912858: test\_authors\_up\_to\_date does not deal with capitalized names properly
* Adds workaround check for mox in to\_primitive
* preload cache table and keep it up to date
* Use instance\_properties in resize
* Ensure tests are python 2.6 compatible
* Return 409s instead of 500s when deleting certain instances
* Update HACKING.rst
* Tell users what is about to be installed via sudo
* Fix LP912092
* Remove small unneeded code from impl\_kombu
* Add missing space between XML attributes
* Fix except format to match HACKING
* Set VLAN MTU size when creating the vlan interface
* Add instance\_name field to console detail command which will give the caller the necessary information to actually connect
* Fix spelling of variable
* Remove install\_requires processing
* Send event notifications for suspend and resume
* Call mkfs with the correct order of arguments
* Fix bug 901899
* Fix typo in nova/rootwrap/compute.py. Fixes LP: #911880
* Make quantum\_use\_dhcp falsifiable
* Fixing name not defined
* PEP8 type comparison cleanup
* Add cloudpipe/vpn api to openstack api contrib
* Every string does not need to be internationalized
* Adds running\_deleted\_instance\_reaper task
* libvirt: implements boot from ISO images
* Unused db.api cleanup
* use name gateway\_v6 instead of gateway6
* PEP8 remove direct type comparisons
* Install a good version of pip in the venv
* Bug #910045: UnboundLocalError when failing to get metrics from XenAPI hosts
* re-raising exceptions fix
* use dhcp\_lease\_time for dnsmasq. Fix bug 894218
* Clean up pylint errors in top-level files
* Ensure generated passwords meet minimum complexity
* Fixing novaclient\_converter NameError
* Bug 820059: bin/nova-manage.py VpnCommands.spawn calls non-existant method VpnCommands.\_vpn\_for - fixed
* Bug 751229: Floating address range fixed
* Brings some more files up to HACKING standards
* Ensure queue is declared durable so messages aren't dropped
* Create notification queues as durable
* Adding index to instances project\_id column
* Add an API for associating floating IPs with DNS entries
* 'except:' to 'except Exception:' as per HACKING
* Adds EC2 ImportKeyPair API support
* Take the availability zone from the instance if available
* Update glance Xen plugin w/ purge props header
* Converting zones into true extension
* Convering /users to admin extension
* Add a DECLARE for dhcp\_doamin flag to metadata handler
* Support local target for Solaris, use 'safe' command-line processing
* Add 'os-networks' extension
* Converting accounts resource to admin extension
* Add exit\_code, stdout, stderr etc to ProcessExecutionException
* Fixes LP bug #907898
* Switch extension namespace
* Refactor Xen Vif drivers. Fixes LP907850
* Remove code in migration 064 to drop an fkey that does not exist. Fixes LP bug #907878
* Help clarify rpc API with docs and a bit of code
* Use SQLAlchemy to drop foreign key in DB migrate
* Move createBackup server action into extension
* Bug#898257 support handling images with libguestfs
* Bug#898257 abstract out disk image access methods
* Move 'actions' subresource into extension
* Make os-server-diagnostics extension admin-only
* Remove unneeded broken test case
* Fix spelling typos in comments
* Allow accessIPv4 and accessIPv6 on rebuild action
* Move 'diagnostics' subresource to admin extension
* Cleaning up imports in compute and virt
* Cleaning up imports in nova.api
* Make reroute\_compute use functools.wraps. Fixes LP bug #906945
* Removing extra code from servers controller
* Generate instance faults when instance errors
* Clarify NoValidHost messages
* Fix one last bug in os-console-output extension
* Fix os-console-output extension integration
* Set Location header in server create and rebuild actions
* Consistently use REBUILDING vm\_state
* Improve the minidns tests to handle zone matching
* Remove unused FLAGS.block\_size
* Make UUID format checking more correct
* Set min\_ram and min\_disk on snapshot
* Add support for port security to QuantumManager
* Add a console output action to servers
* Creating mechanism that loads Admin API extensions
* Document return type from utils.execute()
* Renamed the instance\_dns\_driver to dns\_driver for more general use
* Specify -t rsa when calling ssh-keygen
* create\_export and ensure\_export should pass up the return value, to update the database
* Imported Translations from Launchpad
* avoid error and trace on dom.vcpus() in lxc
* Properly passes arg to run\_iscsiadm to fix logout
* Makes disassociate by timeout work with multi-host
* Call get\_instance\_nw\_info with elevated context, as documented in nova/network/manager.py
* Adds missing joinedload for vif loading
* missing comments about extensions to ec2
* Pull resource extensions into APIRouter
* IPAM drivers aren't homogenous bug 903230
* use env to find 'false'. Fix for OS X
* Fix scheduler error handler
* Starting work on exposing service functionality
* Bugfix for lp904932
* Ensure fkey is dropped before removing instance\_id
* Fixes bug 723235
* nova.virt.libvirt.firewall: set static methods
* Expose Asynchronous Fault entity in the OSAPI
* Fix nova-manage flags declaration
* Remove useless flags declaration
* Remove useless input\_chain flags
* Make XenAPI agent configuration synchronous
* Switch disk\_config extension to use one DB query
* Update utils.execute so that check\_exit\_code handles booleans. Fixes LP bug #904560
* Rename libvirt\_uri to uri
* Make libvirt\_uri a property
* Making pep8 output less verbose
* Refactors handling of detach volume
* Fixes bug 887402
* Bug 902626
* Make various methods static
* Pass additional information from nova to Quantum
* Refactor vm\_state and task\_state checking
* Updates OVS rules applied to IPv4 VIFs
* Follow-on to I665f402f to convert rxtx\_quota to rxtx\_factor in nova-manage and a couple of tests
* Make sure the rxtx\_cap is used to set qos info
* Fix some errors found by pychecker
* Fix tgtadm off by one error. Fixes bug #871278
* Sanitize EC2 manifests and image tarballs
* floating-ip: return UUID of instance rather than ID
* Renaming instance\_actions.instance\_id column to instance\_uuid. blueprint: internal-uuids
* Fix for bug 902175
* fixed typos. removed an unused import
* Vm state management and error states
* Added support for creating nova volume snapshots using OS API
* Fix error when subnet doesn't have a cidr set
* bug 899767: fix vif-plugging with live migration
* Fixing snapshot failure task\_state
* Imported Translations from Launchpad
* Moves find config to utils because it is useful
* fixed\_ips by vif does not raise
* Add templates for selected resource extensions
* Fix network forwarding rule initialization in QuantumManager
* \_check\_image\_size returns are consistent
* Fixed the perms on the linux test case file so that nose will run it
* Add preparation for asynchronous instance faults
* Add templates for selected resource extensions
* Use more informative message when violating quota
* Log it when we get a lock
* removing TODO as we support Windows+XenServer and have no plans to support quiesce or VSS at the moment
* Adds network model and network info cache
* Rename .nova-venv to .venv
* revert using git for novaclient
* Port nova.flags to cfg
* Make cfg work on python 2.6
* Relax novaclient and remove redis dependency
* Relax dependency on boto 1.9b and nova-adminclient
* Make QuantumManager no longer depend on the projects table
* Imported Translations from Launchpad
* Fix for bug 901459
* Updated the test runner module with a sys.path insert so that tests run in and outside a virtual environment
* Add ability to see deleted and active records
* Set instance['host'] to the original host value on revert resize
* Fix race condition in XenAPI when using <object>.get\_all
* Clean up snapshot metadata
* Handle the 'instance' half of blueprint public-and-private-dns
* Refactors periodic tasks to use a decorator
* Add new cfg module
* Remove extra\_context support in Flags
* A more secure root-wrapper alternative
* Remove bzr related code in tests/test\_misc
* Change cloudServersFault to computeFault
* Update associate\_floating\_ip to use instance objs
* vm\_state:=error on driver exceptions during resize
* Use system M2Crypto package on Oneiric, bug 892271
* Update compute manager so that finish\_revert\_resize runs on the source compute host. Fixes bug #900849
* First steps towards consolidating testing infrastructure
* Remove some remnants of ChangeLog and vcsversion.py generation
* Pass '-r' option to 'collie cluster status'
* Remove remnants of babel i18n infrastructure
* Fixes a typo preventing attaching RBD volumes
* Remove autogenerated pot file
* Make admin\_password keyword in compute manager run\_instance method match what we send in the compute API. Fixes bug #900591
* remove duplicate netaddr in nova/utils
* cleanup: remove .bzrignore
* add index to instance\_uuid column in instances
* Add missing documentation for shared folder issue with unit tests and Python lock file
* Updated nova-manage to work with uuid images Fixes bug 899299
* Add availabity\_zone to the refresh list
* Document nova-tarball Jenkins job
* Adds extension documentation for some but not all extensions
* Add templates for selected resource extensions
* EC2 rescue/unrescue is broken, bug 899225
* Better exception handling during run\_instance
* Implement resize down for XenAPI
* Fix for EC2 API part of bug 897164
* Remove some unused imports from db
* Replacing instance id's in in xenapi.vmops and the xen plugin with instance uuids. The only references to instance id's left are calls to the wait\_for\_task() method. I will address that in another branch. blueprint: internal-uuids
* Convert get\_lock in compute to use uuids
* Fix to correctly report memory on Linux 3.X
* Replace more cases of instance ids with uuids
* Make run\_instance only support instance uuids
* Updates simple scheduler to allow strict availability\_zone scheduling
* Remove VIF<->Network FK dependancy
* Adds missing image\_meta to rescue's spawn() calls
* Bug #898290: iSCSI volume backend treats FLAGS.host as a hostname
* split rxtx\_factor into network and instance\_type
* Fixing get\_info method implementations in virt drivers to accept instance\_name instead of instance\_id. The abstract class virt.ComputeDriver defines get\_info as:     def get\_info(self, instance\_name). blueprint: internal-uuids
* Fixes bug 767947
* Remove unused ec2.action\_args
* Fix typo: priviledges -> privileges
* Bug #896997: nova-vncproxy's flash socket policy port is not configurable
* Convert compute manager delete methods to objects
* Removing line dos line endings in vmwareapi\_conn.py
* reboot & rebuild to use uuids in compute manager
* Fix for bug 887712
* Add NAT/gateway support to QuantumManager
* Fix QuantumManager update\_dhcp calls
* Fix RPC responses to allow None response correctly
* Use uuids for compute manager agent update
* power\_on/power\_off in compute manager to use uuids
* Use uuids for file injection
* removed logic of throwing exception if no floating ip
* Adding an install\_requires to the setup call. Now you can pip install nova on a naked machine
* Removing obsolete bzr-related clauses in setup.py
* Makes rpc\_allocate\_fixed\_ip return properly
* Templatize extension handling
* start/stop in compute manager to use uuids
* Updating {add,remove}\_fixed\_ip\_from\_instance in compute.api and compute.manager to use instance uuid instead of instance id. blueprint internal-uuids
* Use instance uuids for consoles and diagnostics
* Fixes bug 888649
* Fix Bug #891718
* Bug #897091: "nova actions" fails with HTTP 400 / TypeError if a server action has been performed
* Bug #897054: stack crashes with AttributeError on e.reason if the server returns an error
* Refactor a few things inside the xenapi unit tests
* New docs: unit tests, Launchpad, Gerrit, Jenkins
* Fix trivial fourth quote in docstring
* Fix deprecation warnings
* Fix for bug 894431
* Remove boot-from-volume unreachable code path (#894172)
* reset/inject network info in compute to use uuid
* Updating set\_admin\_password in compute.api and compute.manager to use instance uuids instead of instance ids. Blueprint internal-uuids
* rescue/unrescue in compute manager to use uuids
* Updated development environment docs
* Call df with -k instead of -B1
* Make fakelibvirt python2.6 compatible
* Clean up compute api
* Updating attach/detach in compute.api and compute.manager to use instance uuid instead of instance id. blueprint internal-uuids
* Change compute API.update() to take object+params
* Use XMLDictSerializer for resource extensions
* Updating {add,remove}\_security\_group in compute.api to use instance uuids instead of instance ids. blueprint internal-uuids
* Extend test\_virt\_driver to also test libvirt driver
* poll\_rebooting\_instances passes an instance now
* Revert "Fixes bug 757033"
* Put instances in ERROR state when scheduler fails
* Converted README to RST format
* Workaround xenstore race conditions
* Fix a minor memory leak
* Implement schedule\_prep\_resize()
* Fixes bug 886263
* snapshot/backup in compute manager to use uuids
* Fixes bug 757033
* Converting tests to use v2
* lock/unlock in compute manager to use uuids
* suspend/resume in compute manager to use uuids
* Refactor metadata code out of ec2/cloud.py
* pause/unpause in compute manager to use uuids
* Creating new v2 namespace in nova.api.openstack
* Add a "libvirt\_disk\_prefix" flag to libvirt driver
* Added RST docs on how to use gettext
* Refactoring/cleanup of some view builders
* Convert remaining calls to use instance objects
* Make run instances respect availability zone
* Replacing disk config extension to match spec
* Makes sure gateways forward properly
* Convert security\_group calls to use instance objs
* Remove hostname update() logic in compute.API
* Fixes bug 890206
* Follow hostname RFCs
* Reference Ron Pedde's cleanup script for DevStack
* Remove contrib/nova.sh and other stale docs
* Separate metadata api into its own service
* Add logging, error handling to the xenstore lib
* Converting lock/unlock to use instance objects
* Deepcopy optparse defaults to avoid re-appending multistrings (#890489)
* install\_venv: apply eventlet patch correctly with python 2.7 (#890461)
* Fix multistring flags default handling (#890489)
* Fixing image create in S3ImageService
* Defining volumes table to allow FK constraint
* Converting network methods to use instance objects
* Handle null ramdisk/kernel in euca-describe-images
* Bind engine to metadata in migration 054
* Adding downgrade for migration 57 plus test
* Log the URL to an image\_ref and not just the ID
* Converting attach\_volume to use instance object
* Converting rescue/unrescue to use instance objects
* Converting inject\_file to use instance objects
* Bug #888719: openvswitch-nova runs after firstboot scripts
* Bug #888730: vmwareapi suds debug logging very verbose
* Converting consoles calls to use instance objects
* Converting fixed ip calls to use instance objects
* Convert pause/unpause, sus/res to use instance obj
* fix rebuild sha1 not string error
* Verify security group parameters
* Converting set password to use instance objects
* Converting snapshot/backup to use instance objects
* Refactor of QuotaError
* Fix a notification bug when creating instances
* Converting metadata calls to use instance objects
* nova-manage: exit with status 1 if an image registration fails
* Converting start and stop to use instance objects
* Converting delete to use instance objects
* Capture exceptions happening in API layer
* Removed some old cruft
* Add more error handling to glance xenapi plugin
* Fixes bug 871877
* Replace libvirt driver's use of libxml2 with ElementTree
* Extend fake image service to let it hold image data
* Bug #887805 Error during report\_driver\_status(): 'LibvirtConnection' object has no attribute '\_host\_state'
* More spelling fixes inside of nova
* Fixes LP878319
* Fix exception reraising in volume manager
* Adding Chuck Short to .mailmap
* Undefine libvirt saved instances
* Split compute api/manager tests within module
* Workaround for eventlet bug with unit tests in RHEL6.1
* Apply M2Crypto fix for all Fedora-based distributions
* Fix failing libvirt test (bug 888250)
* Spelling fixes in nova/api comments
* Get MAC addresses from Melange
* Refactor logging\_error into utils
* Converting rebuild to use instance objects
* Converting resize to use instance objects
* Converting reboot to use instance objects
* Reducing the number of compute calls to Glance
* Remove duplicate method (2)
* Move tests for extensions to contrib directory
* Remove duplicate method
* Remove debugging print
* Adds extended status information via the Admin API to the servers calls
* Wait until the instance is booted before setting VCPU\_params
* changes logging reference in zone\_manager.py
* Exception cleanup in scheduler
* Fixing create\_vbd call per VolumeHelper refactoring
* Switch glance XenAPI plugin to use urllib2
* Blueprint lasterror
* Move failed instances to error state
* Adding task\_states.REBOOTING\_HARD
* Set task state to UPDATING\_PASSWORD when needed
* Clean up docstrings for faults.Fault and it's usage
* Fix typo in docstring
* Add DHCP support to the QuantumManager and break apart dhcp/gateway
* Change network delete to delete by uuid or cidr
* Bug #886353: Faults raised by OpenStack API Resource handlers fail to be reported properly
* Define faults.Fault.\_\_str\_\_
* Speed up tests a further 35 seconds
* Removing duplicate kernel/ramdisk check in OSAPI
* Remove unnecessary image list in OSAPI
* Add auto-reloading JSON config file support to scheduler
* Change floating-snat to float-snat
* Allows non-admin users to use simple scheduler
* Skip libvirt tests when libvirt not present
* Correcting libvirt tests that were failing
* Fix for launchpad bug #882568
* Gracefully handle Xen resize failure
* Don't update database before resize
* fix bug 816630
* Set nova-manage to executable Fixes LP885778
* Fixing immediate delete after boot on Libvirt
* exception.KeypairNotFound usage correction
* Add local storage of context for logging
* Reserve memory/disk for dom0/host OS
* Speed up tests yet another 45 seconds
* APIs should not wait on scheduler for builds in single zone deployment
* Added some documentation to db.api module docstring
* Updated rst docs to include threading model
* Adds documentation for Xen Storage Manager
* Xen Storage Manager Volume Driver
* Drop extra XML tests and remove \_json suffix from names
* Fix empty group\_id to be considered invalid
* Stop nova-ajax-console-proxy configuring its own logging
* Bug 884863: nova logs everything to syslog twice
* Log the exception when we get one
* Use fat32 for Windows, linux-swap for Linux swap partitions
* Fix KeyError when passed unknown format of time
* flatten distributed scheduler
* Bug #884534: nova-ajax-console-proxy crashes on shutdown
* Bug 884527: ajax\_console\_proxy\_port needs to be an integer
* Too much information is returned from POST /servers
* Disable SQLite synchronous mode during tests
* Creating uuid -> id mapping for S3 Image Service
* Fix 'begining' typo in system usage data bug 884307
* Fixes lp883279
* Log original dropped exception when a new exception occurs
* Fix lp:861160 -- newly created network has no uuid
* Bug #884018: "stack help" prints stacktrace if it cannot connect to the server
* Optional --no-site-packages in venv
* fixes bug 883233. Added to Authors fix typo in scheduler/driver.py assert\_compute\_node\_has\_enough\_memory
* Updated NoAuth to account for requests ending in /
* Retry failed SQL connections (LP #876663)
* Removed autogenerated API .rst files
* Fix to a documentation generation script
* Added code to libvirt backend to report state info
* Adding bulk create fixed ips. The true issue here is the creation of IPs in the DB that are not currently used(we are building the entire block). This fix is just a bandaid, but it does cut ~25 seconds off of the quantum tests on my laptop
* Fix overzealous use of faults.Fault() wrapper
* Revert how APIs get IP address info for instances
* Support server uuids with security groups
* Support using server uuids when accessing consoles
* Adding support for retrying glance image downloads
* Fix deletion of instances without fixed ips
* Speed up test suite by 20 seconds
* Removed callback concept on VM driver methods:
* Fix file injection for OSAPI rebuilds. Fixes 881649
* Replaces all references to nova.db.api with nova.db
* venv: update distribute as well as pip
* Fix undefined glance\_host in get\_glance\_client
* Fix concurrency of XenAPI sessions
* Server metadata must support server uuids
* Add .gitreview config file for gerrit
* Convert instancetype.flavorid to string
* Make sure networks returned from get\_instance\_nw\_info have a label
* Use UUIDs instead of IDs for OSAPI servers
* Improve the liveness checking for services
* Refactoring of extensions
* Moves a-zone scheduling into simple scheduler
* Adds ext4 and reiserfs to \_mount\_filesystem()
* Remove nova dependency on vconfig on Linux
* Upgrade pip in the venv when we build it
* Fixes bug 872459
* Repartition and resize disk when marked as managed
* Remove dead DB API call
* Only log instance actions once if instance action logging is enabled (now disabled by default)
* Start switching from gflags to optparse
* Don't leak exceptions out to users
* Fix EC2 test\_cloud timing issues
* Redirects requests from /v#.# to /v#.#/
* Chain up to superclass tearDown in ServerActionsTest
* Updated RST docs: bzr/launchpad -> git/github
* Refactoring nova.tests.api.openstack.test\_flavors
* Refactoring image and server metadata api tests
* Refactoring nova.tests.api.openstack.test\_servers
* Refactoring nova.tests.api.openstack.test\_images
* Utility script that makes enforcing PEP8 within git's pre-commit hook as easy as possible
* Add XML templates
* Remove OSAPI v1.0
* Remove unused flag\_overrides from TestCase
* Cancel any clean\_reboot tasks before issuing the hard\_reboot
* Makes snapshots work for amis. Fixes bug 873156
* Xenapi driver can now generate swap from instance\_type
* Adds the ability to automatically issue a hard reboot to instances that have been stuck in a 'rebooting' state for longer than a specified window
* Remove redundant, dead code
* Added vcpu\_weight to models
* Updated links in the README that were out of date
* Add INPUT chain rule for EC2 metadata requests (lp:856385)
* Allow the user to choose either ietadm or tgtadm (lp:819997)
* Remove VolumeDriver.sync\_exec method (lp:819997)
* Adds more usage data to Nova's usage notifications
* Fixes bug 862637 -- make instance\_name\_template more flexible
* Update EC2 get\_metadata calls to search 'deleted': False. Fixes nova smoke\_tests!!!
* Use new ip addr del syntax
* Updating HACKING to make split up imports into three blocks
* Remove RateLimitingMiddlewareTest
* Remove AoE, Clean up volume code
* Adds vcpu\_weight column to instance\_types table and uses this value when building XenServer instances
* Further changes to the cleaner
* Remove duplicated functions
* Reference orphaned\_instance instead of instance
* Continue to the next iteration of the loop if an instance is not found
* Explicit errors on confirm/revertResize failures
* Include original exception in ClassNotFound exception
* Enable admin access to EC2 API server
* Make sure unknown extensions return 404
* Handle pidfile exception for dnsmasq
* Stop returning correct password on api calls
* Restructure host filtering to be easier to use
* Add support for header version parameter to specify API version
* Set error state on spawn error + integration test
* Allow db schema downgrades
* moved floating ip db access and sanity checking from network api into network manager added floating ip get by fixed address added fixed\_ip\_get moved floating ip testing from osapi into the network tests where they belong
* Adds a script that can automatically delete orphaned VDIs. Also had to move some flags around to avoid circular imports
* Improve access check on images
* Updating image progress to be more granular. Before, the image progress had only 2 states, 0 and 100. Now it can be 0, 25, 50 or 100
* Deallocate ip if build fails
* Ensure non-default FLAGS.logfile\_mode is properly converted to an octet
* Moving admin actions to extension
* Fixes bug 862633 -- OS api consoles create() broken
* Adds the tenant id to the create images response Location header Fixes bug 862672
* Fixes bug 862658 -- ec2 metadata issue getting IPs
* Added ==1.0.4 version specifier to kombu in pip-requires to ensure tests pass in a clean venv
* bug lp845714
* install\_venv: pip install M2Crypto doesn't work on Fedora
* install\_venv: add support for distro specific code
* install\_venv: remove versioned M2Crypto dependency
* install\_venv: don't use --no-site-packages with virtualenv
* install\_venv: pass the --upgrade argument to pip install
* install\_venv: refactor out pip\_install helper
* Replace socat with netcat
* api.ec2.admin unit tests
* Fixes Bug #861293 nova.auth.signer.Signer now honors the SignatureMethod parameter for SHA1 when creating signatures
* Enforce snapshot cleanup
* bug 861310
* Change 'recurse\_zones' to 'local\_zone\_only'
* Fixes euca-describe-instances failing or not showing IPs
* Fixes a test failure in master
* Fixed bug lp850602. Adding backing file copy operation on kvm block migration
* Add nova-all to run all services
* Snapshots/backups can no longer happen simultaneously. Tests included
* Accept message as sole argument to NovaException
* Use latest version of SQLAlchemy
* Fix 047 migration with SQLAlchemy 0.7.2
* Beef up nova/api/direct.py tests
* Signer no longer fails if hashlib.sha256 is not available. test\_signer unit test added
* Make snapshots private by default
* use git config's review.username for rfc.sh
* Raise InsufficientFreeMemory
* Adding run\_test.sh artifacts to .gitignore
* Make sure options is set before checking managed\_disk setting. Fixes bug 860520
* compute\_api create\*() and schedulers refactoring
* Removed db\_pool complexities from nova.db.sqlalchemy.session. Fixes bug 838581
* Ensure minRam and minDisk are always integers
* Call endheaders when auth\_token is None. Fixes bug 856721
* Catch ImageNotFound on image delete in OSAPI
* Fix the grantee group loading for source groups
* Add next links to images requests
* put fully qualified domain name in local-hostname
* Removing old code that snuck back in
* Makes sure to recreate gateway for moved ip
* Fix some minor issues due to premature merge of original code
* \* Rework osapi to use network API not FK backref \* Fixes lp854585
* Allow tenant networks to be shared with domain 0
* Use ovs-vsctl iface-to-br to look up the bridge associated with the given VIF. This avoids assuming that vifX.Y is attached to xenbrY, which is untrue in the general case
* Made jenkins email pruning more resilient
* Fixing bug 857712
* Adds disk config
* Adding xml schema validation for /versions resource
* Fix bug 856664 overLimit errors now return 413
* Don't use GitPython for authors check
* Fix outstanding pep8 errors for a clean trunk
* Add minDisk and minRam to OSAPI image details
* Fix rfc.sh's check for the project
* Add rfc.sh to help with gerrit workflow
* This patch adds flavor filtering, specifically the ability to flavor on minRam, minDisk, or both, per the 1.1 OSAPI spec
* Add next links for server lists in OSAPI 1.1. This adds servers\_links to the json responses, and an extra atom:link element to the servers node in the xml response
* Update exception.wrap\_exception so that all exceptions (not just Error and NovaException types) get logged correctly
* Merging trunk
* Adding OSAPI tests for flavor filtering
* This patch adds instance progress which is used by the OpenStack API to indicate how far along the current executing action is (BUILD/REBUILD, MIGRATION/RESIZE)
* Merging trunk
* Fixes lp:855115 -- issue with disassociating floating ips
* Renumbering instance progress migration
* Fixing tests
* Keystone support in Nova across Zones
* trunk merge fixup
* Fix keys in ec2 conversion to make sure not to use unicode
* Adds an 'alternate' link to image views per 3.10 and 3.11 of http://docs.openstack.org/cactus/openstack-compute/developer/openstack-compute-api-1.1/content/LinksReferences.html
* Typo
* Fixing tests
* Fixing tests
* make sure kwargs are strings and not unicode
* Merging trunk
* Adding flavor filtering
* Instance deletions in Openstack are immediate. This can cause data to be lost accidentally
* Makes sure ips are moved on the bridge for nodes running dnsmasq so that the gateway ip is always first
* pep8
* add tests and fix bug when no ip was set
* fix diverged branch
* migration conflict fixed
* clean up based on cerberus review
* clean up based on cerberus review
* Remove keystone middlewares
* fix moving of ips on flatdhcp bridge
* Merged trunk
* merged trunk
* update floating ips tests
* floating ip could have no project and we should allow access
* actions on floating IPs in other projects for non-admins should not be allowed
* floating\_ip\_get\_by\_address should check user's project\_id
* Pep8 fixes
* Merging trunk
* Refactoring instance\_type\_get\_all
* remove keystone url flag
* merge trunk, fix conflicts
* remove keystone
* Include 'type' in XML output
* Minor cleanup
* Added another unit test
* Fixed unit tests with some minor refactoring
* Fix the display of swap units in nova manage
* Refactored alternate link generation
* pep8 fixes
* Added function to construct a glance URL and unit test
* merge from trunk
* convert images that are not 'raw' to 'raw' during caching to node
* show swap in Mb in nova manage
* Address Soren's comments:  \* clean up temp files if an ImageUnacceptable is going to be raised    Note, a qemu-img execution error will not clean up the image, but I    think thats reasonable.  We leave the image on disk so the user can    easily investigate.  \* Change final 2 arguments to fetch\_to\_raw to not start with an \_  \* use 'env' utility to change environment variables LC\_ALL and LANG so    that qemu-img output parsing is not locale dependent.    Note, I considered the following, but found using 'env' more readable      out, err = utils.execute('sh', '-c', 'export LC\_ALL=C LANG=C && exec "$@"',          'qemu-img', 'info', path)
* Add iptables filter rules for dnsmasq (lp:844935)
* create disk.local the same way ephemerals are created (LP: #851145)
* merge with trunk r1601
* fix call to gettext
* Fixed --uuid network command in nova-manage to desc to "uuid" instead of "net\_uuid"
* removes warning set forth in d3 for deprecated setting of bridge automagically
* Update migration 047 to dynamically lookup the name of the instance\_id fkey before dropping it. We can't hard code the name of the fkey since we didn't name it explicitly on create
* added to authors cuz trey said I cant patch otherwise!
* Fixed --uuid network command in nova-manage to desc to "uuid" instead of "net\_uuid"
* merged with trunk
* Update migration 047 to dynamically lookup the name of the instance\_id fkey before dropping it. We can't hard code the name of the fkey since we didn't name it explicitly on create
* oops, add project\_id and 'servers' to next links
* Fixes migration for Mysql to drop the FK on the right table
* Reverted some changes to instance\_get\_all\_by\_filters() that was added in rev 1594.  An additional argument for filtering on instance uuids is not needed, as you can add 'uuid: uuid\_list' into the filters dictionary.  Just needed to add 'uuid' as an exact\_match\_filter.  This restores the filtering to do a single DB query
* fix syntax error in exception, remove "Dangerous!" comment
* merged trunk and resolved conflict
* run the alter on the right table
* fix unrelated pep8 issue in trunk
* use dictionary format for exception message
* fix a test where list order was assumed
* Removed the extra code added to support filtering instances by instance uuids. Instead, added 'uuid' to the list of exact\_filter\_match names. Updated the caller to add 'uuid: uuid\_list' to the filters dictionary, instead of passing it in as another argument. Updated the ID to UUID mapping code to return a dictionary, which allows the caller to be more efficient... It removes an extra loop there. A couple of typo fixes
* Reworked the export command to be nova-manage shell export --filename=somefile
* Adds the ability to automatically confirm resizes after the \`resize\_confirm\_window\` (0/disabled by default)
* use '\_(' for exception messages
* PEP8 cleanup
* convert images that are not 'raw' to 'raw' during caching to node
* now raising instead of setting bridge to br100 and warning as was noted
* \* Remove the foreign key and backrefs tying vif<->instance \* Update instance filtering to pass ip related filters to the network manager \* move/update tests
* Adds an optional flag to force dhcp releases on instance termination.  This allows ips to be reused without having to wait for the lease to timeout
* remove urllib import
* Fixing case where OSAPI server create would return 500 on malformed body
* Fix the issue with the new dnsmasq where it tries and fails to bind to ipv6 addresses
* Merging trunk
* Renaming progress migration to 47
* merge with trunk
* Added unit test
* Corrected the status in DB call
* don't try to listen on ipv6 addresses, or new dnsmasq goes boom
* make our own function instead of using urllib.urlencode since we apparently don't suppor urlencoded strings yet
* Merged trunk
* remove unused import
* merge the sknurt
* remove the polymorph
* Fix typo in comment
* Fixes the handling of snapshotting in libvirt driver to actually use the proper image type instead of using raw for everything. Also cleans up an unneeded flag.  Based on doude's initial work
* merge with trunk
* removing extra newline
* catching AttributeError and adding tests
* Remove vestigial db call for fixed\_ips
* Fixes the user credentials for installing a config-drive from imageRef
* Some Linux systems can also be slow to start the guest agent. This branch extends the windows agent timeout to apply to all systems
* remove extra line
* get the interface using the network and instance
* flag typo
* add an optional flag to force dhcp release using dnsmasq-utils
* Fix user\_id, project\_id reference for config\_drive with imageRefs
* Fix a bug that would make spawning new instances fail if no port/protocol is given (for rules granting access for other security groups)
* When swap is specified as block device mapping, its size becomes 0 wrongly. This patch make it set to correct size according to instance\_type
* Fix pep8 issues
* fixed grant user, added stdout support
* This changes the interpretation of 'swap' for an instance-type to be in MB rather than GB
* Fixing list prepend
* Merging trunk
* create disk.local the same way ephemerals are created (LP: #851145)
* Fix failing test
* Authorize to start a LXC instance withour, key, network file to inject or metadata
* Update the v1.0 rescue admin action and the v1.1 rescue extension to generate 'adminPass'. Fixes an issue where rescue commands were broken on XenServer. lp#838518
* pep8
* merge the trunks
* update tests to return fake\_nw\_info that is valid for the pre\_live\_migrate
* make sure to raise since the tests require it
* Pep8 Fix
* Update test\_volumes to use FLAGS.password\_length
* Zero out the progress when beginning a resize
* Adding migration progress
* Only log migration info if they exist
* remove getting fixed\_ips directly from the db
* removed unused import
* Fixes libvirt rescue to use the same strategy as xen.  Use a new copy of the base image as the rescue image.  It leaves the original rescue image flags in, so a hand picked rescue image can still be used if desired
* Fixing tests, PEP8 failures
* fix permissions
* Add a FakeVirDomainSnapshot and return it from snapshotCreateXML. Fixes libvirt snapshot tests
* merge the trunks
* Merged trunk
* I am using iputils-arping package to send arping command. You will need to install this package on the network nodes using apt-get command apt-get install iputils-arping
* Removed sudo from the arguments
* Add a FakeVirDomainSnapshot and return it from snapshotCreateXML. Fixes libvirt snapshot tests
* merge from trunk
* Make sure grantee\_group is eagerly loaded
* Merged trunk
* compute/api: swap size issue
* Update exception.wrap\_exception so that all exceptions (not just Error and NovaException types) get logged correctly
* Removes the on-disk internal libvirt snapshot after it has been uploaded to glance
* cleaned up
* remove debugging
* Merging trunk
* Allowing resizes to the same machine
* trunk merge
* updates Exception.NoMoreFixedIps to subclass NovaException instead of Error
* NoMoreFixedIps now subclasses NovaException instead of Error
* merge trunk
* was trying to create the FK when Should have been dropping
* pep8
* well since sqlalchemy-migrate and sqlalchemy can't agree on what the FK is called, we fall back on just manually dropping it
* tests working again
* the table is the table for the reason its a table
* uhh dialect doesn't exist, beavis
* update comment
* if no public-key is given (--key), do not show public-keys in metadata service
* it merges the trunk; or else it gets the conflicts again
* exceptions properly passed around now
* merge with trunk at revno 1573
* add the fake\_network Manager to prevent rpc calls
* This makes the OS api extension for booting from volumes work. The \_get\_view\_builder method was replaced in the parent class, but the BootFromVolume controller was not updated to use the new method
* remove undedded imports and skips
* pep8 fixes
* Added a unit test
* pass-through all other parameters in next links as well
* update for the id->uuid flip
* Merged trunk
* Adding flavor extra data extension
* Merged trunk
* fix test
* revert last change
* Added virt-level support for polling unconfirmed resizes
* build the query with the query builder
* Removing toprettyxml from OSAPI xml serialization in favor of toxml
* use uuids everywhere possible
* make sure to use the uuid
* update db api for split filterings searches
* update tests
* delete the internal libvirt snapshot after it is saved to glance
* cleanup prints in tests
* cleanup prints in tests
* Add a simple test for the OS boot from volume api
* get rid of debugs
* Merged from trunk and resolved conflicts
* Execute arping command using run\_as\_root=True instead of sudo
* Return three rules for describe\_security\_groups if a rule refers to a foreign group, but does not specify protocol/port
* pep8 issues
* added xml support for servers\_list in response with tests
* Merged trunk
* added servers\_links in v1.1 with tests
* added build\_list to servers controllers and view builder and kept all old tests passing
* The 1.1 API specifies that two vendor content types are allowed in addition to the standard JSON and XML content types
* pep8
* tests are back
* PEP8 fix
* Adding progress
* In the unlikely case of an instance losing a host, make sure we still delete the instance when a forceDelete is done
* 0 for the instance id is False ;)
* Cleanup state management to use vm\_state instead of task\_state Add schedule\_delete() method so delete() actually does what it says it does
* merge trunk
* write out xml for rescue
* fix up the filtering so it does not return duplicates if both the network and the db filters match
* fix rescue to use the base image, reset firewall rules,  and accept network\_info
* make sure to pass in the context
* move the FakeNetworkManager into fake\_network
* Fix issue where floating ips don't get recreated when a network host reboots
* ip tests were moved to networking
* add tests
* fix typo
* allow matching on fixed\_ip without regex and don't break so all results are reported
* add case where vif may not have an instance\_id associated with it
* fix typo
* Initial pass at automatically confirming resizes after a given window
* Use the correct method to get a builder
* merge trunks
* pep8
* move ip filtering over to the network side
* fix pep8 whitespace error
* add necessary fields to flavor.rng schema
* get all the vifs
* get all the vifs
* make sure we are grabbing out just the ids
* flavor\_elem.setAttribute -> flavor\_elem.set, flavor -> flavor\_dict
* minor changes to credentials for the correct format
* Don't report the wrong content type if a mapped type doesn't exist
* add stubs for future tests that need to be written
* Test both content types for JSON and XML
* Remove unnecessary vendor content types now that they are mapped to standard content types automatically
* Add copyright
* Map vendor content types to their standard content type before serializing or deserializing. This is so we don't have to litter the code with both types when they are treated identically
* exporting auth to keystone (users, projects/tenants, roles, credentials)
* make xml-api tests pass
* update variable name after merge: flavor\_node -> flavor\_elem
* resolve conflicts / merge with trunk revno 1569
* Fixes an issue where 'invalid literal for int' would occur when listing images after making a v1.1 server snapshot (with a UUID)
* fixed tests
* removing toprettyxml
* add attributes to xml api
* Remove debugging
* Update test\_libvirt so that flags and fakes are used instead of mocks for utils.import\_class and utils.import\_object. Fixes #lp849329
* fix the test so that it fakes out the network
* fix white space for pep8
* fix test\_extensions test to know of new extension FlavorExtraData
* add extension description for FlavorExtraData
* Adding migration for instance progress
* Make tests pass
* no need for the instance at all or compute
* bump the migration
* remove unused import, make call to network api to get vifs for the instance
* merge the trunk
* skip a bunch of tests for the moment since we will need to rework them
* remove the vif joins, some dead code, and the ability to take in some instances for filtering
* allow passing in of instances already
* run the instances filter through the network api first, then through the db
* add get\_vifs\_by\_instance and stub get\_instance\_ids\_by\_ip\_filter
* change vifs to rpc call and add instance ids by ip
* Multi-NIC support for vmwareapi virt driver in nova. Does injection of Multi-NIC information to instances with Operating system flavors Ubuntu, Windows and RHEL. vmwareapi virt driver now relies on calls to network manager instead of nova db calls for network configuration information of instance. Re-oranized VMWareVlanBridgeDriver and added session parmeter to methods to use existing session. Also removed session creation code as session comes as argument. Added check for flat\_inject flag before attempting an inject operation
* last of the api.openstack.test\_images merge fixes
* pep8 fixes
* trunk merge
* makes sure floating addresses are associated with host on associate so they come back
* Deprecate aoe in preperation for removal in essex
* Only allow up to 15 chars for a Windows hostname
* pep8
* deprecate aoe
* Fix instance rebooting (lp847604) by correcting a malformed cast in compute.api and an incorrect method signature in the libvirt driver
* Fix mismerge
* make tests pass
* This patch teaches virt/libvirt how to format filesystem on ephemeral device depending on os\_type so that the behaviour matches with EC2's. Such behaviour isn't explicitly described in the documentation, but it is confirmed by checking realy EC2 instances.  This patch introduces options virt\_mkfs as multistring. Its format is --virt\_mkfs=<os\_type>=<mkfs command> When creating ephemeral device, format it according to the option depending on os\_type.  This addresses the bugs, https://bugs.launchpad.net/nova/+bug/827598 https://bugs.launchpad.net/nova/+bug/828357
* Test new vendor content types as well
* Only allow up to 15 chars for a Windows hostname
* Split accept tests to better match the name of the test
* Remove debugging print
* Inject hostname to xenstore upon creation
* Update test\_libvirt so that flags and fakes are used instead of mocks for utils.import\_class and utils.import\_object. Fixes #lp849329
* interpret 'swap' to be in MB, not in GB
* Actually test expected matches received
* Test new content-types
* This branch changes XML Serializers and their tests to use lxml.etree instead of minidom
* add additional data to flavor's ViewBuilder
* Inject hostname to xenstore upon creation
* drop the virtual\_interfaces key back to instances
* - remove translation of non-recognized attributes to user metadata, now just ignored - ensure all keys are defined in image dictionaries, defaulting to None if glance client doesn't provide one - remove BaseImageService - reorganize some GlanceImageService tests
* And again
* Update MANIFEST.in to match directory moves from rev1559
* we're back
* Update MANIFEST.in to match directory moves from rev1559
* Moving tests/test\_cloud.py to tests/api/ec2/test\_cloud.py. They are EC2-specific tests, so this makes sense
* Same as last time
* Made tests version version links more robust
* PEP8 cleanup
* PEP8 cleanup
* PEP8 cleanups
* zone manager tests working
* fixing import
* working on getting tests back
* relocating ec2 tests
* merging trunk; resolving conflicts
* Correctly map image statuses from Glance to OSAPI v1.1
* pep8 fixes in nova/db/sqlalchemy/api.py and nova/virt/disk.py
* Add support for vendor content types
* pep8 fixes
* merging trunk; resolving conflicts
* Update GlanceClient, GlanceImageService, and Glance Xen plugin to work with Glance keystone
* Fix typo (woops)
* pep8 fix
* Some arches dont have dmidecode, check to see if libvirt is capable of running rather getInfo of the arch its running on
* merging parent branch lp:~rackspace-titan/nova/glance-client-keystone
* adding tests for deleted and pending\_delete statuses
* Fixes rogue usage of sudo that crept in
* fixups
* remove unused dep
* add test for method sig
* parent merge
* migration move
* bug fixes
* merging trunk
* Fixes shutdown of lxc containers
* Make quoting consistent
* Fix rogue usage of 'sudo' bypassing the run\_as\_root=True method
* trunk merge
* region name
* tweaks
* fix for lp847604 to unbreak instance rebooting
* use 'qemu-image resize' rather than 'truncate' to grow image files
* When vpn=true in allocate ip, it attempts to allocate the ip that is reserved in the network. Unfortunately fixed\_ip\_associate attempts to ignore reserved ips. This fix allows to filter reserved ip address only when vpn=True
* Do not require --bridge\_interface for FlatDHCPManager (lp:844944)
* Makes nova-vncproxy listen for requests on the queue like it did before the bin files were refactored
* Update GlanceClient, GlanceImageService, and Glance Xen plugin to work with Glance keystone
* api/ec2/ebs: make metadata returns correct swap and ephemeral0
* api/ec2: make get\_metadata() return correct mappings
* virt/libvirt: format ephemeral device and add fs label when formating ext3 fs
* Fix spelling mistake
* Stock zones follows a fill-first methodology—the current zone is filled with instances before other zones are considered.  This adds a flag to nova to select a spread-first methodology.  The implementation is simply adding a random.shuffle() prior to sorting the list of potential compute hosts by weights
* Pass reboot\_type (either HARD or SOFT) to the virt layers from the API
* merging trunk
* fixing image status mapping
* don't need random in abstract\_scheduler.py anymore..
* pull-up from trunk; move spread\_first into base\_scheduler.py
* trunk merge
* adding auth tokens to child zone calls
* Add comment to document why random.shuffle() works
* Merged trunk
* Make whitespace consistent
* Use triple quotes for docstrings to be consistent
* Remove the unnecessary sudo from qemu-img as it is unneeded and doesn't work with our current packaging
* Remove chanes\_since and key\_name from basic server entity
* Merged trunk
* remove extra line for pep8
* remove unnecessary qemu-img flag, use base image type by default
* shorten comment to < 79 chars
* merged rbp
* remove sudo from qemu-img commands
* adds a fake\_network module to tests to generate sensible network info for tests. It does not require using the db
* Adding a can\_read\_deleted filter back to db.api.instance\_get\_all\_by\_filters that was removed in a recent merge
* removing key\_name and config\_drive from non-detailed server entity
* Authorize to start a LXC instance withour, key, network file to inject or metadata
* Open Essex (switch version to 2012.1)
* Last Diablo translations for Nova
* Open Essex (switch version to 2012.1)
* Last Diablo translations
* pep 8
* Fixing security groups stuff
* put key into meta-data, not top level 'data'
* metadata key is 'public-keys', not 'keys'
* fix for lp844364: fix check for fixed\_ip association in os-floating-ips
* if no public-key is given (--key), do not show public-keys in metadata service
* NetworkManager's add\_fixed\_ip\_to\_instance calls \_allocate\_fixed\_ips without vpn or requested\_networks parameters. If vpn or requested\_networks is not provided to the \_allocate\_fixed\_ips method, it throws an exception. This issue is fixed now
* Merged trunk
* First pass at adding reboot\_type to reboot codepath
* child zone queries working with keystone now
* Added docstring to explain usage of reserved keyword argument
* One more bug fix to make zones work in trunk.  Basic problem is that in novaclient using the 1.0 OSAPI, servers.create() takes an ipgroups argument, but when using the 1.1 OSAPI, it doesn't, which means booting instances in child zones won't work with OSAPI v1.0.  This fix works around that by using keyword arguments for all the arguments after the flavor, and dropping the unused ipgroups argument
* Fixes the reroute\_compute decorator in the scheduler API so that it properly:
* make check for fixed\_ip association more defensive
* Fix lp:844155
* Changing a behavior of update\_dhcp() to write out dhcp options file. This option file make dnsmasq offer a default gateway to only NICs of VM belonging to a network that the first NIC of VM belongs to. So, first NIC of VM must be connected to a network that a correct default gateway exists in. By means of this, VM will not get incorrect default gateways
* merged trunk
* merging trunk
* merging trunk
* merged trunk
* Make weigh\_hosts() return a host per instance, instead of just a list of hosts
* converting fix to just address ec2; updating test
* Do not attempt to mount the swap VDI for file injection
* Add a NOTE()
* Merged trunk
* Use .get instead
* Do not attempt to mount the swap VDI for file injection
* pull-up from trunk
* pull-up from trunk
* pull-up from trunk
* adding can\_read\_deleted back to db api
* Clean up shutdown of lxc containers
* Cleanup some more comments
* Cleanup some comments
* fixes vncproxy service listening on rabbit
* added tests for failure cases talking with zones
* This code contains contains a new NetworkManager class that can leverage Quantum + Melange
* comment fix
* typo trying to raise InstanceNotFound when all zones returned nothing
* create a new exception ZoneRequestError to use for returning errors when zone requests couldn't complete
* pep8 fix for tests/api/openstack/test\_servers.py which is an issue in trunk
* catch exceptions from novaclient when talking to child zones.  store them and re-raise if no other child zones return any results.  If no exceptions are raised but no results are returned, raise a NotFound exception
* added test to cover case where no local hosts are available but child hosts are
* remove the short circuit in abstract scheduler when no local hosts are available
* fix for lp844364: improve check for fixed\_ip association
* Ensure restore and forceDelete don't do anything unless the server is waiting to be reclaimed
* actually shuffle the weighted\_hosts list..
* Check task\_state for queued delete
* spread-first strategy
* Make sure instance is deleted before allowing restore or forceDelete
* Add local hostname to fix Authors test
* delete\_instance\_interval -> reclaim\_instance\_interval
* PEP8 cleanup
* Restart compute with a lower periodic\_interval to make test run faster
* merge trunk
* properly handle the id resetters
* removed vestige
* pull-up from trunk
* fix a couple of typos in the added unit test
* modified unit tests, set use\_single\_default\_gateway flag to True whereever needed instead of setting it in the init method
* exclude net tag from host\_dhcp if use\_single\_default\_gateway flag is set to false
* forgot \_id
* had used wrong variable
* Fixes a case where if a VIF is returned with a NULL network it might not be able to be deleted. Added test case for that fix
* Fix for LP Bug #837867
* weigh\_hosts() needs to return a list of hosts for the instances, not just a list of hosts
* Merged trunk
* Set flat\_injected to False by default
* changed the fixed\_ip\_generator
* PEP8 cleanup
* Wait longer for all agents, not just Windows
* merged trunk
* updated floating\_ip generation
* Tests for deferred delete, restore and forceDelete
* An AMI image without ramdisk image should start
* Added use\_single\_default\_gateway to switch from multiple default gateways to single default gateway
* Fixed unit test
* reverting change to GlanceImageService.\_is\_image\_available
* At present, the os servers.detail api does not return server.user\_id or server.tenant\_id.  This is problematic, since the servers.detail api defaults to returning all servers for all users of a tenant, which makes it impossible to tell which user is associated with which server
* reverting xenapi change
* Micro-fix; "exception" was misspelled as "exceptions"
* Fix a misspelling of "exception"
* revert changes to display description
* merged trunk
* novaclient v1\_0 has an ipgroups argument, but novaclient v1\_1 doesn't
* Set flat\_injected to False by default
* Fixes an issue where 'invalid literal for int' would occur when listing images after making a v1.1 server snapshot (with a UUID)
* further cleanup
* Default to 0 seconds (off)
* PEP8 cleanups
* Include new extension
* Implement deferred delete of instances
* trunk merge
* cleaning up tests
* zone name not overwritten
* Update the v1.0 rescue admin action and the v1.1 rescue extension to generate 'adminPass'. Fixes an issue where rescue commands were broken on XenServer. lp#838518
* fix a mistaking of dataset and expected values on small test
* fix a mistaking of deletion in ensure\_floating\_forward
* revert codes for db
* correct a method to collect instances from db add interface data to test
* added me to Authors
* meeging trunk
* format for pep8
* format for pep8
* implement unit test for linux\_net
* Adjust test\_api to account to multiple rules getting returned for a single set rule
* Clean up security groups after use
* Make a security group rule that references another security group return ipPermission for each of tcp, udp, and icmp
* Multi-NIC support for vmwareapi virt driver in nova. Does injection of Multi-NIC information to instances with Operating system flavors Ubuntu, Windows and RHEL. vmwareapi virt driver now relies on calls to network manager instead of nova db calls for network configuration information of instance. Ensure if port group is properly associated with vlan\_interface specified in case of VLAN networking for instances. Re-oranized VMWareVlanBridgeDriver and added session parmeter to methods to use existing session. Also removed session creation code as session comes as argument. Added check for flat\_inject flag before attempting an inject operation. Removed stale code from vmwareapi stubs. Also updated some comments to be more meaningful. Did pep8 and pylint checks. Tried to improve pylint score for newly added lines of code
* Fix bug #835919 that output a option file for dnsmasq not to offer a default gateway on second vif
* Accidentally added instance to security group twice in the test. Fixed
* Minor cleanup
* Fixing xml serialization of limits resource
* correct floating ip id to increment in fake\_network
* Add iptables filter rules for dnsmasq
* Merged trunk
* Change non E ascii characte
* Launchpad automatic translations update
* Instance record is not inserted in db if the security group passed to the RunInstances API doesn't exists
* Added unit tests to check instance record is not inserted in db when security groups passed to the instances are not existing
* removed unneeded import
* rick nits
* alex meade issues
* Added list of security groups to the newly added extension (Createserverext)  for the Create Server and Get Server detail responses
* default description to name
* use 'qemu-image resize' rather than 'truncate' to grow image files
* remove extra description stuff
* fix pep8 violation
* feedback from jk0's review, including removing a lot of spaces from docstrings
* revert description changes, use metadata['description'] if it is set to populate field in db
* merged trunk
* change db migrate script again to match other similar scripts
* Fix for LP Bug #839269
* move networks declarations within upgrade/downgrade methods
* more review cleanup
* remove import of 'fake' from nova manager, now that we've moved that to test\_quantum.py
* Fixes a small bug which causes filters to not work at all.  Also reworks a bit of exception handling to allow the exception related to the bug to propagate up
* Email error again. Tired
* Email error
* Fixed review comments
* Add documentation comment
* pull-up from trunk
* Forgot to handle return value
* Add tests for flags 'snapshot\_image\_format'
* Update snapshot image metada 'disk\_format'
* Add flag 'snapshot\_image\_format' to select the disk format of the snapshot image generated with the libvirt driver
* missing migration
* Email contact error
* Update Authors file
* Merged trunk
* Correct tests associated
* Fix protocol-less security groups
* Adding feedparser to pip-requires
* Removing xml functions that are no longer called
* Launchpad automatic translations update
* Glance can now perform its own authentication/authorization checks when we're using keystone
* import filters in scheduler/host\_filter.py so default\_host\_filter gets added to FLAGS; rework SchedulerManager() to only catch missing 'schedule\_<method>' attribute and report other missing attributes
* move content of quantum/fake.py to test\_quantum.py in unit testing class (most original content has been removed anyway)
* melange testing cleanup, localization cleanup
* remove references to MelangeIPAMTest, as they cannot be used yet
* Deleted debug messages
* Resolved conflicts and fixed pep8 errors
* Fix a few references to state\_description that slipped through
* added unit tests and cleanup of import statements
* renamed fake\_network\_info.py
* trunk merge
* moved cidr\_v6 back
* Probably shouldn't leave that commented out
* Added test for NULL network
* Fixed lp835242
* Fixes for minor network manager issues centered around deleting/accessing instances which don't have network information set
* remove extra references to state\_description
* pull-up from trunk
* merge unit test from Chris MacGown
* Adds test for image.glance.GlanceImageService.\_is\_image\_available
* - implements changes-since for servers resource - default sort is now created\_at desc for instances
* undo change in setting q\_tenant\_id in quantum\_manager.create\_network
* additional review cleanup
* docstring cleanup
* merging trunk
* Fixes NotFound exceptions to show the proper instance id in the ec2 api
* typo
* more review cleanup
* another commit from brad
* add specific exceptions for quantum client.  Fix doc-strings in client.py
* merge brad's changes that address most review feedback
* fix for lp838583 - fixes bug in os-floating-ips view code that prevents instance\_id from being returned for associated addresses
* Accept keypair when you launch a new server. These properties would be stored along with the other server properties in the database (like they are currently for ec2 api)
* Launchpad automatic translations update
* merge trunk, fix tests
* fix for lp838583 - return instance\_id for associated floating\_ips, add test
* removing unnecessary imports
* remove BaseImageService
* pep8
* move GlanceImageService tests to proper module; remove translation of non-standard image attributes to properties; ensure all image properties are available, defaulting to None if not provided
* merge trunk
* Add comment for an uncommon failure case that we need to fix
* Fix for LP Bug #838466
* Correctly yield images from glance client through image service
* Simple usage extension for nova.  Uses db to calculate tenant\_usage for specified time periods
* Fix for LP Bug #838251
* merge trunk, fix conflict
* Validates that user-data is b64 encoded
* Updated VersionsAtomSerializer.index to use lxml.etree to generate atom feed
* remove extra test
* merged trunk
* Fixed and improved the way instance "states" are set. Instead of relying on solely the power\_state of a VM, there are now explicitly defined VM states and VM task states which respectively define the current state of the VM and the task which is currently being performed by the VM
* Updating test for <choices> xml to use lxml
* expect key\_name attribute in 1.1
* change to use \_get\_key\_name to retrieve the key
* Implements lp:798876 which is 'switch carrot to kombu'.  Leaves carrot as the default for now... decision will be made later to switch the default to kombu after further testing.  There's a lot of code duplication between carrot and kombu, but I left it that way in preparation for ripping carrot out later and to keep minimal changes to carrot
* Disassociated previously associated floating ips when calling network\_api.associate\_floating\_ip.  Also guard against double-association in the network.manager
* adding support for limiting in image service; updating tests with fixture ids and marker support
* trunk merge
* merging trunk
* fix keypairs stubs
* add explicit message for NoMoreFloatingIps exception
* fix for chris behrens' comment - move tenant\_id => project\_id mapping to compute.api.get\_all
* moved key\_name per review
* zone\_add fixed to support zone name
* kludge for kombu 1.1.3 memory transport bug
* merged trunk
* Removed extraneous import and s/vm\_state.STOP/vm\_states.STOPPED/
* Merged trunk
* Code cleanup
* Use feedparser to parse the generated atom feeds in the tests for the versions resource
* add test to verify 400 response when out of addresses
* switched default to kombu per vishy
* use kombu.connection.BrokerConnection vs kombu.connection.Connection so that older versions of kombu (1.0.4) work as well as newer
* fix FloatingIpAlreadyInUse to use correct string pattern, convert ApiErrors to 400 responses
* Fix for LP Bug #782364
* Fix for LP Bug #782364
* more logging info to help identify bad payloads
* Removed test\_parallel\_builds in the XenAPI tests due to it frequently hanging indefinitely
* logging change when rpc pool creates new connection
* pep8 fix
* make default carrot again and delay the import in rpc/\_\_init\_\_.py
* Removed debug messages
* Fix for LP Bug #837534
* add kombu to pip-requires and contrib/nova.sh
* restore old way FLAGS.rpc\_backend worked..  no short name support for consistency
* fix remaining tests
* Update RequestContext so that it correctly sets self.is\_admin from the roles array. Additionally add a bit of code to ignore case as well
* pep8, fix fakes
* fix a bunch of direct usages of db in compute api
* make two functions instead of fast flag and add compute api commands instead of hitting db directly
* fixing bug
* fixing short-ciruit condition
* yielding all the images
* merged trunk
* changing default sort to created\_at
* The exception 'RamdiskNotFoundForImage' is no longer used
* With OS API, if the property 'ramdisk\_id' isn't set on the AMI image, Nova can not instantiate it. With EC2 API, the AMI image can be instantiate
* adding an assert
* Use getCapabilities rather than getInfo() since some versions of libvirt dont provide dmi information
* supporting changes-since
* Fix a bad merge on my part, this fixes rebuilds\!
* disassociate floating ips before re-associating, and prevent re-association of already associated floating ips in manager
* Update RequestContext so that it correctly sets self.is\_admin from the roles array. Additionally add a bit of code to ignore case as well
* Merged trunk
* remove unneeded connection= in carrot Consumer init
* pep8 fix for test\_rpc\_common.py
* fix ajax console proxy for new create\_consumer method
* doc string cleanup
* created nova/tests/test\_rpc\_common.py which contains a rpc test base class so we can share tests between the rpc implementations
* ditched rpc.create\_consumer(conn) interface... instead you now do conn.create\_consumer(.
* Update the EC2 ToToken middleware to use eventlet.green.httplib instead of httplib2. Fixes issues where the JSON request body wasn't getting sent to Keystone
* remove brackets from mailmap entry
* access db directly in networkmanagers's delete\_network method, so stubbed test call works correctly
* more logging info to help identify bad payloads
* In the XenAPI simulator, set VM.domid, when creating the instance initially, and when starting the VM
* remove 'uuid' param for nova-manage network delete that I had add previously
* add alias to mailmap
* update file name for db migrate script after merge (again)
* update file name for db migrate script after merge
* merged trunk
* Fixes this bug by removing the test. The test has no asserts and seems to be raising more problems than it could solve
* Removed test\_parallel\_builds
* Merged trunk
* Increased migration number
* Fixes lp:813864 by removing the broken assert.  The assert was a check for isinstance of 'int' that should have been 'long'.  But it doesn't appear this assert really belongs, anyway
* Merged trunk
* Adds assertIn and assertNotIn support to TestCase for compatibility with python 2.6 This is a very minimal addition which doesn't require unittest2
* support the extra optional arguments for msg to assertIn and assertNotIn
* removed broken assert for abstract\_scheduler
* pep8 fixes
* fix for assertIn and assertNotIn use which was added in python 2.7.  this makes things work on 2.6 still
* merge trunk
* restore fixed\_ip\_associate\_pool in nova/db/sqlalchemy.py to its original form before this branch.  Figured out how to make unit tests pass without requiring that this function changes
* remove unused rpc connections in test\_cloud and test\_adminapi
* carrot consumer thread fix
* add carrot/kombu tests... small thread fix for kombu
* add doc-strings for all major modules
* remove fake IPAM lib, since qmanager must now access nova DB directly
* Update the EC2 ToToken middleware to use eventlet.green.httplib instead of httplib2. Fixes issues where the JSON request body wasn't getting sent to Keystone
* fix nova/tests/test\_test.py
* fix nova-ajax-console-proxy
* fix test\_rpc and kombu stuff
* always set network\_id in virtual\_interfaces table, otherwise API commands that show IP addresses get confused
* start to rework some consumer stuff
* update melange ipam lib to use network uuid, not bridge
* fix issue with setting 'Active' caused by Quantum API changes.  Other misc fixes
* Bug #835952: pep8 failures do not cause the tests to fail
* Start domid's at 1, not 0, to avoid any confusion with dom0
* use 'uuid' field in networks table rather than 'bridge'.  Specify project\_id when creating instance in unit test
* Bug #835964: pep8 violations in IPv6 code
* In the XenAPI simulator, set VM.domid, when creating the instance initially, and when starting the VM
* Bug #835952: pep8 failures do not cause the tests to fail
* Bug #835964: pep8 violations in IPv6 code
* Virtual Storage Array (VSA) feature. - new Virtual Storage Array (VSA) objects / OS API extensions / APIs / CLIs - new schedulers for selecting nodes with particular volume capabilities - new special volume driver - report volume capabilities - some fixes for volume types
* fix FALGS typo
* changes a few double quotes to be single, as the rest in the vicinity are
* Default rabbit max\_retries to forever Modify carrot code to handle retry backoffs and obey max\_retries = forever Fix some kombu issues from cut-n-paste Service should make sure to close the RPC connection
* Updated VersionsXMLSerializer and corresponding tests to use lxml
* v1.0 of server create injects first users keypair
* add tests to verify NotFound exceptions are wrapped with the proper ids
* use db layer for aggregation
* merged trunk
* flag for kombu connection backoff on retries
* more fixes
* more work done to restore original rpc interfaces
* merge changes from brad due to recent quantum API changes
* Minor changes based on recent quantum changes
* start of kombu implementation, keeping the same RPC interfaces
* doubles quotes to single
* changed format string in nova-manage
* removed self.test ip and \_setup\_networking from libvirt
* updated libvirt test
* merge trunk
* stubbed some stuff in test\_libvirt
* removed create\_volumes, added log & doc comment about experimental code
* reverted CA files
* couple of pep8s
* Tiny tweaks to the migration script
* updated fake values
* updated fake values
* Merged trunk and fixed conflicts
* updated fake values
* updated fake values
* forgot )
* update libvirt tests
* Update compute API and manager so that the image\_ref is set before spawning the rebuilt instance. Fixes issue where rebuild didn't actually change the image\_id
* added debug prints for scheduler
* update libvirt
* updated instance type fake model
* added vcpus to instance flavor test model
* added memory\_mb to instance flavor test model
* forgot test print statements
* misplaced comma..
* Update compute API and manager so that the image\_ref is set before spawning the rebuilt instance. Fixes issue where rebuild didn't actually change the image\_id
* Add brad to Authors file
* replace accidental deletion in nova-mange
* rearrange imports
* fix for quantum api changes, change nova-mange to have quantum\_list command
* merge brad's fixes
* add priority for static networks
* driver: added vsa\_id parameter for SN call
* merged with rev.1499
* cosmetic cleanup
* Updated server and image XML serializers to take advantage of the addresses and metadata serializers
* VSA code redesign. Drive types completely replaced by Volume types
* merged trunk
* Just a couple of small changes I needed to get the migrations working with SQLAlchemy 0.7.x on Fedora 16
* Minor fixes
* check log file's mode prior to calling chmod
* The fix for run\_iscsiadm in rev 1489 changed the call to use a tuple because values were being passed as tuples.  Unfortunately a few calls to the method were still passing strings
* Add a set of generic tests for the virt drivers. Update a bit of documentation to match reality
* updated LimitsXMLSerializer to use etree and supply the xml declaration
* merge underlying fix for testing
* merged trunk
* updated additional limits test
* pep8
* pass all commands to run\_iscsiadm as a tuple
* altered fake network model
* Updated limits serialization tests to use etree and added limits schema
* Test fixup after last review feedback commit
* Fix glance image authorization check now that glance can do authorization checks on its own; use correct image service when looking for ramdisk, etc.; fix a couple of PEP8 errors
* forget a return
* review feedback
* Fixed integrated.test\_xml to be more robust
* typo
* fixed a couple of syntax errors
* Add bug reference
* updated tests
* updated libvirt tests to use fake\_network\_info
* Bumped migration number
* Merged trunk
* Review feedback
* pep8
* DRYed up code by moving \_to\_xml into XMLDictSerializer
* updated addresses serializer to use etree instead of minidom
* Added addresses schema
* updated addresses xml serialization tests to use etree instead of minidom
* Updated ServerXMLSerializer to use etree instead of minidom
* added unit tests to instance\_types for rainy day paths
* Reverted two mistakes when looking over full diff
* Updated MetadataXMLSerializer to use etree instead of minidom
* Added: - volume metadata - volume types - volume types extra\_specs
* Added schemas Updated metadata tests to use etree instead of minidom
* Servers with metadata will now boot on xenserver with flat\_injected==False
* moved import up
* Verify resize needs to be set
* changing comment
* fixing bug
* merged trunk
* Updated ImagesXMLSerializer to use etree instead of minidom
* Set error state when migration prep fails
* Removed invalid test
* Removed RESIZE-CONFIRM hack
* Set state to RESIZING during resizing..
* Merged trunk
* Another attempt at fixing hanging test
* Once a network is associated with project, I can’t delete this network with ‘nova-manage network delete’. As you know, I can delete network by scrubbing the project with ‘nova-manage project scrub’. However it is too much. The cause of this problem is there is no modify command of network attribute
* Update paste config so that EC2 admin API defaults to noauth
* merged with volume types (based on rev.1490). no code rework yet
* merged with volume\_types. no code refactoring yet
* merged with nova 1490
* added new tables to list of DBs in migration.py
* removes french spellings to satisfy american developers
* added virtio flag; associate address for VSA; cosmetic changes. Prior to volume\_types merge
* stub\_instance fix from merge conflict
* moved import to the top
* fixing inappropriate rubyism in test code
* Added fix for parallel build test
* Fixed silly ordering issue which was causing tons of test failures
* merged trunk
* change snapshot msg too
* forgot to add new extension to test\_extensions
* Add me to Authors
* added Openstack APIs for volume types & extradata
* Add comments for associate/dissociate logic
* Updated ImageXMLSerialization tests to use etree instead of minidom Fixed incorrect server entity ids in tests
* Merged from trunk
* Add names to placeholders of formatting
* The notifiers API was changed to take a list of notifiers. Some people might want to use more than one notifier so hopefully this will be accepted into trunk
* use dict.get for user\_id, project\_id, and display\_description in servers view as suggested by ed leaf, so that not all tests require these fields
* Updated flavors xml serialization to use lxml instead of minidom
* merge trunk, fix tests
* fix more tests
* Removed unused imports
* Updated FlavorsXMLSerialization tests to use etree and validation instead of minidom
* Merged from trunk
* split test\_modify() into specific unit tests
* Added DELETED status to OSAPI just in case
* Fixes iscsiadm commands to run properly
* Fixed issue where we were setting the state to DELETED before it's actually deleted
* merged with rev.1488
* Merged trunk and fixed conflicts
* added volume type search by extra\_spec
* Fix for trying rebuilds when instance is not active
* Fixed rebuild naming issue and reverted other fix which didn't fix anythin
* Attempt to fix issue when deleting an instance when it's still in BUILD
* Fix default hostname generator so that it won't use underscores, and use minus signs instead
* merged with 1487
* pep8 compliant
* Merged from trunk
* - rebuilds are functional again - OSAPI v1.1 rebuild will accept adminPass or generate a new one, returning it in a server entity - OSAPI v1.0 will generate a new password, but it doesn't communicate it back to the user
* Fix flag override in unit test
* merged with rev.1485
* add rainy day test to to\_global fixed to\_global to catch correct error from incorrect mac addresses
* Let's be more elegant
* similar to lp828614: add rainy day test and fix exception error catch to AddrFormatError
* check log file mode prior to chmod
* added unit tests for version.py
* Merged trunk
* Fix for migrations
* Conversion to SQLAlchemy-style
* dict formatting
* Commit without test data in migration
* Commit with test data in migration
* Do not require --bridge\_interface for FlatDHCPManager
* Fix quotas migration failure
* Fix flavorid migration failure
* fixed indentation
* adding xml serialization and handling instance not found
* removing extraneous imports
* pep8
* Thou shalt not use underscores in hostnames
* Catch exception for instances that aren't there
* pep8 fixes
* Couple of fixes to the review feedback changes
* Launchpad automatic translations update
* Address code review feedback from Rick and Matt
* removing print statement
* added volume metadata APIs (OS & volume layers), search volume by metadata & other
* Update paste config so that EC2 admin API defaults to noauth
* cleanup
* updating tests
* fix iscsi adm command
* Fix pep8
* Merged from trunk
* added volume\_types APIs
* Fix not found exceptions to properly use ec2\_ips for not found
* Stub out the DB in unit test. Fix 'nova-manage network modify' to use db.network\_update()
* rebuilds are functional again
* Adds a use\_deprecated\_auth flag to make sure creds generated using nova-manage commands will work with noauth
* Merged from upstream
* Fixed some pep8 and pylint issues
* Forgot to set the flag for the test
* I added notifications  decorator for each API call using monkey\_patching. By this merge, users can get API call notification from any modules
* Fixes bug that causes 400 status code when an instance wasn't attached to a network
* fix for rc generation using noauth
* Fixed doc string
* Merged from upstream
* Switched list\_notifier to log an exception each time notify is called, for each notification driver that failed to import
* updating tests
* merging trunk
* Fixed some docstring Added default publisher\_id flagw
* Removed blank line
* Merged with trunk
* Fixed typo and docstring and example class name
* Updated migration number
* Move use\_ipv6 into flags. Its used in multiple places (network manager and the OSAPI) and should be defined at the top level
* Merged trunk
* PEP8 fixes
* 'use the ipv6' -- 'use ipv6'
* Move use\_ipv6 into flags. Its used in multiple places (network manager and the OSAPI) and should be defined at the top level
* Refresh translations
* This branch does the final tear out of AuthManager from the main code. The NoAuth middlewares (active by default) allow a user to specify any user and project id through headers (os\_api) or access key (ec2\_api)
* Implements first-pass of config-drive that adds a vfat format drive to a vm when config\_drive is True (or an image id)
* Launchpad automatic translations update
* pulling all qmanager changes into a branch based on trunk, as they were previously stacked on top of melange
* Moved migration and fixed tests from upstream
* Merged trunk
* Added the fixes suggested by Eric Windisch from cloudscaling..
* removing unnecessary tthing
* merge trunk, resolve conflicts, fix tests
* unindented per review, added a note about auth v2
* Our goal is to add optional parameter to the Create server OS 1.0 and 1.1 API to achieve following objectives:-
* fixing exception logging
* Fixes bug 831627 where nova-manage does not exit when given a non-existent network address
* Move documentation from nova.virt.fake into nova.virt.driver
* initial cut on volume type APIs
* fix pep8 issue
* Change parameters of 'nova-manage network modify'. Move common test codes into private method
* Merged from trunk,resolved conflicts and fixed broken unit tests due to changes in the extensions which now include ProjectMapper
* xml deserialization, and test fixes
* syntax
* update test\_network test\_get\_instance\_nw\_info()
* remove extra spaces
* Fixed conflict with branch
* merged trunk
* The FixedIpCommandsTestCase in test\_nova\_manage previously accessed the database. This branch stubs out the database for these tests, lowering their run time from 104 secs -> .02 secs total
* some readability fixes per ja feedback
* fix comment
* Update a few doc strings. Address a few pep8 issues. Add nova.tests.utils which provides a couple of handy methods for testing stuff
* Make snapshot raise InstanceNotRunning when the instance isn't running
* change NoAuth to actually use a tenant and user
* Added Test Code, doc string, and fixed pip-requiresw
* Merged trunk
* Ensure that reserve and unreserve exit when an address is not found
* Simple usage extension for nova.  Uses db to calculate tenant\_usage for specified time periods
* Stubbed out the database in order to improve tests
* logging as exception rather than error
* Merged from upstream
* Changed list\_notifier to call sys.exit if a notification driver could not be found
* merged trunk
* implemented tenant ids to be included in request uris
* Add a generic set of tests for hypervisor drivers
* Upstream merge
* Added ability to detect import errors in list\_notifier if one or more drivers could not be loaded
* Fix pep8
* delete debug code
* Fixes for a number of tests
* Use 'vm\_state' instead of 'state' in instance filters query
* Merged with Dan to fix some EC2 cases
* Add 'nova-manage network modify' command
* Fixes/updates to make test\_cloud pass
* Fix scheduler and integrated tests
* Update migration number
* Merged with Dan
* Merged task\_state -> task\_states and fixed test\_servers test
* Update virt/fake to correct power state issue
* fix test\_servers tests
* update test\_security\_group tests that have been added
* Merged trunk
* Renamed task\_state to task\_states..
* Ec2 API updates
* merge with trunk
* Fixing merge conflicts
* Launchpad automatic translations update
* Adds accessIPv4 and accessIPv6 to servers requests and responses as per the current spec
* adding import
* Fixes utils.to\_primitive (again) to handle modules, builtins and whatever other crap might be hiding in an object
* fixing bug lp:830817
* added test for bad project\_id ... although it may not be used
* added exception catch and test for bad project\_id
* added exception catch for bad prefix and matching test
* added exception catch and test for bad prefix
* comment strings
* added unit tests for versions.py
* Added OS APIs to associate/disassociate security groups to/from instances
* add/remove security groups to/from the servers as server actions
* lp:828610
* removed leftover netaddr import
* added rainy day test for ipv6 tests. fixed ipv6.to\_global to trap correct exception
* Merged from trunk
* pep8
* improve test coverage for instance types / flavors
* Launchpad automatic translations update
* Assorted fixes to os-floating-ips to make it play nicely with an in-progress novaclient implementation, as well as some changes to make it more consistent with other os rest apis.  Changes include:
* finished fake network info, removed testing shims
* updated a maths
* updated a maths
* Merged trunk
* Lots of modifications surrounding the OSAPI to remove any mention of dealing with power states and exclusively using vm\_states and task\_state modules. Currently there are still a number of tests failing, but this is a stopping place for today
* who cares
* added return
* Merged from trunk and fixed review comments
* fixed formatting string
* typo
* typo
* typo
* typo
* typo
* typo
* added fake network info
* Fixed review comments
* Fixed typo
* better handle malformed input, and add associated tests
* Fixed typo
* initial committ
* Fixed NoneType returned bugw
* merged trunk
* Updated accessIPv4 and accessIPv6 to always be in a servers response
* Fixed mistake on mergew
* tweak to comment
* Merged with trunkw
* a few tweaks - remove unused member functions, add comment
* incorporate feedback from brian waldon and brian lamar.  Move associate/disassociate to server actions
* merge from trunk
* pep8
* Finished changing ServerXMLSerializationTest to use XML validation and lxml
* Added monkey patching notification code function w
* Updated test\_show in ServerXMLSerializationTest to use XML validation
* vm\_state --> vm\_states
* Next round of prep for keystone integration
* merge from trunk
* Removes the incorrect hard-coded filter path
* Revert irrelevant changes that accidentally crept into this patch :(
* add tenant\_id to api.  without tenant\_id, admins can't tell which servers belong to which tenants when retrieving lists
* Merged from trunk
* Fixes primitive with builtins, modules, etc
* fix test\_virtual interfaces for tenant\_id stuff
* fix test\_rescue tests for tenant\_id changes
* Fix unit test for the change of 'nova-manage network list' format
* Add copyright notices
* merged trunk
* Define FLAGS.default\_local\_format. By default it's None, to match current expected \_create\_local
* Fix config\_drive migration, per Matt Dietz
* updated migration number
* merge with trunk
* Bump migration number
* pep8
* Start improving documentation
* Added uuid column in virtual\_interfaces table, and an OpenStack extension API for virtual interfaces to expose these IDs.  Also set this UUID as one of the external IDs in the OVS vif driver
* Move documentation from nova.virt.fake to nova.virt.driver
* add key\_name/data support to server stub
* add user\_id and description.  without user\_id, there is no way for a tenant to tell which user created the server.  description should be added for ec2 parity
* merge
* Bugfix for lp 828429.  Its still not clear to me exactly how this code path is actually invoked when nova is used, so I'm looking for input on whether we should be adding a test case for this, removing the code as unused, etc.  Thanks
* remove security groups, improve exception handling, add tests
* Merged trunk
* merged trunk
* Currently, rescue/unrescue is only available over the admin API. Non-admin tenants also need to be able to access this functionality. This patch adds rescue functionality over an API extension
* Makes all of the binary services launch using the same strategy.  \* Removes helper methods from utils for loading flags and logging  \* Changes service.serve to use Launcher  \* Changes service.wait to actually wait for all the services to exit  \* Changes nova-api to explicitly load flags and logging and use service.serve  \* Fixes the annoying IOError when /etc/nova/nova.conf doesn't exist
* tests pass
* Fixes issue where ServersXMLSerializer was missing a method for update actions
* follow same pattern as userdata (not metadata apporach)
* rename the test method
* Updated docs for the recent scheduler class changes
* Passes empty string instead of None to MySQLdb driver if the DB password isn't set
* merged trunk
* added volume metadata. Fixed test\_volume\_types\_extra\_specs
* declare the use\_forwarded\_for flag
* merge trunk
* Fixes lp828207
* Added unit test
* allow specification of key pair/security group info via metadata
* Fixed bug in which DescribeInstances was returning deleted instances.  Added tests for pertinent api methods
* Accept binary user\_data in radix-64 format when you launch a new server using OSAPI. This user\_data would be stored along with the other server properties in the database. Once the VM instance boots you can query for the user-data to do any custom installation of applications/servers or do some specific job like setting up networking route table
* added unittests for volume\_extra\_data
* Removed extra parameter from the call to \_provision\_resource\_locally()
* resolve conflicts after upstream merge
* Change the call name
* Cleanup the '\_base' directory in libvirt tests
* Oops
* Review feedback
* Added 'update' method to ServersXMLSerializer
* Added more unit testcases for userdata functionality
* Remove instances.admin\_pass column
* merged trunk
* Merged with trunk
* typo
* updated PUT to severs/id to handle accessIPv4 and accessIPv6
* DB password should be an empty string for MySQLdb
* first cut on types & extra-data (only DB work, no tests)
* merge from trunk
* Better docstring for \_unrescue()
* Review feedback
* Need to pass the action
* Updated the distributed scheduler docs with the latest changes to the classes
* Syntax error
* Moved compute calls to their own handler
* Remove old comment
* Don't send 'injected\_files' and 'admin\_pass' to db.update
* fix docstrings in new api bins
* one more
* fix typo
* remove signal handling and clean up service.serve
* add separate api binaries
* more cleanup of binaries per review
* Changed the filter specified in \_ask\_scheduler\_to\_create\_instance() to None, since the value isn't used when creating an instance
* Minor housecleaning
* Fix to return 413 for over limit exceptions with instances, metadata and personality
* Refactored a little and updated unit test
* minor cleanup
* dhcpbridge: add better error if NETWORK\_ID is not set, convert locals() to static dict
* Added the fix for the missing parameter for the call to create\_db\_entry\_for\_new\_instance()
* Updated a number of items to pave the way for new states
* Corrected the hardcoded filter path. Also simplified the filter matching code in host\_filter.py
* Added rescue mode extension
* Fixed issue where accessIP was added in none detail responses
* Updated ServersXMLSerializer to allow accessIPv4 and accessIPv6 in XML responses
* Merged trunk
* Added accessIPv4 and accessIPv6 to servers view builder Updated compute api to handle accessIPv4 and 6
* Fixed several logical errors in the scheduling process. Renamed the 'ZoneAwareScheduler' to 'AbstractScheduler', since the zone-specific designation is no longer relevant. Created a BaseScheduler class that has basic filter\_hosts() and weigh\_hosts() capabilities. Moved the filters out of one large file and into a 'filters' subdirectory of nova/scheduler
* Merged trunk
* Adds the enabled status of a host when XenServer reports its host's capabilities. This allows the scheduler to ignore hosts whose enabled is False when considering where to place a new instance
* merge trunk and fix unit test errors
* in dhcpbridge, only grab network id from env if needed
* bug #828429: remove references to interface in nova-dhcpbridge
* pep8
* remove extra reference in pipelib
* clean up fake auth from server actions test
* fix integration tests
* make admin context the default, clean up pipelib
* merged trunk
* Merged with trunk and fixed broken testcases
* merged with nova-1450
* nova-manage VSA print & forced update\_cap changes; fixed bug with report capabilities; added IP address to VSA APIs; added instances to APIs
* Make all services use the same launching strategy
* Updated compute manager/API to use vm/task states. Updated vm/task states to cover a few more cases I encountered
* Updated server create XML deserializer to account for accessIPv4 and accessIPv6
* Added the host 'enabled' status to the host\_data returned by the plugin
* Added accessip to models pep8
* Added migration for accessIPv4 and accessIPv6
* Fixed broken unit testcases
* Initial instance states migration
* pep8 fix
* fix some naming inconsistencies, make associate/disassociate PUTs
* Add NetworkCommandsTestCase into unit test of nova-manage
* very minor cleanup
* Undo an unecessary change
* Merged trunk
* Pep8 fixes
* Split set state into vm, task, and power state functions
* Add modules for task and vm states
* Updated tests to correctly use the tenant id
* DB object was being casted to dict() in API code. This did not work as intended and logic has been updated to reflect a more accurate way of getting information out of DB objects
* merge from trunk
* Cleaned up the extension metadata API data
* Updated get\_updated time
* Cleaned up the file
* Fixed vif test to match the JSON key change
* Added XML support and changed JSON output keys
* Added virtual interfaces API test
* Removed serverId from the response
* Merged trunk
* Merged Dan's branch to add VIF uuid to VIF drivers for Quantum
* Removed a change from faults.py that was not required."
* Changed return code to 413 for metadata, personality and instance quota issues
* Append the project\_id to the SERVER-MANAGEMENT-URL header for v1.1 requests. Also, ensure that the project\_id is correctly parsed from the request
* add new vif uuid for OVS vifplug for libvirt + xenserver
* Remove instances.admin\_pass column
* merge trunk
* all tests passing
* fix unit tests
* Resolved conflicts and merged with trunk
* Added uuid for networks and made changes to the Create server API format to accept network as uuid instead of id
* I'm taking Thierry at his word that I should merge early and merge often :)
* Fixes issue with exceptions getting eaten in image/s3.py if there is a failure during register.  The variables referenced with locals() were actually out of scope
* Allow local\_gb size to be 0. libvirt uses local\_gb as a secondary drive, but XenServer uses it as the root partition's size. Now we support both
* Merged trunk
* merge from trunk
* make project\_id authorization work properly, with test
* Use netaddr's subnet features to calculate subnets
* make delete more consistant
* Review feedback
* Updated note
* Allow local\_gb to be 0; PEP8 fixes
* Updated ViewBuilderV10 as per feedback
* \* Added search instance by metadata. \* instance\_get\_all\_by\_filters should filter deleted
* This branch implements a nova api extension which allows you to manage and update tenant/project quotas
* test improvements per peer review
* fixing pep8 issue
* defaults now is referred to using a tenant
* fixing up the show quotas tests, and extension
* making get project quotas require context which has access to the project/tenant)
* fixing pep8 issues again
* fixing spacing issues
* cleaning up a few things from pyflakes
* fixing pep8 errors
* refactoring tests to not use authmanager, and now returning 403 when non admin user tries to update quotas
* removed index, and separated out defaults into its own action
* merging test\_extensions.py
* another trunk merge
* another trunk merge... a new change made it into nova before the code was merged
* Cleanup the '\_base' directory in libvirt tests
* Small bug fix...don't cast DB objects to dicts
* merge from trunk
* Updated the EC2 metadata controller so that it returns the correct value for instance-type metadata
* Fix test\_metadata tests
* merge the trunk
* Merged with upstream
* Added list\_notifier, a driver for the notifer api which calls a list of other drivers
* merge with trunk
* Refactored the HostFilterScheduler and LeastCostScheduler classes so that they can be combined into a single class that can do both host filtering and host weighting, allowing subclasses to override those processes as needed. Also renamed the ZoneAwareScheduler to AbstractScheduler, for two reasons: one, the 'zone-aware' designation was necessary when the zone code was being developed; now that it is part of nova, it is not an important distinction. Second, the 'Abstract' part clearly indicates that this is a class that is not designed to be used directly, but rather as the basis for specific scheduler subclasses
* cosmetic change in test\_extensions. Avoids constant merge conflicts between proposals with new extensions
* Validate the size of VHD files in OVF containers
* Include vif UUID in the network info dictionary
* Added uuid to allocate\_mac\_address
* Fixed the naming of the extension
* redux of floating ip api
* Merged trunk
* Merged trunk
* log the full exception so we don't lose traceback through eventlet
* fix error logging in s3.py
* pep8 cleanup
* Merged trunk
* Removed newly added userdatarequesthandler for OS API, there is no need to add this handler since the existing Ec2 API metadatarequesthandler does the same job
* got tests passing with logic changes
* pep8
* pep8
* add note
* have the tests call create\_networks directly
* allow for finding a network that fits the size, also format string correctly
* adding sqlalchemi api tests for test\_instance\_get\_all\_by\_filter to ensure doesn't return deleted instances
* added cloud unit test for describe\_instances to ensure doesn't return deleted instances
* return the created networks
* pep8 fix
* merge trunk
* Adding kvm-block-migration feature
* i hate these exceptions where it should just return an empty list
* fix typo where I forgot a comma
* merge trunk, remove \_validate\_cidrs and replace functionality with a double for loop
* fix bug which DescribeInstances in EC2 api was returning deleted instances
* We don't have source for open-wrt in the source tree, so we shouldn't use the images.  Since the images are only there for uploading smoketests, They are now replaced with random images
* Make response structure for list floating ips conform with rest of openstack api
* put tenant\_id back in places where it was
* This branch allows the standard inclusion of a body param which most http clients will send along with a POST request
* Libvirt has some autogenerated network info that is breaking ha network
* making body default to none
* pep8 fix
* Adding standard inclusion of a body param which most http clients will send along with a POST request
* Fixed merging issue
* Merged with trunk
* Updated rate limiting tests to use tenants
* Corrected names in TODO/FIXME
* remove openwrt image
* Fix the tests when libvirt actually exists
* Merged trunk
* Add durable flag for rabbit queues
* Fixed merge conflict
* merged trunk
* Merged trunk
* Dryed up contructors
* make list response for floating ip match other apis
* fix missing 'run\_as\_root' from bad merge
* Added ability too boot VM from install ISO.  System detects an image of type iso.  Images is streamed to a VDI and mounted to the VM.  Blank disk allocated to VM based on instance type
* Add source-group filtering
* added logic to make the creation of networks (IPv4 only) validation a bit smarter:   - detects if the cidr is already in use   - detects if any existing smaller networks are within the range of requested cidr(s)   - detects if splitting a supernet into # of num\_networks && network\_size will fit   - detects if requested cidr(s) are within range of already existing supernet (larger cidr)
*   fix InvalidPortRange exception shows up in euca2ools  instead of UnknownError when euca-authorize is specified w/ invalid port #
* Changes requests with an invalid server action to return an HTTP 400 instead of a 501
* Currently OS API doesn't accept availability zone parameter so there is no way to instruct scheduler (SimpleScheduler) to launch VM instance on specific host of specified zone
* typo fix
* Fix v1.1 /servers/<id> PUT request to match API documentation by returning 200 code and the server data in the body
* Allow different schedulers for compute and volume
* have NetworkManager generate MAC address and pass it to the driver for plugging.  Sets the stage for being able to do duplicate checks on those MACs as well
* make sure security groups come back on restart of nova-compute
* fix all of the tests
* rename project\_net to same\_net
* use dhcp server instead of gateway for filter exception
* get rid of network\_info hack and pass it everywhere
* fix issue introduced in merge
* merge trunk, fix conflict frim dprince's branch to remove hostname from bin/nova-dhcpbridge
* merge in trunk, resolving conflicts with ttx's branch to switch from using sudo to run\_as\_root=True
* remerge trunk
* Added durable option for nova rabbit queues added queueu delete script for admin/debug purposes
* Added add securitygroup to instance and remove securitygroup from instance functionality
* Fix ugly little violations before someone says anything
* Merged trunk
* Updated logging
* end of day
* Check uncompressed VHD size
* reworked test\_extensions code to avoid constant merge conflicts with newly added ext
* nova-manage: fixed instance type in vsa creation
* Stub out instance\_get as well so we can show the results of the name change
* removed VSA/drive\_type code from EC2 cloud. changed nova-manage not to use cloud APIs
* Merged with trunk and fixed broken unit testcases
* merged rev1418 and fixed code so that less than 1G image can be migrated
* Created the filters directory in nova/scheduler
* removed admincontext middleware
* updates from review
* merge from trunk
* fix merges from trunk
* Nuke hostname from nova-dhcpbridge. We don't use it
* merge the trunk
* need to actually assign the v4 network
* Fixes to the OSAPI floating API extension DELETE. Updated to use correct args for self.disassociate (don't sweep exceptions which should cause test cases to fail under the rug). Additionally updated to pass network\_api.release\_floating\_ip the address instead of a dict
* Merged trunk
* Fixed unit tests
* only run if the subnet and cidr exist
* only run if the subnet and cidr exist
* merge from trunk
* make sure network\_size gets set
* merge from trunk
* don't require ipv4
* forgot the closing paren
* use subnet iteration from netaddr for subnet calculation
* Fix a typo that causes ami images to launch with a kernel as ramdisk when using xen
* Fixing a 500 error when -1 is supplied for flavorRef on server create
* rewriting parsing
* fix typo that causes ami instances to launch with a kernal as ramdisk
* Merged trunk
* Allows for a tunable number of SQL connections to be maintained between services and the SQL server using new configuration flags. Only applies when using the MySQLdb dialect in SQLAlchemy
* Merged trunk
* Fixes pep8 issues in test\_keypairs.py
* Merged trunk
* start of day
* Fixes to the OSAPI floating API extension DELETE. Updated to use correct args for self.disassociate (don't sweep exceptions which should cause test cases to fail under the rug). Additionally updated to pass network\_api.release\_floating\_ip the address instead of a dict
* API needs virtual\_interfaces.instance joined when pulling instances from the DB.  Updated instance\_get\_all() to match instance\_get\_all\_by\_filters() even though the former is only used by nova-manage now.  (The latter is used by the API)
* remove extra log statements
* join virtual\_interfaces.instance for DB queries for instances.  updates instance\_get\_all to match instance\_get\_all\_by\_filters
* remove accidentally duplicated flag
* merged trunk
* add keystone middlewares for ec2 api
* Merged with trunk
* added userdata entry in the api paste ini
* Initial version
* Accidentally added inject\_files to merge
* Support for management of security groups in OS API as a new extension
* Updates to libvirt, write metadata, net, and key to the config drive
* prefixed with os- for the newly added extensions
* Merged with trunk
* Author added
* allow scheduling topics to multiple drivers
* Check compressed image size and PEP8 cleanup
* v1.1 API also requires the server be returned in the body
* capabilities fix, run\_as\_root fix
* lp824780: fixed typo in update\_service\_capabilities
* fix pep8
* spacing fixes
* fixed pep8 issue
* merge from trunk
* fixed v1.0 stuff with X-Auth-Project-Id header, and fixed broken integrated tests
* merged with 1416
* fixing id parsing
* moved vsa\_id to metadata. Added search my meta
* Refactored the scheduler classes without changing functionality. Removed all 'zone-aware' naming references, as these were only useful during the zone development process. Also fixed some PEP8 problems in trunk code
* Added search instance by metadata. get\_all\_by\_filters should filter deleted
* got rid of tenant\_id everywhere, got rid of X-Auth-Project-Id header support (not in the spec), and updated tests
* Silly fixes
* v1.0 and v1.1 API differs for PUT, so split them out Update tests to match API
* Removed postgres, bug in current ubuntu package which won't allow it to work easily. Will add a bug in LP
* minor cleanup
* Added availability zone support to the Create Server API
* Make PUT /servers/<id> follow the API specs and return a 200 status
* More logging
* removed extra paren
* Logging for SQLAlchemy type
* merged trunk
* Fixed per HACKING
* \* Removes rogue direct usage of subprocess module by proper utils.execute calls \* Adds a run\_as\_root parameter to utils.execute, that prefixes your command with FLAG.root\_helper (which defaults to 'sudo') \* Turns all sudo calls into run\_as\_root=True calls \* Update fakes accordingly \* Replaces usage of "sudo -E" and "addl\_env" parameter into passing environment in the command (allows it to be compatible with alternative sudo\_helpers) \* Additionally, forces close\_fds=True on all utils.execute calls, since it's a more secure default
* Remove doublequotes from env variable setting since they are literally passed
* Changed bad server actions requests to raise an HTTP 400
* removed typos, end of line chars
* Fixed broken unit testcases
* Support for postgresql
* merge from trunk
* tenant\_id -> project\_id
* Adding keypair support to the openstack contribute api
* elif and FLAG feedback
* Removed un-needed log line
* Make sure to not use MySQLdb if you don't have it
* get last extension-based tests to pass
* Allows multiple MySQL connections to be maintained using eventlet's db\_pool
* Removed verbose debugging output when capabilities are reported. This was clogging up the logs with kbytes of useless data, preventing actual helpful information from being retrieved easily
* Removed verbose debugging output when capabilities are reported
* Updated extensions to use the TenantMapper
* fix pep8 issues
* Fixed metadata PUT routing
* These fixes are the result of trolling the pylint violations here
* Pass py\_modules=[] to setup to avoid installing run\_tests.py as a top-level module
* Add bug reference
* Pass py\_modules=[] to setup to avoid installing run\_tests.py as a top-level module
* fix servers test issues and add a test
* added project\_id for flavors requests links
* added project\_id for images requests
* merge trunk
* fix so that the exception shows up in euca2ools  instead of UnknownError
* Dropped vsa\_id from instances
* import formatting - thx
* List security groups project wise for admin users same as other users
* Merged with trunk
* merge with nova-1411. fixed
* pep8 fix
* use correct variable name
* adding project\_id to flavor, server, and image links for /servers requests
* Merged with trunk
* tests pass
* merge from trunk
* merged with nova-1411
* This branch makes sure to detach fixed ips when their associated floating ip is deallocated from a project/tenant
* adding other emails to mailmap
* add Keypairs to test\_extensions
* adding myself to authors
* This adds the servers search capabilities defined in the OS API v1.1 spec.. and more for admins
* Be more tolerant of agent failures. It is often the case there is only a problem with the agent, not with the instance, so don't claim it failed to boot so quickly
* Updated the EC2 metadata controller so that it returns the correct value for instance-type metadata
* added tests - list doesn't pass due to unicode issues
* initial port
* merged trunk
* Be more tolerant of agent failures. The instance still booted (most likely) so don't treat it like it didn't
* Updated extensions to expect tenant ids Updated extensions tests to use tenant ids
* Update the OSAPI v1.1 server 'createImage' and 'createBackup' actions to limit the number of image metadata items based on the configured quota.allowed\_metadata\_items that is set
* Fix pep8 error
* fixing one pep8 failure
* I think this restores the functionality ..
* Adds missing nova/api/openstack/schemas to tarball
* Instance metadata now functionally works (completely to spec) through OSAPI
* updated v1.1 flavors tests to use tenant id
* making usage of 'delete' argument more clear
* Fix the two pep8 issues that sneaked in while the test was disabled
* Fix remaining two pep8 violations
* Updated TenantMapper to handle resources with parent resources
* updating tests; fixing create output; review fixes
* OSAPI v1.1 POST /servers now returns a 202 rather than a 200
* Include missing nova/api/openstack/schemas
* Rename sudo\_helper FLAG into root\_helper
* Minor fix to reduce diff
* Initial validation for ec2 security groups name
* Remove old commented line
* Command args can be a tuple, convert them to list
* Fix usage of sudo -E and addl\_env in dnsmasq/radvd calls, remove addl\_env support, fix fake\_execute allowed kwargs
* Use close\_fds by default since it's good for you
* Fix ajaxterm's use of shell=True, prevent vmops.py from running its own version of utils.execute
* With this branch, boot-from-volume can be marked as completed in some sense. The remaining is minor if any and will be addressed as bug fixes
* Update the curl command in the \_\_public\_instance\_is\_accessible function of test\_netadmin to return an error code which we can then check for and handle properly. This should allow calling functions to properly retry and timeout if an actual test failure happens
* updating more test cases
* changing server create response to 202
* Added xml schema validation for extensions resources. Added corresponding xml schemas. Added lxml dep, which is needed for doing xml schema validation
* Fixing a bug in nova.utils.novadir()
* Adds the ability to read/write to a local xenhost config. No changes to the nova codebase; this will be used only by admin tools that have yet to be created
* fixed conditional because jk0 is very picky :)
* Fixed typo found in review
* removing log lines
* added --purge optparse for flavor delete
* making server metadata work functionally
* cleaning up instance metadata api code
* Updated servers tests to use tenant id
* Set image progress to 100 if the image is active
* Cleaned up merge messes
* Merged trunk
* cleaned up unneeded line
* nova.exception.wrap\_exception will re-raise some exceptions, but in the process of possibly notifying that an exception has occurred, it may clobber the current exception information. nova.utils.to\_primitive in particular (used by the notifier code) will catch and handle an exception clobbering the current exception being handled in wrap\_exception. Eventually when using the bare 'raise', it will attempt to raise None resulting a completely different and unhelpful exception
* remove obsolete script from setup.py
* assert that vmops.revert\_migration is called
* Import sys as well
* Resolve conflicts and fixed broken unit testcases
* This branch adds additional capability to the hosts API extension. The new options allow an admin to reboot or shutdown a host. I also added code to hide this extension if the --allow-admin-api is False, as regular users should have no access to host API calls
* adding forgotten import for logging
* Adds OS API 1.1 support
* Updated test\_images to use tenant ids
* Don't do anything with tenant\_id for now
* Review fixes
* fixed wrong syntax
* Assign tenant id in nova.context
* another trunk merge
* Merged trunk
* Merged trunk
* Cleaned up some old code added by the last merge
* Fixed some typos from the last refactoring
* Moved the restriction on host startup to the xenapi layer.:
* Remove nova/tests/network, which was accidentally included in commit
* upper() is even better
* merged with 1383
* Updated with code changes on LP
* Merged trunk
* Save exception and re-raise that instead of depending on thread local exception that may have been clobbered by intermediate processing
* Adding \_\_init\_\_.py files
* Adds ability to disable snapshots in the Openstack API
* Sync trunk
* Set image progress to 100 if the image is active
* Sync trunk
* Update the curl command in the \_\_public\_instance\_is\_accessible function of test\_netadmin to return an error code which we can then check for and handle properly. This should allow calling functions to properly retry and timout if an actual test failure happens
* ZoneAwareScheduler classes couldn't build local instances due to an additional argument ('image') being added to compute\_api.create\_db\_entry\_for\_new\_instance() at some point
* simplified test cases further, thanks to trunk changes
* Added possibility to mark fixed ip like reserved and unreserved
* Update the OSAPI v1.1 server 'createImage' and 'createBackup' actions to limit the number of image metadata items based on the configured quota.allowed\_metadata\_items that is set
* Pep8 fix
* zone\_aware\_scheduler classes couldn't build instances due to a change to compute api's create\_db\_entry\_for\_new\_instance call.  now passing image argument down to the scheduler and through to the call.  updated a existing test to cover this
* Adding check to stub method
* moving try/except block, and changing syntax of except statement
* Fixes broken image\_convert.  The context being passed to glance image service was not a real context
* Using decorator for snapshots enabled check
* Disable flag for V1 Openstack API
* adding logging to exception in delete method
* Pass a real context object into image service calls
* Adding flag around image-create for v1.0
* Refactored code to reduce lines of code and changed method signature
* If ip is deallocated from project, but attached to a fixed ip, it is now detached
* Glance Image Service now understands how to use glance client to paginate through images
* Allow actions queries by UUID and PEP8 fixes
* Fixed localization review comment
* Allow actions queries by UUID and PEP8 fixes
* Fixed review comments
* fixing filters get
* fixed per peer review
* fixed per peer review
* re-enabling sort\_key/sort\_dir and fixing filters line
* Make sure mapping['dns'] is formatted correctly before injecting via template into images. mapping['dns'] is retrieved from the network manager via info['dns'], which is a list constructed of multiple DNS servers
* Add a generic image service test and run it against the fake image service
* Implemented @test.skip\_unless and @test.skip\_if functionality in nova/test.py
* merged with 1382
* Updates v1.1 servers/id/action requests to comply with the 1.1 spec
* fix typo
* Moving from assertDictEqual to assertDictMatch
* merging trunk
* merging trunk
* Add exception logging for instance IDs in the \_\_public\_instance\_is\_accessible smoke test function. This should help troubleshoot an intermittent failure
* adding --fixes
* glance image service pagination
* Pass tenant ids through on on requests
* methods renamed
* Add exception logging for instance IDs in the \_\_public\_instance\_is\_accessible smoke test function. This should help troubleshoot an intermittent failure
* Removed most direct sudo calls, make them use run\_as\_root=True instead
* pep8 violations sneaking into trunk?
* pep8 violations sneaking into trunk?
* trunk merge
* Fixes lp821144
* Make disk\_format and container\_format optional for libvirt's snapshot implementation
* pep8
* fixed up zones controller to properly work with 1.1
* Add generic image service tests
* Add run\_as\_root parameter to utils.execute, uses new sudo\_helper FLAG to prefix command
* Remove spurious direct use of subprocess
* Added virtual interfaces REST API extension controller
* Trunk contained PEP8 errors.  Fixed
* Trunk merge
* fix mismerge
* Added migration to add uuid to virtual interfaces.  Added uuid column to models
* merged trunk
* merged with nova trunk
* Launchpad automatic translations update
* fixed pep8 issue
* utilized functools.wraps
* added missing tests
* tests and merge with trunk
* removed redundant logic
* merged trunk
* For nova-manage network create cmd, added warning when size of subnet(s) being created are larger than FLAG.network\_size,  in attempt to alleviate confusion.  For example, currently when 'nova-manage network create foo 192.168.0.0/16', the result is that it creates a 192.168.0.0/24 instead without any indication to why
* Remove instances of the "diaper pattern"
* Read response to reset the connection state-machine for the next request/response cycle
* Added explanations to exceptions and cleaned up reboot types
* fix pep8 issues
* fixed bug , when logic searched for next avail cidr it would return cidrs that were out of range of original requested cidr block.  added test for it
* Adding missing module xmlutil
* fixed bug, wasn't detecting smaller subnet conflict properly added test for it
* Properly format mapping['dns'] before handing off to template for injection (Fixes LP Bug #821203)
* Read response to reset HTTPConnection state machine
* removed unnecessary context from test I had left there from prior
* move ensure\_vlan\_bridge,ensure\_bridge,ensure\_vlan to the bridge/vlan specific vif-plugging driver
* re-integrated my changes after merging trunk.  fixed some pep8 issues.  sorting the list of cidrs to create, so that it will create x.x.0.0 with a lower 'id' than x.x.1.0 (as an example).  <- was causing libvirtd test to fail
* Revert migration now finishes
* The OSAPI v1.0 image create POST request should store the instance\_id as a Glance property
* There was a recent change to how we should flip FLAGS in tests, but not all tests were fixed.  This covers the rest of them.  I also added a method to test.UnitTest so that FLAGS.verbose can be set.  This removes the need for flags to be imported from a lot of tests
* Bad method call
* Forgot the instance\_id parameter in the finish call
* Merged in the power action changes
* Removed test show() method
* Fixed rescue/unrescue since the swap changes landed in trunk. Minor refactoring (renaming callback to \_callback since it's not used here)
* Updates to the XenServer glance plugin so that it obtains the set of existing headers and sends them along with the request to PUT a snapshotted image into glance
* Added admin-only decorator
* This updates nova-ajax-console-proxy to correctly use the new syntax introduced last week by Zed Shaw <zedshaw@zedshaw.com>
* Merged trunk
* Changed all references to 'power state' to 'power action' as requested by review
* Added missing tests for server actions Updated reboot to verify the reboot type is HARD or SOFT Fixed case of having an empty flavorref on resize
* Added more informative docstring
* Added XML serialization for server actions
* Removed debugging code
* Updated create image server action to respect 1.1
* Fixes lp819397
* Fixed rescue unit tests
* Nuke hostname. We don't use it
* Split serverXMLDeserializers into v1.0 and v1.1
* another merge
* Removed temporary debugging raise
* Merged trunk
* modify \_setup\_network for flatDHCP as well
* Merged trunk
* Added xenhost config get/setting
* fix syntax error
* Fixed rescue and unrescue
* remove storing original flags verbosity
* remove set\_flags\_verbosity.. it's not needed
* Merged trunk
* OS v1.1 is now the default into novarc
* added NOVA\_VERSION to novarc
* remove unused reference to exception object
* Add a test for empty dns list in network\_info
* Fix comments
* uses 2.6.0 novaclient (OS API 1.1 support)
* Fix to nova-ajax-console-proxy to use the new syntax
* Update the OS API servers metadata resource to match the current v1.1 specification - move /servers/<id>/meta to /servers/<id>/metadata - add PUT /servers/<id>/metadata
* fix pep8 issues that are in trunk
* test\_host\_filter setUp needs to call its super
* fix up new test\_server\_actions.py file for flags verbosity change
* merged trunk
* fixing typo
* Sync with latest tests
* The logic for confirming and reverting resizes was flipped. As a result, reverting a resize would end up deleting the source (instead of the destination) instance, and confirming would end up deleting the destination (instead of the source) instance
* Found a case where an UnboundLocalError would be raised in xenapi\_conn.py's wait\_for\_task() method. This fixes the problem by moving the definition of the unbound name outside of the conditional
* Moves code restarting instances after compute node reboot from libvirt driver to compute manager; makes start\_guests\_on\_host\_boot flag global
* Moved server actions tests to their own test file. Updated stubbing and how flags are set to be in line with how they're supposed to be set in tests
* merging trunk
* add test for spawning a xenapi instance with an empty dns list
* Nova uses instance\_type\_id and flavor\_id interchangeably when they almost always different values. This can often lead to an instance changing instance\_type during migration because the values passed around internally are wrong. This branch changes nova to use instance\_type\_id internally and flavor\_id in the API. This will hopefully avoid confusion in the future
* The OSAPI v1.0 image create POST request should store the instance\_id as a Glance property
* Linked to bug
* Changed the definition of the 'action' dict to always occur
* Updates to the XenServer glance plugin so that it obtains the set of existing headers and sends them along with the request to PUT a snapshotted image into glance
* Fixed rescue and unrescue
* Added in tests that verify tests are skipped appropriately
* Merged trunk
* Merged dietz' branch
* Update HACKING: - Make imports more explicit - Add some dict/list formatting guidelines - Add some long method signature/call guidelines - Add explanation of i18n
* Pep8 cleanup
* Defaults \`dns\` to '' if not present, just as we do with the other network info data
* Removes extraneous bodies from certain actions in the OSAPI servers controller
* Revert should be sent to destination node and confirm should be sent to source node
* Conditionals were not actually runing the tests when they were supposed to. Renamed example testcases
* fix pylint W0102 errors
* Remove whitespaces from name and description before creating security group
* Remove instances of the "diaper pattern"
* Fixes lp819397
* Initial version
* Load instance\_types in downgrade method too
* Fix trailing whitespace (PEP8)
* fix test\_cloud FLAGS setting
* dist scheduler flag setting fixes
* fix scheduler tests that set FLAGS
* fix more tests that use FLAGS setting
* all subclasses of ComputeDriver should fully implement the interface of the destroy method
* align multi-line string
* fix test\_s3 FLAGS uses
* switch FLAGS.\* = in tests to self.flags(...) remove unused cases of FLAGS from tests modified test.TestCase's flags() to allow multiple overrides added missing license to test\_rpc\_amqp.py
* follow convention when raising exceptions
* pep8 fixes
* use an existing exception
* use correct exception name
* fix duplicate function name
* fix undefined variable error
* fix potential runtime exception
* remove unused imports
* remove bit-rotted code
* more cleanup of API tests regarding FLAGS
* fix use of FLAGS in openstack API servers tests to use the new way
* Removes extraneous body argument from server controller methods
* Merged trunk
* Merged trunk
* Default dns to '' if not present
* replaced raise Exception with self.fail()
* Removed dependancy on os.getenv. Test cases now raise Exception if they are not properly skipped
* PEP8 issue
* whoops, got a little comma crazy
* Merged trunk and fixed conflicts to make tests pass
* fumigate non-pep8 code
* Use flavorid only at the API level and use instance\_type\_id internally
* Yet another conflict resolved
* forgot to remove comment
* updated to work w/ changes after merged trunk fixing var renaming.  the logic which forces default to FLAGS.network\_size if requested cidr was larger, was also applying to requested cidrs smaller than FLAGS.network\_size.   Requested cidrs smaller than FLAGS.network\_size should be ignored and not overriden
* merged from trunk
* merged from trunk
* merge trunk
* Launchpad automatic translations update
* Resolved pep8 errors
* renaming test\_skip\_unless\_env\_foo\_exists()
* merging trunk
* Removed trailing whitespace that somehow made it into trunk
* Merged trunk
* Removed duplicate methods created by previous merge
* Fixes lp819523
* Fix for bug #798298
* fix for lp816713: In instance creation, when nova-api is passed imageRefs generated by itself, strip the url down to an id so that default glance connection params are used
* Added check for --allow-admin-api to the host API extension code
* Another unittest
* Merged trunk
* Add support for 300 Multiple Choice responses when no version identifier is used in the URI (or no version header is present)
* Merged trunk
* Glance has been updated for integration with keystone.  That means that nova needs to forward the user's credentials (the auth token) when it uses the glance API.  This patch, combined with a forth-coming patch for nova\_auth\_token.py in keystone, establishes that for nova itself and for xenapi; other hypervisors will need to set up the appropriate hooks for their use of glance
* Added changes from mini server
* raise correct error
* Minor test fixes
* fix failing tests
* fix pep8 complaints
* merge from trunk
* Fixed a missing space
* Bad merge res
* merge the trunk
* fix missing method call and add failing test
* Removed duplicate xattr from pip-requires
* Fixed merge issues
* Merged trunk
* merged trunk
* remove unused parameter
* Merged trunk
* Merged from lab
* fix pylint errors
* fix pylint errors
* merge from trunk
* Moves image creation from POST /images to POST /servers/<id>/action
* Fixed several typos
* Changed migration to be an admin only method and updated the tests
* - Remove Twisted dependency from pip-requires - Remove Twisted patch from tools/install\_venv.py - Remove eventlet patch from tools/install\_venv.py - Remove tools/eventlet-patch - Remove nova/twistd.py - Remove nova/tests/test\_twistd.py - Remove bin/nova-instancemonitor - Remove nova/compute/monitor.py - Add xattr to pip-requires until glance setup.py installs it correctly - Remove references to removed files from docs/translations/code
* Fix an error in fetch\_image()
* Get instance by UUID instead of id
* Merged trunk
* Added the powerstate changes to the plugin
* pull-up from trunk/fix merge conflict
* fixing typo
* refactored tests
* pull-up from trunk
* Removing the xenapi\_image\_service flag in favor of image\_service
* cleanup
* Merged trunk
* abstraction of xml deserialization
* fixing method naming problem
* removing compute monitor
* merge from trunk
* code was checking for key in sqlalchemy instance and will ignore if value is None, but wasn't working if floating\_ip was a non-sqlalchemy dict obj.  Therefore, updated the error checking to work in both caes
* While we currently trap JSON encoding exceptions and bail out, for error notification it's more important that \*some\* form of the message gets out. So, we take complex notification payloads and convert them to something we know can be expressed in JSON
* Better error handling for resizing
* Adds the auth token to nova's RequestContext.  This will allow for delegation, i.e., use of a nova user's credentials when accessing other services such as glance, or perhaps for zones
* merged trunk rev1348
* Launchpad automatic translations update
* added some tests for network create & moved the ipv6 logic back into the function
* merged with nova trunk
* Added host shutdown/reboot conditioning
* avoid explicit type checking, per brian waldon's comment
* Added @test.skip\_unless and @test.skip\_if functionality. Also created nova/tests/test\_skip\_examples.py to show the skip cases usage
* fix LinuxBridgeInterfaceDriver
* merge trunk, resolve conflict in net/manater.py in favor of vif-plug
* initial commit of vif-plugging for network-service interfaces
* Merged trunk
* pep8 fixes
* Controller -> self
* Added option for rebooting or shutting down a host
* removed redundant logic
* merged from trunk
* adding a function with logic to make the creation of networks validation a bit smarter: - detects if the cidr is already in use - when specifying a supernet to be split into smaller subnets via num\_networks && network\_size, ensures none of the returned subnets are in use by either a subnet of the same size and range, nor a SMALLER size within the same range. - detects if splitting a supernet into # of num\_networks && network\_size will fit - detects if the supernet/cidr specified is conflicting with a network cidr that currently exists that may be a larger supernet already encompassing the specified cidr. "
* Carry auth\_token in nova's RequestContext
* merge with trunk, resolve conflicts
* Revert hasattr() check on 'set\_auth\_token' for clients
* it makes the pep8, or else it gets the vim again
* merge from trunk
* Fixes this issue that I may have introduced
* Update compute tests to use new exceptions
* Resync to trunk
* Remove copy/paste error
* Launchpad automatic translations update
* Launchpad automatic translations update
* Fixed review comments: Put parsing logic of network information in create\_instance\_helper module and refactored unit testcases as per the changed code
* pep8
* wow, someone whent all crazy with exceptions, why not just return an empty list?
* Only call set\_auth\_token() on the glance client if there's one available
* Make unit tests pass
* merging
* only attempt to get a fixed\_up from a v4 subnet if there is a v4 subnet
* FlavorNotFound already existed, no need to create another exception
* Created exceptions for accepting in OSAPI, and handled them appropriately
* only create fixed\_ips if we have an ipv4 range
* Revert to using context; to avoid conflict, we import context module as nova\_context; add context to rescue
* You see what happens Danny when you forget to close the parenthesis
* Merged with trunk
* Merged trunk
* allow the manager to try to do the right thing
* allow getting by the cidr\_v6
* the netmask is implied by the cidr, so use that to display the v6 subnet
* either v4 or v6 is required
* merging trunk
* pull-up from trunk and conflict resolution
* merge trunk
* stwart the switch to just fixed\_range
* typo
* Round 1 of changes for keystone integration.  \* Modified request context to allow it to hold all of the relevant data from the auth component.  \* Pulled out access to AuthManager from as many places as possible  \* Massive cleanup of unit tests  \* Made the openstack api fakes use fake Authentication by default
* require either v4 or v6
* pull-up from trunk
* Fix various errors discovered by pylint and pyflakes
* fixing underline
* removing extra verbage
* merged trunk
* This change creates a minimalist API abstraction for the nova/rpc.py code so that it's possible to use other queue mechanisms besides Rabbit and/or AMQP, and even use other drivers for AMQP rather than Rabbit.  The change is intended to give the least amount of interference with the rest of the code, fixes several bugs in the tests, and works with the current branch.  I also have a small demo driver+server for using 0MQ which I'll submit after this patch is merged
* removing dict() comment
* adding more on return\_type in docstrings
* Fixes issue with OSAPI passing compute API a flavorid instead of an instance identifier. Added tests
* made the whole instance handling thing optional
* Reorganize the code to satisfy review comments
* pull-up from trunk; fix problem obscuring context module with context param; fix conflicts and no-longer-skipped tests
* remove unused import
* --Stolen from https://code.launchpad.net/~cerberus/nova/lp809909/+merge/68602
* removing 'Defining Methods' paragraph
* rewording
* Use the util.import\_object to import a module
* rewording
* one last change
* upgrades
* expanding
* merged trunk and fix time call
* updating HACKING
* Fixing lxml version requirement
* Oops, I wasn't actually being compatible with the spec here
* bumping novaclient version
* Fixes lp:818050
* Updated resize to call compute API with instance\_type identifiers instead of flavor identifiers. Updated tests
* fix run\_tests.sh
* merge trunk
* Fixed changes missed in merge
* fix more spacing issues, and removed self link from versions template data
* merged trunk
* added instance support to to\_primitive and tests
* merged trunk and fixed post\_live\_migratioin\_at\_destination to get nw\_info
* Removing unnecessary imports
* Added xml schema validation for extensions resources. Added corresponding xml schemas. Added lxml dep, which is needed for doing xml schema validation
* remove extra log statement
* api/ec2: rename CloudController.\_get\_instance\_mapping into \_format\_instance\_mapping
* fixed typo
* merge with trunk
* fixed pep8 issues and removed unnecessary factory function
* returned vsa\_manager, nova-manage arg and print changes
* Added the config values to the return of the host\_data method
* Adds XML serialization for servers responses that match the current v1.1 spec
* Added methods to read/write values to a config file on the XenServer host
* fix pep8 errors
* minor cleanup
* Removed unused Duplicate catch
* Fix to\_dict() and elevated() to preserve auth\_token; revert an accidental change from context.get\_admin\_context() to simply context
* Fixes bug 816604, which is the problem that timeformat in server responses for updated and created are incorrect. This fix just converts the datetime into the correct format
* merging trunk
* pep8
* moving server backup to /servers/<id>/action instead of POST /images
* Simplified test cases
* Rewrite ImageType enumeration to be more pythonic
* refactoring and make self links correct (not hard coded)
* Fix tests for checking pylint errors
* Use utils.utcnow. Use True instead of literal 1
* Some tests for resolved pylint errors
* simplify if statement
* merge trunk
* use wsgi XMLNS/ATOM vars
* Updated deserialization of POST /servers in the OSAPI to match the latest v1.1 spec
* Removed unused Duplicate catch
* pull-up from trunk
* Catch DBError for duplicate projects
* Catch DBError for duplicate projects
* Make network\_info truly optional
* trunk infected with non-pep8 code
* unicode instead of str()
* Add a flag to set the default file mode of logs
* merge trunk
* make payload json serializable
* moved test
* Removed v1\_1 from individual tests
* merge from trunk
* merge to trunk
* more commented code removed
* some minor cosmetic work. addressed some dead code section
* merged with nova-1336
* prior to nova-1336 merge
* remove authman from images/s3.py and replace with flags
* fix tests broken in the merge
* merged trunk
* fix undeclared name error
* fix undeclared name error
* fix undeclared name error
* fix undeclared name errors
* remove unused assignment which causes undeclared name error
* fix undefined variable errors
* fix call to nonexistant method to\_global\_ipv6. Add myself to authors file
* Make network\_info truly optional
* updates handling of arguments in nova-manage network create. updates a few of the arguments to nova-manage and related help. updates nova-manage to raise proper exceptions
* forgot a line
* fixed create\_networks ipv6 management
* Fail silently
* typo
* --bridge defaults to br100 but with a deprecation warning and to be removed in d4
* Reverting to original code
* use ATOM\_XMLNS everywhere
* merge trunk
* added unit testcase to increase code coverage
* stub out VERSIONS for the tests
* put run\_tests.sh back to how it was
* Fixed conflict
* Fail silently
* Merged with trunk and fixed broken unit test cases
* Fix the skipped tests in vmwareapi and misc spots. The vmware networking stuff is stubbed out, so the tests can be improved there by fixing the fakes
* pep8 issue
* refactoring MetadataXMLDeserializer in wsgi/common
* move viewbuilder and serializer tests into their own test cases
* Fix all of the skipped libvirt tests
* fix typo
* merged trunk
* Fixes typo in attach volume
* utilize \_create\_link\_nodes base class function
* default the paramater to None, not sure why it was required to begin with
* pass None in for nw\_info
* added test for accept header of atom+xml on 300 responses to make sure it defaults back to json, and reworked some of the logic to make how this happens clearer
* Drop FK before dropping instance\_id column
* moved rest of build logic into builder
* Drop FK before dropping instance\_id column
* Removed FK import
* Delete FK before dropping instance\_id column
* oops! moved ipv6 block back into the for loop in network manager create\_networks
* update everything to use global VERSIONS
* merged trunk
* change local variable name
* updated handling of v6 in network manager create\_networks to it can receive None for v6 args
* added ipv6 requirements to nova-manage network create. changed --network to --fixed\_range\_v4
* remove unexpected parameter
* fixed xmlns issue
* updated the bridge arg requirements based on manager
* this change will require that local urls be input with a properly constructed local url:  http://localhost/v1.1/images/[id].  Such urls are translated to ids at the api layer.  Previously, any url ending with and int was ok
* make atom+xml accept header be ignored on 300 responses in the VersionsRequestDeserializer
* Removed superfluous parameter
* Use auth\_token to set x-auth-token header in glance requests
* Fixed the virt driver base
* Some work on testing.  Two cases related to lp816713 have some coverage already: using an id as an imageRef (test\_create\_instance\_v1\_1\_local\_href), and using a nova href as a url (test\_create\_instance\_v1\_1)
* Remove xenapi\_inject\_image flag
* Add a flag to set the default file mode of logs
* fixed issue with factory for Versions Resource
* Fix context argument in a test; add TODOs
* improved the code per peer review
* Add context argument a lot more places and make unit tests work
* fix hidden breakage in test
* Remove xenapi\_inject\_image flag
* removed unused import
* pep8
* pep8
* updated nova-manage create network. better help, handling of required args, and exceptions. Also updated FLAG flat\_network\_bridge to default to None
* Re-enables and fixes test\_cloud tests that broke from multi\_nic
* Fix for boto2
* Re-enables and fixes test\_cloud tests that broke from multi\_nic
* add invalid device test and make sure NovaExceptions don't get wrapped
* merge from trunk
* pep8
* pep8
* updating common metadata xml serializer tests
* Cleaned up test\_servers
* Moved server/actions tests to test\_server\_actions.py
* updating servers metadata resource
* pull-up from trunk
* Address merge review concerns
* Makes security group rules with the newer version of the ec2 api and correctly supports boto 2.0
* merging parent branch servers-xml-serialization
* updating tests
* updated serializer tests for multi choice
* pep8 cleanup
* multi choice XML responses with tests
* merged recent trunk
* merge with trunk
* Cherry-pick of tr3buchet's fix for add\_fixed\_ip\_to\_instance
* Resolved conflicts with trunk
* fix typo in attach\_volume
* fix the last of them
* fake plug for vif driver
* couple more fixes
* cleanup network create
* code was checking for key in sqlalchemy instance but if floating\_ip is a non-sqlalchemy dict instance instead, value=None will cause NoneType exception
* fix more tests
* fix the first round of missing data
* fix the skipped tests in vmwareapi xenapi and quota
* Add myself to authors
* Implements a simplified messaging abstraction with the least amount of impact to the code base
* fix for lp816713: In instance creation, when nova-api is passed imageRefs generated by itself, strip the url down to an id so that default glance connection params are used
* cloud tests all passing again
* added multi\_choice test just to hit another resource
* pep8 fixes
* initial working 300 multiple choice stuff
* cherry-pick tr3buchet's fix for milestone branch
* cleanup
* pep8
* pep8
* First pass at converting this stuff--pass context down into vmops.  Still need to fix unit tests and actually use auth\_token from the context..
* pep8 and simplify rule refresh logic
* pep8
* merging parent branch lp:~rackspace-titan/nova/osapi-create-server
* adding xml deserialization for createImage action
* remove some logging, remove extra if
* compute now appends self.host to the call to add an additional fixed ip to an instance
* Update security gropu rules to properly support new format and boto 2.0
* Updated test stubs to contain the correct data Updated created and updated in responses to use correct time format
* pep8 compliance
* VSA volume creation/deletion changes
* moved v1.1 image creation from /images to /servers/<id>/action
* fixed per peer review
* passing host from the compute manager for add\_fixed\_ip\_to\_instance()
* adding assert to check for progress attribute
* removing extra function
* Remove debugging code
* cleanup
* fixed minor issues
* reverting tests to use imageRef, flavorRef
* updating imageRef and flavorRef parsing
* Updates to the compute API and manager so that rebuild, reboot, snapshots, and password resets work with the most recent versions of novaclient
* merging trunk; resolving conflicts
* Add OpenStack API support for block\_device\_mapping
* queries in the models.Instance context need to reference the table by name (fixed\_ips) however queries in the models.FloatingIp context alias the tables out properly and return the data as fixed\_ip (which is why you need to reference it by fixed\_ip in that context)
* added warning when size of subnet(s) being created are larger than FLAG.network\_size in attempt to alleviate confusion.  For example, currently when 'nova-manage network create foo 192.168.0.0/16', the result is that it creates a 192.168.0.0/24 instead without any indication to why
* xml deserialization works now
* merged from trunk
* merged trunk
* merging trunk
* pull-up from trunk
* got rid of print
* got rid of more xml string comparisons
* atom test updates
* got rid of some prints
* got rid of string comparisons in serializer tests
* removing objectstore and image\_service flag checking
* Updates /servers requests to follow the v1.1 spec. Except for implementation of uuids replacing ids and access ips both of which are not yet implemented. Also, does not include serialized xml responses
* fixed detail xml and json tests that got broken
* updated atom tests
* Updated ServerXMLSerializer to utilize the IPXMLSerializer
* merged trunk
* merge from trunk
* fix pep8 issues
* fix issue with failing test
* merged trunk
* I'm sorry, for my fail with rebasing. Any way previous branch grew to many other futures, so I supersede it. 1. Used optparse for parsing arg string 2. Added decorator for describe method params 3. Added option for assigning network to certain project. 4. Added field to "network list" for showing which project owns network
* Moved the VIF network connectivity logic('ensure\_bridge' and 'ensure\_vlan\_bridge') from the network managers to the virt layer.  In addition, VIF driver class is added to allow customized VIF configurations for various types of VIFs and underlying network technologies
* merge with trunk, resolve conflicts
* fix pep8
* Launchpad automatic translations update
* removing rogue print
* removing xenapi\_image\_service flag
* adding to authors
* fixing merge conflict
* merge from trunk
* initial stuff to get away from string comparisons for XML, and use ElementTree
* merged with 1320
* volume name change. some cleanup
* - Updates /images/<id>/meta and /images/<id>/meta/<key> to respect the latest specification - Renames ../meta to ../metadata - Adds PUT on ../metadata to set entire container (controller action is called update\_all)
* Adds proper xml serialization for /servers/<id>/ips and /servers/<id>/ips/<network\_name>
* some cleanup. VSA flag status changes. returned some files
* Pass on auth\_token
* Warn user instead of ignoring
* Added ensuring filter rules for all VMs
* atom and xml\_detail working, with tests
* Adds the -c|--coverage flag to run\_tests.sh to generate a local code coverage report
* Estetic fix
* Fix boot from volume failure for network block devices
* Bug #796813: vmwareapi does not support distributed vswitch
*  modified to conform to latest AWS EC2 API spec for authorize & revoke ingress params using the IpPermissions data structure, which nests lists of CIDR blocks (IpRanges) as well as lists of Group data
* Fixes faults to use xml serializers based on api version. This fixed bug 814228
* Fixes a typo in rescue instance in ec2 api. This is mnaser's fix, I just added a test to verify the change
* Fixes bug 797250 where a create server request with the body '{"name":"server1"}' results in a HTTP 500 instead of HTTP 422
* adding xml serialization for /servers/<id>/ips and /servers/<id>/ips/<network>
* add a simple broken test to verify the bug
* Fixed old libvirt semantics, added resume\_guests\_state\_on\_host\_boot flag
* xml version detail working with tests
* adding testing to solidify handling of None in wsgi serialization
* Added check to make sure there is a server entity in the create server request
* Fixed some typos in log lines
* removed prints, got versions detail tests passing, still need to do xml/atom
* reverting some wsgi-related changes
* merged trunk
* removed print lines
* This fixes the xml serialization of the /extensions and /extensions/foo resources. Add an ExtensionsXMLSerializer class and corresponding unit tests
* added 1.0 detail test, added VersionRequestDeserializer to support Versions actions properly, started 300/multiple choice work
* fix for reviews
* Fixed bad test Fixed using wrong variable
* Moved the exception handling of unplugging VIF from virt driver to VIF driver.  Added better comments.  Added OpenStack copyrights to libivrt vifs.py
* pep8 + spelling fixes
* Floating IP DB tests
* Updated Faults controller to choose an xml serializer based on api version found in the request url
* removing unnecessary assignments
* Hotfix
* Some estetic refactoring
* Fixing PEP8 compliance issues
* adding --fixes
* fixing typos
* add decorator for 'dns' params
* merge with trunk, resolve conflicts
* pep8
* Fixed logging
* Fixed id
* Fixed init\_host context name
* Removed driver-specific autostart code
* fix 'version' command
* Add bug reference
* Use admin context when fetching instances
* Use subscript rather than attribute
* Make IP allocation test work again
* Adjust and re-enable relevant unit tests
* some file attrib changes
* some cosmetic changes. Prior to merge proposal
* Added test\_serialize\_extenstions to test ExtensionsXMLSerializer.index()
* tests: unit tests for describe instance attribute
* tests: an unit test for nova.compute.api.API.\_ephemeral\_size()
* tests: unit tests for nova.virt.libvirt.connection.\_volume\_in\_mapping()
* tests/glance: unit tests for glance serializer
* tests: unit tests for nova.virt
* tests: unit tests for nova.block\_device
* db/api: fix network\_get\_by\_cidr()
* image/glance: teach glance block device mapping
* tests/test\_cloud:test\_modify\_image: make it pass
* nova/tests/test\_compute.py: make test\_compute.test\_update\_block\_device\_mapping happy
* test\_metadata: make test\_metadata pass
* test\_compute: make test\_compute pass
* test\_libvirt: fix up for local\_gb
* virt/libvirt: teach libvirt driver swap/ephemeral device
* virt/libvirt: teach libvirt driver root device name
* compute/api: pass down ephemeral device info
* compute/manager, virt: pass down root device name/swap/ephemeral to virt driver
* ec2/get\_metadata: teach block device mapping to get\_metadata()
* api/ec2: implement describe\_instance\_attribute()
* db/api: block\_device\_mapping\_update\_or\_create()
* block\_device: introduce helper function to check swap or ephemeral device
* ec2utils: factor generic helper function into generic place
* Launchpad automatic translations update
* Config-Drive happiness, minus smoketest
* merged with latest nova-1308
* more unittest changes
* Last patch broke libvirt mapping of network info. This fixes it
* Fixes an issue with out of order operations in setup\_network for vlan mode in new ha-net code
* Merged with 1306 + fix for dns change
* update netutils in libvirt to match the 2 dns setup
* merge
* merge with 1305
* make sure dhcp\_server is available in vlan mode
* Adds ability to set DNS entries on network create. Also allows 2 dns servers per network to be specified
* pep8-compliant. Prior to merge with 1305
* Reverted volume driver part
* pep cleanup
* remove auth manager from instance helper
* docstring update
* pass in the right argument
* pull out auth manager from db
* merge trunk
* default to None in the method signature
* merged trunk
* remove some more stubouts and fakes
* clean up fake auth manager in other places
* same as: https://code.launchpad.net/~tr3buchet/nova/lp812489/+merge/68448 fixes: https://bugs.launchpad.net/nova/+bug/812489 but in a slightly different context
* pep8
* updating images metadata resource
* ...and this is me snapping back into reality removing all trace of ipsets. Go me
* fixed networks not defined error when creating instances when no networks exist
* fix test\_access
* This is me being all cocky, thinking I'll make it use ipsets..
* fix auth tests
* Add i18n for logging, changed create\_bridge/vlan to should\_create\_bridge/vlan, changed unfilter\_instance's keyword param to positional, and added Dan's alternate ID to .mailmap
* fix extensions tests
* merge trunk
* fix all tests
* pep8 fixes
* Updated the comments for VMWare VIF driver
* initial test for v1.1 detail request
* Moved restaring instances from livbirt driver to ComputeManager
* Added network\_info to unfilter\_instance to avoid exceptions when shutting down instances
* Removed unused exception object
* Fixed the missing quotes for 802.1Qbh in libvirt template
* add decorator for multi host option
* Merged Dan's branch
* Merged trunk
* use new 'create\_vlan' field in XenAPIBridgeDriver
* merge with trunk, resolve conflicts
* remove IPy
* for libvirt OVS driver, do not make device if it exists already
* refactor xenapi vif plug to combine plug + get\_vif\_rec, tested and fixed XenAPIBridgeDriver
* Correctly add xml namespaces to extensions xml
* Added xml serialization for GET => /extensions. Added corresponding tests
* merge ryu's branch
* remove debugging
* fix a whole bunch of tests
* start removing references to AuthManager
* change context to maintain exact time, store roles, use ids instead of objects and use a uuid for request\_id
* Resolved conflict with trunk
* Adds an XML serializer for limits and adds tests for the Limits view builder
* pep8
* add in the right number of fields
* pep8
* updated next-available to use utc time
* merge trunk
* rename in preperation for trunk merge
* only include dns entries if they are not None in the database
* Updated the compute API so that has\_finished\_migration uses instance\_uuid. Fixes some regressions with 1295-1296
* only use the flag if it evaluates true
* Catch the FixedIpNotFoundForInstance exception when no fixed IP is mapped to instance
* Updated time-available to be correct format Fixed old tests to respect this
* This fixes issues with invalid flavorRef's being passed in returning a 500 instead of a 400, and adds tests to verify that two separate cases work
* merge from trunk
* Moving lp:~rackspace-titan/nova/extensions-xml-serialization to new branch based off of trunk. To remove dep on another branch
* Perform fault wrapping in the openstack WSGI controller. This allows us to just raise webob Exceptions in OS API controllers with the appropriate explanations set. This resolves some inconsistencies with exception raising and returning that would cause HTML output to occur when faults weren't being handled correctly
* pep8 and stuff
* Some code was recently added to glance to allow the is\_public filter to be overridden.  This allows us to get all images and filter properly on the nova side until keystone support is in glance. This fixes the issue with private images and snapshots disappearing from the image list
* pep8
* Merged with trunk which includes ha-net changes
* Updated the compute API so that has\_finished\_migration uses instance\_uuid. Fixes some regressions with 1295-1296
* Updating the /images and /images/detail OSAPI v1.1 endpoints to match spec w/ regards to query params
* Ensure valid json/xml/atom responses for versions requests
* Update OSAPI v1.1 /flavors, /flavors/detail, and /flavors/<id> to return correct xml responses
* Renamed the virt driver resize methods to migration for marginally more understandable code
* allow 2 dns servers to be specified on network create
* allow 2 dns servers to be specified on network create
* Fixes lp813006
* Fixes lp808949 - "resize doesn't work with recent novaclient"
* minor fix
* Some broken tests from my other merge
* Fixed import issue
* added tests, updated pep8 fixes
* Changed test\_live\_migration\_raises\_exception to use mock for compte manager method
* fixed another issue with invalid flavor\_id parsing, and added tests
* minor cleanup
* pep8 issue
* cleanup
* merge with trunk
* Fixed the localization unit test error in the vif driver logging
* cleanup tests and fix pep8 issues
* removed vif API extension
* Fixed Xenapi unit test error of test\_rescue
* Slight indentation change
* Merged Dan Wendlandt's branch and fixed pep8 errors
* Added  call to second coverage invocation
* Fixed an issue where  was invoked before it was defined in the case of a venv
* - Add 'fixed\_ipv6' property to VirtualInterface model - Expose ipv6 addresses in each network in OSAPI v1.1
* forgot to add xenapi/vif.py
* Perform fault wrapping in the openstack WSGI controller. This allows us to just raise webob Exceptions in OS API controllers with the appropriate explanations set. This resolves some inconsistencies with exception raising and returning that could cause HTML output to occur when an exception was raised
* Added LimitsXMLSerializer Added LimitsViewBuidlerV11Test test case
* Added create\_vlan/bridge in network unit test
* Add OpenStack API support for block\_device\_mapping
* Changed the default of VIF driver
* Fixed PEP8 issues
* Combined bridige and vlan VIF driver to allow better transition for current Nova users
* Merged trunk
* Merged lp:~~danwent/nova/network-refactoring
* Adds HA networking (multi\_host) option to networks
* CHanges based on feedback
* Older Windows agents are very picky about the data sent to it. It also requires the public key for the password exchange to be in a string format and not an integer
* adding flavors xml serialization
* added versions list atom test and it passes
* Set the status\_int on fault wrapped exceptions. Fixes WSGI logging issues when faults are returned
* Fix plus passing tests
* remove debug prints
* merge ryu's branch
* update for ryu's naming changes, fix some bugs.  tested with OVSDriver only so far
* Fixes bug #807764.  Please disregard previous proposal with incorrect bug #
* Whoops
* Added LP bug num to TODO
* Split tests into 2
* Fix email address in Author
* Make sure reset\_network() call happens after we've determined the agent is running
* pep8
* Merged trunk
* Added Dan Wendlandt to Authors, and fixed failing network unit tests
* merged trunk
* Made all but one test pass for libvirt
* Moved back allow\_project\_net\_traffic to libvirt conn
* Set the status\_int on fault wrapped exceptions. Fixes WSGI logging issues when faults are returned
* lp812489: better handling of periodic network host setup to prevent exception
* add smoketests to verify image listing
* default image to private on register
* correct broken logic for lxc and uml to avoid adding vnc arguments (LP: #812553)
* Stupid merge and fixed broken test
* Most of the XenServer plugin files need the execute bit set to run properly. However, they are inconsistent as it is, with one file having the execute bit set, but the another having it set when it is not needed
* Made the compute unit tests to pass
* Host fix
* Created \_get\_instance\_nw\_info method to clean up duplicate code
* initial changes for application/atom+xml for versions
* Update Authors file
* network api release\_floating\_ip method will now check to see if an instance is associated to it, prior to releasing
* merge from lp:~midokura/nova/network-refactoring-l2
* Corrects a bad model lookup in nova-manage
* correct indentation
* Fixes lp809587
* Fix permissions for plugins
* Ya! Apparently sleep helps me fix failing tests
* Some older windows agents will crash if the public key for the keyinit command is not a string
* added 'update' field to versions
* First attempt at vmware API VIF driver integration
* Removed unnecessary context parameter
* Merged get\_configurations and plug of VIF drivers
* Moved ensure\_vlan\_bridge of vmware to VIF driver
* Added network\_info parameter to all the appropriate places in virt layers and compute manager
* remove xenapi\_net.py from network directory, as this functionality is now moved to virt layer
* first cut of xenserver vif-plugging, some minor tweaks to libvirt plugging
* Refactor device type checking
* Modified alias ^Cd minor fixes
* Merged with trunk
* Reverted to original code, after network binding to project code is in integration code for testing new extension will be added
* Fixed broken unit testcases after adding extension and minor code refactoring
* Added a new extension instead of directly making changes to OS V1.1. API
* have to use string 'none' and add a note
* tell glance to not filter out private images
* updated links to use proper atom:link per spec
* Renamed setup\_vif\_network to plug\_vif
* Fixes lp813006 - inconsistent DB API naming
* move import network to the top
* Merged lp:~danwent/nova/network-refactoring-l2
* merged from trunk
* network api release\_floating\_ip method checks if an instance associated to the floating prior to releasing.  added test
* Added detroy\_vif\_network
* Functionality fixed and new test passing
* Updates to the compute API and manager so that rebuild, reboot, snapshots, and password resets work with the most recent versions of novaclient
* better handling of periodic network host setup
* Merged trunk
* Removed blank lines
* Fix unchecked key reference to mappings['gateway6']. Fixes LP #807764
* add downgrade
* correct broken logic for lxc and uml to avoid adding vnc arguments (LP: #812553)
* Beginnings of the patch
* Fixed equality comparison bug in libvirt XML
* Fixed bad parameters to setup\_vif\_networks
* Zapped an extra newline
* Merged with trunk
* Add support for generating local code coverage report
* respecting use\_ipv6 flag if set to False
* merged trunk
* merged trunk
* fixed reviewer's comment. 1. ctxt -> context, 2. erase unnecessary exception message from nova.sccheduler.driver
* cleanup
* merge of ovs L2 branch
* missed the vpn kwarg in rpc
* fix bad merge
* change migration number
* merged trunk
* This change adds the basic boot-from-volume support to the image service
* Fixed the broken tests again
* Merging from upstream
* Some missed instance\_id casts
* pep8 cleanup
* adding --fixes
* adding fixed\_ipv6 property to VirtualInterface model; exposing ipv6 in api
* VSA schedulers reorg
* Merged with trunk
* fix issues that were breaking vlan mode
* fixing bad lookup
* Updates to the XenServer agent plugin to fix file injection:
* Don't jsonify the inject\_file response. It is already json
* localization changes. Removed vsa params from volume cloud API. Alex changes
* Added auth info to XML
* returncode is an integer
* - Fixed the conflift in vmops.py
* Check returncode in get\_agent\_features
* resolved pep8 issues
* merged from trunk
* Updated servers to choose XML serializer based on api version
* pep8
* updated servers to use ServerXMLSerializer
* added 'create' to server XML serializer
* added 'detail' to server XML serializer
* convert group\_name to string, incase it's a long
* nova/api/ec2/cloud.py: Rearranged imports to be alphabetical as per HACKING
* pep8'd
* Extended test to check for error specific error code and test cover for bad chars
* Some basic validation for creating ec2 security groups. (LP: #715443)
* changed to avoid localization test failure
* Initial test case proving we have a bug of, ec2 security group name can exceed 255 chars
* added index to servers xml serializer
* Change \_agent\_has\_method to \_get\_agent\_features. Update the inject files function so that it calls \_get\_agent\_features only once per injected file
* pep8
* Moved Metadata Serialization Test
* Added ServerXMLSerializer with working 'show' method Factored out MetadataXMLSerializer from images and servers into common
* added missing drive\_types.py
* added missing instance\_get\_all\_by\_vsa
* merged with 1280
* VSA: first cut. merged with 1279
* Added some unit and integration tests for updating the server name via the openstack api
* renamed priv method arg\_to\_dict since it's not just used for revoke.  modified to conform to latest AWS EC2 API spec for authorize & revoke ingress params using the IpPermissions data structure, which nests lists of CIDR blocks (IpRanges) as well as lists of Group data
* got rid of return\_server\_with\_interfaces and added return\_server\_with\_attributes
* Added ServerXMLSerializationTest
* take out print statements
* Ensures a bookmark link is returned in GET /images. Before, it was only returned in GET /images/detail
* One last nit
* Tests passing again
* put maxDiff in setUp
* remove get\_uuid\_from\_href and tests
* stop using get\_uuid\_from\_href for now
* Updated with some changes from manual testing
* Updates to the XenServer agent plugin to fix file injection:
* merging trunk
* use id in links instead of uuid
* pep8 fixes
* fix ServersViewBuilderV11Tests
* Adds greater configuration flexibility to rate limiting via api-paste.ini.  In particular:
* return id and uuid for now
* merge with trunk
* Adds distributed scheduler and multinic docs to the Developer Reference page
* Added more view builder tests
* merged wills revisions
* Added ViewBuilderV11 tests Fixed bug with build detail
* fix issues with uuid and old tests
* - Present ip addresses in their actual networks, not just a static public/private - Floating ip addresses are grouped into the networks with their associated fixed ips - Add addresses attribute to server entities
* Update the agent plugin so that it gets 'b64\_contents' from the args dict instead of 'b64\_file' (which isn't what nova sends)
* Adding unit and integration tests for updating the server name via the 1.1 api
* merge with trunk, resolve conflicts
* remove argument help from docstrings + minor fix
* Fixes Bug #810149 that had an incomplete regex
* Existing Windows agent behaves differently than the Unix agents and require some workarounds to operate properly. Fixes are going into the Windows agent to make it behave better, but workarounds are needed for compatibility with existing installed base
* Add possibility to call commands without subcommands
* fix redundency
* Updated Authors
* Fixed remove\_version\_from\_href Added tests
* mistakenly commited this code into my branch, reverting it to original from trunk
* Merged with trunk and fixed pep errors
* added integrated unit testcases and minor fixes
* First pass
* corrected catching NoNetworksDefined exception in host setup and getting networks for instance
* catching the correct exception
* Added ServersTestv1\_1 test case Changed servers links to use uuid instead of id
* pep8
* Updated old tests
* add support to write to stdout rather than file if '-' is specified. see bug 810157
* merging trunk
* removed self links from flavors
* added commands
* exposing floating ips
* updated image entity for servers requests
* Update the agent plugin so that it gets 'b64\_contents' from the args dict instead of 'b64\_file' (which isn't what nova sends)
* Use assertRaises instead of try/except--stupid brain-o
* Added progress attribute to servers responses
* fixing bad merge
* pull-up from trunk, while we're at it
* Comment on parse\_limits(); expand an exception message; add unit tests; fix a minor discovered bug
* adding bookmark to images index
* add updated and created to servers detail test, and make it work
* removing mox object instantiation from each test; renaming \_param to filter\_name
* add self to authors
* use 'with' so that close is called on file handle
* adding new query parameters
* support '-' to indicate stdout in nova-manage project 'environment' and 'zip'
* Improvements to nova-manage: 1. nova-manage network list now shows what belongs to what project, and what's the vlan id, simplifying management in case of several networks/projects 2. nova-manage server list [zone] - shows servers. Useful if you have many servers and want to list them in particular zone, instead of grep'ing nova-manage service list
* Minor fixes
* Merged with Trunk
* updated to support and check for flavor links in server detail response
* Updated responses for GET /images and GET /images/detail to respect the OSAPI v1.1 spec
* merge
* beginning server detail spec 1.1 fixup
* Augment rate limiting to allow greater flexibility through the api-paste.ini configuration
* merge from trunk
* added unit testcases for validating the requested networks
* Extends the exception.wrap\_exception decorator to optionally send an update to the notification system in the event of a failure
* trunk merge
* merging trunk
* updating testing; simplifying instance-level code
* pep8
* adding test; casting instance to dict to prevent sqlalchemy errors
* merged branch lp:~rackspace-titan/nova/images-response-formatting
* Add multinic doc and distributed scheduler doc to developer guide front page
* merged trunk
* Don't pop 'vpn' on kwargs inside a loop in RPCAllocateFixedIP.\_allocate\_fixed\_ips (fixes KeyError)
* Added Mohammed Naser to Authors file
* merge with trunk
* fix reviewer's comment
* Starting part of multi-nic support in the guest. Adds the remove\_fixed\_ip code, but is incomplete as it needs the API extension that Vek is working on
* Don't pop 'vpn' on kwargs inside a loop in RPCAllocateFixedIP.\_allocate\_fixed\_ips (fixes KeyError's)
* added unit test cases and minor changes (localization fix and added fixed\_ip validation)
* Made sure the network manager accepts kwargs for FlatManager
* Fix bug 809316. While attempting to launch cloudpipe instance via 'nova-manage vpn run' command, it comes up with IP from instances DHCP pool and not the second IP from the subnet, which break the forwarding rules that allow users to access the vpn. This is due 'allocate\_fixed\_ip' method in VlanManager doesn't receive 'vpn' as an argument from caller method and cloudpipe instances always considers as 'common' instances
* cleanup
* server create deserialization functional and tested
* added xml deserialization unit test cases and fixe some pep errors
* Updated some common.py functions to raise ValueErrors instead of HTTPBadRequests
* Renamed 'nova-manage server list' -> 'nova-manage host list' to differentiate physical hosts from VMs
* Allowed empty networks, handled RemoteError properly, implemented xml format for networks and fixed broken unit test cases
* minor cleanup
* Updated ImageXMLSerializer to serialize links in the server entity
* Updated images viewbuilder to return links in server entity
* updated images tests
* merged trunk
* pep8
* Updated remove\_version\_from\_href to be more intelligent Added tests
* Fix PEP8 for 809316 bugfix
* Fix 809316 bug which prevent cloudpipe to get valid IP
* fix reviewer's comment
* stray debug
* pep8
* fixed marshalling problem to cast\_compute..
* fixed all failed unit test cases
* This doesn't actually fix anything anymore, as the wsgi\_refactor branch from Waldon took care of the issue. However, a couple rescue unit tests would have caught this originally, so I'm proposing this to include those
* fixes an issue where network host fails to start because a NoNetworksFound exception wasn't being handled correctly
* Bad test
* unknowingly made these changes, reverting to original
* catch raise for networks not found in network host and instance setup
* Merged with Trunk
* add optional parameter networks to the Create server OS API
* Changed broken perms
* Tests
* Made xen plugins rpm noarch
* Set the proper return code for server delete requests
* Making the xen plugins rpm to be noarch
* merging trunk
* Expanding OSAPI wsgi module to allow handling of headers and status codes
* Updates some of the extra scripts in contrib and tools to current versions
* updating code to implement tests
* merging parent wsgi-refactor
* allowing controllers to return Nonew
* adding headers serializer
* pep8
* minor refactoring
* minor tweaks
* Adds an extension which makes add\_fixed\_ip() available through an OpenStack extension
* Comment out these two asserts; Sandy will uncomment in his merge-prop
* Fix the bug 800759
* merging wsgi-refactor
* adding 204 response code
* pre trunk merge
* Missing Author updated
* Allows for ports in serverRef in image create through the openstack api
* Adds security groups to metadata server.  Also adds some basic tests for metadata code
* fix comments
* fix conflict
* Added vif OS API extension to get started on it
* Moved 'setup\_compute\_network' logic into the virt layer
* Added myself to authors file
* Fixed two typos in rescue API command
* flaw in ec2 cloud api, \_get\_image method , if doing a search for aki-0000009, yet that image name doesn't exist, it strips off aki- and looks for any image\_id 0000009 and if there was an image match that happens to be an ami instead of aki, it will go ahead and deregister the ami instead. That behavior is unintended, so added logic to ensure that the original request image\_id matches the type of image being returned from database by matching against container\_format attr
* Fixed up an incorrect key being used to check Zones
* merged trunk
* fix tests
* make sure that old networks get the same dhcp ip so we don't break existing deployments
* cleaned up on set network host to \_setup\_network and made networks allocate ips dynamically
* Make the instance migration calls available via the API
* Add a flag to disable ec2 or osapi
* Add a flag to disable ec2 or osapi
* refactor
* easing up content-type restrictions
* peer review fix - per vish: 'This method automatically converts unknown formats to ami, which is the same logic used to display unknown images in the ec2 api.  This will allow you to properly deregister raw images, etc.'
* Updated resize docstring
* removing Content-Length requirement
* Add docstrings for multinic extension
* Add support for remove\_fixed\_ip()
* Merged trunk
* pull-up from trunk
* Added unit tests
* First take at migrations
* Fixes bug #805604 "Multiprocess nova-api does not handles SIGTERM correctly."
* image/fake: added teardown method
* Updated mailmap due to wrong address in commit message
* tests/test\_cloud: make an unit test, test\_create\_image, happy
* nova/compute/api.py: fixed mismerge
* ec2 api \_get\_image method logic flaw that strips the hex16 digit off of the image name, and does a search against the db for it and ignores that it may not be the correct image, such as if doing a search for aki-0000009, yet that image name doesn't exist, it strips off aki- and looks for any image\_id 0000009 and if there was an image match that happens to be an ami instead of aki, it will go ahead and deregister that.  That behavior is unintended, so added logic to ensure that the original request image\_id matches the type of image being returned from database by matching against container\_format attr
* sqlalchemy/migrate: resolved version conflict
* merge with trunk
* pull-up from trunk
* unit test suite for the multinic extension
* pull-up from trunk
* Added server entity to images that only has id
* Merging issues
* Updated \_create\_link\_nodes to be consistent with other create\_\*\_nodes
* Changed name of xml\_string to to\_xml\_string
* Merging issuse
* Temporarily moved create server node functionality into images.py Temporarily changed image XML tests to expect server entities with only ids
* Removed serverRef from some tests and viewbuilder
* Comments for bugfix800759 and pep8
* Removed bookmark link from non detailed image viewbuilder
* implemented clean-up logic when VM fails to spawn for xenapi back-end
* Adds the os-hosts API extension for interacting with hosts while performing maintenance. This differs from the previous merge prop as it uses a RESTful design instead of GET-based actions
* Added param to keep current things from breaking until we update all of the xml serializers and view builders to reflect the current spec
* Fixes Bug #805083: "libvirtError: internal error cannot determine default video type" when using UML
* Dried up images XML serialization
* Dried up images XML serialization
* stricter zone\_id checking
* trunk merge
* cleanup
* Added image index
* pep8 fixes
* Comments Incorporated for Bug800759
* Added API and supporting code for rebooting or shutting down XenServer hosts
* fixed image create response test
* Updated test\_detail
* Merged trunk
* make server and image metadata optional
* Updated the links container for flavors to be compliant with the current spec
* pep8
* Renamed function
* moved remove\_version to common.py
* unit tests
* progress and server are optional
* merged trunk
* Add a socket server responding with an allowing flash socket policy for all requests from flash on port 843 to nova-vncproxy
* pep8 compliance
* Pull-up from trunk (post-multi\_nic)
* changed calling signature to be (instance\_id, address)
* correct test\_show
* first round
* removed extra comment
* Further test update and begin correcting serialization
* Removed a typo error in libvirt connection.py
* updated expected xml in images show test to represent current spec
* pep8 fixes
* Added VIF driver concept
* Added the missing 'self' parameter
* after trunk merge
* Changed the exception type for invalid requests to webob.exc.HTTPBadRequest
* Added net\_attrs argument for ensure\_bridge/vlan methods
* Added a L2 network driver for bridge/vlan creation
* wrap list comparison in test with set()s
* slightly more fleshed out call path
* merged trunk
* merge code i'd split from instance\_get\_fixed\_addresses\_v6 that's no longer needed to be split
* fix metadata test since fixed\_ip searching now goes thru filters db api call instead of the get\_by\_fixed\_ip call
* clean up compute\_api.get\_all filter name remappings.  ditch fixed\_ip one-off code.  fixed ec2 api call to this to compensate
* clean up OS API servers getting
* rename \_check\_servers\_options, add some comments and small cleanup in the db get\_by\_filters call
* pep8 fix
* convert filter value to a string just in case before running re.compile
* add comment for servers\_search\_options list in the OS API Controllers
* pep8 fixes
* fix ipv6 search test and add test for multiple options at once
* test fixes.. one more to go
* resolved conflict incorrectly from trunk merge
* merged trunk
* doc string fix
* fix OS API tests
* test fixes and typos
* typos
* cleanup checking of options in the API before calling compute\_api's get\_all()
* a lot of major re-work.. still things to finish up
* merged trunk
* remove debug from failing test
* remove faults.Fault wrapper on exceptions
* rework OS API checking of search options
* merged trunk
* missing doc strings for fixed\_ip calls I renamed
* clarify a couple comments
* test fixes after unknown option string changes
* minor fixups
* merged trunk
* pep8 fixes
* test fix for renamed get\_by\_fixed\_ip call
* ec2 fixes
* added API tests for search options fixed a couple of bugs the tests caught
* allow 'marker' and 'limit' in search options. fix log format error
* another typo
* merged trunk
* missed power\_state import in api fixed reversed compare in power\_state
* more typos
* typos
* flavor needs to be converted to int from query string value
* add image and flavor searching to v1.0 api fixed missing updates from cut n paste in some doc strings
* added searching by 'image', 'flavor', and 'status' reverted ip/ip6 searching to be admin only
* compute's get\_all should accept 'name' not 'display\_name' for searching Instance.display\_name. Removed 'server\_name' searching.. Fixed DB calls for searching to filter results based on context
* Refactored OS API code to allow checking of invalid query string paremeters and admin api/context to the index/detail calls.  v1.0 still ignores unknown parameters, but v1.1 will return 400/BadRequest on unknown options.  admin\_api only commands are treated as unknown parameters if FLAGS.enable\_admin\_api is False.   If enable\_admin\_api is True, non-admin context requests return 403/Forbidden
* clean up checking for exclusive search options fix a cut n paste error with instance\_get\_all\_by\_name\_regexp
* merged trunk
* python-novaclient 2.5.8 is required
* fix bugs with fixed\_ip returning a 404 instance searching needs to joinload more stuff
* added searching by instance name added unit tests
* pep8 fixes
* Replace 'like' support with 'regexp' matching done in python.  Since 'like' would result in a full table scan anyway, this is a bit more flexible. Make search options and matching a little more generic Return 404 when --fixed\_ip doesn't match any instance, instead of a 500 only when the IP isn't in the FixedIps table
* start of re-work of compute/api's 'get\_all' to handle more search options
* Silence warning in case tests.sqlite doesn't exist
* fix libvirt test
* update tests
* don't set network host for multi\_host networks
* add ability to set multi\_host in nova-manage and remove debugging issues
* filter the dhcp to only respond to requests from this host
* pass in dhcp server address, fix a bunch of bugs
* PEP8 passed
* Formatting fix
* Proper Author section insertion (thx Eldar)
* Signal handler cleanup, proper ^C handling
* copy paste
* make sure to filter out ips associated by host and add some sync for allocating ip to host
* fixed zone id check
* it is multi\_host not multi\_gateway
* First round of changes for ha-flatdhcp
* Updated the plugin to return the actual enabled status instead of just 'true' or 'false' 
* UML doesnt do vnc as well
* fixed a bug which prevents suspend/resume after block-migration
* Gracefull shutdown of nova-api
* properly displays addresses in each network, not just public/private; adding addresses attribute to server entities
* Gracefull shutdown of nova-api
* Removing import of nova.test added to nova/\_\_init.py\_\_ as problem turned out to be somewhere else (not in nova source code tree)
* Fixing weird error while running tests. Fix required patching nova/tests/\_\_\_init\_\_.py explictly importing nova.test
* Added missing extension file and tests. Also modified the get\_host\_list() docstring to be more accurate about the return value
* Silence warning in case tests.sqlite doesn't exist
* Fix boot from volume failure for network block devices
* Improvements to nova-manage: network list now includes vlan and projectID, added servers list filtered by zone if needed
* removed unneeded old commented code
* removed more stray debug output
* removed debugging output
* after trunk merge
* Updated unit tests
* remove logging statement
* Found some additional fixed\_ip. entries in the Intance model contest that needed to be updated
* use url parse instead of manually splitting
* Changed fixed\_ip.network to be fixed\_ips.network, which is the correct DB field
* Added the GroupId param to any pertinent security\_group methods that support it in the official AWS API
* Removes 'import IPy' introduced in recent commit
* removing IPy import
* trunk merge
* Fixed the case where an exception was thrown when trying to get a list of flavors via the api yet there were no flavors to list
* fix up tests
* tweak
* review fixes
* completed api changes. still need plugin changes
* Update the fixed\_ip\_disassociate\_all\_by\_timeout in nova.db.api so that it supports Postgres. Fixes casting errors on postgres with this function
* after trunk merge
* Fixes MANIFEST.in so that migrate\_repo/versions/\*.sql files are now included in tarball
* Include migrate\_repo/versions/\*.sql in tarball
* Ensure auto-delete is false on Topic Queues
* refactored the security\_group tests a bit and broke up a few of them into smaller tests
* Reverses the self.auto\_delete = True that was added to TopicPublisher in the bugfix for lp804063.  That bugfix should have only added auto\_delete = True to FanoutPublisher to match the previous change to FanoutConsumer
* Added 'self.auto\_delete = True' to the two Publisher subclasses that lacked that setting
* Added the '--fixes' tag to link to bug
* Added self.auto\_delete = True to the Publisher subclasses that did not have that set
* added multi-nic support
* osapi test\_servers fixed\_ip -> fixed\_ips
* updated osapi 1.0 addresses view to work with multiple fixed ips
* trunk merge with migration renumbering
* Allows subdirectory tests to run even if sqlite database doesn't exist
* fix bug 800759
* Child Zone Weight adjustment available when adding Child Zones
* trunk merge
* blah
* merge trunk
* merged trunk
* Windows instances will often take a few minutes setting up the image on first boot and then reboot. We should be more patient for those systems as well check if the domid changes so we can send agent requests to the current domid
* Theese changes eliminate dependancy between hostname and ec2-id. As I understand, there already were no such dependancy, but still we had confusing names in code. Also I added more sophisticated generation of default hostname to give user possibility to set the custom one
* updated images
* updated servers
* refactored flavors viewbuilder
* fixes lp:803615
* added FlavorRef exception handling on create instance
* refactored instance type code
* Update the ec2 get\_metadata handler so it works with the most recent version of the compute API get\_all call which now returns a list if there is only a single record
* - add metadata container to /images/detail and /images/<id> responses - update xml serialization to encode image entities properly
* merging trunk
* PEP8 fix
* Adapt flash socket policy branch to new nova/wsgi.py refactoring
* clean up
* Update the ec2 get\_metadata handler so it works with the most recent version of the compute API get\_all call which now returns a list if there is only a single record
* trunk merge
* pep8
* pep8
* done and done
* Update the fixed\_ip\_disassociate\_all\_by\_timeout in nova.db.api so that it supports Postgres. Fixes casting errors on postgres with this function
* phew ... working
* compute\_api.get\_all should be able to recurse zones (bug 744217). Also, allow to build more than one instance at once with zone\_aware\_scheduler types. Other cleanups with regards to zone aware scheduler..
* Updated v1.1 links in flavors to represent the curret spec
* fix issue of recurse\_zones not being converted to bool properly add bool\_from\_str util call add test for bool\_from\_str slight rework of min/max\_count check
* fixed incorrect assumption that nullable defaults to false
* removed port\_id from virtual interfaces and set network\_id to nullable
* changes a few instance refs
* merged trunk
* Rename one use of timeout to expiration to make the purpose clearer
* pulled in koelkers test changes
* merge with trey
* major reactor of the network tests for multi-nic
* Merged trunk
* Fixes Bug #803563 by changing how nova passes options in to glance. Before, if limit or marker were not set, we would pass limit=0 and marker=0 in to glance. However, marker is supposed to be an image id. With this change, if limit or marker are not set, they are simply not passed into glance. Glance is free then to choose the default behavior
* Fixed indentation issues Fixed min/max\_count checking issues Fixed a wrongly log message when zone aware scheduler finds no suitable hosts
* Fixes Bug #803563 by changing how nova passes options in to glance. Before, if limit or marker were not set, we would pass limit=0 and marker=0 in to glance. However, marker is supposed to be an image id. With this change, if limit or marker are not set, they are simply not passed into glance. Glance is free then to choose the default behavior
* Sets 'exclusive=True' on Fanout amqp queues.  We create the queues with uuids, so the consumer should have exclusive access and they should get removed when done (service stop).  exclusive implies auto\_delete.  Fixes lp:803165
* don't pass zero in to glance image service if no limit or marker are present
* more incorrect list type casting in create\_network
* removed the list type cast in create\_network on the NETADDR projects
* renumbered migrations again
* Make sure test setup is run for subdirectories
* merged trunk, fixed the floating\_ip fixed\_ip exception stupidity
* trunk merge
* "nova-manage vm list" was still referencing the old "image\_id" column, which was renamed to "image\_ref" at revision 1144
* Implement backup with rotation and expose this functionality in the OS API
* Allow a port name in the server ref for image create
* Fanout queues use unique queue names, so the consumer should have exclusive access.  This means that they also get auto deleted when we're done with them, so they're not left around on a service restart.  Fixes lp:803165
* pep8 fix
* removed extra stubout, switched to isinstance and catching explicit exception
* get latest branch
* Deprecate -r for run\_tests.sh and adds -n, switching the default back to recreate
* check\_domid\_changes is superfluous right now since it's only used when timeout is used. So simplify code a little bit
* updated pip-requires for novaclient
* Merged trunk
* pip requires
* adopt merge
* clean up logging for iso SR search
* moved to wrap\_exception approach
* Fix 'undefined name 'e'' pylint error
* change the default to recreate the db but allow -n for faster tests
* Fix nova-manage vm list
* Adding files for building an rpm for xenserver xenapi plugins
* moved migration again & trunk merge
* Brought back that encode under condition
* Add test for hostname generation
* Remove unnessesary (and possibly failing) encoding
* Fix for bug 803186 that fixes the ability for nova-api to run from a source checkout
* moved to wrap\_exception decorator
* Review feedback
* Merged trunk
* Put possible\_topdir back in nova-api
* Use milestone cut
* Merged trunk
* Let glance handle sorting
* merging trunk
* Review feedback
* This adds system usage notifications using the notifications framework. These are designed to feed an external billing or similar system that subscribes to the nova feed and does the analysis
* Refactored usage generation
* pep8
* remove zombie file
* remove unecessary cast to list
* merge with trey
* OOPS
* Whoops
* Review feedback
* skipping another libvirt test
* Fix merge issue in compute unittest
* adding unicode support to image metadata
* Fix thinko in previous fix :P
* change variable names to remove future conflict with sandy's zone-offsets branch
* Fix yet more merge-skew
* merge with trey
* This branch allows LdapDriver to reconnect to LDAP server if connection is lost
* Fix issues due to renming of imange\_id attrib
* Re-worked some of the WSGI and WSGIService code to make launching WSGI services easier, less error prone, and more testable. Added tests for WSGI server, new WSGI loader, and modified integration tests where needed
* Merged trunk
* update a test docstring to make it clear we're testing multiple instance builds
* log formatting typo pep8 fixes
* Prevent test case from ruining other tests. Make it work in earlier python versions
* pep8 fix
* I accidently the whole unittest2
* Adds support for "extra specs", additional capability requirements associated with instance types
* refactoring to compute from scheduler
* remove network to project bind
* resync with trunk
* Add test for spawn from an ISO
* Add fake SR with ISO content type
* Revise key used to identify the SR used to store ISO images streamed from Glance
* remerged trunk
* Fix pep8 nits in audit script
* Re-merging code for generating system-usages to get around bzr merge braindeadness
* getting started
* Added floating IP support in OS API
* This speeds up multiple runs of tests to start up much faster because it only runs db migrations if the test db doesn't exist.  It also adds the -r/--recreate-db option to run\_tests.sh to delete the tests db so it will be recreated
* small formatting change
* breaking up into individual tests for security\_groups
* Proposing this because it is a critical fix before milestone.  Suggestions on testing it are welcome
* logging fixes
* removed unneded mac parameter to lease and release fixed ip functions
* Made \_issue\_novaclient\_command() behave better. Fixed a bunch of tests
* Review feedback
* merge with trey
* trunk merge, getting fierce.
* Merged trunk
* Added nova.version to utils.py
* - Modified NOTE in vm\_util.py - Changed gettext line to nova default in guest\_tool.py
* renaming tests
* make sure basic filters are setup on instance restart
* typo
* changed extension alias to os-floating-ips
* missed the bin line
* Updating license to ASL 2.0
* update nova.sh
* make nova-debug work with new style instances
* Changed package name to openstack-xen-plugins per dprince's suggestion. All the files in /etc/xapi.d/plugins must be executable. Added dependency on parted. Renamed build.sh to build-rpm.sh
* remove extra stuff from clean vlans
* Clarify help verbiage
* making key in images metadata xml serialization test null as well
* making image metadata key in xml serialization test unicode
* extracting images metadata xml serialization tests into specific class; adding unicode image metadata value test
* merged blamar's simpler test
* Pulled changes, passed the unit tests
* Pulled trunk, merged boot from ISO changes
* Removed now un-needed fake\_connection
* Use webob to test WSGI app
* fixed pep style
* review issues fixed
* sqlalchmey/migration: resolved version conflict
* merge with trunk
* Adding files for building an rpm for xenserver xenapi plugins
* Upstream merge
* merging trunk; adding error handling around image xml serialization
* adding xml serialization test of zero images
* pep8
* add metadata tests
* add fake connection object to wsgi app
* add support to list security groups
* only create the db if it doesn't exist, add an option -r to run\_tests.py to delete it
* Fix for bug #788265. Remove created\_at, updated\_at and deleted\_at from instance\_type dict returned by methods in sqlalchemy API
* PEP8 fix
* pep8
* Updated \_dict\_with\_extra\_specs docstring
* Renamed \_inst\_type\_query\_to\_dict -> \_dict\_with\_extra\_specs
* Merged from trunk
* Add api methods to delete provider firewall rules
* This small change restores single quotes and double quotes as they were before in the filter expression for retrieving the PIF (physical interface) xenapi should use for creating VLAN interfaces
* Remove the unnecessary insertion of whitespace.  This happens to be enough to make this patch apply on recent versions of XenServer / Xen Cloud Platform
* Removes the usage of the IPy module in favor of the netaddr module
* - update glance image fixtures with expected checksum attribute - ensure checksum attribute is handled properly in image service
* mailmap
* mailmap
* configure number of attempts to create unique mac address
* merged
* trunk merged. conflicts resolved
* added disassociate method to tests
* fixes
* tests
* PEP8 cleanup
* parenthesis issue in the migration
* merge
* some tests and refactoring
* Trunk merge fixes
* Merging trunk
* implement list test
* some tests
* fix tests for extensions
* Fixed snapshot logic
* PEP8 cleanup
* Refactored backup rotate
* conflict resolved
* stub tests
* add stubs for flating api os api testing
* merge with kirill
* associate diassociate untested, first attept to test
* Pep8 fix
* Adding tests for backup no rotation, invalid image type
* Fixed the default arguments to None instead of an empty list
* Fixing PEP8 compliance issues
* Trailing whitespace
* Adding tests for snapshot no-name and backup no-name
* Edited the host filter test case for extra specs
* Removed an import
* Merged from trunk
* Remove extra debug line
* Merged with trunk
* Add reconnect test
* Use simple\_bind\_s instead of bind\_s
* Add reconnect on server fail to LDAP driver
* ec2/cloud: typo
* image/s3: typo
* same typo i made before!
* on 2nd run through filter\_hosts, we've already accounted for the topic memory needs converted to Bytes from MB
* LeastCostScheduler wasn't checking for topic cost functions correctly. Added support so that --least\_cost\_scheduler\_cost\_functions only needs to have method names specified, instead of the full blown version with module and class name.  Still works the old way, too
* requested\_mem typo
* more typos
* typo in least cost scheduler
* Unwind last commit, force anyjson to use our serialization methods
* debug logging of number of instances to build in scheduler
* missed passing in min/max\_count into the create/create\_all\_at\_once calls
* Dealing with cases where extra\_specs wasn't defined
* pep8 fixes
* Renamed from flavor\_extra\_specs to extra\_specs
* All tests passing
* missed passing an argument to consume\_resources
* Committing some broken code in advance of trying a different strategy for specifying args to extensions.ResoruceExtensions, using parent
* Starting to transition instance type extra specs API to an extension API
* Now automatically populates the instance\_type dict with extra\_specs upon being retrieved from the database
* pep8
* Created Bootstrapper to handle Nova bootstrapping logic
* alter test, alter some debug statements
* altered some tests
* freakin migration numbering
* trunk merge
* removing erroneous block, must've been a copy and paste fat finger
* specify keyword, or direct\_api proxy method blows up
* updated the way vifs/fixed\_ips are deallocated and their relationships, altered lease/release fixed\_ip
* Fixed syntax errors
* This adds a way to create global firewall blocks that apply to all instances in your nova installation
* Accept a full serverRef to OSAPI POST /images (snapshot)
* Cast rotation to int
* PEP8 cleanup
* Fixed filter property and added logging
* added tests
* Implemented view and added tests
* Adding missing import
* Fixed issue with zero flavors returning HTTP 500
* Adding dict with single 'meta' key to /imgages/<id>/meta/<key> GET and PUT
* fixing 500 error on v1.0 images xml
* Small refactoring around getting params
* libvirt test for deleting provider firewall rules
* Make firewall rules tests idempotent, move IPy=>netaddr, add deltete test
* merge from trunk
* altho security\_group authorize & revoke tests already exist in test\_api, adding some direct ec2 api method tests.   added group\_id param support to the pertinent security group methods
* Make sure there are actually rules to test against
* Add test for listing provider firewall rules
* pep8: remove newline at end of file
* Add admin api test case (like cloud test case) with a test for fw rules
* Move migration to newer version
* an int() was missed being removed from UUID changes when zone rerouting kicks in
* fixing 500 on None metadata value
* proper xml serialization for images
* "nova-manage checks if user is member of proj, prior to adding role for that project"
* adding metadata container to /images/detail and /images/<id> calls
* Add xml serialization for all /images/<id>/meta and /images/<id>/meta/<key> responses
* trunk merge and migration bump
* handle errors for listing an instance by IP address
* Merged markwash's fixes
* Merged list-zone-recurse
* str\_GET is a property
* Fixed typo
* Merged trunk
* minor fixups
* fixes for recurse\_zones and None instances with compute's get\_all
* typo
* add support for compute\_api.get\_all() recursing zones for more than just reservation\_id
* Change so that the flash socket policy server is using eventlet instead of twisted and is running in the same process as the main vnx proxy
* ec2/cloud: address review
* compute/api: an unit test for \_update\_{image\_}bdm
* ec2/cloud: unit tests for parser/formatter of block device mapping
* ec2/cloud: an unit test for \_format\_instance\_bdm()
* ec2utils: an unit test for mapping\_prepend\_dev()
* ec2: bundle block device mapping
* ec2utils: introduce helper function to prepend '/dev/' in mappings
* volume/api: an unit test for create\_snapshot\_force()
* Add some resource checking for memory available when scheduling Various changes to d-sched to plan for scheduling on different topics, which cleans up some of the resource checking. Re-compute weights when building more than 1 instance, accounting for resources that would be consumed
* Returned code to original location
* Merged from trunk
* run launcher first since it initializes global flags and logging
* Now passing unit tests
* Two tests passing
* Now stubbing nova.db instead of nova.db.api
* Bug fixing
* Added flavor extra specs controller
* Initial unit test (failing)
* This catches the InstanceNotFound exception on create, and ignores it.  This prevents errors in the compute log, and causes the server to not be built (it should only get InstanceNotFound if the server was deleted right after being created).  This is a temporary fix that should be fixed correctly once no-db-messaging stuff is complete
* allocate and release implementation
* fixed pep8 issues
* merge from trunk
* image -> instance in comment
* added virtual\_interface\_update method
* Fixes issues with displaying exceptions regarding flavors in nova-manage
* better debug statement around associating floating ips when multiple fixed\_ips exist
* pep8 fixes
* merging trunk
* added fixed ip filtering by null virtual interface\_id to network get associated fixed ips
* fixed ip gets now have floating IPs correctly loaded
* reverting non-xml changes
* Adding backup rotation
* moving image show/update into 'meta' container
* Check API request for min\_count/max\_count for number of instances to build
* updated libvirt tests network\_info to be correct
* fixed error
* skipping more ec2 tests
* skipping more ec2 tests
* skipping more ec2 tests
* skipping test\_run\_with\_snapshot
* updated test\_cloud to set stub\_network to true
* fixed incorrect exception
* updating glance image fixtures with checksum attribute; fixing glance image service to use checksum attribute
* Round 1 of backup with rotation
* merge from trunk
* fix some issues with flags and logging
* Add a socket server responding with an allowing flash socket policy for all requests from flash on port 843 to nova-vncproxy
* api/ec2: an unit test for create image
* api/ec2, boot-from-volume: an unit test for describe instances
* unittest: an unit test for ec2 describe image attribute
* test\_cloud: an unit test for describe image with block device mapping
* ec2utils: an unit test for ec2utils.properties\_root\_defice\_name
* unittest, image/s3: unit tests for s3 image handler
* image/s3: factor out \_s3\_create() for testability
* ec2utils: unit tests for case insensitive true/false conversion
* ec2utils: add an unit test for dict\_from\_dotted\_str()
* test\_api: unit tests for ec2utils.id\_to\_ec2\_{snap, vol}\_id()
* api/ec2: make CreateImage pass unit tests
* volume/api: introduce create\_snapshot\_force()
* api/ec2/image: make block device mapping pass unit tests
* db/block\_device\_mapping/api: introduce update\_or\_create
* db/migration: resolve version conflict
* merge with trunk
* ec2 api describe\_security\_groups allow group\_id param , added tests for create/delete security group in test\_cloud although also exists in test\_api this tests directly the ec2 method
* pip-requires
* pep8
* fixed zone update
* Stop trying to set a body for HTTP methods that do not allow it. It renders the unit tests useless (since they're testing a situation that can never arise) and webob 1.0.8 fails if you do this
* fixed local db create
* omg stop making new migrations..
* trunk merge
* merge from trunk
* added try except around floating ip get by host in host init
* This branch adds support to the xenapi driver for updating the guest agent on creation of a new instance. This ensures that the guest agent is running the latest code before nova starts configuring networking, setting root password or injecting files
* renamed migrations again
* merge from trunk
* if we get InstanceNotFound error on create, ignore (means it has been deleted before we got the create message)
* some libvirt multi-nic just to get it to work, from tushar
* Removed whitespace
* Fixed objectstore test
* merge with trey
* Very small alterations, switched from using start() to pass host/port, to just defining them up front in init. Doesn't make sense to set them in start because we can't start more than once any way. Also, unbroke binaries
* Bump WebOb requirement to 1.0.8 in pip-requires
* Oops, I broke --help on nova-api, fixed now
* pep8 fix
* Monkey patching 'os' kills multiprocessing's .join() functionality. Also, messed up the name of the eventlet WSGI logger
* Filter out datetime fields from instance\_type
* erase unnecessary TODO: statement
* fixed reviewer's comment. 1. adding dest-instance-dir deleting operation to nova.compute.manager, 2. fix invalid raise statement
* fix comment line
* Stop trying to set a body for HTTP methods that do not allow it. It renders the unit tests useless (since they're testing a situation that can never arise) and webob 1.0.8 fails if you do this
* log -> logging to keep with convention
* Removed debugging and switched eventlet to monkey patch everything
* Removed unneeded import
* Tests for WSGI/Launcher
* Remove the unnecessary insertion of whitespace.  This happens to be enough to match this patch apply on recent versions of XenServer / Xen Cloud Platform
* trunk merge
* fix lp 798361
* Removed logging logic from \_\_init\_\_, added concept of Launcher...no tests for it yet
* nova-manage checks if user is member of proj, prior to adding role for that project
* Other migrations have been merged in before us, so renumber
* Merged trunk
* pep8 fixes
* assert\_ -> assertTrue since assert\_ is deprecated
* added adjust child zone test
* tests working again
* updated the exceptions around virtual interface creation, updated flatDHCP manager comment
* more trunks
* another trunk merge
* This patch adds support for working with instances by UUID in addition to integer IDs
* importing sqlalchemy IntegrityError
* Moving add\_uuid migration to 025
* Merging trunk, fixing conflicts
* Enclosing tokens for xenapi filter in double quotes
* working commit
* Fix objectstore test
* Cleanup and addition of tests for WSGI server
* Merged trunk
* Check that server exists when interacting with /v1.1/servers/<id>/meta resource
* No, really. Added tests for WSGI loader
* Added tests for WSGI loader
* nova.virt.libvirt.connection.\_live\_migration is changed
* Cleanup
* merged rev trunk 1198
* Introduced Loader concept, for paste decouple
* fix pep8 check
* fix comments at nova.virt.libvirt.connection
* Cleanup of the cleanup
* Further nova-api cleanup
* Cleaned up nova-api binary and logging a bit
* Removed debugging, made objectstore tests pass again
* General cleanup and refactor of a lot of the API/WSGI service code
* Adding tests for is\_uuid\_like
* Using proper UUID format for uuids
* Implements a portion of ec2 ebs boot. What's implemented - block\_device\_mapping option for run instance with volume   (ephemeral device and no device isn't supported yet) - stop/start instance
* updated fixed ip and floating ip exceptions
* pep8: white space/blank lines
* Merging trunk
* renamed VirtualInterface exception and extend NovaException
* moving instance existance logic down to api layer
* Ensure os\_type and architecture get set correctly
* Make EC2 update\_instance() only update updatable\_fields, rather than all fields. Patch courtesy of Vladimir Popovski
* Fixes two minor bugs (lp795123 and lp795126) in the extension mechanism.  The first bug is that each extension has \_check\_extension() called twice on it; this is a minor cosmetic problem, but the second is that extensions which flunk \_check\_extension() are still added.  The proposed fix is to make \_check\_extensions() return True or False, then make \_add\_extension() call it from the top and return immediately if \_check\_extensions() returns False
* Fixes a bug where a misleading error message is outputted when there's a sqlalchemy-migrate version conflict
* Result is already in JSON format from \_wait\_for\_agent
* Fix PEP8
* Fix for lp:796834
* Add new architecture attribute along with os\_type
* bunch of docstring changes
* adding check for serverRef hostname matching app url
* Fix for Bug lp:796813
* Fix the volumes extension resource to have a proper prefix - /os-volumes
* Fixes lp797017, which is broken as a result of a fragile method in the xenapi drivers that assumed there would only ever be one VBD attached to an instance
* adding extra image service properties to compute api snapshot; adding instance\_ref property
* Missed a pep8 fix
* Remove thirdwheel.py and do the test with a now-public ExtensionManager.add\_extension()
* Removes nova/image/local.py (LocalImageService)
* Add some documentation for cmp\_version Add test cases for cmp\_version
* Increased error message readability for the OpenStack API
* fixing test case
* Updated "get\_all\_across\_zones" in nova/compute/api.py to have "context = context.elevated()", allowing it to be run by non-admin users
* merging trunk
* more words
* Cleaned up some pep8 issues in nova/api/openstack/create\_instance\_helper.py and nova/api/openstack/\_\_init\_\_.py
* Pull-up from trunk
* Add a test to ensure invalid extensions don't get added
* Update xenapi/vm\_utils.py so that it calls find\_sr instead of get\_sr. Remove the old get\_sr function which by default looked for an SR named 'slices'
* add vlan diagram and some text
* Added context = context.elevated() to get\_all\_across\_zones
* auto load table schema instead of stubbing it out
* Fixed migration per review feedback
* Made hostname independent from ec2 id. Add generation of hostnames based on display name
* Fix for a problem where run\_tests.sh would output a seemingly unrelated error message when there was a sqlalchemy-migrate version number conflict
* stub api methods
* Missed a InstanceTypeMetadata -> InstanceTypeExtraSpecs rename in register\_models
* Fix unitttest so that it actually fails without the fix
* Make $my\_ip Glance's default host, not localhost
* We don't check result in caller, so don't set variable to return value
* Remove debugging statement
* Fix lp795123 and lp795126 by making \_check\_extension() return True or False and checking the result only from the top of \_add\_extension()
* Glance host defaults to  rather than localhost
* Upstream merge
* add in dhcp drawing
* Rename: intance\_type\_metadata -> instance\_type\_extra\_specs
* erroneous self in virtual\_interface\_delete\_by\_instance() sqlalchemy api
* Fixes a bug where a unit test sometimes fails due to a race condition
* remove the network-host fromt he flat diagram
* add multinic diagram
* add the actual image
* Renaming to \_build\_instance\_get
* merged trunk
* returned two files to their trunk versions, odd that they were altered in the first place
* Added a new test for confirming failure when no primary VDI is present
* Unit tests pass again
* more doc (and by more I mean like 2 or 3 sentances)
* Fix copyright date
* PEP8 cleanup
* Attempting to retrieve the correct VDI for snapshotting
* Fixing another test
* Fixing test\_servers\_by\_uuid
* floating\_ips extension is loading to api now
* initial commit of multinic doc
* generated files should not be in source control
* Fixed UUID migration
* Added UUID migration
* Clean up docstrings to match HACKING
* merge with trey
* Small tweaks
* Merged reldan changes
* First implementation of FloatingIpController
* First implementation of FloatingIpController
* compute/api: fix mismerge due to instance creation change
* ec2/cloud.py: fix mismerge
* fix conflict with rebasing
* api/ec2: support CreateImage
* api/ec2/image: support block device mapping
* db/model: add root\_device\_name column to instances table
* ec2utils: consolidate 'vol-%08x' and 'snap-%08x'
* api/ec2: check user permission for start/stop instances
* ec2utils: consolidate 'vol-%08x' and 'snap-%08x'
* api/ec2: check user permission for start/stop instances
* api/ec2: check user permission for start/stop instances
* Adds 'joinedload' statements where they need to be to prevent access of a 'detached' object
* novaclient changed to support projectID in authentication. Caused some minor issues with distributed scheduler. This fixes them up
* Add trailing LF (\n) to password for compatibility with old agents
* Workaround windows agent bugs where some responses have trailing \\r\\n
* removed commented out shim on Instance class
* Windows instances will often take a few minutes setting up the image on first boot and then reboot. We should be more patient for those systems as well check if the domid changes so we can send agent requests to the current domid
* Split patch off to new branch instead
* Add --fixes
* First attempt to rewrite reroute\_compute
* syntax
* Merged trunk
* Windows instances will often take a few minutes setting up the image on first boot and then reboot. We should be more patient for those systems as well check if the domid changes so we can send agent requests to the current domid
* Fixed bug
* Added metadata joinedloads
* Prep-work to begin on reroute\_compute
* specify mysql\_engine for the virtual\_interfaces table in the migration
* Passed in explanation to 400 messages
* Fixing case of volumes alias
* The volumes resource extension should be prefixed by its alias - os-volumes
* Adding uuid test
* Pep8 Fixes
* Fixing test\_servers.py
* pep8
* Fixing private-ips test
* adding server existence check to server metadata resource
* Fixing test\_create\_instance
* made the test\_xenapi work
* test xenapi injected set to True
* something else with tests
* something with tests
* i dont even care anymore
* network\_info has injected in xenapi tests
* Adding UUID test
* network\_info passed in test\_xenapi, mac\_address no longer in instance values dict
* added network injected to stub
* added injected to network dict oportion of tuple returned by get\_instance\_nw\_info
* don't provision to all child zones
* network info to \_create\_vm
* fix mismerge
* updated xenapi\_conn finish\_resize arguments
* stubbed out get\_instance\_nw\_info for compute\_test
* pip novaclient bump
* merge with nova trunk
* fixed up some little project\_id things with new novaclient
* typo
* updated finish\_resize to accept network\_info, updated compute and tests in accordance
* \_setup\_block\_device\_mapping: raise ApiError when db inconsistency found
* db/block\_device\_mapping\_get\_all\_by\_instance: don't raise
* Print list of agent builds a bit prettier
* PEP8 cleanups
* Rename to 024 since 023 was added already
* pep8
* The Xen driver supports running instances in PV or HVM modes, but the method it uses to determine which to use is complicated and doesn't work in all cases. The result is that images that need to use HVM mode (such as FreeBSD 64-bit) end up setting a property named 'os' set to 'windows'
* typo
* None project\_id now default
* Adds code to run\_tests.py which:
* Fixing code to ensure unit tests for objectstore, vhd & snapshots pass
* ec2utils: minor optimize \_try\_convert()
* block\_device\_mapping: don't use [] as default argument
* api/ec2: make the parameter parser an independent method
* Show only if we have slow tests, elapsed only if test success
* Showing elapsed time is now default
* Ensuring pep8 runs even when nose optons are passed
* network tests now teardown user
* Removing seconds unit
* network user only set if doesnt exist
* net base project id now from context, removed incorrect floatnig ip host assignment
* fixed instance[fixed\_ip] in ec2 api, removed fixed\_ip shim
* various test fixes
* Updated so that we use a 'tmp' subdirectory under the Xen SR when staging migrations. Fixes an issue where you would get a 'File exists' error because the directory under 'images' already existed (created via the rsync copy)
* db fakes silly error fix
* debug statements
* updated db fakes
* updated db fakes
* Changed requests with malformed bodies to return a HTTP 400 Bad Request instead of a HTTP 500 error
* updated db fakes and network base to work with virtual\_interface instead of mac\_address
* Phew ... ok, this is the last dist-scheduler merge before we get into serious testing and minor tweaks. The heavy lifting is largely done
* db fakes
* db fakes
* updated libvirt test
* updated libvirt test
* updated libvirt test
* updated libvirt test
* updated libvirt test
* getting the test\_host\_filter.py file from trunk, mine is jacked somehow
* removed extra init calls
* fixed HACKING
* Changed requests with malformed bodies to return a HTTP 400 Bad Request instead of a HTTP 500 error
* duplicate routes moved to base class
* fixed scary diff from trunk that shouldnt have been there
* version passing cleanup
* refactored out controller base class to use aggregation over inheritance
* Move ipy commands to netaddr
* merged trunk
* mp fixes
* Really PEP8? A tab is inferior to 2 spaces?
* pep8 fix
* upstream merge
* Stub out the rpc call in a unit test to avoid a race condition
* merged trunk rev 1178
* Making timing points stricter, only show slow/sluggish tests in summary
* Improved errors
* added kernel/ramdisk migrate support
* Added faults wrapper
* remove file that got ressurected
* Cleaned up pep8 errors using the current version of pep8 located in pip-requires. This is to remove the cluttered output when using the virtualenv to run pep8 (as you should). This will make development easier until the virtualenv requires the latest version of pep8 (see bug 721867)
* merge with trey
* autoload with the appropriate engine during upgrade/downgrade
* Created new exception for handling malformed requests Wrote tests Raise httpBadRequest on malformed request bodies
* Fixed bug 796619
* Adds --show-elapsed option for run\_tests
* pep8
* Alias of volumes extension should be OS-VOLUMES
* Illustrations now added to Distributed Scheduler documentation (and fixed up some formatting)
* Load table schema automatically instead of stubbing out
* Removed clocksource=jiffies from PV\_args
* Test now passes even if the rpc call does not complete on time
* - fixes bug that prevented custom wsgi serialization
* Removed clocksource=jiffies from PV\_args
* merging trunk, fixing pep8
* pep8
* Improved tests
* removing unnecessary lines
* wsgi can now handle dispatching action None more elegantly
* This fixes the server\_metadata create and update functions that were returning req.body (as a string) instead of body (deserialized body dictionary object).  It also adds checks where appropriate to make sure that body is not empty (and return 400 if it is).  Tests updated/added where appropriate
* removed yucky None return types
* merging trunk
* trunk merge
* zones image\_id/image\_href support for 1.0/1.1
* Update xenapi/vm\_utils.py so that it calls find\_sr instead of get\_sr. Remove the old get\_sr function which by default looked for an SR named 'slices'
* fixed bug 796619
* merge trunk
* check for none and empty string, this way empty dicts/lists will be ok
* Updated so that we use a 'tmp' subdirectory under the Xen SR when staging migrations. Fixes an issue where you would get a 'File exists' error because the directory under 'images' already existed (created via the rsync copy)
* fix method chaining in database layer to pass right parameters
* Add a method to delete provider firewall rules
* Add ability to list ip blocks
* pep 8 whitespace fix
* Move migration
* block migration feature added
* Reorder firewall rules so the common path is shorter
* ec2 api method allocate\_address ; raises exception.NoFloatingIpsDefined instead of UnknownError when there aren't any floating ips available
* in XML Serialization of output, the toprettyxml() call would sometimes return a str() and sometimes unicode(), I've forced encoding to utf-8 to ensure that we always get str().  This fixes the related bug
* A recent commit added a couple of directories that don't belong in version control. Remove them again
* adding support for cusom serialization methods
* forgot a comma
* floating ips can now move around the network hosts
* A recent commit added a couple of directories that don't belong in version control. Remove them again
* 'network list' prints project id
* got rid of prints for debugging
* small pep8 fixes
* return body correctly as object instead of a string, with tests, also check for empty body on requests that need a body
* adding xml support to /images/<id>/meta resource; moving show/update entities into meta container
* removed posargs decorator, all methods decorated
* Allows Nova to talk to multiple Glance APIs (without the need for an external load-balancer). Chooses a random Glance API for each request
* forgot a comma
* misc argument alterations
* force utf-8 encoding on toprettyxml call for XMLDictSerializer
* added new exception more descriptive of not having available floating addresses avail for allocation
* raise instance instead of class
* Fix copyright year
* style change
* Only update updateable fields
* removing LocalImageService from nova-manage
* rebase from trunk
* decorators for action methods added
* source illustrations added & spelling/grammar based on comstud's feedback
* fixed reraise in trap\_error
* forgot some debugging statements
* trunk merge and ec2 tests fixed
* Add some docstrings for new agent build DB functions
* Add test for agent update
* Multiple position dependent formats and internationalization don't work well together
* Adding caveat
* Fixing code per review comments
* removed fixed\_ips virtual\_interface\_id foreignkey constraint from multi\_nic migration, and added it as a standalone migration with special sqlite files
* Record architecture of image for matching to agent build later. Add code to automatically update agent running on instance on instance creation
* Add version and agentupdate commands
* Add an extension to allow for an addFixedIp action on instances
* further changes
* tests working after merge-3 update
* 022 migration has already been added, so make ours 023 now
* parse options with optparse, options prepended '--'
* renamed migration again
* Pull-up from multi\_nic
* merged koelkers tests branch
* remove file that keeps popping up
* Merging trunk
* Fixing the tests
* matched the inner exception specifically, instead of catching all RemoteError exceptions
* Support multiple glance-api servers
* Merged trunk
* Fix merge conflict
* removing custom exception, instead using NoFloatingIpsDefined
* raises exception.NoFloatingIpsDefined instead of UnknownError
* Normalize and update database with used vm\_mode
* added a test for allocate\_address & added error handling for api instead of returning 'UnknownError', will give information 'AllocateAddressError: NoMoreAddresses
* merged trunk again
* updated docstring for nova-manage network create
* Now forwards create instance requests to child zones. Refactored nova.compute.api.create() to support deferred db entry creation
* MySQL database tables are currently using the MyISAM engine. Created migration script nova/db/sqlalchemy/migrate\_repo/versions/021\_set\_engine\_mysql\_innodb.py to change all current tables to InnoDB
* merged trunk again
* Support for header "X-Auth-Project-Id" in osapi
* Cleaned up some pylint errors
* tweaks
* PEP8 fix
* removed network\_info shims in vmops
* Fix for bug#794239 to allow pep8 in run\_tests.sh to use the virtual environment
* adding Authorizer key for ImportPublicKey
* fix exception type catched
* Look for vm\_mode property on images and use that if it exists to determine if image should be run in PV or HVM mode. If it doesn't exist, fall back to existing logic
* removed straggler code
* trunk merge
* merge trunk
* pep8
* removed autogen file
* added field NOVA\_PROJECT\_ID to template for future using
* added tests for X-Auth-Project-Id header
* fix fake driver for using string project
* adding Authorizer key for ImportPublicKey
* Cleaned up some of the larger pylint errors. Set to ignore some lines that pylint just couldn't understand
* DRY up the image\_state logic. Fix an issue where glance style images (which aren't required to have an 'image\_state' property) couldn't be used to run instances on the EC2 controller
* remove the debuging lines
* remove the old stuff
* tests all pass
* Added virtual environment to PEP8 tests
* Added test\_run\_instances\_image\_status\_active to test\_cloud
* Add the option to specify a default IPv6 gateway
* pep8
* Removed use of super
* Added illustrations for Distributed Scheduler and fixed up formatting
* Disabled pylint complaining about no 'self' parameter in a decorator function
* DRY up the image\_state logic. Fix an issue where glance style images (which aren't required to have an 'image\_state' property) couldn't be used to run instances on the EC2 controller
* Fixed incorrect error message Added missing import Fixed Typo (pylint "undefined variable NoneV")
* removing local image service
* Remove unnecessary docstrings
* Add the option to specify a default IPv6 gateway
* port the floating over to storing in a list
* Make libvirt snapshotting work with images that don't have an 'architecture' property
* take out the host
* Removed empty init
* Use IPNetwork rather than IPRange
* Fixed type causing pylint "exception is not callable" Added param to fake\_instance\_create, fake objects should appear like the real object. pylint "No value passed for parameter 'values' in function call"
* sanity check
* run\_instances will check image for 'available' status before attempting to create a new instance
* fixed up tests after trunk merge
* Use True/False instead of 1/0 when setting updating 'deleted' column attributes. Fixes casting issues when running nova with Postgres
* merged from trunk
* Remove more stray import IPy
* Dropped requirement for IPy
* Convert stray import IPy
* Use True/False instead of 1/0 when setting updating 'deleted' column attributes.Fixes casting issues when running nova with Postgres
* Removed commented code
* Added test case for snapshoting base image without architecture
* Remove ipy from virt code and replace with netaddr
* Remove ipy from network code and replace with netaddr
* Remove ipy from nova/api/ec2/cloud.py and use netaddr
* Remove ipy from nova-manage and use netaddr
* This branch allows marker and limit parameters to be used on image listing (index and detail) requests.  It parses the parameters from the request, and passes it along to the glance\_client, which can now handle these parameters.  Essentially all of the logic for the pagination is handled in glance, we just pass along the correct parameters and do some error checking
* merge from trunk, resolved conflicts
* Update the OSAPI images controller to use 'serverRef' for image create requests
* Changed the error raise to not be AdminRequired when admin is not, in fact, required
* merge with trey
* Change to a more generic error and update documentation
* make some of the tests
* Merged trunk
* merge trunk
* Ignore complaining about dynamic definition
* Removed Duplicate method
* Use super on an old style class
* Removed extraneous code
* Small pylint fixes
* merge with trunk
* Fixed incorrect exception
* This branch removes nwfilter rules when instances are terminated to prevent resource leakage and serious eventual performance degradation.  Without this patch, launching instances and restarting nova-compute eventually become very slow
* merge with trunk
* resolve conflicts with trunk
* Update migrate script version to 22
* Added 'config list' to nova-manage. This function will output all of the flags and their values
* renamed migration
* trunk merge after 2b hit
* Distributed Scheduler developer docs
* Updated to use the '/v1/images' URL when uploading images to glance in the Xen glance plugin. Fixes the issue where snapshots fail to upload correctly
* merged trunk again
* added 'nova-manage config list' which will list out all of the flags and their values. I also alphabetized the list of available categories
* Updated to use the '/v1/images' URL when uploading images to glance in the Xen glance plugin. Fixes issue where snapshots failed to get uploaded
* Removed "double requirement" from tools/pip-requires file
* merged koelker migration changes, renumbered migration filename
* fix comment
* Fixed pip-requires double requirement
* Added a test case for XML serialization
* Removed unused and erroneous (yes, it was both) function
* paramiko is not installed into the venv, but is required by smoketests/base.py.  Added paramiko to tools/pip-requires
* Changes all uses of utcnow to use the version in utils.  This is a simple wrapper for datetime.datetime.utcnow that allows us to use fake values for tests
* Set pylint to ignore correct lines that it could not determine were correct, due to the means by which eventlet.green imported subprocess Minimized the number of these lines to ignore
* LDAP optimization and fix for one small bug caused huge performance leak. Dashboard's benchmarks showed overall x22 boost in page request completion time
* Adds LeastCostScheduler which uses a series of cost functions and associated weights to determine which host to provision to
* Make libvirt snapshotting work with images that don't have an 'architecture' property
* Add serverRef to image metadata serialization list
* Fixed pylint: no metadata member in models.py
* Implement OSAPI v1.1 style image create
* trunk merge
* little tweaks
* Flush AuthManager's cache before each test
* Fixed FakeLdapDriver, made it call LdapDriver.\_\_init\_\_
* Merged with trunk
* This change set adds the ability to create new servers with an href that points to a server image on any glance server (not only the default one configured).  This means you can create a server with imageRef = http://glance1:9292/images/3  and then also create one with imageRef = http://glance2:9292/images/1.  Using the old way of passing in an image\_id still works as well, and will use the default configured glance server (imageRef = 3 for instance)
* added nova\_adminclient to tools/pip-requires
* merged trunk
* Added paramiko to tools/pip-requires
* Tests that all exceptions can be raised properly, and fix the couple of instances where they couldn't be constructed due to typos
* merge trunk... yay..
* switch zones to use utcnow
* make all uses of utcnow use our testable utils.utcnow
* Fix error with % as replacement string
* Fixing conflicts
* Tests to assure all exceptions can be raised as well as fixing NotAuthorized
* use %% because % is a replacement string character
* some comment docstring modifications
* Makes novarc work properly on a mac and also for zsh in addition to bash. Other shells are not guaranteed to work
* This adds the ability to publish nova errors to an error queue
* don't use python if readlink is available
* Sudo chown the vbd device to the nova user before streaming data to it. This resolves an issue where nova-compute required 'root' privs to successfully create nodes with connection\_type=xenapi
* Bugfix #780784. KeyError when creating custom image
* Remove some of the extra image service calls from the OS API images controller
* pep8 fixes
* merge with trey
* make it pass for the demo
* Merged with Will
* Minor comment formatting changes
* got rid of more test debugging stuff that shouldnt have made it in
* Remove comment about imageRef not being implemented
* Remove a rogue comment
* more tests (empty responses)
* get\_all with reservation id across zone tests
* move index and detail functions to v10 controller
* got rid of prints
* Refactored after review, fixed merge
* image href should be passed through the rebuild pipeline, not the image id
* merge from trunk
* got rid of print debugs
* cleanup based on waldon's comments, also caught a few other issues
* missed a couple chars
* Little cleanups
* pep8 and all that
* tests all passing again
* list --reservation now works across zones
* fix novarc to work on mac and zsh
* merged, with trunk, fixed the test failure, and split the test into 3 as per peer review
* Fixes nova-manage bug.  When a nova-network host has allocated floating ips \*AND\* some associated, the nova-manage floating list <host> would throw exception because was expecting hash with 'ec2\_id' key , however, the obj returned is a sqlalchemy obj and the attr we need is 'hostname'
* start the flat network
* more testing fun
* fixed as per peer review to make more consistent
* merged from trunk
* Implement the v1.1 style resize action with support for flavorRef
* Updates to the 018\_rename\_server\_management\_url migration to avoid adding and dropping a column. Just simply rename the column
* Support SSL AMQP connections
* small fixes
* Allow SSL AMQP connections
* reservation id's properly forwarded to child zones on create
* merge from trunk
* fix pep8 issue from merge
* coose the network\_manager based on instance variable
* fix the syntax
* forgot a comma
* This just fixes a bunch of pep8 issues that have been lingering around for a while and bothering me :)
* touch ups
* Updates to the 018\_rename\_server\_management\_url to avoid adding and dropping a column. Just simply rename the column
* basic reservation id support to GET /servers
* - move osapi-specific wsgi code from nova/wsgi.py to nova/api/openstack/wsgi.py - refactor wsgi modules to use more object-oriented approach to wsgi request handling:     - Resource object steps up to original Controller position     - Resource coordinates deserialization, dispatch to controller, serialization     - serialization and deserialization broken down to be more testable/flexible
* merge from trunk
* make the stubs
* use the host
* da stubs
* Bumped migration number
* Merged from trunk
* updates to keep things looking better
* merge from trunk
* fix pep8 issues
* PEP8 fix
* Moved memcached driver import to the top of modules
* fix pep8 issues
* pep8 fixes
* Cleanup instances\_path in the test\_libvirt test\_spawn\_with\_network\_info test. Fixes issue where the nova/tests/instance-00000001/ is left in the nova source tree when running run\_test.sh -N
* fix filtering tests
* Renamed migration to 020
* osapi: added support for header X-Auth-Project-Id
* added /zones/boot reservation id tests
* Adds hooks for applying ovs flows when vifs are created and destroyed for XenServer instances
* Logs the exception if metadata fails and returns a 500 with an error message to the client
* Fixing a bunch of conflicts
* add new base
* refator existing fakes, and start stubbing out the network for the new manager tests
* pep8
* Incremented version of migration script to reflect changes in trunk
* basic zone-boot test in place
* Incremented version of migration script to reflect changes in trunk
* Incremented version of migration script to reflect changes in trunk
* switch to using webob exception
* Added new snapshots table to InnoDB migrations
* Adds a few more status messages to error states on image register for the ec2 api.  This will hopefully provide users of the ec2 api with a little more info if their registration fails
* Cleaned up bug introduced after fixing pep8 errors
* Fixing Scheduler Tests
* Cleaned up bug introduced after fixing ^Cp8 errors
* Basic hook-up to HostFilter and fixed up the passing of InstanceType spec to the scheduler
* make the old tests still pass
* rename da stuffs
* rename da stuffs
* Resolving conflict and finish test\_images
* merge
* added tests for image detail requests
* Merged trunk
* Merged trunk and fixed conflicts
* Whitespace cleanups
* added pause/suspend implementation to nova.virt.libvirt\_conn
* Change version number of migration
* Update the rebuild\_instance function in the compute manager so that it accepts the arguments that our current compute API sends
* Moved everything from thread-local storage to class attributes
* Added the filtering of image queries with image metadata. This is exposing the filtering functionality recently added to Glance. Attempting to filter using the local image service will be ignored
* This enables us to create a new volume from a snapshot with the EC2 api
* Use a new instance\_metadata\_delete\_all DB api call to delete existing metadata when updating a server
* added tests for GlanceImageService
* Add vnc\_keymap flag, enable setting keymap for vnc console and fix bug #782611
* Add refresh\_provider\_fw\_rules to virt/driver.py#ComputeDriver so virtualization drivers other than libvirt will raise NotImplemented
* Rebased to trunk rev 1120
* trunk merge
* added get\_pagination\_params function in common with tests, allow fake and local image services to accept filters, markers, and limits (but ignore them for now)
* Cleaned up text conflict
* pep8 fixed
* pep8 fixes
* Cleaned up text conflict
* removing semicolon
* Cleaned up text conflict
* skip the vlam test, not sure why it doesn't work
* Cleaned up pep8 errors
* Fixed the APIError typo
* MySQL database tables are currently using the MyISAM engine. Created migration script nova/db/sqlalchemy/migrate\_repo/versions/020\_set\_engine\_mysql\_innodb.py to change all current tables to InnoDB
* MySQL database tables are currently using the MyISAM engine. Created migration script nova/db/sqlalchemy/migrate\_repo/versions/020\_set\_engine\_mysql\_innodb.py to change all current tables to InnoDB
* Handle the case when a v1.0 api tries to list servers that contain image hrefs
* Added myself to Authors file
* edits based on ed's feedback
* More specific error messages for resize requests
* pep8 fixes
* merge trunk
* tests passing again
* Actually remove the \_action\_resize code from the base Servers controller. The V11 and V10 controllers implement these now
* merge from trunk
* This adds a volume snapshot support with the EC2 api
* Fixed the typo of APIError with ApiError
* nova/auth/novarc.template: Changed NOVA\_KEY\_DIR to allow symlink support
* Updated compute api and manager to support image\_refs in rebuild
* zone-boot working
* regular boot working again
* regular boot working again
* first pass at reservation id support
* Updates so that 'name' can be updated when doing a OS API v1.1 rebuild. Fixed issue where metadata wasn't getting deleted when an empty dict was POST'd on a rebuild
* first cut complete
* project\_id moved to be last
* add support for keyword arguments
* fixed nova.virt.libvirt\_conn.resume() method - removing try-catch
* reservation\_id's done
* basic flow done
* lots more
* starting
* boot-from-volume: some comments and NOTE(user name)
* Use metadata variable when calling \_metadata\_refs
* Implement the v1.1 style resize action with support for flavorRef
* Fixes to the SQLAlchmeny API such that metadata is saved on an instance\_update. Added integration test to test that instance metadata is updated on a rebuild
* Update the rebuild\_instance function in the compute manager so that it accepts the arguments that our current compute API sends
* Cleanup instances\_path in test\_libvirt test\_spawn\_with\_network\_info test
* Added missing nova import to image/\_\_init\_\_.py
* Another image\_id location in hyperv
* Fixing nova.tests.api.openstack.fakes.stub\_out\_image\_service. It now stubs out the get\_image\_service and get\_default\_image\_service functions. Also some pep8 whitespace fixes
* Fixing xen and vmware tests by correctly mocking glance client
* Fixing integration tests by correctly stubbing image service
* More image\_id to image\_ref stuff. Also fixed tests in test\_servers
* When encrypting passwords in xenapi's SimpleDH(), we shouldn't send a final newline to openssl, as it'll use that as encryption data.  However, we do need to make sure there's a newline on the end when we write the base64 string for decoding..  Made these changes and updated the test
* Fixes the bug introduced by rpc-multicall that caused some test\_service.py tests to fail by pip-requiring a later version of mox
* added \n is not needed with -A
* now pip-requires mox version 0.5.3
* added -A back in to pass to openssl
* merge with dietz
* merge with dietz
* XenAPI tests pass
* fixed so all the new encryption tests pass.. including data with newlines and so forth
* Glance client updates for xenapi and vmware API to work with image refs
* Merged lp:~rackspace-titan/nova/lp788979
* get the right args
* Fixing pep8 problems
* Modified instance\_type\_create to take metadata
* Added test for instance type metadata create
* merge with trey
* Added test for instance type metadata update
* Added delete instance metadata unit test
* Added a unit test
* Adding test code
* Changed metadata to meta to avoid sqlalchemy collision
* Adding accessor methods for instance type metadata
* remove errant print statement
* prevent encryption from adding newlines on long messages
* trunk merge
* nova/auth/novarc.template: Changed NOVA\_KEY\_DIR to allow symlink support
* docstrings again and import ordering
* fix encryption handling of newlines again and restructure the code a bit
* Libvirt updates for image\_ref
* Commit the migration script
* fixed docstrings and general tidying
* remove \_take\_action\_to\_instance
* fix calls to openssl properly now.  Only append \n to stdin when decoding.  Updated the test slightly, also
* fixed read\_only check
* Fix pep8 errors
* Fix pep8 violations
* Fix a description of 'snapshot\_name\_template'
* unittest: make unit tests happy
* unittest: tests for boot from volume and stop/start instances
* compute: implement ec2 stop/start instances
* compute, virt: support boot-from-volume without ephemeral device and no device
* db: add a table for block device mapping
* volume/api: allow volume clone from snapshot without size
* api/ec2: parse ec2 block device mapping and pass it down to compute api
* teach ec2 parser multi dot-separted argument
* api/ec2: make ec2 api accept true/false
* Adds the ability to make a call that returns multiple times (a call returning a generator). This is also based on the work in rpc-improvements + a bunch of fixes Vish and I worked through to get all the tests to pass so the code is a bit all over the place
* fix a minor bug unrelated to this change
* updated the way allocate\_for\_instance and deallocate\_for\_instance handle kwargs
* Rename instances.image\_id to instances.image\_ref
* changes per review
* merge with dietz
* stub out passing the network
* Virt tests passing while assuming the old style single nics
* adding TODOs per dabo's review
* Fixes from Ed Leafe's review suggestions
* merge trunk
* move udev file so it follows the xen-backend.rules
* Essentially adds support for wiring up a swap disk when building
* add a comment when calling glance:download\_vhd so it's clear what is returned
* make the fakes be the correct
* skip vmware tests, since they need to be updated for multi-nic by someone who knows the backend
* put back the hidden assert check i accidentally removed from glance plugin
* fix image\_path in glance plugin
* Merged trunk
* skip the network tests for now
* Change the return from glance to be a list of dictionaries describing VDIs Fix the rest of the code to account for this Add a test for swap
* cleaning up getattr calls with default param
* branch 2a merge (including trunk)
* trunk merge
* remerged with 2a
* tests pass and pep8'ed
* review fixups
* Expanded tests
* In vmwareapi\_net.py removed the code that defines the flag 'vlan\_interface' and added code to set default value for the flag 'vlan\_interface' to 'vmnic0'. This will now avoid flag re-definition issue
* missed a driver reference
* exceptions are logged via the raise, so just log an error message
* log upload errors
* instance obj returned is not a hash, instead is sqlalchemy obj and hostname attr is what the logic is looking for
* we don't need the mac or the host anymore
* Test tweaks
* instances don't need a mac\_address to be created anymore
* Make a cleaner log message and use [] instead of . to get database fields
* use the skip decorator rather than comment out
* merging trunk
* Adding some pluralization
* Double quotes are ugly #3
* merge with dietz
* fix typo introduced during merge conflict resolution
* Remove spurious newline at end of file
* Move migration to fix ordering
* remove dead/duplicate code
* Double quotes are ugly #2
* Double quotes are ugly
* refactoring compute.api.create()
* Fix test\_cloud tests
* Restricted image filtering by name and status only
* Switch the run\_instances call in the EC2 back to 'image\_id'. Incoming requests use 'imageId' so we shouldn't modify this for image HREF's
* Switching back to chown. I'm fine w/ setfacl too but nova already has 'chown' via sudoers so this seems reasonable for now
* replace double quatation to single quatation at nova.virt.libvirt\_conn
* remove unnecessary import inspect at nova.virt.libvirt\_conn
* creating \_take\_action\_to\_instance to nova.virt.libvirt\_conn.py
* Instead of redefining the flag 'vlan\_interface', just setting a default value (vmnic0) in vmwareapi\_net.py
* Renamed image\_ref variables to image\_href. Since the convention is that x\_ref vars may imply that they are db objects
* Added test skipper class
* change the behavior of calling a multicall
* move consumerset killing into stop
* don't put connection back in pool
* replace removed import
* cleanups
* cleanup the code for merging
* make sure that using multicall on a call with a single result still functions
* lots of fixes for rpc and extra imports
* don't need to use a separate connection
* almost everything working with fake\_rabbit
* bring back commits lost in merge
* connection pool tests and make the pool LIFO
* Add rpc\_conn\_pool\_size flag for the new connection pool
* Always create Service consumers no matter if report\_interval is 0 Fix tests to handle how Service loads Consumers now
* catch greenlet.GreenletExit when shutting service down
* fix consumers to actually be deleted and clean up cloud test
* fakerabbit's declare\_consumer should support more than 1 consumer.  also: make fakerabbit Backend.consume be an iterator like it should be.
* convert fanout\_cast to ConnectionPool
* pep8 and comment fixes
* Add a connection pool for rpc cast/call Use the same rabbit connection for all topic listening and wait to be notified vs doing a 0.1 second poll for each
* add commented out unworking code for yield-based returns
* make the test more expicit
* add support to rpc for multicall
* merge with dietz
* Fixing divergence
* Merged trunk
* Added params to local and base image service
* Fixed the mistyped line referred to in bug 787023
* Merged trunk and resolved conflicts
* Fixed a typo
* make the test work
* Merged with trunk
* Several changes designed to bring the openstack api 1.1 closer to spec - add ram limits to the nova compute quotas - enable injected file limits and injected file size limits to be overridden in the quota database table - expose quota limits as absolute limits in the openstack api 1.1 limits resource - add support for controlling 'unlimited' quotas to nova-manage
* During the API create call, the API would kick off a build and then loop in a greenthread waiting for the scheduler to pick a host for the instance.  After API would see a host was picked, it would cast to the compute node's set\_admin\_password method
* starting breakdown of nova.compute.api.create()
* fix test.  instance is not updated in DB with admin password in the API anymore
* Merged upstream
* pep8 fixes
* Initial tests
* fix forever looping on a password reset API call
* updating admin\_pass moved down to compute where the password is actually reset.  only update if it succeeds
* merged trunk
* change install\_ref.admin\_password to instance\_ref.admin\_pass to match the DB
* Merged trunk
* remove my print
* we're getting a list of tuples now'
* we have a list of tuples, not a list of dicts
* pep8 fixes
* return the result of the function
* Updated tests to use mox pep8
* InstanceTypesMetadata is now registered
* make some changes to the manager so dupe keywords don't get passed
* Fixing the InstanceTypesMetadata table definition
* try out mox for testing image request filters
* Adding the migrate code to add the new table
* dist-sched-2a merge
* Created new libvirt directory, moved libvirt\_conn.py to libvirt/connection.py, moved libvirt templates, broke out firewall and network utilities
* make the column name correct
* The code for getting an opaque reference to an instance assumed that there was a reference to an instance obj available when raising an exception. I changed this from raising an InstanceNotFound exception to a NotFound, as this is more appropriate for the failure, and doesn't require an instance ID
* merge against 2a
* trunk merge
* simplified the limiting differences for different versions of the API
* New tests added
* Changed the exception type to not require an instance ID
* Added model for InstanceTypeMetadata
* Added test
* Avoid wildcard import
* Add unittests for cloning volumes
* merged recent trunk
* merged recent trunk
* Make snapshot\_id=None a default value in VolumeManager:create\_volume().  It is not a regular case to create a volume from a snapshot
* Don't need to import json
* Fix wrong call of the volume api create()
* pep8 fix in nova/compute/api.py
* instead of the API spawning a greenthread to wait for a host to be picked, the instance to boot, etc for setting the admin password...  let's push the admin password down to the scheduler so that compute can just take care of setting the password as a part of the build process
* tests working again
* eventlet.spawn\_n() expects the function and arguments, but it expects the arguments unpacked since it uses \*args
* Don't pass a tuple since spawn\_n will get the arguments with \*args anyway
* move devices back
* Using the root-password subcommand of the nova client results in the password being changed for the instance specified, but to a different unknown password. The patch changes nova to use the password specified in the API call
* Pretty simple.  We call openssl to encrypt the admin password, but the recent changes around this code forgot to strip the newline off the read from stdout
* DHSimple's decrypt needs to append \n when writing to stdin
* need to strip newline from openssl stdout data
* merge with trey
* work on
* merge trunk
* moved auto assign floating ip functionality from compute manager to network manager
* create a mac address entry and blindly use the first network
* create a mac address entry and blindly use the first network
* create a mac address entry and blindly use the first network
* need to return the ref
* Added filtering on image properties
* Fixes a bug related to incorrect reparsing of flags and prevents many extra reparses
* no use mac
* comment out the direct cloud case
* make fake\_flags set defaults instead of runtime values
* add a test from vish and fix the issues
* Properly reparse flags when adding dynamic flags
* no use mac
* instances don't have mac's anymore and address is now plural
* let the fake driver accept the network info
* Comment out the 2 tests that require the instance to contain mac/ip
* initial use of limited\_by\_marker
* more fix up
* many tests pass now
* its a dict, not a class
* we don't get the network in a tuples anymore
* specified image\_id keyword in exception arg
* When adding a keypair with ec2 API that already exists, give a friendly error and no traceback in nova-api
* added imageid string to exception, per peer review
* Fixes some minor doc issues - misspelled flags in zones doc and also adds zones doc to an index for easier findability
* removed most of debugging code
* Fixing docstring
* Synchronise with Diablo development
* make \_make\_fixture respect name passed in
* zone1 merge
* sending calls
* accepting calls
* Fixing \_get\_kernel\_ramdisk\_from\_image to use the correct image service
* Fixing year of copyright
* merge
* select partially going through
* merge from trunk
* make image\_ref and image\_id usage more consistant, eliminate redundancy in compute\_api.create() call
* take out irrelevant TODO
* blah
* uhhh yea
* local tweaks
* getting closer to working select call
* swap should use device 1 and rescue use device 2
* merged from trunk
* fix tests, have glance plugin return json encoded string of vdi uuids
* make sure to get a results, not the query
* merged from trunk
* Removing code duplication between parse\_image\_ref and get\_image service. Made parse\_image\_ref private
* Changed ec2 api dupe key exception log handler info->debug
* Added test case for attempting to create a duplicate keypair
* Removing debug print line
* Renaming service\_image\_id vars to image\_id to reduce confusion. Also some minor cleanup
* cleanup and fixes
* got rid of print statement
* initial fudging in of swap disk
* make the test\_servers pass by removing the address tests for 1.1, bug filed
* port the current create\_networks over to the new network scheme
* need to have the complete table def since sqlalchemy/sqlite won't reload the model
* must have the class defined before referencing it
* make the migration run with tests
* get rid of all mention of drivers ... it's filter only now
* merge trunk
* Fixes euca-attach-volume for iscsi using Xenserver
* fix typo
* merge branch lp:~rackspace-titan/nova/ram-limits
* Added test
* Fixes missing space
* Fixed mistyped line
* Rebased to trunk rev 1101
* merge from trunk
* moved utils functions into nova/image/
* Trunk merge
* Fix bug #744150 by starting nova-api on an unused port
* Removing utils.is\_int()
* Added myself to Authors
* When adding a keypair that already exists, give a friendly error and no traceback in nova-api
* --dhcp-lease-max=150 by default. This prevents >150 instances in one network
* Minor cleanup
* No reason to modify the way file names are generated for kernel and ramdisk, since the kernel\_id and ramdisk\_id is still guaranteed to be ints
* found a typo in the xenserver glance plugin that doesn't work with glance trunk. Also modified the image url to fetch from /v1/image/X instead of /image/X as that returned a 300
* fixing glance plugin bug and setting the plugin to use /v1 of the glance api
* merge trunk
* move init start position to 96 to allow openvswitch time to fully start
* Include data files for public key tests in the tarball
* minor cleanup
* Makes sure vlan creation locks so we don't race and fail to create a vlan
* merging trunk
* Include data files for public key tests in the tarball
* Merged with trunk
* renaming resource\_factory to create\_resource
* combined the exception catching to eliminate duplication
* synchronize vlan creation
* print information about nova-manage project problems
* merge from trunk
* fix comments
* make nwfilter mock more 'realistic' by having it remember which filters have been defined
* fix pep8 issue
* fixed silly issue with variable needing to be named 'id' for the url mapper, also caught new exception type where needed
* This is the groundwork for the upcoming distributed scheduler changes. Nothing is actually wired up here, so it shouldn't break any existing code (and all tests pass)
* Merging trunk
* Get rid of old virt/images.py functions that are no longer needed.  Checked for any loose calls to these functions and found none.  All tests pass for me
* Update OSAPI v1.1 extensions so that it supports RequestExtensions. ResponseExtensions were removed since the new RequestExtension covers both use cases. This branch also removes some of the odd serialization code in the RequestExtensionController that converted dictionary objects into webob objects. RequestExtension handlers should now always return proper webob objects
* Addressing bug #785763. Usual default for maximum number of DHCP leases in dnsmasq is 150. This prevents instances to obtain IP addresses from DHCP in case we have more than 150 in our network. Adding myself to Authors
* foo
* syntax errors
* temp fixes
* added support for reserving certain network for certain project
* Fixed some tests
* merge with trunk
* Added an EC2 API endpoint that'll allow import of public key. Prior, api only allowed generation of new keys
* This fix ensures that kpartx -d is called in the event that tune2fs fails during key injection, as it does when trying to inject a key into a windows instance.  Bug #760921 is a symptom of this issue, as if kpartx -d is not called then partitions remain mapped that prevent the underlying nbd from being reused
* Add new flag 'max\_kernel\_ramdisk\_size' to specify a maximum size of kernel or ramdisk so we don't copy large files to dom0 and fill up /boot/guest
* The XenAPI driver uses openssl as part of the nova-agent implementation to set the password for root. It uses a temporary file insecurely and unnecessarily. Change the code to write the password directly to stdin of the openssl process instead
* The tools/\* directory is now included in pep8 runs. Added an opt-out system for excluding files/dirs from pep8 (using GLOBIGNORE)
* fill out the absolute limit tests for limits v1.0 controller
* add absolute limits support to 1.0 api as well
* Merged with trunk
* fixed pep8 issue
* merge from trunk
* Fail early if requested imageRef does not exist when creating a server
* Separate out tests for when unfilter is called from iptables vs. nwfilter driver.  Re: lp783705
* Moved back templates and fixed pep8 issue. Template move was due to breaking packaging with template moves. That will need to happen in a later merge
* further refactoring of wsgi module; adding documentation and tests
* don't give instance quota errors with negative values
* Merged trunk and resolved horrible horrible conflicts
* No reason to hash ramdisk\_id and kernel\_id. They are ints
* temp
* waldon's naming feedback
* Fixing role names to match code
* Merging trunk
* updated the hypervisors and ec2 api to support receiving lists from pluralized mac\_addresses and fixed\_ips
* fname should have been root\_fname
* minor cleanup, plus had to merge because of diverged-branches issue
* Minor cleanup
* merge from trunk
* Fix comments
* Add a unitest to test EC2 snapshot APIs
* Avoid wildcard import
* Simple change to sort the list of controllers/methods before printing to make it easier to read
* missed the new wsgi test file
* removing controller/serializer code from wsgi.py; updating other code to use new modules
* merge lp:nova
* fixup absolute limits to latest 1.1 spec
* refactoring wsgi to separate controller/serialization/deserialization logic; creating osapi-specific module
* default to port 80 if it isnt in the href/uri
* return dummy id per vishs suggestion
* hackish patch to fix hrefs asking for their metadata in boot (this really shouldnt be in ec2 api?)
* Sort list of controllers/methods before printing
* use a manual 500 with error text instead of traceback for failure
* log any exceptions that get thrown trying to retrieve metadata
* skeleton of forwarding calls to child zones
* fix typo in udev rule
* merge trunk
* libvirt fixes to use new image\_service stuff
* On second thought, removing decorator
* Adding FlagNotSet exception
* Implements a basic mechanism for pushing notifications out to interested parties. The rationale for implementing notifications this way is that the responsibility for them shouldn't fall to Nova. As such, we simply will be pushing messages to a queue where another worker entirely can be written to push messages around to subscribers
* Spacing changes
* get real absolute limits in openstack api and verify absolute limit responses
* Added missing xenhost plugin. This was causing warnings to pop up in the compute logs during periodic\_task runs. It must have not been bzr add'd when this code was merged
* fixed bug with compute\_api not having actual image\_ref to use proper image service
* Adding xenhost plugin
* Merging trunk
* Added missing xenhost plugin
* Fix call to spawn\_n() instead. It expects a callable
* fix pep8 issues
* oops, took out commented out tests in integrated.test\_servers and made tests pass again
* fixed api.openstack.test\_servers tests...again
* fixed QuotaTestCases
* fixed ComputeTestCase tests
* made ImageControllerWithGlanceServiceTests pass
* fixed test\_servers small tests as well
* get integrated server\_tests passing
* Removed all utils.import\_object(FLAGS.image\_service) and replaced with utils.get\_default\_image\_service()
* MySQL database tables are using the MyISAM engine. Created migration script to change all current tables to InnoDB, updated version to 019
* MySQL database tables are using the MyISAM engine. Created migration script to change all current tables to InnoDB, updated version to 019
* Small cleanups
* Moving into scheduler subdir and refactoring out common code
* Moving tests into scheduler subdirectory
* added is\_int function to utils
* Pep8 fixes
* made get\_image\_service calls in servers.py
* use utils.get\_image\_service in compute\_api
* updates to utils methods, initial usage in images.py
* added util functions to get image service
* Using import\_class to import filter\_host driver
* Adding fill first cost function
* add more statuses for ec2 image registration
* Add --fixes
* Add --fixes
* Fixes the naming of the server\_management\_url in auth and tests
* Merging in Sandy's changes adding Noop Cost Fn with tests
* merged trunk
* move migration 017 to 018
* merge ram-limits
* Removed extra serialization metadata
* Docstring cleanup and formatting (nova/network dir). Minor style fixes as well
* pep8
* Fixes improper attribute naming around instance types that broke Resizes
* merge ram-limits
* support unlimited quotas in nova-manage and flags
* fix test
* Changed builder to match specs and added test
* add migration for proper name
* Update test case to ensure password gets set correctly
* make token use typo that is in database.  Also fix now -> utcnow and stop using . syntax for dealing with tokens
* Added missing metadata join to instance\_get calls
* Avoid using spawn\_n to fix LP784132
* add ram limits to instance quotas
* Convert instance\_type\_ids in the instances table from strings to integers to enable joins with instance\_types. This in particular fixes a problem when using postgresql
* Set password to one requested in API call
* don't throw type errors on NoneType int conversions
* Added network\_info into refresh\_security\_group\_rules That fixs https://bugs.launchpad.net/nova/+bug/773308
* Improved error notification in network create
* Instead of using a temp file with openssl, just write directly to stdin
* First cut at least cost scheduler
* merge lp:nova
* Implemented builder for absolute limits and updated tests
* provision\_resource no longer returns value
* provision working correctly now
* Re-pull changed notification branch
* PEP8 fixes
* adding --fixes lp:781429
* Fixed mistyped key, caused huge performance leak
* Moved memcached connection in AuthManager to thread-local storage. Added caching of LDAP connection in thread-local storage. Optimized LDAP queries, added similar memcached support to LDAPDriver. Add "per-driver-request" caching of LDAP results. (should be per-api-request)
* ugh, fixed again
* tests fixed and pep8'ed
* Update comment on RequestExtension class
* failure conditions are being sent back properly now
* Added opt-out system for excluding files/dirs from pep8 (using GLOBIGNORE)
* MySQL database tables are using the MyISAM engine. Created migration script to change all current tables to InnoDB
* MySQL database tables are using the MyISAM engine. Created migration script to change all current tables to InnoDB
* fix for lp783705 - remove nwfilters when instance is terminated
* basic call going through
* Added missing metadata join to instance\_get calls
* add logging to migration and fix migration version
* Migrate quota schema from hardcoded columns to a key-value approach. The hope is that this change would make it easier to change the quota system without future schema changes. It also adds the concept of quotas that are unlimited
* Conceded :-D
* updated the mac\_address delete function to actually delete the rows, and update fixed\_ips
* Added missing flavorRef and imageRef checks in the os api xml deserialization code along with tests
* Fixed minor pylint errors
* This branch splits out the IPv6 address generation into pluggable backends. A new flag named ipv6\_backend specifies which backend to use
* Reduce indentation to avoid PEP8 failures
* merge koelker migration changes
* using mac\_address from fixed\_ip instead of instance
* PEP8 cleanups
* Use new 3-argument API
* add a todo
* style fixing
* Removed obsolete method and test
* renamed test cases in nova/tests/api/openstack/test\_servers.py to use a consistent naming convention as used in nova/tests/api/openstack/test\_images.py. also fixed a couple of pylint #C0103 errors in test\_servers.py
* make the migration work like we expect it to
* Fixed all pep8 errors in tools/install\_venv.py. All tests pass
* Added the imageRef and flavorRef attributes in the xml deserialization
* Add vnc\_keymap flag and enable setting keymap for vnc console
* Review changes and merge from trunk
* Pep8 cleaning
* Added response about error in nova-manage project operations
* Removed tools/clean\_vlans and tools/nova-debug from pep8 tests as they are shell scripts
* Added lines to include tools/\* (except ajaxterm) in pep8 tests
* Add a unit test for snapshot\_volume
* Define image state during snapshotting. Name snapshot to the name provided, not generate
* Unit test for snapshotting (creating custom image)
* fixed a few C0103 errors in test\_servers.py
* renamed test cases to use a consistent naming convention as used in nova/tests/api/openstack/test\_images.py
* fix sys.argv requirement
* first cut at weighted-sum tests
* merge trunk
* add udev rules and modified ovs\_configure\_vif\_flows.py to work with udev rules
* Adds proper error handling for images that can't be found and a test for deregister image
* added |fixed\_ip\_get\_all\_by\_mac\_address| and |mac\_address\_get\_by\_fixed\_ip| to db and sqlalchemy APIs
* started on integrating HostFilter
* Add support for rbd snapshots
* Merging in trunk
* I'm assuming that openstack doesnt work with python < 2.6 here (which I read somewhere on the wiki).  This patch will check to make sure python >= 2.6 is installed, and also allow it to work with python 2.7 (and greater in the future)
* merge lp:nova
* XenAPI was not implemented to allow for multiple simultaneous XenAPI requests.  A single XenAPIConnection (and thus XenAPISession) is used for all queries.  XenAPISession's wait\_for\_task method would set a self.loop = for looping calls to \_poll\_task until task completion.  Subsequent (parallel) calls to wait\_for\_task for another query would overwrite this.  XenAPISession.\_poll\_task was pulled into the XenAPISession.wait\_for\_task method to avoid having to store self.loop
* pep8 fixes
* Merged trunk
* volume/driver: make unit test, test\_volume, pass
* Make set\_admin\_password non-blocking to API
* Merged trunk
* Review feedback
* Lost a flag pulling from another branch. Whoops
* Update the compute manager so that it breaks out of a loop if set\_admin\_password is not implemented by the driver. This avoids excessively logging NotImplementedError exceptions
* Merging in Sandy's changes
* Make host timeout configurable
* Make set\_admin\_password non-blocking to API
* volume/driver: implement basic snapshot
* merge trunk
* Update the compute manager so that it breaks out of a loop if set\_admin\_password is not implemented by the driver
* Add init script and sysconfig file for openvswitch-nova
* volume/driver: factor out lvm opration
* Authors: add myself to Authers file
* trunk merge
* Adding zones doc into index of devref plus a bug fix for flag spellings
* fixup based on Lorin's feedback
* added flag lost in migration
* merge trunk
* pep8
* Adding basic tests for call\_zone\_method
* fixed\_ip disassociate now also unsets mac\_address\_id
* Make sure imports are in alphabetical order
* updated previous calls referring to the flags to use the column from the networks table instead
* merged from trunk
* handle instance\_type\_ids that are NULL during upgrade to integers
* fix for lp760921.  Previously, if tune2fs failed, as it does on windows hosts, kpartx -d also failed to be called which leaves mapped partitions that retain holds on the nbd device.  These holds cause the observed errors
* if a LoopingCall has canceled the loop, break out early instead of sleeping any more than needed
* Add a test for parallel builds.  verified this test fails before this fix and succeeds after this fix
* incorporated ImageNotFound instead of NotFound
* merged from trunk
* misc related network manager refactor and cleanup
* changed NotFound exception to ImageNotFound
* Update comment
* Variable renaming
* Add test suite for IPv6 address generation
* Accept and ignore project\_id
* Make it so that ExtensionRequest objects now return proper webob objects. This avoids the odd serialization code in the RequestExtensionController class which converts JSON dicts to webobs for us
* merged from trunk
* Remove ResponseExtensions. The new RequestExtension covers both use cases
* Initial work on request extensions
* Added network\_info into refresh\_security\_group\_rules
* fixed pep8 spacing issue
* merge from trunk
* rename quota column to 'hard\_limit' to make it simpler to avoid collisions with sql keyword 'limit'
* Fix remote volume code
* 1 Set default paths for nova.conf and api-paste.ini to /etc/nova/ 2 Changed countryName policy because https://bugs.launchpad.net/nova/+bug/724317 still affected
* Implement IPv6 address generation that includes account identifier
* messing around with the flow of create() and specs
* Redundant line
* changes per review
* docstring cleanup, nova/network dir
* make instance.instance\_type\_id an integer to support joins in postgres
* merge from trunk and update .mailmap file
* Merged trunk
* Updated MANIFEST for template move
* NoValidHost exception test
* Fixes an issue with conversion of images that was introduced by exception refactoring.  This makes the exceptions when trying to locate an ec2 id clearer and also adds some tests for the conversion methods
* oops fixed a docstring
* Pep8 stuff
* Bluprint URL: https://blueprints.launchpad.net/nova/+spec/improve-pylint-scores/
* start of zone\_aware\_scheduler test
* Moved everything into notifier/api
* make sure proper exceptions are raised for ec2 id conversion and add tests
* better function name
* Updated the value of the nova-manager libvirt\_type
* more filter alignment
* Removed commented out 'from nova import log as logging' line, per request from Brian Lamar
* merge trunk
* align filters on query
* better pylint scores on imports
* Code cleanup
* Merged trunk
* Abstract out IPv6 address generation to pluggable backends
* Merged trunk
* First cut with tests passing
* changing Authors file
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* Fix for #780276 (run\_tests.sh fails test\_authors\_up\_to\_date when using git repo)
* extracted xenserver capability reporting from dabo's dist-scheduler branch and added tests
* migrate back updated\_at correctly
* added in log\_notifier for easier debugging
* Add priority based queues to notifications. Remove duplicate json encoding in notifier (rpc.cast does encoding... ) make no\_op\_notifier  match rabbit one for signature on notify()
* Bugfix #780784. KeyError when creating custom image
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* removed unused wild card imports, replaced sqlalchemy wildcard import with explicit imports
* Better tests
* Add example
* give a more informative message if pre-migration assertions fail
* Whoops
* fix migration bug
* Pep8
* Test
* remove stubbing of XenAPISession.wait\_for\_task for xenapi tests as it doesn't need to be faked.  Also removed duplicate code that stubbed xenapi\_conn.\_parse\_xmlrpc\_value
* migration bug fixes
* Change xenapi's wait\_for\_task to handle multiple simultaenous queries to fix lp:766404
* Added GitPython to [install\_dir]/tools/pip-requires
* got rid of unnecessary imports
* Enable RightAWS style signature checking using server\_string without port number, add test cases for authenticate() and a new helper routine, and fix lp753660
* Better message format description
* unified underscore/dash issue
* update tests to handle unlimited resources in the db
* pep8
* capabilities flattened and tests fixed
* Set root password upon XenServer instance creation
* trunk merge
* clean up unused functions from virt/images.py
* Removing a rogue try/catch expecting a non-existant exception.TimeoutException that is never raised
* basic test working
* db: fix db versioning
* fix mismerge by 1059
* volume/driver: implement basic snapshot/clone
* volume/driver: factor out lvm opration
* Host Filtering for Distributed Scheduler (done before weighing)
* Rebased to trunk rev 1057
* Adds coverage-related packages to the tools/pip-requires to allows users to generate coverage reporting when running unit tests with virtulenv
* merge from trunk
* Set publish\_errors default to False
* convert quota table to key-value
* Simple fix for this issue.  Tries to raise an exception passing in a variable that doesn't exist, which causes an error
* Fixed duplicate function
* Review feedback
* Review feedback
* Fixed method in flavors
* Review feedback
* Review feedback
* Merged trunk
* Set root password upon XenServer instance creation
* Added Python packages needed for coverage reports to virtualenv packages
* Added interface functions
* merge from trunk
* added test for show\_by\_name ImageNotFound exception
* tests pass again
* Sanitize get\_console\_output results. See bug #758054
* revised file docs
* New author in town
* Changes to allow a VM to boot from  iso image.  A blank HD is also attached with a size corresponding to the instance type
* Added stub function for a referenced, previously non-existant function
* Merged trunk
* grabbed from dist-sched branch
* Explicitly casted a str to a str to please pylint
* Removed incorrect, unreachable code
* spacing fix
* pep8 fix
* Improved error notification in network create
* Add two whitespaces to conform PEP8
* Publish errors via nova.notifier
* Added myself to Authors file
* terminology: no more plug-ins or queries. They are host filters and drivers
* Added interface function to ViewBilder
* Added interfaces to server controller
* added self to authors
* fixed issue with non-existent variable being passed to ImageNotFound exception
* removing rogue TimeoutException
* merge prop fixes
* Merged trunk
* print statements removed
* merge with trunk
* flipped service\_state in ZoneManager and fixed tests
* pep8
* not =
* not =
* and or test
* and or test
* merge from trunk
* Removed extra newline after get\_console\_output in fake virt driver
* Moved all reencoding to compute manager to satisfy both Direct API and internal cloud call
* Merged with current trunk
* added myself to Authors
* Adding a test case to show the xml deserialization failure for imageRef and flavorRef
* Fixes for nova-manage vpn list
* json parser
* Don't fail the test suite in the absence of VCS history
* It's ok if there's no commit history. Otherwise the test suite in the tarball will fail
* Merged trunk
* flavor test
* Fix indentation
* tests and better driver loading
* Add missed hyphen
* Adding OSAPI v1.1 limits resource
* Adding support for server rebuild to v1.0 and v1.1 of the Openstack API
* reduce policy for countyname
* looking for default flagfile
* adding debug log message
* merging trunk
* merging trunk
* removing class imports
* Merged trunk
* Merged trunk
* Moved reencoding logic to compute manager and cloud EC2 API
* ensure create image conforms to OS API 1.1 spec
* merge updates from trunk
* Added support in the nova openstack api for requests with local hrefs, e.g., "imageRef":"2" Previously, it only supported "imageRef":"http://foo.com/images/2". The 1.1 api spec defines both approaches
* Add a flag to allow the user to specify a dnsmasq configuration file for nova-network to use when starting dnsmasq. Currently the command line option is set to "--config-fil=" with nothing specified.  This branch will leave it as it is if the user does not specify a config file, but will utilize the specific file if they do
* merged from trunk
* implemented review suggestion EAFP style, and fixed test stub fake\_show needs to have image\_state = available or other tests will fail
* got rid of extra whitespace
* Update tools/pip-requires and tools/install\_venv.py for python2.7 support (works in ubuntu 11.04)
* No need to test length of admin password in local href test
* merging trunk; resolving conflicts; fixing issue with ApiError test failing since r1043
* Added support in osapi for requests with local hrefs, e.g., "imageRef":"2"
* initial pass
* Implement get\_host\_ip\_addr in the libvirt compute driver
* merging trunk; resolving conflicts
* Modified the instance status returned by the OS api to more accurately represent its power state
* Fixed 2 lines to allow pep8 check to pass
* Since run\_tests.sh utilizes nose to run its tests, the -x, --stop flag works correctly for halting tests on the first failed test. The usage information for run\_tests.sh now includes the --stop flag
* add support for git checking and a default of failing if the history can't be read
* ApiError 'code' arg set to None, and will only display a 'code' as part of the str if specified
* Fixed: Check for use of IPv6 missing
* removed unused method and fixed imports
* Change the links in the sidebar on the docs pages
* Use my\_ip for libvirt version of get\_host\_ip\_addr
* fix typo in import
* removed unused method and fixed imports
* small changes in libvirt tests
* place ipv6\_rules creation under if ip\_v6 section
* Added checking ip\_v6 flag and test for it
* merging trunk
* adding view file
* Expose AuthManager.list\_projects user filter to nova-manage
* Final cleanup of nova/exceptions.py in my series of refactoring branches
* Uses memcached to cache roles so that ldap is actually usable
* added nova version to usage output of bin/nova-manage for easy identification of installed codebase
* Changing links in sidebar to previous release
* Rebased to trunk rev 1035
* converted 1/0 comparison in db to True/False for Postgres cast compatibility
* Changed test\_cloud and fake virt driver to show out the fix
* converted 1/0 comparison to True/False for Postgres compatibility
* pep8
* fixed docstring per jsb
* added version list command to nova-manage
* Added more unit-test for multi-nic-nova libvirt
* Sanitize get\_console\_output in libvirt\_conn
* added nova version output to usage printout for nova-manage
* Make the import of distutils.extra non-mandatory in setup.py. Just print a warning that i18n commands are not available..
* Correcting exception case
* further cleanup of nova/exceptions.py
* added eagerloading mac adddresses for instance
* merge with trunk and resolve conflicts
* Added myself to authors file
* pep8 fixes
* Refactoring usage of nova.exception.NotFound
* Let nova-mange limit project list by user
* merging trunk
* Make the import of distutils.extra non-mandatory in setup.py. Just print a warning that i18n commands are not available..
* Updated run\_tests.sh usage info to reflect the --stop flag
* Fixed formatting to align with PEP 8
* Modified instance status for shutoff power state in OS api
* Refactoring the usage of nova.exception.Duplicate
* Rebased to trunk rev 1030
* removed extra newline
* merged from trunk
* updated tests to reflect serverRef as href (per Ilya Alekseyev) and refactored \_build\_server from ViewBuilder (per Eldar Nugaev)
* Add a test checking spawn() works when network\_info is set, which currently doesn't. The following patch would fix parameter mismatch calling \_create\_image() from spawn() in libvirt\_conn.py
* removed unused imports and renamed template variables
* pep8
* merging trunk
* Renamed test\_virt.py to test\_libvirt.py as per suggestion
* fixing bad merge
* Merged trunk and fixed simple exception conflict
* merging trunk
* Refactoring nova.exception.Invalid usage
* adding gettext to setup.py
* Use runtime XML instead of VM creation time XML for createXML() call in order to ensure volumes are attached after RebootInstances as a workaround, and fix bug #747922
* Created new libvirt directory, moved libvirt\_conn.py to libvirt/connection.py, moved libvirt templates, broke out firewall and network utilities
* Rebased to trunk rev 1027, and resolved a conflict in nova/virt/libvirt\_conn.py
* Rebased to trunk rev 1027
* clarifies error when trying to add duplicate instance\_type names or flavorids via nova-manage instance\_type
* merge trunk
* Rework completed. Added test cases, changed helper method name, etc
* pep8
* merge trunk, resolved conflict
* merge trunk
* Abstracted libvirt's lookupByName method into \_lookup\_by\_name
* Provide option of auto assigning floating ip to each instance. Depend on auto\_assign\_floating\_ip boolean flag value. False by default
* Fixes per review
* Restore volume state on migration failure to fix lp742256
* Fixes cloudpipe to get the proper ip address
* merging trunk
* Fix bug with content-type and small OpenStack API actions refactor
* merge with trunk
* merge trunk
* merged trunk
* -Fixed indent for \_get\_ip\_version -Added LoopingCall to destroy as suggested by earlier bug report -Standardized all LoopingCall uses to include useful logging and better error handling
* Create a dictionary of instance\_types before executing SQL updates in the instance\_type\_id migration (014). This should resolve a "cannot commit transaction - SQL statements in progress" error with some versions of sqlite
* create network now takes bridge for flat networks
* Adapt DescribeInstances to EC2 API spec
* Change response of the EC2 API CreateVolume method to match the API docs for EC2
* Merged trunk and fixed api servers conflict
* pep8
* Fixes and reworkings based on review
* pep8
* Addressing exception.NotFound across the project
* fix logging in reboot OpenStack API
* eager loaded mac\_address attributes for mac address get functions
* updated image builder and tests for OS API 1.1 compatibility (serverRef)
* forgot import
* change action= to actions=
* typo
* forgot to save
* moved get\_network\_topic to network.api
* style cleaning
* Fixed network\_info creation in libvirt driver. Now creating same dict as in xenapi driver
* Modified instance status for shutdown power state in OS api
* rebase trunk
* altered imports
* commit to push for testing
* Rebased to trunk rev 1015
* Utility method reworked, etc
* Docstring cleanup and formatting (nova/image dir). Minor style fixes as well
* Docstring cleanup and formatting (nova/db dir). Minor style fixes as well
* Docstring cleanup and formatting (nova dir). Minor style fixes as well
* use vpn filter in basic filtering so cloudpipe works with iptables driver
* use simpler interfaces
* Docstring cleanup and formatting (console). Minor style fixes as well
* Docstring cleanup and formatting (compute). Minor style fixes as well
* merge trunk
* Add privateIpAddress and ipAddress to EC2 API DescribeInstances response
* style fixing
* Fix parameter mismatch calling \_create\_image() from spawn() in libvirt\_conn.py
* Add a test checking spawn() works when network\_info is set, which currently doesn't. The following patch would fix it
* put up and down in the right dir
* Makes metadata correctly display kernel-id and ramdisk-id
* pep8 cleaning
* style fix
* revert changes that doesn't affect the bug
* in doesn't work properly on instance\_ref
* Another small round of pylint clean-up
* Added an option to run\_tests.sh so you can run just pep8. So now you can:     ./run\_tests.sh --just-pep8 or     ./run\_tests.sh -p
* merge trunk
* fix display of vpn instance id and add output rule so it can be tested from network host
* Exit early if tests fail, before pep8 is run
* more changes per review
* fixes per review
* docstring cleanup, nova/image dir
* Docstring cleanup and formatting. Minor style fixes as well
* cleanups per code review
* docstring cleanup, nova dir
* fixed indentation
* docstring cleanup, console
* docstring cleanup, nova/db dir
* attempts to make the docstring rules clearer
* fix typo
* docstring cleanup compute manager
* bugfix signature
* refactor the way flows are deleted/reset
* remove ambiguity in test
* Pylinted nova-compute
* Pylinted nova-manage
* replaced regex to webob.Request.content\_type
* fix after review: style, improving tests, replacing underscore
* merge with trunk
* fix Request.get\_content\_type
* Reverted bad merge
* Rebased to trunk rev 1005
* Removed no longer relevant comment
* Removed TODO we don't need
* Removed \_ and replaced with real variable name
* instance type get approach changed. tests fixed
* Merged trunk
* trunk merged
* fix: mark floating ip as auto assigned
* Add to Authors
* Change response format of CreateVolume to match EC2
* revamped spacing per Rick Harris suggestion. Added exact error to nova-manage output
* only apply ipv6 if the data exists in xenstore
* Create a dictionary of instance\_types before executing SQL updates in the instance\_type\_id migration (014). This should resolve a "cannot commit transaction - SQL statements in progress" error with some versions of sqlite
* add support for git checking and a default of failing if the history can't be read
* strip output, str() link local
* merging lp:~rackspace-titan/nova/exceptions-refactor-invalid
* Round 1 of pylint cleanup
* Review feedback
* Implement quotas for the new v1.1 server metadata controller
* fix doc typo
* fix logging in reboot OpenStack API
* make geninter.sh use the right tmpl file
* pep8 fix
* refactoring usage of exception.Duplicate errors
* rename all versions of image\_ec2\_id
* Abstracted lookupByName calls to \_lookup\_by\_name for centralized error handling
* actually use the ec2\_id
* remove typo
* merging lp:~rackspace-titan/nova/exceptions-refactor-invalid
* Fixes cloudpipe to get the proper ip address
* add include file for doc interfaces
* add instructions for setting up interfaces
* Merged trunk and fixed small comment
* Fixed info messages
* Tweak to destroy loop logic
* Pretty critical spelling error
* Removed extra calls in exception handling and standardized the way LoopingCalls are done
* one last i18n string
* Merged trunk
* multi-line string spacing
* removing rogue print
* moving dynamic i18n to static
* refractoring
* Add support for cloning a Sheepdog volume
* Add support for cloning a Sheepdog volume
* Add support for creating a new volume from a existing snapshot with EC2 API
* Add support for creating a new volume from a existing snapshot with EC2 API
* Add support for creating a Sheepdog snapshot
* Add support for creating a Sheepdog snapshot
* Add support for creating a snapshot of a nova volume with euca-create-snapshot
* Add support for creating a snapshot of a nova volume with euca-create-snapshot
* trunk merged
* Implement get\_host\_ip\_addr in the libvirt compute driver
* Adding projectname username to the nova-manage project commands to fix a doc bug, plus some edits and elimination of a few doc todos
* pep8 fixes
* Remove zope.interface from the requires file since it is not used anywhere
* use 'is not None' instead of '!= None'
* Fix loggin in creation server in OpenStack API 1.0
* Support admin password when specified in server create requests
* First round of pylint cleanup
* merge lp:nova and resolve conflicts
* Change '== None' to 'is None'
* remove zope.interface requires
* use 'is not None' instead of '!= None'
* pep8 fixes
* Change '== None' to 'is None'
* Fixes nova-manage image convert when the source directory is the same one that local image service uses
* trunk merged
* pep8 fixed
* calc link local
* not performing floating ip operation with auto allocated ips
* it is rename not move
* pep8 fix
* Rebased to trunk rev 995
* Rebased to trunk rev 995
* merge trunk
* add fault as response
* Fix logging in openstack api
* Fix logging in openstack api
* Fix logging in openstack api
* trunk merged. conflict resolved
* trunk merged. conflict resolved
* The change to utils.execute's call style missed this call somehow, this should get libvirt snapshots working again
* Fix parameter mismatch calling to\_xml() from spawn() in libvirt\_conn.py
* move name into main metadata instead of properties
* change libvirt snapshot to new style execute
* Add additional logging for WSGI and OpenStack API authentication
* Rename the id
* Added period to docstring for metadata test
* Merged trunk
* Empty commit to hopefully regenerate launchpad diff
* Explicitly tell a user that they need to authenticate against a version root
* Merged trunk
* merging trunk
* adding documentation & error handling
* correcting tests; pep8
* Removed the unused self.interfaces\_xml variable
* Only poll for instance states that compute should care about
* Diablo versioning
* Diablo versioning
* Rebased to trunk rev 989
* Rebased to trunk rev 989

2011.2
------

* Final versioning for Cactus
* initial roundup of all 'exception.Invalid' cases
* merge trunk
* set the bridge on each OvsFlow
* merge with trunk
* bugfix
* bugfix
* Fix parameter mismatch calling to\_xml() from spawn() in libvirt\_conn.py
* add kvm-pause and kvm-suspend

2011.2rc1
---------

* Rework GlanceImageService.\_translate\_base() to not call BaseImageService.\_translate\_base() otherwise the wrong class attributes are used in properties construction..
* Updated following to RIck's comments
* Rebased to trunk rev 987
* Rework GlanceImageService.\_translate\_base() to not call BaseImageService.\_translate\_base() otherwise the wrong class attributes are used in properties construction..
* Try to be nicer to the DB when destroying a libvirt instance
* pep8
* merge trunk
* fixed error message i18n-ization. added test
* Don't hammer on the DB
* Debug code clean up
* Rebased to trunk rev 986
* An ultimate workaround workd... :(
* Zero out volumes during deletion to prevent data leaking between users
* Minor formatting cleanup
* jesse@aire.local to mailmap
* Changed pep8 command line option from --just-pep8 to --pep8
* re-add broken code
* merge trunk
* Final versioning
* Updates the documentation on creating and using a cloudpipe image
* iSCSI/KVM test completed
* Minor fixes
* Fix RBDDriver in volume manager. discover\_volume was raising exception. Modified local\_path as well
* Fixes VMware Connection to inherit from ComputeDriver
* Fixes s3.py to allow looking up images by name.  Smoketests run unmodified again with this change!
* move from try\_execute to \_execute
* Make VMWare Connection inherit from ComputeDriver
* add up and down .sh
* fix show\_by\_name in s3.py and give a helpful error message if image lookup fails
* remove extra newline
* dots
* Rebased to trunk rev 980
* Rework importing volume\_manager
* Blushed up a little bit
* Merged trunk
* Only warn about rouge instances that compute should know about
* Added some tests
* Dangerous whitespace mistake! :)
* Cleanup after prereq merge
* Add new flag 'max\_kernel\_ramdisk\_size' to specify a maximum size of kernel or ramdisk so we don't copy large files to dom0 and fill up /boot/guest
* Rebased to trunk rev 980
* Merged lp:~rackspace-titan/nova/server\_metadata\_quotas as a prereq
* Merged trunk
* Docstring cleanup and formatting. Minor style fixes as well
* Updated to use setfacl instead of chown
* Commit for merge of metadata\_quotas preq
* merge trunk
* Removed extra call from try/except
* Reverted some superfluous changes to make MP more concise
* Merged trunk
* Reverted some superfluous changes to make MP more concise
* Replace instance ref from compute.api.get\_all with one from instance\_get. This should ensure it gets fully populated with all the relevant attributes
* Add a unit test for terminate\_instances
* pep8
* Fix RBDDriver in volume manager. discover\_volume was raising exception. Modified local\_path as well
* pep8 fixes
* migaration and pep8 fixes
* update documentation on cloudpipe
* Makes genvpn path actually refer to genvpn.sh instead of geninter.sh
* typo
* Merged trunk
* Updating the runnova information and fixing bug 753352
* merge trunk
* network manager changes, compute changes, various other
* Floating ips auto assignment
* Sudo chown the vbd device to the nova user before streaming data to it. This resolves an issue where nova-compute required 'root' privs to successfully create nodes with connection\_type=xenapi
* Minor blush ups
* A minor blush up
* A minor blush up
* Remove unused self.interfaces\_xml
* Rebased to trunk rev 977
* Rebase to trunk rev 937
* debug tree status checkpoint 2
* docstring cleanup, direct api, part of compute
* bzr ignore the top level CA dir that is created when running 'run\_tests.sh -N'
* fix reference to genvpn to point to the right shell script
* Set default stateOrProvice to 'supplied' in openssl.cnf.tmpl
* merge trunk
* This branch fixes https://bugs.launchpad.net/bugs/751231
* Replace instance ref from compute.api.get\_all with one from instance\_get. This should ensure it gets fully populated with all the relevant attributes
* When using libvirt, remove the persistent domain definition when we call destroy, so that behavior on destroy is as it was when we were using transient instances
* Rebased to trunk rev 973
* Currently terminating an instance will hang in a loop, this allows for deletion of instances when using a libvirt backend. Also I couldn't help add a debug log where an exception is caught and ignored
* merge trunk
* resolved lazy\_match conflict between bin/nova-manage instance and instance\_type by moving instance subcommand under vm command. documented vm command in man page. removed unused instance\_id from vm list subcommand
* Ooops - redefining the \_ variable seems like a \_really\_ bad idea
* Handle the case when the machine is already SHUTOFF
* Split logic on shutdown and undefine, so that even if the machine is already shutdown we will be able to proceed
* Remove the XML definition when we destroy a machine
* Rebased to trunk rev 971
* debug tree status checkpoint
* Reabased to trunk rev 971
* Fixed log message gaffe
* pylintage
* typo - need to get nova-volumes working on this machine :-/
* dd needs a count to succeed, and remove unused/non-working special case for size 0
* There is a race condition when a VDI is mounted and the device node is created. Sometimes (depending on the configuration of the Linux distribution) nova loses the race and will try to open the block device before it has been created in /dev
* zero out volumes on delete using dd
* Added RST file on using Zones
* Fixes euca-attach-volume for iscsi using Xenserver
* pep8
* merge trunk
* removes log command from nova-manage as it no longer worked in multi-log setup
* Added error message to exception logging
* Fixes bug which hangs nova-compute when terminating an instance when using libvirt backend
* missing 'to'
* Short circuit non-existant device during unit tests. It won't ever be created because of the stubs used during the unit tests
* Added a patch for python eventlet, when using install\_venv.py (see FAQ # 1485)
* fixed LOG level and log message phrase
* merge prop tweaks 2
* Set default stateOrProvice to 'supplied' in openssl.cnf.tmpl
* This branch fixes https://bugs.launchpad.net/nova/+bug/751242
* Ignore errors when deleting the default route in the ensure\_bridge function
* bzr ignore the CA dir
* merge prop tweaks
* Import translations from Launchpad
* added Zones doc
* Update the describe\_image\_attribute and modify\_image\_attribute functions in the EC2 API so they use the top level 'is\_public' attribute of image objects. This brings these functions in line with the base image service
* Import from lp:~nova-core/nova/translations
* corrects incorrect openstack api responses for metadata (numeric/string conversion issue) and image format status (not uppercase)
* Implement a mechanism to enforce a configurable quota limit for image metadata (properties) within the OS API image metadata controller
* Update the describe\_image\_attribute and modify\_image\_attribute functions in the ec2 API so they use the top level 'is\_public' attribute of image objects. This brings these functions in line with the base image service
* Ignore errors when deleting the default route in the ensure\_bridge function
* merge trunk
* removed log command from nova-manage. no longer applicable with multiple logfiles
* merge trunk
* reminde admins of --purge option
* Fixes issues with describe instances due to improperly set metadata
* Keep guest instances when libvirt host restarts
* fix tests from moving access check into update and delete
* Added support for listing addresses of a server in the openstack api. Now you can GET  \* /servers/1/ips  \* /servers/1/ips/public  \* /servers/1/ips/private Supports v1.0 json and xml. Added corresponding tests
* Log libvirt errcode on exception
* This fixes how the metadata and addresses collections are serialized in xml responses
* Fix to correct libvirt error code when the domain is not found
* merged trunk
* Removed commented-out old 'delete instance on SHUTOFF' code
* Automatically add the metadata address to the network host.  This allows guests to ARP for the address properly
* merged trunk and resolved conflict
* slight typo
* clarified nova-manage instance\_type create error output on duplicate flavorid
* This branch is a patch for fixing below issue. > Bug #746821: live\_migration failing due to network filter not found  Link a bug report
* fix pep8 violation
* Update instances table to use instance\_type\_id instead of the old instance\_type column which represented the name (ex: m1.small) of an instance type
* Drop extra 'None' arg from dict.get call
* Some i18n fixes to instance\_types
* Renamed computeFault back to cloudServersFault in an effort to maintain consistency with the 1.0 API spec. We can look into distinguishing the two in the next release. Held off for now to avoid potential regression
* adds a timeout on session.login\_with\_password()
* Drop unneeded Fkey on InstanceTypes.id
* Bypass a potential security vulnerability by not setting shell=True in xenstore.py, using johannes.erdfelt's patch
* Renamed computeFault to cloudServersFault
* fixed the way ip6 address were retrieved/returned in \_get\_network\_info in nova/virt/xenapi/vmops
* added -manage vm [list|live-migration] to man page
* removed unused instance parameter from vm list ... as it is unused. added parameters to docstring for vm list
* moved -manage instance list command to -manage vm list to avoid lazy match conflict with instance\_types
* Simplify by always adding to loopback
* Remove <addressSet> and <item> from AllocateAddress response, and fix bug #751176
* remove unused code
* better error message
* Blush up a bit
* Rebased to trunk rev 949
* pep8
* adds timeout to login\_with\_password
* test provider fw rules at the virt/ipteables layer. lowercase protocol names in admin api to match what the firewall driver expects. add provider fw rule chain in iptables6 as well. fix a couple of small typos and copy-paste errors
* fixed based on reviewer's comment - 1. erase unnecessary blank line, 2. adding LOG.debug
* Rebased to trunk rev 949
* fixed based on reviewer's comment - 'locals() should be off from \_()
* Make description of volume\_id more generic
* add the tests
* pep8 cleanup
* ApiError code should default to None, and will only display a code if one exists.  Prior was output an 'ApiError: ApiError: error message' string, which is confusing
* ec2 api run\_instances checks for image status must be 'available'.  Overhauled test\_run\_instances for working set of test assertions
* if we delete the old route when we move it we don't need to check for exists
* merged trunk
* removed comment on API compliance
* Added an option to run\_tests.sh so you can run just pep8. So now you can:     ./run\_tests.sh --just-pep8 or     ./run\_tests.sh -p
* Add automatic metadata ip to network host on start.  Also fix race where gw is readded twice
* Controllers now inherit from nova.api.openstack.common.OpenstackController
* Merged trunk
* Support providing an XML namespace on the XML output from the OpenStack API
* Merged with trunk, fixed up test that wasn't checking namespace
* Added support for listing addresses of a server in the openstack api. Now you can GET  \* /servers/1/ips  \* /servers/1/ips/public  \* /servers/1/ips/private Supports v1.0 json and xml. Added corresponding tests
* check visibility on delete and update
* YADU (Yet Another Docstring Update)
* Make sure ca\_folder is created before chdir()ing into it
* another syntax error
* Use a more descriptive name for the flag to make it easier to understand the purpose
* Added logging statements for generic WSGI and specific OpenStack API requests
* syntax error
* Incorprate johannes.erdfelt's patch
* updated check\_vm\_record in test\_xenapi to check the gateway6 correctly
* updated get\_network\_info in libvirt\_conn to correctly insert ip6s and gateway6 into the network info, also small style fixes
* add docstrings
* updated \_prepare\_injectables() to use info[gateway6] instead of looking inside the ip6 address dict for the gateway6 information
* Enable RightAWS style signing on server\_string without port number portion
* modified behavior of inject\_network\_info and reset\_network related to a vm\_ref not being passed in
* Create ca\_folder if it does not already exist
* Wait for device node to be created after mounting image VDI
* Improved unit tests Fixed docstring formatting
* Only create ca\_path directory if it does not already exist
* Added bug reference
* Only create ca\_path directory if it does not already exist
* Make "setup.py install" much more thorough. It now installs tools/ into /usr/share/nova and makes sure api-paste.conf lands in /etc/nova rather than /etc
* fixed based on reviwer's comment
* return image create response as image dict
* Add a patch for python eventlet, when using install\_venv.py (see FAQ # 1485)
* Undo use of $ in chain name where not needed
* Testing for iptables manager changes
* Don't double-apply provider fw rules in NWFilter and Iptables. Don't create provider fw rules for each instance, use a chain and jump to it. Fix docstrings
* typo
* remove -None for user roles
* pep8
* fallback to status if image\_state is not set
* update and fix tests
* unite the filtering done by glance client and s3
* Removing naughty semicolon
* merged trunk
* remove extraneous empty lines
* move error handling down into get\_password function
* refactor to handle invalid adminPass
* fixed comment
* merged trunk
* add support for specifying adminPass for JSON only in openstack api 1.1
* add tests for adminPass on server create
* Fix a giant batch of copypasta
* Remove file leftover from conflict
* adding support for OSAPI v1.1 limits resource
* Moved 'name' from <imageId> to <imageLocation>, corrected <imageType> and fixes bug # 750482
* This branch contains the fix for lp:749973. VNC is assumed that is default for all in libvirt which LXC does not support yet
* Remove comments
* Separate CA/ dir into code and state
* removed blank lines for pep8 fix
* pep8 fixed
* Fixed the addresses and metadata collections in xml responses. Added corresponding tests
* Dont configure vnc if we are using lxc
* Help paste\_config\_file find the api config now that we moved it
* Add bug reference
* Move api-paste.ini into a nova/ subdir of etc/
* Add a find\_data\_files method to setup.py. Use it to get tools/ installed under /usr/(local/)/share/nova
* Nits
* Add missing underscore
* fix bug lp751242
* fix bug lp751231
* Automatically create CA state dir, and make sure the CA scripts look for the templates in the right places
* fix bug 746821
* Remove <addressSet> and <item> from AllocateAddress response, and fix bug #751176
* Allow CA code and state to be separated, and make sure CA code gets installed by setup.py install
* Rebased to trunk 942
* fix bug lp:682888 - DescribeImages has no unit tests
* Correct variable name
* correct test for numeric/string metadata value conversion
* openstack api metadata responses must be strings
* openstack api requires uppercase image format status responses
* merge trunk
* Refactor so that instances.instance\_type is now instances.instance\_type\_id
* splitting test\_get\_nic\_for\_xml into two functions
* Network injection check fixed in libvirt driver
* merging trunk
* fixing log message
* working with network\_ref like with mapping
* add test for NWFilterFirewall
* Removed adminclient.py and added reference to the new nova-adminclient project in tools/pip-requires
* Don't prefix adminPass with the first 4 chars of the instance name
* Declares the flag for vncproxy\_topic in compute.api
* Fixes bug 741246.  Ed Leafe's inject\_file method for the agent plugin was mistakenly never committed after having to fix commits under wrong email address.  vmops makes calls to this (previously) missing method
* Attempt to circumvent errors in the API from improper/malformed responses from image service
* fixes incorrect case of OpenStack API status response
* Fixed network\_info creating
* Moved 'name' property from <imageId> to <imageLocation>, corrected <imageType> and fixes bug # 750482
* corrected capitalization of openstack api status and added tests
* libvirt\_con log fix
* Ensure no errors for improper responses from image service
* merge trunk
* Fixes error which occurs when no name is specified for an image
* improving tests
* network injection check fixed
* Only define 'VIMMessagePlugin' class if suds can be loaded
* Make euca-get-ajax-console work with Euca2ools 1.3
* Add bug reference
* Use keyword arguments
* add multi\_nic\_test
* added preparing\_xml test
* split up to\_xml to creation xml\_info and filling the template
* use novalib for vif\_rules.py, fix OvsFlow class
* extract execute methods to a library for reuse
* Poller needs to check for BUILDING not NOSTATE now, since we're being more explict about what is going on
* Add checking if the floating\_ip is allocated or not before appending to result array in DescribeAddresses
* Added synchronize\_session parameter to a query in fixed\_ip\_disassociate\_all\_by\_timeout() and fix #735974
* Made the fix simpler
* Add checking if the floating\_ip is allocated or not before appending to result array
* Added updated\_at field to update statement according to Jay's comment
* change bridge
* Add euca2ools import
* Rebased to trunk 930
* Rebased to trunk 726
* lots of updates to ovs scripts
* Make euca-get-ajax-console work with Euca2ools 1.3
* merge trunk
* Hopefully absolved us of the suds issue?
* Removes excessive logging message in the event of a rabbitmq failure
* Add a change password action to /servers in openstack api v1.1, and associated tests
* Removal of instance\_set\_state from driver code, it shouldnt be there, but instead should be in the compute manager
* Merged trunk
* Don't include first 4 chars of instance name in adminPass
* Friendlier error message if there are no compute nodes are available
* merge lp:nova
* Merged waldon
* Adding explanation keyword to HTTPConflict
* Merged waldon
* makes sure s3 filtering works even without metadata set properly
* Merged waldon
* Didn't run my code. Syntax error :(
* Now using the new power state instead of string
* adding servers view mapping for BUILDING power state
* removes excessive logging on rabbitmq failure
* Review feedback
* Friendlier error message if there are no compute nodes are available
* Merged with Waldon
* Better error handling for spawn and destroy in libvirt
* pep8
* adding 'building' power state; testing for 409 from OSAPI when rebuild requested on server being rebuild
* More friendly error message
* need to support python2.4, so can't use uuid module
* If the floating ip address is not allocated or is allocated to another project, then the user trying to associate the floating ip address to an instance should get a proper error message
* Update state between delete and spawn
* adding metadata support for v1.1
* Rebuild improvements
* Limit image metadata to the configured metadata quota for a project
* Add volume.API.remove\_from\_compute instead of compute.API.remove\_volume
* Rebased to trunk rev 925
* Removed adminclient and referred to pypi nova\_adminclient module
* fixed review comment for i18n string multiple replacement strings need to use dictionary format
* fixed review comment for i18n string multiple replacement strings need to use dictionary format
* Add obviously-missing method that prevents an Hyper-V compute node from even starting up
* Avoid any hard dependencies in nova.virt.vmwareapi.vim
* review cleanup
* Handles situation where Connection.\_instances doesn't exist (ie. production)
* localize NotImplementedError()
* Change '"%s" % e' to 'e'
* Fix for LP Bug #745152
* Merged waldon
* adding initial v1.1 rebuild action support
* Add ed leafe's code for the inject\_file agent plugin method that somehow got lost (fixes bug 741246). Update TimeoutError string for i18n
* submitting a unit test for terminate\_instance
* Update docstrings and spacing
* fixed ordering and spacing
* removed trailing whitespace
* updated per code review, replaced NotFound with exception.NotFound
* Merged Waldon's API code
* remove all references to image\_type and change nova-manage upload to set container format more intelligently
* Rough implementation of rebuild\_instance in compute manager
* adding v1.0 support for rebuild; adding compute api rebuild support
* Key type values in ec2\_api off of container format
* Whoops
* Handle in vim.py
* Refixed unit test to check XML ns
* Merged with trunk (after faults change to return correct content-type)
* OpenStack API faults have been changed to now return the appropriated Content-Type header
* More tests that were checking for no-namespace
* Some tests actually tested for the lack of a namespace :-)
* pep8 fixes
* Avoid hard dependencies
* Implement quotas for the new v1.1 server metadata controller. Modified the compute API so that metadata is a dict (not an array) to ensure we are using unique key values for metadata. This is isn't explicit in the SPECs but it is implied by the new v1.1 spec since PUT requests modify individual items
* Add XML namespaces to the OpenStack API
* Merged with trunk
* Fixed mis-merge: OS API version still has to be v1.1
* Store socket\_info as a dictionary rather than an array
* Merged with trunk
* Added synchronize\_session parameter to a query in fixed\_ip\_disassociate\_all\_by\_timeout() and fix #735974
* Key was converted through str() even if None, resulting in "None" being added to authorized\_keys when no key was specified
* queues properly reconnect if rabbitmq is restarted
* Moving server update adminPass support to be v1.0-specific OS API servers update tests actually assert and pass now Enforcing server name being a string of length > 0
* Adding Content-Type code to openstack.api.versions.Versions wsgi.Application
* Fixes metadata for ec2\_api to specify owner\_id so that it filters properly
* Makes the image decryption code use the per-project private key to decrpyt uploaded images if use\_project\_ca is set.  This allows the decryption code to work properly when we are using a different ca per project
* exception -> Fault
* Merged trunk
* Do not push 'None' to authorized\_keys when no key is specified
* Add missing method that prevent HyperV compute nodes from starting up
* TopicAdapterConsumer uses a different callback model than TopicConsumer.  This patch updates the console proxy to use this pattern
* merge trunk
* Uses the proc filesystem to check the volume size in volume smoketests so that it works with a very limited busybox image
* merged trunk
* The VNC Proxy is an OpenStack component that allows users of Nova to access their instances through a websocket enabled browser (like Google Chrome)
* make sure that flag is there in compute api
* fix localization for multiple replacement strings
* fix doc to refer to nova-vncproxy
* Support for volumes in the OpenStack API
* Deepcopy the images, because the string formatting transforms them in-place
* name, created\_at, updated\_at are required
* Merged with trunk
* "Incubator" is no more.  Long live "contrib"
* Rename MockImageService -> FakeImageService
* Removed unused super\_verbose argument left over from previous code
* Renamed incubator => contrib
* Wipe out the bad docstring on get\_console\_pool\_info
* use project key for decrypting images
* Fix a docstring
* Found a better (?) docstring from get\_console\_pool\_info
* Change volume so that it returns attachments in the same format as is used for the attachment object
* Removed commented-out EC2 code from volumes.py
* adding unit tests for describe\_images
* Fix unit test to reflect fact that instance is no longer deleted, just marked SHUTOFF
* Narrowly focused bugfix - don't lose libvirt instances on host reboot or if they crash
* fix for lp742650
* Added missing blank line at end of multiline docstring
* pep8 fixes
* Reverted extension loading tweaks
* conversion of properties should set owner as owner\_id not owner
* add nova-vncproxy to setup.py
* clarify test
* add line
* incorporate feedback from termie
* Make dnsmasq\_interface configurable
* Stop nova-manage from reporting an error every time.  Apparently except: catches sys.exit(0)
* add comment
* switch cast to a call
* move functions around
* move flags per termie's feedback
* initial unit test for describe images
* don't print the error message on sys.exit(0)
* added blank lines in between functions & removed the test\_describe\_images (was meant for a diff bug lp682888)
* Make Dnsmasq\_interface configurable
* fix flag names
* Now checking that exists at least one network marked injected (libvirt and xenapi)
* This branch adds support for linux containers (LXC) to nova. It uses the libvirt LXC driver to start and stop the instance
* use manager pattern for auth token proxy
* Style fixes
* style fix
* Glance used to return None when a date field wasn't set, now it returns ''. Glance used to return dates in format "%Y-%m-%dT%H:%M:%S", now it returns "%Y-%m-%dT%H:%M:%S.%f"
* Fix up docstring
* Added content\_type to OSAPI faults
* accidentally dropped a sentence
* Added checks that exists at least one network marked inhected in libvirt and xenapi
* Adds support for versioned requests on /images through the OpenStack API
* Import order
* Switch string concat style
* adding xml test case
* adding code to explicitly set the content-type in versions controller; updating test
* Merged trunk
* Added VLAN networking support for XenAPI
* pep8
* adding server name validation to create method; adding tests
* merge lp:nova
* use informative error messages
* adding more tests; making name checks more robust
* merge trunk
* Fix pep8 error
* Tweaking docstrings just in case
* Catch the error that mount might through a bit better
* sorted pep8 errors that were introduced during previous fixes
* merge trunk
* make all openstack status uppercase
* Add remove\_volume to compute API
* Pass along the nbd flags although we dont support it just yet
* cleaned up var name
* made changes per code review: 1) removed import of image from objectstore 2) changed to comments instaed of triple quotes
* Displays an error message to the user if an exception is raised.  This is vital because if logfile is set, the exception shows up in the log and the user has no idea something went wrong
* Yet more docstring fixes
* More style changes
* Merged with trunk
* Multi-line comments should end in a blankline
* add note per review
* More fixes to keep the stylebot happy
* Cleaned up images/fake.py, including move to Duplicate exception
* Code cleanup to keep the termie-bot happy
* displays an error message if a command fails, so that the user knows something went wrong
* Fixes volume smoketests to work with ami-tty
* address some of termie's recommendations
* add period, test github
* pep8
* osapi servers update tests actually assert now; enforcing server name being a string of length > 0; moving server update adminPass support to be v1.0-specific
* Moving shared\_ip\_groups controller to APIRouterV10 Replacing all shared\_ip\_groups contoller code with HTTPNotImplemented Adding shared\_ip\_groups testing
* fix docstrings
* Merged trunk
* Updated docstrings to satisfy
* Updated docstrings to satisfy
* merge trunk
* merge trunk
* minor fix and comment
* style fixes
* merging trunk
* Made param descriptions sphinx compatible
* Toss an \_\_init\_\_ in the test extensions dir. This gets it included in the tarball
* pep8
* Fix up libvirt.xml.template
* This fixes EC2 API so that it returns image displayName and description properly
* merged from trunk
* Moving backup\_schedule route out of base router to OS API v1.0 All controller methods return HTTPNotImplemented to prevent further confusion Correcting tests that referred to incorrect url
* Fixed superfluous parentheses around locals()
* Added image name and description mapping to ec2 api
* use self.flags in virt test
* Fixed DescribeUser in the ec2 admin client to return None instead of an empty UserInfo object
* Remove now useless try/except block
* Dont make the test fail
* backup\_schedule tests corrected; controller moved to APIRouterV10; making controller fully HTTPNotImplemented
* when image\_id provided cannot be found, returns more informative error message
* Adds support for snapshotting (to a new image) in the libvirt code
* merge lp:nova
* More pep8 corrections
* adding shared\_ip\_groups testing; replacing all shared\_ip\_groups contoller code with HTTPNotImplemented; moving shared\_ip\_groups controller to APIRouterV10
* Merged trunk
* pep8 whitespace
* Add more unit tests for lxc
* Decided to not break old format so this should work with the way Glance used to work and the way glace works now..The best of both worlds?
* update glance params per review
* add snapshot support for libvirt
* HACKING update for docstrings
* merge trunk
* Fix libvirt merge mistake
* lock down requirements for change password
* merge trunk
* Changed TopicConsumer to TopicAdapterConsumer in bin/nova-ajax-console-proxy to allow it to start up once again
* style changes
* Removed iso8601 dep from pip-requires
* Merged trunk
* Removed extra dependency as per suggestion, although it fixes the issue much better IMO, we should be safe sticking with using the format from python's isoformat()
* Assume that if we don't find a VM for an instance in the DB, and the DB state is NOSTATE, that the db instance is in the process of being spawned, and don't mark it SHUTOFF
* merge with trunk
* Added MUCH more flexiable iso8601 parser dep for added stability
* Fix formatting of TODO and NOTE - should be a space after the #
* merge lp:nova
* Mixins for tests confuse pylint no end, and aren't necessary... you can stop the base-class from being run as a test by prefixing the class name with an underscore
* Merged the two periodic\_tasks functions, that snuck in due to parallel merges in compute.manager
* Start up nova-api service on an unused port if 0 is specified.  Fixes bug 744150
* Removed 'is not None' to do more general truth-checking. Added rather verbose testing
* Merged with trunk
* merge trunk
* merge trunk, fixed conflicts
* TopicConsumer -> TopicAdapterConsumer
* Fix typo in libvirt xml template
* Spell "warn" correctly
* Updated Authors file
* Removed extraneous white space
* Add friendlier message if an extension fails to include a correctly named class or factory
* addressed reviewers' concerns
* addressed termies review (third round)
* addressed termie's review (second round)
* Do not load extensions that start with a "\_"
* addressed termies review (first round)
* Clarified note about scope of the \_poll\_instance\_states function
* Fixed some format strings
* pep8 fixes
* Assume that if we don't find a VM for an instance in the DB, and the DB state is NOSTATE, that the db instance is in the process of being spawned
* pep8 fixes
* Added poll\_rescued\_instances to virt driver base class
* There were two periodic\_tasks functions, due to parallel merges in compute.manager
* pep8 fixes
* Bunch of style fixes
* Fix utils checking
* use\_ipv6 now passing to interfaces.template as first level variable in libvirt\_conn
* Replaced import of an object with module import as per suggestion
* Updates to the newest version of nova.sh, which includes:  \* Installing new python dependencies  \* Allows for use of interfaces other than eth0  \* Adds a run\_detached mode for automated testing
* Now that it's an extension, it has to be v1.1.  Also fixed up all the things that changed in v1.1
* merge trunk addressing Trey's comments
* Initial extensification of volumes
* Merged with trunk, resolved conflicts & code-flicts
* Removed print
* added a simple test for describe\_images with mock for detail funciton
* merged trunk
* merge trunk
* merge lp:nova
* Adding links container to openstack api v1.1 servers entities
* Merged trunk
* Add license and copyright to nova/tests/api/openstack/extensions/\_\_init\_\_.py
* Fixed a typo on line 677 where there was no space between % and FLAGS
* fix typos
* updated nova.sh
* Added a flag to allow a user to specify a dnsmasq\_config\_file is they would like to fine tune the dnsmasq settings
* disk\_format is now an ImageService property. Adds tests to prevent regression
* Merged trunk
* Merged trunk
* merging trunk
* merge trunk
* Merged trunk and fixed broken/conflicted tests
* - add a "links" container to versions entities for Openstack API v1.1 - add testing for the openstack api versions resource and create a view builder
* merging trunk
* This is basic network injection for XenServer, and includes:
* merging trunk
* Implement image metadata controller for the v1.1 OS API
* merging trunk
* Changed use\_ipv6 passing to interfaces.template
* merging trunk, resolving conflicts
* Add a "links" container to flavors entities for Openstack API v1.1
* Toss an \_\_init\_\_ in the test extensions dir. This gets it included in the tarball
* Use metadata = image.get('properties', {})
* merge trunk
* Revert dom check
* merge trunk
* Fix unit tests w/ latest trunk merge
* merging trunk and resolving conflicts
* Fix up destroy container
* Fix up templating
* Implement metadata resource for Openstack API v1.1. Includes:       -GET /servers/id/meta       -POST /servers/id/meta       -GET /servers/id/meta/key       -PUT /servers/id/meta/key       -DELETE /servers/id/meta/key
* Dont always assume qemu
* Removed partition from setup\_container
* pep8 fix
* disk\_format is now an ImageService property
* Restore volume state on migration failure
* merge trunk, add unit test
* merge trunk
* merge trunk addressing reviewer's comments
* clarify comment
* add documentation
* Empty commit?
* minor pep8 fix in db/fakes.py
* Support for markers for pagination as defined in the 1.1 spec
* add hook for osapi
* merge trunk
* Ports the Tornado version of an S3 server to eventlet and wsgi, first step in deprecating the twistd-based objectstore
* Merged with trunk Updated net injection for xenapi reflecting recent changes for libvirt
* Fix lp741415 by splitting arguments of \_execute in the iSCSI driver
* make everything work with trunk again
* Support for markers for pagination as defined in the 1.1 spec
* add descriptive docstring
* don't require integrated tests to recycle connections
* remove twisted objectstore
* port the objectstore tests to the new tests
* update test base class to monkey patch wsgi
* rename objectstore tests
* port s3server to eventlet/wsgi
* add s3server, pre-modifications
* merge trunk
* Added detail keywork and i18n as per suggestions
* incorporate feedback from termie
* Implementation of blueprint hypervisor-vmware-vsphere-support.  (Link to blueprint: https://blueprints.launchpad.net/nova/+spec/hypervisor-vmware-vsphere-support)
* fix typo
* Addressing Trey's comments. Removed disk\_get\_injectables, using \_get\_network\_info's return value
* Adds serverId to OpenStack API image detail per related\_image blueprint
* Fix for bug #740947 Executing parted with sudo in \_write\_partition (vm\_utils.py)
* Implement API extensions for the Openstack API. Based on the Openstack 1.1 API the following types of extensions are supported:
* Merging trunk
* Adds unit test coverage for XenAPI Rescue & Unrescue
* libvirt driver multi\_nic support. In this phase libvirt can work with and without multi\_nic support, as in multi\_nic support for xenapi: https://code.launchpad.net/~tr3buchet/nova/xs\_multi\_nic/+merge/53458
* Merging trunk
* Review feedback
* Merged trunk
* Additions to the Direct API:
* Merged trunk
* Added test\_get\_servers\_with\_bad\_limit, test\_get\_servers\_with\_bad\_offset and test\_get\_servers\_with\_bad\_marker
* pep8 cleanups
* Added test\_get\_servers\_with\_limit\_and\_marker to test pagination with marker and limit request params
* style and spacing  fixed
* better error handling and serialization
* add some more docs and make it more obvious which parts are examples
* add an example of a versioned api
* add some more docs to direct.py
* add Limited, an API limiting/versioning wrapper
* improve the formatting of the stack tool
* support volume and network in the direct api
* Merged with trunk, fix problem with behaviour of (fake) virt driver when instance doesn't reach scheduling
* In this branch we are forwarding incoming requests to child zones when the requested resource is not found in the current zone
* trunk merge
* Fixes a bug that was causing tests to fail on OS X by ensuring that greenthread sleep is called during retry loops
* Merged trunk
* Fix some errors that pylint found in nova/api/openstack/servers.py
* Fix api logging to show proper path and controller:action
* Merged trunk
* Pylint 'Undefined variable' E0602 error fixes
* Made service\_get\_all()'s disabled parameter default to None. Pass False for enabled services; True for disabled services. Calls to this method have been updated to remain consistent
* Merged with trunk
* Reconcile tests with latest trunk merges
* Merged trunk and resolved conflict in nova/db/sqlalchemy/api.py
* Don't try to parse the empty string as a datetime
* change names for consistency with existing db api
* Merged with trunk
* Forgot one set of flags
* Paginated results should not include the item starting at marker. Improved implementation of common.limited\_by\_marker as suggested by Matt Dietz. Added flag osapi\_max\_limit
* Detect if user is running the default Lucid version of libvirt, and give a nicer error message
* Updated to use new APIRouterV11 class in tests
* Fix lp741514 by declaring libvirt\_type in nova-manage
* Docstring fixes
* get image metadata tests working after the datetime interface change in image services
* adding versioned controllers
* Addressed issues raised by Rick Harris' review
* Stubbing out utils.execute for migrate tests
* Aggregates capabilities from Compute, Network, Volume to the ZoneManager in Scheduler
* merged trunk r864
* removing old Versions application and correcting fakes to use new controller
* Renamed \_\_image and \_\_compute to better describe their purposes. Use os.path.join to create href as per suggestion. Added base get\_builder as per pychecker suggestion
* merging trunk r864
* trunk merged. conflicts resolved
* Merged trunk
* merge trunk
* merge trunk
* Small refactor
* Merged trunk and fixed tests
* Couple of pep8 fixes
* pep8 clearing
* making servers.generate\_href more robust
* merging trunk r863
* Fixes lp740322: cannot run test\_localization in isolation
* couple of bugs fixed
* Merged trunk
* Dont use popen in dettaching the lxc loop
* Fix up formatting of libvirt.xml.template
* trunk merge
* fix based on sirp's comments
* Grrr... because we're not recycling the API yet, we have to configure flags the first time it's called
* merge trunk
* Fake out network service as well, otherwise we can't terminate the instance in test\_servers now that we've started a compute service
* merge trunk
* Sorted out a problem occurred with units tests for VM migration
* pep8 fixes
* Test for attach / detach (and associated fixes)
* Pass a fake timing source to live\_migration\_pre in every test that expectes it to fail, shaving off a whole minute of test run time
* merge trunk
* Poll instance states periodically, so that we can detect when something changes 'behind the scenes'
* Merged with conflict and resolved conflict (with my own patch, no less)
* Added simple nova volume tests
* Created simple test case for server creation, so that we can have something to attach to..
* Merged with trunk
* Added volume\_attachments
* Declare libvirt\_type to avoid AttributeError in live\_migration
* minor tweak from termie feedback
* Added a mechanism for versioned controllers for openstack api versions 1.0/1.1. Create servers in the 1.1 api now supports imageRef/flavorRef instead of imageId/flavorId
* Fixed the docstring for common.get\_id\_from\_href
* better logging of exceptions
* Merged trunk
* Merged trunk
* Fix issues with certificate updating & whitespace removal
* Offers the ability to run a periodic\_task that sweeps through rescued instances older than 24 hours and forcibly unrescues them
* Merged trunk
* Added hyperv stub
* Don't try to parse a datetime if it is the empty string (or None)
* Remove a blank line
* pep8 fix
* Split arguments of \_execute in the iSCSI driver
* merge trunk
* Added revert\_resize to base class
* Addressing Rick Clark's comments
* Merged with lp:nova, fixed conflicts
* boto\_v6 module is imported if the flag "use\_ipv6" is set to True
* pep8 fixes, backported some important fixes that didn't make it over from my testing system :-(
* Move all types of locking into utils.synchronize decorator
* Doh!  Missed two places which were importing the old driver location
* Review feedback
* make missing noVNC error condition a bit more fool-proof
* clean some pep8 issues
* general cleanup, use whitelist for webserver security
* Better method name
* small fix
* Added docstring
* Updates the previously merged xs\_migration functionality to allow upsizing of the RAM and disk quotas for a XenServer instance
* Fix lp735636 by standardizing the format of image timestamp properties as datetime objects
* migration gateway\_v6 to network\_info
* merge prop fixes
* Should not call super \_\_init\_\_ twice in APIRouter
* fix utils.execute retries for osx
* Keep the fallback code - we may want to do better version checking in future
* Give the user a nicer error message if they're using the Lucid libvirt
* Only run periodic task when rescue\_timeout is greater than 0
* Fixed some typos
* Forgot extraneous module import again
* Merged trunk
* Forgot extraneous module import
* Automatically unrescue instances after a given timeout
* trunk merge
* indenting cleanup
* fixing some dictionary get calls
* Unit test cleanup
* one more minor fix
* Moving the migration yet again
* xml template fixed
* merge prop changes
* pep8 fixed
* trunk merged
* added myself to authors file
* Using super to call parent \_setup\_routes in APIRouter subclasses
* Merged trunk
* pep8 fix
* Implement v1.1 image metadata
* This branch contains the fix for bug #740929 It makes sure cidr\_v6 is not null before building the 'ip6s' key in the network info dictionary. This way utils.to\_global\_ipv6 does not fail because of cidr==None
* review comments fixed
* add changePassword action to os api v1.1
* Testing of XML and JSON for show(), and conformance to API spec for JSON
* Fixed tests
* Merged trunk
* Removed some un-needed code, and started adding tests for show(), which I forgot\!
* id -> instance\_id
* Checking whether cidr\_v6 is not null before populating ipv6 key in network info map (VMOps.\_get\_network\_info)
* Executing parted with sudo in \_write\_partition
* We update update\_ra method to synchronize, in order to prevent crash when we request multiple instance at once
* merged with trunk Updated xenapi network injection for IPv6 Updated unit tests
* merge trunk
* merge trunk
* removed excess debug line
* more progress
* use the nova Server object
* separating out components of vnc console
* Earlier versions of the python libvirt binding had getVersion in the libvirt namespace, not on the connection object.  Check both
* Report the exception (happens when can't import libvirt)
* Use subset\_dict
* Removing dead code
* Touching up comment
* Merging trunk
* Pep8 fixes
* Adding tests for owned and non-existent images
* More small cleanups
* Fix for #740742 - format describe\_instance\_output correctly to prevent errors in dashboard
* Cleaning up make\_image\_fixutres
* Merged with lp:nova
* Small cleanup of openstack/images.py
* Fixed up the new location of driver.py
* Fix for lp740742 - format describe\_instance\_output correctly to prevent errors in dashboard
* Merged with lp:nova
* Filtering images by user\_id now
* Clarified my "Yuk" comment
* Cleaned up comment about virsh domain.info() return format
* Added space in between # and TODO in #TODO
* Added note about the advantages of using a type vs using a set of global constants
* Filled out the base-driver contract, so it's not a false-promise
* Enable flat manager support for ipv6
* Adding a talk bubble to the nova.openstack.org site that points readers to the 2011.1 site and the docs.openstack.org site - similar to the swift.openstack.org site. I believe it helps people see more sites are available, plus they can get to the Bexar site if they want to. Going forward it'll be nice to use this talk bubble to point people to the trunk site from released sites
* Correctly imports greenthread in libvirt\_conn.py.  It is used by live\_migrate()
* Forgot this in the rename of check\_instance -> check\_isinstance
* Test the login behavior of the OpenStack API.  Uncovered bug732866
* trunk merge
* Renamed check\_instance -> check\_isinstance to make intent clearer
* Fix some crypto strangeness (\n in file\_name field of certificates, wrong IMPL method for certificate\_update)
* Added note agreeing with Brian Lamar that the namespace doesn't belong in wsgi
* Fix to avoid db migration failure in virtualenv
* Fixed up unit tests and direct api that was also calling \_serialize (naughty!)
* Fix the describe\_vpns admin api call
* pep8 and fixed up zone-list
* Support setting the xmlns intelligently
* get\_all cleanup
* Refactored out \_safe\_translate code
* Set XML namespace when returning XML
* Fix for LP Bug #704300
* Fix a typo in the ec2 admin api
* typo fix
* Pep8 fix
* Merging trunk
* make executable
* Adding BASE\_IMAGE\_ATTRS to ImageService
* intermediate progress on vnc-nova integration.  checking in to show vish
* add in eventlet version of vnc proxy
* Updating doc strings in accordance with PEP 257. Fixing order of imports in common.py
* one more copyright fix
* pep8 stupidness
* Tweak
* fixing copyright
* tweak
* tweak
* Whoops
* Changed default for disabled on service\_get\_all to None. Changed calls to service\_get\_all so that the results should still be as they previously were
* Now using urlparse to parse a url to grab id out of it
* Resolved conflicts
* Fix
* Remove unused global semaphore
* Addressed reviewer's comments
* pep8 fix
* Apparantly a more common problem than first thought
* Adding more docstrings. image\_id and instance\_type fields of an instance will always exist, so no reason to check if keys exist
* Pass a fake timing source to test\_ensure\_filtering\_rules\_for\_instance\_timeout, shaving off 30 seconds of test run time
* pep8
* Merged trunk
* Add a test for leaked semaphores
* Remove checks in \_cache\_image tests that were too implementation specific
* adding view builder tests
* Add correct bug fixing metadata
* When updating or creating set 'delete = 0'. (thus reactivating a deleted row) Filter by 'deleted' on delete
* merging trunk r843
* making Controller.\_get\_flavors is\_detail a keyword argument
* merging trunk r843
* Fix locking problem in security group refresh code
* merging trunk r843
* Add unit test and code updates to ensure that a PUT requests to create/update server metadata only contain a single key
* Add call to unset all stubs
* IptablesManager.semaphore is no more
* Get rid of IptablesManager's explicit semaphore
* Add --fixes lp: metadata
* Convert \_cache\_image to use utils.synchronized decorator. Disable its test case, since I think it is no longer needed with the tests for synchronized
* Make synchronized decorator not leak semaphores, at the expense of not being truly thread safe (but safe enough for Eventlet style green threads)
* merge trunk
* Wrap update\_ra in utils.synchronized
* Make synchronized support both external (file based) locks as well as internal (semaphore based) locks. Attempt to make it native thread safe at the expense of never cleaning up semaphores
* merge with trunk
* vpn changes
* added zone routing flag test
* routing test coverage
* routing test coverage
* xenapi support for multi\_nic. This is a phase of multi\_nic which allows xenapi to work as is and with multi\_nic. The other virt driver(s) need to be updated with the same support
* better comments. First redirect test
* better comments. First redirect test
* Remove \_get\_vm\_opaque\_ref() calls in rescue/unrescue
* Remove dupe'd code
* Wrap update\_dhcp in utils.synchronized
* if fingerprint data not provided, added logic to calculate it using the pub key
* get rid of another datetime alias
* import greenthread in libvirt
* merge lp:nova
* make bcwaldon happy
* fix licenses
* added licenses
* wrap and log errors getting image ids from local image store
* merge lp:nova
* merging trunk
* Fix for LP Bug #739641
* pep8; various fixes
* Provide more useful exception messages when unable to load the virtual driver
* Added Gabe to Authors file. He helped code this up too
* Added XenAPI rescue unit tests
* added an enumerate to track device in vmops.create\_vifs()
* pep8
* Openstack api 1.0 flavors resource now implemented to match the spec
* more robust extraction of arguments
* Updated comment per the extension naming convention we actually use
* Added copyright header
* Fix pep8 issues in nova/api/openstack/extensions.py
* Fix limit unit tests (reconciles w/ trunk changes)
* Changed fixed\_range (CIDR) to be required in the nova-manage command; changed default num\_networks to 1
* merging trunk r837
* zones3 and trunk merge
* Added space
* trunk merge
* remove scheduler.api.API. naming changes
* Changed error to TypeError so that we get the arguments list
* Added my name to Authors Added I18n for network create string
* merge with trunk
* merge trunk
* merge trunk
* merge trunk
* Add bug metadata
* Wrap update\_dhcp in utils.synchronized
* fixes nova-manage instance\_type compatibility with postgres db
* Tell PyLint not to complain about the "\_" function
* Make smoketests' exit code reveal whether they were succesful
* pep8
* Added run\_instances method to the connection.py of the contrib/boto\_v6/ec2 which would return ReservationV6 object instead of Reservation in order to access attribute dns\_name\_v6 of an instance
* cleanup another inconsistent use of 1 for True in nova-manage
* Changed Copyright to NTT for newly added files for flatmanager ipv6
* merge trunk
* \* committing ovs scripts
* fix nova-manage instance\_type list for postgres compatibility
* fixed migration instance\_types migration to support postgres correctly
* comment more descriptive
* Seriously?
* Fixed netadmin smoketests for ipv6
* Merged trunk
* Better errors when virt driver isn't loaded
* merge lp:nova
* fix date formatting in images controller show
* huh
* fix ups
* merge trunk
* uses True/False instead of 1/0 for Postgres compatibility
* cleaned up tests stubs that were accidentally checked in
* works again. woo hoo
* created api endpoint to allow uploading of public key
* api decorator
* Cleanup of FakeAuthManager
* Replaced all pylint "disable-msg=" with "disable=" and "enable-msg=" with "enable="
* Change cloud.id\_to\_ec2\_id to ec2utils.id\_to\_ec2\_id. Fixes EC2 API error handling when invalid instances and volume names are specified
* A few more single-letter variable names bite the dust
* Re-implementation (or just implementation in many cases) of Limits in the OpenStack API. Limits is now available through /limits and the concept of a limit has been extended to include arbitrary regex / http verb combinations along with correct XML/JSON serialization. Tests included
* Avoid single-letter variable names
* auth\_data is a list now (thanks Rick!)
* merge with trunk
* Mark instance metadata as deleted when we delete the instance
* results
* fixed up novaclient usage to include managers
* Added test case
* Minor fixes to replace occurances of "VI" by "VIM" in 2 comments
* whoopsy2
* whoopsy
* Fixed 'Undefined variable' errors generated by pylint (E0602)
* Merged trunk
* Change cloud.id\_to\_ec2\_id to ec2utils.id\_to\_ec2\_id. Fixes EC2 API error handling when invalid instances and volume names are specified
* enable-msg -> enable
* disable-msg -> disable
* enable\_zone\_routing flag
* PEP-8
* Make flag parsing work again
* Using eventlets greenthreads for optimized image processing. Fixed minor issues and style related nits
* Fixed issue arisen from recent feature update (utils.execute)
* Make proxy.sh work with both openbsd and traditional variants of netcat
* Query the size of the block device, not the size of the filesystem
* merge trunk
* Ensuring kernel/ramdisk files are always removed in case of failures
* merge trunk
* merge trunk
* Implement metadata resource for Openstack API v1.1. Includes:     -GET /servers/id/meta     -POST /servers/id/meta     -GET /servers/id/meta/key     -PUT /servers/id/meta/key     -DELETE /servers/id/meta/key
* Make "ApiError" the default error code for ApiError instances, rather than "Unknown."
* When changing the project manager, if the new manager is not yet a project member, be sure to make them be a project member
* Make the rpc cast/call debug calls show what topic they are sending to.  This aides in debuugging
* Final touches and bug/pep8 fixes
* Support for markers for pagination as defined in the 1.1 spec
* Merged trunk
* Become compatible with ironcamel and bcwaldon's implementations for standardness
* pep8
* Merged dependant branch lp:~rackspace-titan/nova/openstack-api-versioned-controllers
* Updated naming, removed some prints, and removed some invalid tests
* adding servers container to openstack api v1.1 servers entities
* decorator more generic now
* Images now v1.1 supported...mostly
* fixed up bzr mess
* Fix for LP Bug #737240
* refactored out middleware, now it's a decorator on service.api
* Fix for LP Bug #737240
* Add topic name to cast/call logs
* Changing project manager should make sure that user is a project member
* Invert some of the original logic and fix a typo
* Make the smoketests pep8 compliant (they weren't when I started working on them..)
* Update the Openstack API to handle case where personality is set but null in the request to create a server
* Fix a couple of things that assume that libvirt == kvm/qemu
* Made fixed\_range a required parameter for nova-manage network create. Changed default num\_networks to 1; 1000 seems large
* Fix a number of place in the volume driver where the argv hadn't been fully split
* fix for lp712982, and likely a variety of other dashboard error handling issues.  This fix simply causes the default error code for ApiError to be 'ApiError' rather than 'Unknown', which makes dashboard handle the error gracefully, and makes euca error output slightly prettier
* Fix mis-merge
* pep8 is hard
* syntax error
* create vifs before inject network info to remove rxtx\_cap from network info (don't need to inject it)
* Make utils.execute not overwrite std{in,out,err} args to Popen on retries. Make utils.execute reject unknown kwargs
* merged trunk, merged qos, slight refactor regarding merges
* - general approach for openstack api versioning - openstack api version now preserved in request context - added view builder classes to handle os api responses - added imageRef and flavorRef to os api v1.1 servers - modified addresses container structure in os api v1.1 servers
* Pep8
* Test changes
* pep8
* Adjust test cases
* pep8
* merge
* Mark instance metadata as deleted when we delete the instance
* Backfix of bugfix of issue blocking creating servers with metadata
* Better comment for fault. Improved readability of two small sections
* Add support for network QoS (ratelimiting) for XenServer. Rate is pulled from the flavor (instance\_type) when constructing a vm
* pep8
* I suck at merging
* Now returns a 400 for a create server request with invalid hrefs for imageRef/flavorRef values. Also added tests
* moving Versions app out of \_\_init\_\_.py into its own module; adding openstack versions tests; adding links to version entities
* fixed code formatting nit
* handle create and update requests, and update the base image service documentation to reflect the (defacto) behavior
* Move the check for None personalities into the create method
* Get the migration out
* get api openstack test\_images working
* merge trunk
* Improved exception handling
* better implementation of try..except..else
* merging parent branch lp:~bcwaldon/nova/osapi-flavors-1\_1
* merging parent branch lp:~rackspace-titan/nova/openstack-api-version-split
* iptables filter firewall changes merged
* merged trunk
* pep8
* adding serialization\_metadata to encode links on flavors
* merge with libvirt\_multinic\_nova
* pep8
* teach glance image server get to handle timestamps
* merge trunk
* merge trunk
* fixes for NWFilterFirewall and net injection
* moving code out of try/except that would never trigger NotFound
* handle timestamps in glance service detail
* fixed IpTablesFirewal
* Fixes lp736343 - Incorrect mapping of instance type id to flavor id in Openstack API
* Comparisons to None should not use == or !=
* Pep8 error, oddly specific to pep8 v0.5 < x > v0.6
* Remove unconditional raise, probably left over from debugging
* Mapping the resize status
* Mapping the resize status
* Fixed pep8 violation
* adding comments; removing returns from build\_extra; removing unnecessary backslash
* refactor to simpler implementation
* Foo
* glance image service show testcases
* oh come on
* refactoring
* Add tests and code to handle multiple ResponseExtension objects
* Just use 'if foo' instead of 'if len(foo)'. It will fail as spectacularly if its not acting on a sequence anyways
* bugfix
* Remove unconditional raise, probably left over from debugging
* No need to modify this test case function as well
* refactored: network\_info creation extracted to method
* Call \_create\_personality\_request\_dict within the personalities\_null test
* Foo
* more pep8 fixes
* Switch back to 'is not None' for personality\_files check. (makes mark happy)
* pep8 fixes
* 1) Update few comments where whitespace is missing after '#' 2) Update document so that copy right notice doesn't appear in generated document 3) Now using self.flag(...) instead of setting the flags like FLAGS.vmwareapi\_username by direct assignment. 4) Added the missing double quote at the end a string in vim\_util.py
* more pep8 fixes
* Fix up tests
* Replaced capability flags with List
* Fix more pep8 errors
* Remove me from mailmap
* Fix up setup container
* Merged trunk
* Update the Openstack API to handle case where personality is set but null in the request to create a server
* Make smoketests' exit code reveal whether they were succesful
* merge with trunk. moved scheduler\_manager into manager. fixed tests
* Set nbd to false when mounting the image
* Fixed typo when I was trying to add test cases for lxc
* Remove target\_partition for setup\_container but still hardcode because its needed when you inject the keys into the image
* Remove nbd=FLAGS.use\_cow\_images for destroy container
* Update mailmap
* Fix a number of place in the volume driver where the argv hadn't been fully split
* Fix pep8 errors
* Update authors again
* Improved exception handling: - catching appropriate errors (OSError, IOError, XenAPI.Failure) - reduced size of try blocks - moved exception handling code in separate method - verifing for appropriate exeception type in unit tests
* get\_console\_output is not supported by lxc and libvirt
* Update Authors and testsuite
* Comparisons to None should not use == or !=
* Make error message match the check
* Setting the api verion in the request in the auth middle is no longer needed. Also, common.get\_api\_version is no longer needed. As Eric Day noted, having versioned controllers will make that unnecessary
* moving code out of try/except that would never trigger NotFound
* Added mechanism for versioned controllers for openstack api versions 1.0/1.1. Create servers in the 1.1 api now supports imageRef/flavorRef instead of imageId/flavorId
* fix up copyright
* removed dead method
* pep8
* pep8
* Remerge trunk
* cleanup
* added in network qos support for xenserver. Pull qos settings from flavor, use when creating instance
* moved scheduler API check into db.api decorator
* Add basic tests for lxc containers
* Revert testsuite changes
* MErge trunk
* Fix a few of the more obvious non-errors while we're in here
* hacks in place
* Fix the errors that pylint was reporting on this file
* foo
* foo
* commit before monster
* Fix \_\_init\_\_ method on unit tests (they take a method\_name kwarg)
* Don't warn about C0111 (No docstrings)
* In order to disable the messages, we have to use disable, not disable-msg
* Avoid mixins on image tests, keeping pylint much happier
* Use \_ trick to hide base test class, thereby avoiding mixins and helping PyLint
* hurr
* hurr
* get started testing
* foo
* Don't complain about the \_ function being used
* Again
* pep8
* converted new lines from CRLF to LF
* adding bookmarks links to 1.1 flavor entities
* Reverting
* Log the use of utils.synchronized
* expanding osapi flavors tests; rewriting flavors resource with view builders; adding 1.1 specific links to flavors resources
* Dumb
* Unit test update
* Fix lp727225 by adding support for personality files to the openstack api
* Changes
* fixes bug 735298: start of nova-compute not possible because of wrong xml paths to the //host/cpu section in "virsh capabilities", used in nova/virt/libvirt\_conn.py
* update image service documentation
* merge lp:nova and resolve conflicts
* User ids are strings, and are not necessarily == name.  Also fix so that non-existent user gives a 404, not a 500
* Fudge
* Keypairs are not required in the OpenStack API; don't require them!
* Merging trunk
* Add missing fallback chain for ipv6
* Typo fix
* fixed pep8 issue
* chchchchchanges
* libvirt template and libvirt\_conn.spawn modified in way that was proposed for xenapi multinic support
* Re-commit r805
* Re-commit r804
* Refactored ZoneRedirect into ZoneChildHelper so ZoneManager can use this too
* Don't generate insecure passwords where it's easy to use urandom instead
* merging openstack-api-version-split
* chchchchchanges
* chchchchchanges
* Fixes euca-get-ajax-console returning Unknown Error, by using the correct exception in get\_open\_port() logic. Patch from Tushar Patil
* chchchchchanges
* Revert commit that modified CA/openssl.cnf.tmpl
* Comment update
* Derped again
* Move mapper code into the \_action\_ext\_controllers and \_response\_ext\_controllers methods
* The geebees
* forgot to return network info - teehee
* refactored, bugfixes
* merge trunk
* moving code out of try/except that would never trigger NotFound
* merge trunk
* Logging statements
* added new class Instances for managaging instances added new method list in class Instances:
* tweak
* Stuff
* Removing io\_util.py. We now use eventlets library instead
* Some typos
* \* Updated document vmware\_readme.rst to mention VLAN networking \* Corrected docstrings as per pep0257 recommentations. \* Stream-lined the comments. \* Updated code with locals() where ever applicable. \* VIM : It stands for VMware Virtual Infrastructure Methodology. We have used the terminology from VMware.  we have added a question in FAQ inside vmware\_readme.rst in doc/source \* New fake db: vmwareapi fake module uses a different set of fields and hence the structures required are different. Ex: bridge : 'xenbr0' does not hold good for VMware environment and bridge : 'vmnic0' is used instead. Also return values varies, hence went for implementing separate fake db. \* Now using eventlet library instead and removed io\_utils.py from branch. \* Now using glance.client.Client instead of homegrown code to talk to Glance server to handle images. \* Corrected all mis-spelled function names and corresponding calls. Yeah, an auto-complete side-effect!
* Implement top level extensions
* Added i18n to error message
* Checks locally before routing
* Really fix testcase
* More execvp fallout
* Fix up testsuite for lxc
* Error codes handled properly now
* merge trunk
* Adding unit test
* Fix instance creation fail under use\_ipv6=false and FlatManager
* pep8 clean
* Fix a couple of things that assume that libvirt == kvm/qemu
* Updating gateway\_v6 in \_on\_set\_network\_host() is not required for FlatManager
* added correct path to cpu information (tested on a system with 1 installed cpu package)
* Fix unknown exception error in euca-get-ajax-console
* fixed pep8 errors (with version 0.5.0)
* Use integer ids for (fake) users
* req envirom param 'nova.api.openstack.version' should be 'api.version'
* pep8 fixes
* Fixed DescribeUser in ec2 admin client
* openstack api 1.0 flavors resource now implemented; adding flavors request value testing
* response working
* Added tests back for RateLimitingMiddleware which now throw correctly serialized errors with correct error codes
* Add ResponseExtensions
* revised per code review
* first pass openstack redirect working
* Adding newlines for pep8
* Removed VIM specific stuff and changed copyright from 2010 to 2011
* Limits controller and testing with XML and JSON serialization
* adding imageRef and flavorRef attributes to servers serialization metadata
* Merged with trunk (and brian's previous fixes to fake auth)
* Plugin
* As suggested by Eric Day:  \* changed request.environ version key to more descriptive 'api.version'  \* removed python3 string formatting  \* added licenses to headers on new files
* Tweak
* A few fixes
* pep8
* merge lp:nova
* ignore differently-named nodes in personality and metadata parsing
* wrap errors getting image ids from local image store
* Moving the migration again
* Updating paste config
* pep8
* internationalization
* Per Eric Day's suggest, the verson is not store in the request environ instead of the nova.context
* s/onset\_files/injected\_files/g
* pep8 fixes
* Add logging to lock check
* Now that the fix for 732866, stop working around the bug
* Major cosmetic changes to limits, but little-to-no functional changes. MUCH better testability now, no more relying on system time to tick by for limit testing
* Merged with trunk to get fix for bug 732866
* Merged trunk
* modifying paste config to support v1.1; adding v1.1 entry in versions resource ( GET /)
* Fixed lp732866 by catching relevant \`exception.NotFound\` exception. Tests did not uncover this vulnerability due to "incorrect" FakeAuthManager. I say "incorrect" because potentially different implementations (LDAP or Database driven) of AuthManager might return different errors from \`get\_user\_from\_access\_key\`
* refactor onset\_files quota checking
* Code clean up. Removing \_decorate\_response methods. Replaced them with more explicit methods, \_build\_image, and \_build\_flavor
* Use random.SystemRandom for easy secure randoms, configurable symbol set by default including mixed-case
* merge lp:nova
* Support testing the OpenStack API without key\_pairs
* merge trunk
* Fixed bugs in bug fix (plugin call)
* adding missing view modules; modifying a couple of servers tests to use enumerate
* just fixing a small typo in nova-manage vm live-migration
* exception fixup
* Make Authors check account for tests being run with different os.getcwd() depending on how they're run. Add missing people to Authors
* Removed duplicated tests
* PEP8 0.5.0 cleanup
* Really delete the loop
* Add comments about the destroy container function
* Mount the right device
* Merged trunk
* Always put the ipv6 fallback in place. FLAGS.use\_ipv6 does not exist yet when the firewall driver is instantiated and the iptables manager takes care not to fiddle with ipv6 if not enabled
* merged with trunk and removed conflicts
* Merging trunk
* Reapplied rename to another file
* serverId returned as int per spec
* Reapplied rename of Openstack -> OpenStack.  Easier to do it by hand than to ask Bazaar to do it
* Merged with trunk.  Had to hold bazaar's hand as it got lost again
* Derive unit test from standard nova.test.TestCase
* pep8 fixes
* adding flavors and images barebones view code; adding flavorRef and imageRef to v1.1 servers
* Fixed problem with metadata creation (backported fix)
* Clarify the logic in using 32 symbols
* moving addresses views to new module; removing 'Data' from 'DataViewBuilder'
* Don't generate insecure passwords where it's easy to use urandom instead
* Added a views package and a views.servers module. For representing the response object before it is serialized
* Make key\_pair optional with OpenStack API
* Moved extended resource code into the extensions.py module
* Moving fixtures to a factory
* Refactor setup contianer/destroy container
* Fixing API per spec, to get unit-tests to pass
* Implements basic OpenStack API client, ready to support API tests
* Fix capitalization of ApiError (it was mistakenly called APIError)
* added migration to repo
* Clarified message when a VM is not running but still in DB
* Implemented Hyper-V list\_instances\_detail function.  Needs a cleanup by someone that knows the Hyper-V code
* So the first of those tests doesn't pass.  Removing as it looks like it was meant to be deleted
* Added test and fixed up code so that it works
* Fix for LP Bug #704300
* fixed keyword arg error
* pep8
* added structure to virt.xenapi.vmops to support network info being passed in
* Removed duplicated test, renamed same-named (but non-identical) tests
* merge trunk
* PEP8 cleanup
* Fixes other half of LP#733609
* Initial implementation of refresh instance states
* Add missing fallback chain for ipv6
* The exception is called "ApiError", not "APIError"
* Implement action extensions
* Include cpuinfo.xml.template in tarball
* Adding instance\_id as Glance image\_property
* Add fixes metadata
* Include cpuinfo.xml.template in tarball
* Merged test\_network.py properly. Before I had deleted this file and added again, but this file status should be modified when you see the merged difference
* removed conflicts and merged with trunk
* Create v1\_0 and v1\_1 packages for the openstack api. Added a servers module to each. Added tests to validate the structure of ip addresses for a 1.1 request
* committing to share
* small typo in nova-manage vm live-migration
* NTT's live-migration branch, merged with trunk, conflicts resolved, and migrate file renamed
* Reverted unmodified files
* Reverted unmodified files
* Only include kernel and ramdisk ID in meta-data output if they are actually set
* Test fixes and some typos
* Test changes
* Migration moved again
* Compute test
* merge trunk
* merge trunk
* Make nova-dhcpbridge output lease information in dnsmasq's leasesfile format
* Merged my doc changes with trunk
* Fixed pep8 errors
* Fixed failing tests in test\_xenapi
* Fixes link to 2011.1 instad of just to trunk docs
* fixes: 733137
* Add a unit test
* Make utils.execute not overwrite std{in,out,err} args to Popen on retries. Make utils.execute reject unknown kwargs
* Removed excess LOG.debug line
* merge trunk
* The extension name is constructed from the camel cased module\_name + 'Extension'
* Merged with trunk
* Fix instructions for setting up the initial database
* Fix instructions for setting up the initial database
* merged with latest trunk and removed unwanted files
* Removed \_translate\_keys() functions since it is no longer used. Moved private top level functions to bottom of module
* Use a consistent naming scheme for XenAPI variables
* oops
* Review feedback
* Review feedback
* Review feedback
* Some unit tests
* Change capitalization of Openstack to OpenStack
* fixed conflicts after merging with trunk with 787
* Adding a sidebar element to the nova.openstack.org site to point people to additional versions of the site
* oops
* Review feedback
* Replace raw SQL calls through session.execute() with SQLAlchemy code
* Review feedback
* Remove vish comment
* Remove race condition when refreshing security groups and destroying instances at the same time
* Removed EOL whitespace in accordance with PEP-8
* Beginning of cleanup of FakeAuthManager
* Make the fallback value None instead of False
* Indentation adjustment (cosmetical)
* Fixed lp732866 by catching relevant \`exception.NotFound\` exception. Tests did not uncover this vulnerability due to "incorrect" FakeAuthManager. I say "incorrect" because potentially different implementations (LDAP or Database driven) of AuthManager might return different errors from \`get\_user\_from\_access\_key\`
* Merged trunk
* This change adds the ability to boot Windows and Linux instances in XenServer using different sets of vm-params
* merge trunk
* New migration
* Passes net variable as value of keyword argument process\_input. Prior to the execvp patch, this was passed positionally
* Changes the output of status in describe\_volumes from showing the user as the owner of the volume to showing the project as the owner
* Added support for ips resource: /servers/1/ips Refactored implmentation of how the servers response model is generated
* merge trunk
* Adds in multi-tenant support to openstack api. Allows for multiple accounts (projects) with admin api for creating accounts & users
* merge trunk
* remerge trunk (again). fix issues caused by changes to deserialization calls on controllers
* Add config for osapi\_extensions\_path. Update the ExtensionManager so that it loads extensions in the osapi\_extensions\_path
* process\_input for tee. fixes: 733439
* Minor stylistic updates affecting indentation
* Make linux\_net ensure\_bridge commands that add and remove ip addr's from devices/bridges work with with the latest utils.execute method (execvp)
* Added volume api from previous megapatch
* Made changes to xs-ipv6 code impacted because of addition of flatmanger ipv6 support
* Need to set version to '1.0' in the nova.context in test code for tests to be happy
* merge from trunk..
* Discovered literal\_column(), which does exactly what I need
* Merged trunk
* Further vmops cleanup
* cast execute commands to str
* Remove broken test. At least this way, it'll actually fix the problem and be mergable
* \* Updated the readme file with description about VLAN Manager support & guest console support. Also added the configuration instructions for the features. \* Added assumptions section to the readme file
* \* Modified raise statements to raise nova defined Exceptions. \* Fixed Console errors and in network utils using HostSystem instead of Datacenter to fetch network list \* Added support for vmwareapi module in nova/virt/connection.py so that vmware hypervisor is supported by nova \* Removing self.loop to achieve synchronization
* merge trunk
* Moved vlan\_interface flag in network.manager removed needless carriage return in vm\_ops
* Use self.instances.pop in unfilter\_instance to make the check/removal atomic
* Make Authors check account for tests being run with different os.getcwd() depending on how they're run. Add missing people to Authors
* Make linux\_net ensure\_bridge commands that add and remove ip addr's from devices/bridges work with with the latest utils.execute method (execvp)
* \_translate\_keys now needs one more argument, the request object
* Added version attribute to RequestContext class. Set the version in the nova.context object at the middleware level. Prototyped how we can serialize ip addresses based on the version
* execvp: fix params
* merge lp:nova
* switch to a more consistent usage of onset\_files variable names
* re-added a test change I removed thinking it was related to removed code. It wasn't :>
* merge trunk
* Document known bug numbers by the code which is degraded until the bugs are fixed
* fix minor typo
* Fix a fer nits jaypipes found in review
* Pep8 / Style
* Re-removed the code that was deleted upstream but somehow didn't get merged in.  Bizarre!
* More resize
* Merged with upstream
* pep8 fun
* Test login.  Uncovered bug732866
* Merged with upstream
* Better logging, be more careful about when we throw login errors re bug732866
* Don't wrap keys and volumes till they're in the API
* Add a new IptablesManager that takes care of all uses of iptables
* Last un-magiced session.execute() replaced with SQLAlchemy code..
* PEP8
* Add basic test case
* Implements basic OpenStack API client, ready to support API tests
* Initial support fo extension resources. Tests
* Partial revert of one conversion due to phantom magic exception from SQLAlchemy in unrelated code; convert all deletes
* merge lp:nova
* add docstring
* fixed formatting and redundant imports
* Cleaned up vmops
* merge trunk
* initializing instance power state on launch to 0 (fixes EC2 API bug)
* Correct a misspelling
* merge lp:nova
* merge trunk
* Use a FLAGS.default\_os\_type if available
* Another little bit of fallout from the execvp branch
* Updated the code to detect the exception by fault type. SOAP faults are embedded in the SOAP response as a property. Certain faults are sent as a part of the SOAP body as property of missingSet. E.g. NotAuthenticated fault. So we examine the response object for missingSet and try to check the property for fault type
* Another little detail.
* Fix a few things that were either missed in the execvp conversion or stuff that was merged after it, but wasn't updated accordingly
* Introduces the ZoneManager to the Scheduler which polls the child zones and caches their availability and capabilities
* One more thing.
* merge trunk
* Only include ramdisk and kernel id if they are actually set
* Add bugfix metadata
* More execvp fallout
* Make nova.image.s3 catch up with the new execute syntax
* Pass argv of dnsmasq and radvd to execute as individual args, not as a list
* Split dnsmasq and radvd commands into their respective argv's
* s/s.getuid()/os.getuid()/
* merge lp:nova and add stub image service to quota tests as needed
* merged to trunk rev781
* fix pep8 check
* merge lp:nova
* Modifies S3ImageService to wrap LocalImageService or GlanceImageService.  It now pulls the parts out of s3, decrypts them locally, and sends them to the underlying service.  It includes various fixes for image/glance.py, image/local.py and the tests
* add tests to verify the serialization of adminPass in server creation response
* Fixes nova.sh to run properly the first time.  We have to get the zip file after nova-api is running
* minor fixes from review
* merged trunk
* fixed based on reviewer's comment
* merge lp:nova
* Moved umount container to disk.py and try to remove loopback when destroying the container
* Merged trunk
* Replace session.execute() calls performing raw UPDATE statements with SQLAlchemy code, with the exception of fixed\_ip\_disassociate\_all\_by\_timeout()
* Fixes a race condition where multiple greenthreads were attempting to resize a file at the same time.  Adds tests to verify that the image caching call will run concurrently for different files, but will block other greenthreads trying to cache the same file
* maybe a int instead ?
* merge lp:nova
* merge, resolve conflicts, and update to reflect new standard deserialization function signature
* Fixes doc build after execvp patch
* execvp: fix docs
* initializing instance power state on launch to 0 (fixes EC2 API bug)
* - Content-Type and Accept headers handled properly - Content-Type added to responses - Query extensions no long cause computeFaults - adding wsgi.Request object - removing request-specific code from wsgi.Serializer
* Fixes bug 726359. Passes unit tests
* merge lp:nova, fix conflicts, fix tests
* fix the copyright notice in migration
* execvp: cleanup
* remove the semaphore when there is no one waiting on it
* merge lp:nova and resolve conflicts
* Hi guys
* Update the create server call in the Openstack API so that it generates an 'adminPass' and calls set\_admin\_password in the compute API. This gets us closer to parity with the Cloud Servers v1.0 spec
* Added naming scheme comment
* Merged trunk
* execvp passes pep8
* merge trunk
* Add a decorator that lets you synchronise actions across multiple binaries. Like, say, ensuring that only one worker manipulates iptables at a time
* renaming wsgi.Request.best\_match to best\_match\_content\_type; correcting calls to that function in code from trunk
* merge lp:nova
* Fixes bug #729400. Invalid values for offset and limit params in http requests now return a 400 response with a useful message in the body. Also added and updated tests
* Add password parameter to the set\_admin\_password call in the compute api. Updated servers password to use this parameter
* stuff
* rearrange functions and add docstrings
* Fixes uses of process\_input
* update authors file
* merged trunk r771
* merge lp:nova
* remove unneeded stubs
* move my tests into their own testcase
* replaced ConnectionFailed with Exception in tools/euca-get-ajax-console was not working for me with euca2tools 1.2 (version 2007-10-10, release 31337)
* Fixed pep8 issues
* remerge trunk
* removed uneeded  \*\*kw args leftover from removed account-in-url changes
* fixed lp715427
* fixed lp715427
* Fix spacing
* merge lp:nova and resolve conflicts
* remove superfluous trailing blank line
* add override to handle xml deserialization for server instance creation
* Added 'adminPass' to the serialization\_metadata
* merge trunk
* Merged with trunk Updated exception handling according to spawn refactoring
* Fixed pep8 violation in glance plugin
* Added unit tests for ensuring VDI are cleaned up upon spawn failures
* Stop assuming anything about the order in which the two processes are scheduled
* make static method for testing without initializing libvirt
* tests and semaphore fix for image caching
* execvp: unit tests pass
* merged to trunk rev 769
* execvp: almost passes tests
* Refactoring nova-api to be a service, so that we can reuse it in unit tests
* Added documentation about needed flags
* a few fixes for the tests
* Renamed FLAG.paste\_config -> FLAG.api\_paste\_config
* Sorted imports correctly
* merge trunk
* Fixes lp730960 - mangled instance creation in virt drivers due to improper merge conflict resolution
* Use disk\_format and container\_format in place of image type
* using get\_uuid in place of get\_record in \_get\_vm\_opaqueref changed SessionBase.\_getter in fake xenapi in order to return HANDLE\_INVALID failure when reference is not in DB (was NotImplementedException)
* Merging trunk
* Fixing tests
* Pep8 fixes
* Accidentally left some bad data around
* Fix the bug where fakerabbit is doing a sort of prefix matching on the AMQP routing key
* merge trunk
* Use disk\_format and container\_format instead of image type
* merged trunk
* update manpage
* update code to work with new container and disk formats from glance
* modify nova manage doc
* Nits
* abstracted network code in the base class for flat and vlan
* Remerged trunk. fixed conflict
* Removes VDIs from XenServer backend if spawn process fails before vm rec is created
* Added ability to remove networks on nova-manage command
* Remove addition of account to service url
* refactored up nova/virt/xenapi/vmops \_get\_vm\_opaque\_ref() no longer inspects the param to check to see if it is an opaque ref works better for unittests
* This fix is an updated version of Todd's lp720157. Adds SignatureVersion checking for Amazon EC2 API requests, and resolves bug #720157
*  \* pep8 cleanups in migrations  \* a few bugfixes
* Removed stale references to XenAPI
* Moved guest\_tool.py from etc/esx directory to tools/esx directory
* Removed excess comment lines
* Fix todo comment
* execvp
* Merged trunk
* virt.xenapi.vmops.\_get\_vm\_opaque\_ref changed vm to vm\_ref and ref to obj
* virt.xenapi.vmops.\_get\_vm\_opaque\_ref assumes VM.get\_record raises
* add a delay before grabbing zipfile
* Some more refactoring and a tighter unit test
* Moved FLAGS.paste\_config to its re-usable location
* Merged with trunk and fixed conflict.  Sigh
* Converted tabs to spaces in bin/nova-api
* A few more changes
* Inhibit inclusion of stack traces in the logs UNLESS --verbose has been specified.  This should help keep the logs compact, helping admins find the messages they're interested in (e.g., "Can't connect to MySQL server on '127.0.0.1' (111)") without having to sort through the stack traces, while still allowing developers to see those traces at will
* Addresses bugs 704985 and 705453 by:
* And unit tests
* A few formatting niceties
* First part of the bug fix
* virt.xenapi.vmops.\_get\_vm\_opaque\_ref checks for basestring instance instead of str
* virt.xenapi.vmops.\_get\_vm\_opaque\_ref exception caught properly
* cleaned up virt.xenapi.vmops.\_get\_vm\_opaque\_ref. more reliable approach to checking if param is an opaque ref. code is cleaner
* deleted network\_is\_associated from nova.db api
* move the images\_dir out of the way when converting
* pep8
* rework register commands based on review
* added network\_get\_by\_cidr method to nova.db api
* Use IptablesManager.semapahore from securitygroups driver to ensure we don't apply half a rule set
* Log failed command execution if there are more retry attempts left
* Make iptables rules class \_\_ne\_\_ just be inverted \_\_eq\_\_
* Invalid values for offset and limit params in http requests now return a 400 response with a useful message in the body. Also added and updated tests
* Create --paste\_config flag defaulting to api-paste.ini and mv etc/nova-api.conf to match
* Implementation for XenServer migrations. There are several places for optimization but I based the current implementation on the chance scheduler just to be safe. Beyond that, a few features are missing, such as ensuring the IP address is transferred along with the migrated instance. This will be added in a subsequent patch. Finally, everything is implemented through the Openstack API resize hooks, but actual resizing of the instance RAM and hard drive space is not yet implemented
* Generate 'adminPass' and call set\_password when creating servers
* Merged with current trunk
* merge trunk
* Resolving excess conflicts due to criss-cross in branch history
* Make "dhcpbridge init" output correctly formatted leases information
* Rebased to nova revision 761
* Fixed some more pep8 errors
* \* Updated readme file with installation of suds-0.4 through easy\_install. \* Removed pass functions \* Fixed pep8 errors \* Few bug fixes and other commits
* zipfile needs to be extracted after nova is running
* make compute get the new images properly, fix a bunch of tests, and provide conversion commands
* avoid possible string/int comparison problems
* merge lp:nova
* select cleanups
* Merged to trunk rev 760, and fixed comment line indent according to Jay's comment
* Fix renaming of instance fields using update\_instance api method
* apirequest -> apireq
*  \* os\_type is no longer \`not null\`
* respond well if personality attribute is incomplete
* Added initial support to delete networks nova-manage
* move the id wrapping into cloud layer instead of image\_service
* added flatmanager unit testcases and renamed test\_network.py to test\_vlan\_network.py
* remove xml testing infrastructure since it is not feasible to use at present
* refactor server tests to support xml and json separately
* More unit tests and rabbit hooks
* Fix renaming of instance fields using update\_instance method
* Fix api logging to show proper path and controller:action
* merged trunk
* \* Tests to verify correct vm-params for Windows and Linux instances
* More fixes
* delete unnecessary DECLARE
* Fixed based on reviewer's comment. Main changes are below. 1. get\_vcpu\_total()/get\_memory\_mb()/get\_memory\_mb\_used() is changed for users who used non-linux environment. 2. test code added to test\_virt
* merge lp:nova
* merge trunk
* fixed wrong local variable name in vmops
* Use %s for instance-delete logging in case instance\_id comes through as a string
* remove ensure\_b64\_encoding
* add the ec2utils file i forgot
* spawn a greenthread for image registration because it is slow
* fix a couple issues with local, update the glance fake to actually return the same types as the real client, fix the image tests
* make local image service work
* use LocalImageServiceByDefault
* Replace objectstore images with S3 image service backending to glance or local
* Merged to trunk rev 759
* Merged trunk rev 758
* remove ra\_server from model and fix migration issue while running unit tests
* Removed properties added to fixed\_ips by xs-ipv6 BP
* altered ra\_server name to gateway\_v6
* merge lp:nova
* rename onset\_files to personality\_files all the way down to compute manager
* Changing output of status from showing the user as the owner, to showing the project
* enforce personality quotas
* localize a few error messages
* Refactor wsgi.Serializer away from handling Requests directly; now require Content-Type in all requests; fix tests according to new code
* pep8
* Renaming my migration yet again
* Merged with Trunk
* Use %s in case instance\_id came through as a string
* Basic notifications drivers and tests
* adding wsgi.Controller and wsgi.Request testing; fixing format keyword argument exception
* This fix changes a tag contained in the DescribeKeyPairs response from <keypairsSet> to <keySet> so that Amazon EC2 access libraries which does more strict syntax checking can work with Nova
* some comments are modified
* Merged to trunk rev 757. Main changes are below. 1. Rename db table ComputeService -> ComputeNode 2. nova-manage option instance\_type is reserved and we cannot use option instance, so change instance -> vm
* adding wsgi.Request class to add custom best\_match; adding new class to wsgify decorators; replacing all references to webob.Request in non-test code to wsgi.Request
* Remerged trunk, fixed a few conflicts
* Add in multi-tenant support in openstack api
* Merged to trunk rev 758
* Fix regression in the way libvirt\_conn gets its instance\_types
* Updated DescribeKeyPairs response tag checked in nova/tests/test\_cloud.py
* merged to trunk rev757
* Fixed based on reviewer's comments. Main changes are below. 1. Rename nova.compute.manager.ComputeManager.mktmpfile for better naming. 2. Several tests code in tests/test\_virt.py are removed. Because it only works in libvirt environment. Only db-related testcode remains
* Fix regression in the way libvirt\_conn gets its instance\_types
* more rigorous testing and error handling for os api personality
* Updated Authors and .mailmap
* Merged to rev 757
* merges dynamic instance types blueprint (http://wiki.openstack.org/ConfigureInstanceTypesDynamically) and bundles blueprint (https://blueprints.launchpad.net/nova/+spec/flavors)
* moved migration to 008 (sigh)
* merged trunk
* catching bare except:
* added logging to instance\_types for DB errors per code review
* Very simple change checking for < 0 values in "limit" and "offset" GET parameters. If either are negative, raise a HTTPBadRequest exception. Relevant tests included
* requested style change
* Fixes Bug #715424: nova-manage : create network crashes when subnet range provided is not enough , if the network range cannot fit the parameters passed, a ValueError is raised
* adding new source docs
* corrected error message
* changed \_context
* pep8
* added in req.environ for context
* pep8
* fixed \_context typo
* coding style change per devcamcar review
* fixed coding style per devcamcar review notes
* removed create and delete method (and corresponding tests) from flavors.py
* Provide the ability to rescue and unrescue a XenServer instance
* Enable IPv6 injection for XenServer instances. Added addressV6, netmaskV6 and gatewayV6 columns to the fixed\_ips table via migration #007 as per NTT FlatManager IPv6 spec
* Updated docstrings
* add support for quotas on file injection
* Added IPv6 migrations
* merge fixes
* Inject IPv6 data into XenStore for instance
* Change DescribeKeyPairs response tag from keypairsSet to keySet, and fix lp720133
* Port Todd's lp720157 fix to the current trunk, rev 752
* Changed \_get\_vm\_opaqueref removing test-specific code paths
* Removed excess TODO comments and debug line
* initial commit of vnc support
* merged trunk
* Changed ra\_server to gateway\_v6 and removed addressv6 column from fixed\_ips db table
* \* Added first cut of migration for os\_type on instances table \* Track os\_type when taking snapshots
* merging trunk
* \* Added ability to launch XenServer instances with per-os vm-params
* test osapi server create with multiple personalities
* ensure personality contents are b64 encoded
* Merged trunk
* Fixed pep8 issues, applied jaypipes suggestion
* Rebased to nova revision 752
* Use functools.wraps to make sure wrapped method's metadata (docstring and name) doesn't get mangled
* merge from trunk
* Fake database module for vmware vi api. Includes false injection layer at the level of API calls. This module is base for unit tests for vmwareapi module. The unit tests runs regardless of presence of ESX/ESXi server as computer provider in OpenStack
* Review feedback
* Updated the code to include support for guest consoles, VLAN networking for guest machines on ESX/ESXi servers as compute providers in OpenStack. Removed dependency on ZSI and now using suds-0.4 to generate the required stubs for VMware Virtual Infrastructure API on the fly for calls by vmwareapi module
* Added support for guest console access for VMs running on ESX/ESXi servers as computer providers in OpenStack
* Support for guest consoles for VMs running on VMware ESX/ESXi servers. Uses vmrc to provide the console access to guests
* Minor modification to document. Removed excess flags
* Moved the guest tools script that does IP injection inside VM on ESX server to etc/esx directory from etc/ directory
* support adding a single personality in the osapi
* corrected copyrights for new files
* Updated with flags for nova-compute, nova-network and nova-console. Added the flags,  --vlan\_interface=<Physical ethernet adapter name in VMware ESX host for vlan networking E.g vmnic0>  --network\_driver=nova.network.vmwareapi\_net [Optional, only for VLAN Networking]  --flat\_network\_bridge=<ESX Virtual Machine Port Group> [Optional, only for Flat Networking]  --console\_manager=nova.console.vmrc\_manager.ConsoleVMRCManager  --console\_driver=nova.console.vmrc.VMRCSessionConsole [Optional for OTP (One time Passwords) as against host credentials]  --vmwareapi\_wsdl\_loc=<http://<WEB SERVER>/vimService.wsdl>
* Fixed trunk merge issues
* Merged trunk
* At previous commit, I forget to erase conflict - fixed it
* merged to trunk rev 752
* Rebased at lp:nova 759
* test\_compute is changed b/c lack of import instance\_types
* rename db migration script
* 1. merged trunk rev749 2. rpc.call returns '/' as '\/', so nova.compute.manager.mktmpfile, nova.compute.manager.confirm.tmpfile, nova.scheduler.driver.Scheduler.mounted\_on\_same\_shared\_storage are modified followed by this changes. 3. nova.tests.test\_virt.py is modified so that other teams modification is easily detected since other team is using nova.db.sqlalchemy.models.ComputeService
* updated docs
* updated docs
* Fixed xenapi tests Gave up on clever things with map stored as string in xenstore. Used ast.liteeral\_eval instead
* This branch implements the openstack-api-hostid blueprint: "Openstack API support for hostId"
* refactored adminclient
* No reason to initialize metadata twice
* Units tests fixed partially. Still need to address checking data injected into xenstore need to convert string into dict or similar. Also todo PEP8 fixes
* replaced ugly INSTANCE\_TYPE constant with (slightly less ugly) stubs
* add test for instance creation without personalities
* fixed pep8
* Add a lock\_path flag for lock files
* refactored nova-manage list (-all, <name>) and fixed docs
* moved nova-manage flavors docs
* Edited \`nova.api.openstack.common:limited\` method to raise an HTTPBadRequest exception if a negative limit or offset is given. I'm not confident that this is the correct approach, because I guess this method could be called out of an API/WSGI context, but the method \*is\* located in the OpenStack API module and is currently only used in WSGI-capable methods, so we should be safe
* merge trunk
* moving nova-manage integration tests to smoke tests
* Wrapped the instance\_types comparison with an int and added a test case for it. Removed the inadvertently added newline
* Rename migration to coincide with latest trunk changes
* Adds VHD build support for XenServer driver
* Suppress stack traces unless --verbose is specified
* Removed extraneous newline
* Merging trunk to my branch. Fixed a conflict in servers.py
* Fixed obvious errors with flags. Note: tests still fail
* Merging trunk
* Fixed default value for xenapi\_agent\_path flag
* 1) merge trunk 2) removed preconfigure\_xenstore 3) added jkey for broadcast address in inject\_network\_info 4) added 2 flags: 	4.1) xenapi\_inject\_image (default True) 	This flag allows for turning off data injection by mounting the image in the VDI 	(agreed with Trey Morris) 	4.2) xenapi\_agent\_path (default /usr/bin/xe-update-networking) 	This flag specifies the path where the agent should be located. It makes sense only 	if the above flag is True. If the agent is found, data injection is not performed
* Wrap IptablesManager.apply() calls in utils.synchronized to avoid having different workers step on each other's toes
* merge trunk
* Add utils.synchronized decorator to allow for synchronising method entrance across multiple workers on the same host
* execvp
* execvp
* execvp
* execute: shell=True removed
* Add lxc to the libvirt tests
* Clean up the mount points when it shutsdown
* Add ability to mount containers
* Add lxc libvirt driver
* Rebased to Nova revision 749
* added listing of instances running on a specific host
* fixed FIXME
* beautification..
* introduced new flag "max\_nbd\_devices" to set the number of possible NBD devices
* renamed flag from maximum\_... to max\_..
* replaced ConnectionFailed with Exception in tools/euca-get-ajax-console was not working for me with euca2tools 1.2 (version 2007-10-10, release 31337)
* Did a pull from trunk to be sure I had the latest, then deleted the test directory. I guess it appeared when I started using venv. Doh
* Deleting test dir from a pull from trunk
* introduced new flag "maximum\_nbd\_devices" to set the number of possible NBD devices
* reverted my changes from https://code.launchpad.net/~berendt/nova/lp722554/+merge/50579 and reused the existing db api methods to add the disabled services. Looks much better now :)
* add timeout and retry for ssh
* Makes nova-api correctly load the default flagfile
* force memcache key to be str
* only create auth connection if cache misses
* No reason to dump a stack trace just because the AMQP server is unreachable; an error notification should be sufficient
* Add error message to the error report so we know why the AMQP server is unreachable
* No reason to dump a stack trace just because we can't reach the AMQP servire; it ends up being just noise
* DescribeInstances modified to return ipv6 fixed ip address in case of flatmanager
* Bootlock original instance during rescue
* merge with zones2 fixes and trunk
* check if QUERY\_STRING is empty or not before building the request URL in bin/nova-ajax-console-proxy
* trunk merge
* API changed to new style class
* trunk merge, pip-requires and novatools to novaclient changes
* Fixes FlatDHCP by making it inherit from NetworkManager and moving some methods around
* fixed: bin/nova-ajax-console-proxy:66:19: W601 .has\_key() is deprecated, use 'in'
* merged trunk
* add a caching layer to the has\_role call to increase performance
* Removed unnecessary compute import
* Set rescue instance VIF device
* use default flagfile in nova-api
* Add tests for 718999, fix a little brittle code introduced by the committed fix
* Rename test to describe what it actually does
* Copy over to current trunk my tests, the 401/500 fix, and a couple of fixes to the committed fix which was actually brittle around the edges..
* I'm working on consolidating install instructions specifically (they're the most asked-about right now) and pointing to the docs.openstack.org site for admin docs
* check if QUERY\_STRING is empty or not before building the request URL
* Teardown rescue instance
* Merged trunk
* Create rescue instance
* Merging trunk, conflicts fixed
* Verify status of image is active
* Rebased at lp:nova 740
* merged with trunk
* Cleanup db method names for dealing with auth\_tokens to follow standard naming pattern
* The proposed bug fix stubs out the \_is\_vdi\_pv routine for testing purposes
* revert a few unnecessary changes to base.py
* removed unused references to unittest
* add customizable tempdir and remove extra code
* Pass id of token to be deleted to the db api, not the actual object
* Removing unecessary headers
* Rename auth\_token db methods to follow standard
* Removing unecessary nokernel stuff
* Adding \_make\_subprocess function
* No longer users image/ directory in tarball
* Merging trunk, small fixes
* make smoketests run with nose
* IPV6 FlatManager changes
* Make tests start with a clean database for every test
* merge trunk
* merge clean db
* merged trunk
* sorry, pep8
* adds live network injection/reconfiguration. Some refactoring
* forgot to get vm\_opaque\_ref
* new tests
* service capabilities test
* moved network injection and vif creation to above vm start in vmops spawn
* Merged trunk
* nothing
* Removes processName from debug output since we aren't using multiprocessing and it doesn't exist in python 2.6.1
* Add some methods to the ec2 admin api to work with VPNs.  Also implements and properly documents the get\_hosts method
* Fix copypasta pep8 violation
* moved migrate script to 007 (again..sigh)
* Don't require metadata (hotfix for bug 724143)
* merge trunk
* Merged trunk
* Updated email in Authors
* Easy and effective fix for getting the DNS value from flag file, when working in FlatNetworking mode
* Some first steps towards resolving some of the issues brought up on the mailing list related to documenting flags
* Support HP/LeftHand SANs.  We control the SAN by SSHing and issuing CLIQ commands.  Also improved the way iSCSI volumes are mounted: try to store the iSCSI connection info in the volume entity, in preference to doing discovery.  Also CHAP authentication support
* This fix checks whether the boot/guest directory exists on the hypervisor. If that is not the case, it creates it
* Globally exclude \*.pyc files from generated tarballs
* stubbing out \_is\_vdi\_pv for test purposes
* merge trunk
* Globally exclude .pyc files from tarball contents
* Get DNS value from Flag, when working in FlatNetworking mode. Passing the flag was ineffective previously. This is an easy fix. I think we would need nova-manage to accept dns also from command line
* xenapi plugin function now checks whether /boot/guest already exists. If not, it creates the directory
* capability aggregation working
* fix check for existing port 22 rule
* move relevant code to baseclass and make flatdhcp not inherit from flat
* Hotfix to not require metadata
* Documentation fixes so that output looks better
* more smoketest fixes
* Removed Milind from Authors file, as individual Contributer's License Agreement & Ubuntu code of conduct are not yet signed
* Fixed problems found in localized string formatting. Verified the fixes by running ./run\_tests.sh -V
* Change missed reference to run\_tests.err.log
* PEP 257 fixes
* Merged with trunk
* fix missed err.log
* Tests all working again
* remove extra flag in admin tests
* Revert commit 709. This fixes issues with the Openstack API causing 'No user for access key admin' errors
* Adds colors to output of tests and cleans up run\_tests.py
* Reverted bad-fix to sqlalchemy code
* Merged with trunk
* added comments about where code came from
* merge and fix conflicts
* Prevent logging.setup() from generating a syslog handler if we didn't request one (breaks on mac)
* fix pep8
* merged upstream
* Changed create from a @staticmethod to a @classmethod
* revert logfile redirection and make colors work by temporarily switching stdout
* merged trunk
* add help back to the scripts that don't use service.py
* Alphabetize imports
* remove processName from debug output since we aren't using multiprocessing and it doesn't exist in python 2.6.1
* updates to nova.flags to get help working better
* Helper function that supports XPath style selectors to traverse an object tree e.g
* tests working again
* Put back the comments I accidentally removed
* Make sure there are two blank links after the import
* Rename minixpath\_select to get\_from\_path
* Fixes the describe\_availability\_zones to use an elevated context when getting services and the db calls to pass parameters correctly so is\_admin check works
* Fix pep8 violation (trailing whitespace)
* fix describe\_availability\_zones
* Cope when we pass a non-list to xpath\_select - wrap it in a list
* Fixes existing smoketests and splits out sysadmin tests from netadmin tests
* Created mini XPath implementation, to simplify mapping logic
* move the deletion of the db into fixtures
* merged upstream
* Revert commit 709. This fixes issues with the Openstack API causing 'No user for access key admin' errors
* put the redirection back in to run\_tests.sh and fix terminal colors by using original stdout
* Deleted trailing whitespace
* Fixes and optimizes filtering for describe\_security\_groups.  Also adds a unit test
* merged trunk
* fix for failing describe\_instances test
* merged trunk
* use flags for sqlite db names and fix flags in dhcpbridge
* merged trunk
* Fixes lp715424, code now checks network range can fit num\_networks \* network\_size
* The proposed branch prevents FlatManager from executing network initialisation tasks contained in linux\_net.init\_host(), which are unnecessary when flat networking is used
* Adds some features to run\_tests.sh: - if it crashes right away with a short erorr log, print that directly - allow specifying tests without the nova.tests part
* The kernel\_id and the ramdisk\_id are optional, yet the OpenStack API was requiring them.  In addition, with the ObjectStore these properties are not under 'properties' (as they are with Glance)
* merged trunk
* merge trunk
* Initial support for per-instance metadata, though the OpenStack API.  Key/value pairs can be specified at instance creation time and are returned in the details view.  Support limits based on quota system
* Merged trunk
* Removed pass
* Changed unit test to refer to compute API, per Todd's suggestion. Avoids needing to extend our implementation of the EC2 API
* Fixes lots of errors in the unit tests
* dump error output directly on short import errors
* allow users to omit 'nova.tests' with run\_tests
* Merged trunk
* \* Took care of localization of strings \* Addressed all one liner docstrings \* Added Sateesh, Milind to Authors file
* Fixed pep8 errors
* FlatManager.init\_host now inhibits call to method in superclass. Floating IP methods have been redefined in FlatManager to raise NotImplementedError
* speed up network tests
* merged trunk
* move db creation into fixtures and clean db for each test
* fix failures
* remove unnecessary stubout
* Lots of test fixing
* Update the admin client to deal with VPNs and have a function host list
* Removed unused import & formatting cleanups
* Exit with exit code 1 if conf cannot be read
* Return null if no kernel\_id / ramdisk\_id
* Reverted change to focus on the core bug - kernel\_id and ramdisk\_id are optional
* Make static create method behave more like other services
* merged fix-describe-groups
* add netadmin smoketests
* separate out smoketests and add updated nova.sh
* fix and optimize security group filtering
* Support service-like wait behaviour for API service
* Added create static method to ApiService
* fix test
* Refactoring nova-api to be a service, so that we can reuse it in tests
* test that shows error on filtering groups
* don't make a syslog handler if we didn't ask for one
* Don't blindly concatenate queue name if second portiion is None
* Missing import for nova.exceptions (!)
* At the moment --pidfile is still used in some scripts in contrib/puppet/. I don't use puppet, please check if there are possible side effects
* We're not using prefix matching on AMQP, so fakerabbit shouldn't be doing it!
* merge fixes from anso branch
* merged trunk
* Removed block of code that resurrected itself in the last merge
* Added Andy Southgate to the Authors file
* Merged with trunk, including manual conflict resolution in nova/virt/disk.py and nova/virt/xenapi/vmops.py
* Put the whitespace back \*sigh\*
* Remove duplicate import gained across a merge
* Rename "SNATTING" chain to "snat"
* Fix DescribeRegion answer by introducing '{ec2,osapi}\_listen' flags instead of overloading {ec2,osapi}\_host. Get rid of paste\_config\_to\_flags, bin/nova-combined. Adds debug FLAGS dump at start of nova-api
* Also remove nova-combined from setup.py
* Fixed some docstring
* Get rid of nova-combined, see rationale on ML
* Merged trunk
* no, really fix lp721297 this time
* Updated import statements according to HACKING guidelines. Added docstrings to each document. Verified pep8 over all files. Replaced some constants by enums accordingly. Still little bit more left in vm\_util.py and vim\_util.py files
* Add flags for listen\_port to nova-api.  This allows us to listen on one port, but return another port (for a proxy or load balancer) in calls like describe\_regions, etc
* Fix tiny mitakes! (remove unnecessary comment, etc)
* Fixed based on reviewer's comment. 1. Change docstrings format 2. Fix comment grammer mistake, etc
* PEP8 again
* Account for the fact that iptables-save outputs rules with a space at the end. Reverse the rule deduplication so that the last one takes precedence
* floating-ip-snat was too long. Use floating-snat instead
* PEP8 adjustments
* Remove leftover from debugging
* Add a bunch of tests for everything
* Fixes various issues regarding verbose logging and logging errors on import
* merged trunk
* Add a new chain, floating-ip-snat, at the top of SNATTING, so that SNATting for floating ips gets applied before the default SNAT rule
* Address some review comments
* Some quick test cleanups, first step towards standardizing the way we start services in tests
* use a different flag for listen port for apis
* added disabled services to the list of displayed services in bin/nova-manage
* merged to trunk rev709. NEEDS to be fixed based on 3rd reviewer's comment
* just add 005\_add\_live\_migration.py
* Fixed based on reviewer's comment. 1. DB schema change    vcpu/memory/hdd info were stored into Service table.    but reviewer pointed out to me creating new table is better    since Service table has too much columns
* update based on prereq branch
* update based on prereq branch
* fixed newline and moved import fake\_flags into run\_tests where it makes more sense
* merged fix
* remove changes to test db
* Fixed my confusion in documenting the syntax of iSCSI discovery
* pretty colors for logs and a few optimizations
* Renamed db\_update to model\_update, and lots more documentation
* modify tests to use specific hosts rather than default
* Merged with head
* remove keyword argument, per review
* move test\_cloud to use start\_service, too
* add a start\_service method to our test baseclass
* add a test for rpc consumer isolation
* Merged with trunk
* The OpenStack API was using the 'secret' as the 'access key'.  There is an 'access key' and there is a 'secret key'.  Access key ~= username.  Secret key ~= password.  This fix is necessary for the OpenStack Python API bindings to log in
* Add a bunch of docs for the new iptables hotness
* fix pep8 and remove extra reference to reset
* switch to explicit call to logging.setup()
* merged trunk
* Adds translation catalogs and distutils.extra glue code that automates the process of compiling message catalogs into .mo files
* Merged with trunk
* make sure that ec2 response times are xs:dateTime parsable
* Removing pesky DS\_Store files too. Begone
* Updated to remove built docs
* Removing duplicate installation docs and adding flag file information, plus pointing to docs.openstack.org for Admin-audience docs
* introducing a new flag timeout\_nbd for manually setting the time in seconds for waiting for an upcoming NBD device
* use tests.sqlite so it doesn't conflict with running db
* cleanup from review
* Duh, continue skips iteration, not pass. #iamanidiot
* reset to notset if level isn't in flags
* Enable rescue testing
* PEP8 errors and remove check in authors file for nova-core, since nova-core owns the translation export branch
* Merged trunk
* Stub out VM create
* \* Removed VimService\_services.py & VimService\_services\_types.py to reduce the diffs to normal.   These 2 files are auto-generated files containing stubs for VI SDK API end points.   The stub files are generated using ZSI SOAP stub generator module ZSI.commands.wsdl2py over   Vimservice.wsdl distributed as part of VMware Virtual Infrastructure SDK package.   To not include them in the repository we have few options to choose from,   1) Generate the stub files in build time and make them available as packages for distribution.   2) Generate the stub files in installation/configuration time if ESX/ESXi server is detected as compute provider.   Further to this, we can try to reduce the size of stub files by attempting to create stubs only for the API end points required by the module vmwareapi
* introducing a new flag timeout\_nbd for manually setting the time in seconds for waiting for an upcoming NBD device
* \* Removed nova/virt/guest-tools/guest\_tool.bat &   nova/virt/guest-tools/guest\_tool.sh as guest\_tool.py   can be invoked directly during guest startup
* More PEP-8
* Wrap ipv6 rules, too
* PEP-8 fixes
* Allow non-existing rules to be removed
* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ NOVA-CORE DEVELOPERS SHOULD NOT REVIEW THIS MERGE PROPOSAL ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* merged with nova trunk revision #706
* Fix typo
* Unfilter instance correctly on termination
* move exception hook into appropriate location and remove extra stuff from module namespace
* Also remove rules that jump to deleted chains
* simplify logic for parsing log level flags
* reset all loggers on flag change, not just root
* add docstring to reset method
* removed extra comments and initialized from flags
* fix nova-api as well
* Fix refresh sec groups
* get rid of initialized flag
* clean up location of method
* remove extra references to logging.basicConfig
* move the fake initialized into fake flags
* fixes for various logging errors and issues
* fanout works
* fanout kinda working
* service ping working
* scheduler manager
* tests passing
* start of fanout
* merge trunk
* previous trunk merge
* puppet scripts only there as an example, should be moved to some other place if they are still necessary
* Various optimizations of lookups relating to users
* If there are no keypairs registered on a create call, output a useful error message rather than an out-of-range exception
* Fixes vpn images to use kernel and ramdisk specified by the image
* added elif branch to handle the conversion of datetime instances to isoformat instead of plain string conversion
* Calculate time correctly for ec2 request logs
* fix ec2 launchtime response not in iso format bug
* pep8 leftover
* move from datetime.datetime.utcnow -> utils.utcnow
* pass start time as a param instead of making it an attribute
* store time when RequestLogging starts instead of using context's time
* Fix FakeAuthManager so that unit tests pass; I believe it was matching the wrong field
* more optimizations context.user.id to context.user\_id
* remove extra 
* replace context.user.is\_admin() with context.is\_admin because it is much faster
* remove the weird is\_vpn logic in compute/api.py
* Don't crash if there's no 'fixed\_ip' attribute (was returning None, which was unsubscriptable)
* ObjectStore doesn't use properties collection; kernel\_id and ramdisk\_id aren't required anyway
* added purge option and tightened up testing
* Wrap iptables calls in a semaphore
* pep8
* added instance types purge test
* Security group fallback is named sg-fallback
* Rename a few things for more clarity
* Port libvirt\_conn.IptablesDriver over to use linux\_net.IptablesManager
* merged trunk
* Typo fix
* added admin api call for injecting network info, added api test for inject network info
* If there are no keypairs, output a useful error message
* Fix typo (?) in authentication logic
* Changing type -> image\_type
* Pep8 cleanup
* moved creating vifs to its own function, moved inject network to its own function
* sandy y u no read hacking guide and import classes?
* Typo fix
* XenAPI tests
* Introduce IptablesManager in linux\_net. Port every use of iptables in linux\_net to it
* Use WatchedFileHandler instead of RotatingFileHandler
* Resize compute tests
* Support for HP SAN
* Merging trunk to my branch. Fixed conflicts in Authors file and .mailmap
* Rename migration 004 => 005
* Added Author and tests
* Merging trunk
* fixups backed on merge comments
* Fixed testing mode leftover
* PEP8 fix
* Remove paste\_config\_to\_flags since it's now unused
* Port changes to nova-combined, rename flags to API\_listen and API\_listen\_port
* Set up logging once FLAGS properly read, no need to redo logging config anymore (was inoperant anyway)
* Switch to API\_listen and API\_listen\_port, drop wsgi.paste\_config\_to\_flags
* added new class Instances to manage instances and added a new listing method into the class
* added functionality to list only fixed ip addresses of one node and added exception handling to list method
* Use WatchedFileHandler instead of RotatingFileHandler
* Incorporating minor cleanups suggested by Rick Harris: \* Use assertNotEqual instead of assertTrue \* Use enumerate function instead of maintaining a counter
* Resize compute tests
* fixed based on reviewer's comment. 1. erase wrapper function(remove/exists/mktempfile) from nova.utils. 2. nova-manage service describeresource(->describe\_resource) 3. nova-manage service updateresource(->update\_resource) 4. erase "my mistake print" statement
* Tests
* pep8
* merged trunk
* Makes FlatDHCPManager clean up old fixed\_ips like VlanManager
* Correctly pass the associate paramater for project\_get\_network through the IMPL layer in the db api
* changed migration to 006 for trunk compatibility
* completed doc and added --purge option to instance type delete
* moved inject network info to a function which accepts only instance, and call it from reset network
* Test changes
* Merged with trunk
* Always compare incoming flavor\_id as an int
* Initial support for per-instance metadata, though the OpenStack API. Key/value pairs can be specified at instance creation time and are returned in the details view. Support limits based on quota system
* a few changes and a bunch of unit tests
* remove leftover periodic tasks
* Added support for feature parity with the current Rackspace Cloud Servers practice of "injecting" files into newly-created instances for configuration, etc. However, this is in no way restricted to only writing files to the guest when it is first created
* missing docstring and fixed copyrights
* move periodic tasks to base class based on class variable as per review
* Correctly pass the associate paramater to project\_get\_network
* Add \*\*kwargs to VlanManager's create\_networks so that optional args from other managers don't break
* Uncommitted changes using the wrong author, and re-committing under the correct author
* merge with zone phase 1 again
* Added http://mynova/v1.0/zones/ api options for add/remove/update/delete zones. child\_zones table added to database and migration. Changed novarc vars from CLOUD\_SERVERS\_\* to NOVA\_\* to work with novatools. See python-novatools on github for help testing this
* pip requires novatools
* copyright notice
* moved 003\_cactus.py migration file to 004\_add\_instance\_types.py to avoid naming collision with new trunk migration
* Add \*\*kwargs to VlanManager's create\_networks so that optional args from other managers don't break
* merge with zone phase 1
* changed from 003-004 migration
* merged lp:~jk0/nova/dynamicinstancetypes
* Merged trunk
* merge from dev
* fixed strings
* multi positional string fix
* Use a semaphore to ensure we don't run more than one iptables-restore at a time
* Fixed unit test
* merge with trunk
* fixed zone list tests
* Make eth0 the default for the public\_interface flag
* Finished flavor OS API stubs
* Re-alphabetise Authors, move extra addresses into .mailmap
* Re-alphabetise Authors, move extra addressses into .mailmap
* Move the ramdisk logging stuff
* Hi guys
* fixup
* zone list now comes from scheduler zonemanager
* Stop blowing away the ramdisk
* Rebased at lp:nova 688
* Update the Openstack API so that it returns 'addresses'
* I have a bug fix, additional tests for the \`limiter\` method, and additional commenting for a couple classes in the OpenStack API. Basically I've just tried to jump in somewhere to get my feet wet. Constructive criticism welcome
* added labels to networks for use in multi-nic added writing network data to xenstore param-list added call to agent to reset network added reset\_network call to openstack api
* Add a command to nova-manage to list fixed ip's
* Foo
* comments + Englilish, changed copyright in migration, removed network\_get\_all from db.api (vestigial)
* Adding myself to Authors and .mailmap files
* example:
* Switched mailmap entries
* Supporting networks with multiple PIFs. pep8 fixes unit tests passed
* Merged kpepple
* Merged trunk
* More testing
* Block diagram for vmwareapi module
* added entry in the category list
* Added vmwareapi module to add support of hypervisor vmware-vsphere to OpenStack
* added new functionality to list all defined fixed ips
* added more I18N
* Merged trunk and fixed conflict with other Brian in Authors
* removing superfluous pass statements; replacing list comprehension with for loop; alphabetizing imports
* Rebased at lp:nova 687
* added i18n of 'No networks defined'
* Make eth0 the default for FLAGS.public\_interface
* Typo fixes
* Merging trunk
* Adding tests
* first crack at instance types docs
* merge trunk
* style cleanup
* polling tests
* Use glance image type to determine disk type
* Minor change. Adding a helper function stub\_instance() inside the test test\_get\_all\_server\_details\_with\_host for readability
* Fixes ldapdriver so that it works properly with admin client.  It now sanitizes all unicode data to strings before passing it into ldap driver.  This may need to be rethought to work properly for internationalization
* Moved definition of return\_servers\_with\_host stub to inside the test\_get\_all\_server\_details\_with\_host test
* fixed
* Pep8 fixes
* Merging trunk
* Adding basic test
* Better exceptions
* Update to our HACKING doc to add examples of our docstring style
* add periodic disassociate from VlanManager to FlatDHCPManager
* Flipped mailmap entries
* -from migrate.versioning import exceptions as versioning\_exceptions + +try: +    from migrate.versioning import exceptions as versioning\_exceptions +except ImportError: +    try: +        # python-migration changed location of exceptions after 1.6.3 +        # See LP Bug #717467 +        from migrate import exceptions as versioning\_exceptions +    except ImportError: +        sys.exit(\_("python-migrate is not installed. Exiting."))
* Accidently removed myself from Authors
* Added alternate email to mailmap
* zone manager tests
* Merged to trunk
* added test for reset\_network to openstack api tests, tabstop 5 to 4, renamed migration
* Use RotatingFileHandler instead of FileHandler
* pep8 fixes
* sanitize all args to strings before sending them to ldap
* Use a threadpool for handling requests coming in through RPC
* Typos
* Derp
* Spell flags correctly (i.e. not in upper case)
* Fixed merge error
* novatools call to child zones done
* novatools call to child zones done
* Putting glance plugin under pep8 control
* fixed authors, import sys in migration.py
* Merged trunk
* First commit of working code
* Stubbed out flavor create/delete API calls
* This implements the blueprint 'Openstack API support for hostId': https://blueprints.launchpad.net/nova/+spec/openstack-api-hostid Now instances will have a unique hostId which for now is just a hash of the host. If the instance does not have a host yet, the hostId will be ''
* Fix for bug #716847
* merge trunk
* First commit for xenapi-vlan-networking. Totally untested
* added functionality to nova-manage to list created networks
* Add back --logdir=DIR option. If set, a logfile named after the binary (e.g. nova-api.log) will be kept in DIR
* Fix PEP-8 stuff
* assertIsNone is a 2.7-ism
* This branch should resolve nova bug #718675 (https://bugs.launchpad.net/nova/+bug/718675)
* Added myself to the authors file
* I fail at sessions
* I fail at sessions
* Foo
* hurr durr
* Merging trunk part 1
* stubbed out reset networkin xenapi VM tests to solve domid problem
* foo
* foo
* Adding vhd hidden sanity check
* Fixes 718994
* Make rpc thread pool size configurable
* merge with trunk
* fail
* Fixing test by adding stub for get\_image\_meta
* this bug bit me hard today. pv can be None, which does not translate to %d and this error gets clobbered by causing errors in the business in charge of capturing output and reporting errors
* More pep8 fixes
* Pep8 fixes
* Set name-label on VDI
* Merge
* Don't hide RotatingFileHandler behind FileHandler's name
* Refactor code that decides which logfile to use, if any
* Fixing typo
* polling working
* Using Nova style nokernel
* changed d to s
* merge with trunk
* More plugin lol
* moved reset network to after boot durrrrr..
* Don't hid RotatingFileHandler behind FileHandler's name
* removed flag --pidfile from nova/services.py
* Added teammate Naveed to authors file for his help
* plugin lol
* Plugin changes
* merging trunk back in; updating Authors conflict
* Adding documentation
* Regrouping methods so they make sense
* zone/info works
* Refactoring put\_vdis
* Adding safe\_find\_sr
* Merged lp:nova
* Fixes tarball contents by adding missing scripts and files to setup.py / MANIFEST.in
* Moving SR path code outside of glance plugin
* When re-throwing an exception, use "raise", not "raise e".  This way we don't lose the stack trace
* Adding more documentation, code-cleanup
* Replace placeholders in nova.pot with some actual values
* The proposed fix puts a VM which fails to spawn in a (new) 'FAILED' power state. It does not perform a clean-up. This because the user needs to know what has happened to the VM he/she was trying to run. Normally, API users do not have access to log files. In this case, the only way for the user to know what happened to the instance is to query its state (e.g.: doing euca-describe-instances). If we perform a complete clean-up, no information about the instance which failed to spawn will be left
* Some trivial cleanups in context.py, mostly just a test of using the updated git-bzr-ng
* Use eventlet.green.subprocess instead of standard subprocess
* derp
* Better host acquisition
* zones merge
* fixed / renamed migration scripts
* Merged trunk
* Update .pot file with source file and line numbers after running python setup.py build
* Adds Distutils.Extra support, removes Babel support, which is half-baked at best
* Pull in .po message catalogs from lp:~nova-core/nova/translations
* Fix sporadically failing unittests
* Missing nova/tests/db/nova.austin.sqlite file
* Translations will be shipped in po/, not locale/
* Adding missing scripts and files to setup.py / MANIFEST.in
* Fixes issues when running euca-run-instances and euca-describe-image-attribute against the latest nova/trunk EC2 API
* initial
* Naïve attempt at threading rpc requests
* Beautify it a little bit, thanks to dabo
* OS-55: Moved conn\_common code into disk.py
* Break out of the "for group in rv" loop in security group unit tests so that we are use we are dealing with the correct group
* Tons o loggin
* merged trunk
* Refactored
* Launchpad automatic translations update
* trunk merge
* better filtering
* Adding DISK\_VHD to ImageTypes
* Updates to that S3ImageService kernel\_id and ramdisk\_id mappings work with EC2 API
* fixed nova-combined debug hack and renamed ChildZone to Zone
* plugin
* Removing testing statements
* Adds missing flag that makes use\_nova\_chains work properly
* bad plugin
* bad plugin
* bad plugin
* fixed merge conflict
* First cut on XenServer unified-images
* removed debugging
* fixed template and added migration
* better filtering
* Use RotatingFileHandler instead of FileHandler
* Typo fixes
* Resurrect logdir option
* hurr
* Some refactoring
* hurr
* Snapshot correctly
* Added try clause to handle changed location of exceptions after 1.6.3 in python-migrate LP Bug #717467
* Use eventlet.green.subprocess instead of standard subprocess
* Made kernel and ram disk be deleted in xen api upon instance termination
* Snapshot correctly
* merged recent version. no conflict, no big/important change to this branch
* wharrgarbl
* merge jk0 branch (with trunk merge) which added additional columns for instance\_types (which are openstack api specific)
* corrected model for table lookup
* More fixes
* Derp
* fix for bug #716847 - if a volume has not been assigned to a host, then delete from db and skip rpc
* added call to reset\_network from openstack api down to vmops
* merging with trunk
* Got rid of BadParameter, just using standard python ValueError
* Merged trunk
* support for multiple IPs per network
* Fix DescribeRegion answer by using specific 'listen' configuration parameter instead of overloading ec2\_host
* Fixed tables creation order and added clearing db after errors
* Modified S3ImageService to return the format defined in BaseService to allow EC2 API's DescribeImages to work against Glance
* re-add input\_chain because it got deleted at some point
* Launchpad automatic translations update
* Fixes a typo in the auth checking for DescribeAvailabilityZones
* Fixes describe\_security\_groups by forcing it to return a list instead of a generator
* return a list instead of a generator from describe\_groups
* Hi guys
* Added missing doc string and made a few style tweaks
* fix typo in auth checking for describe\_availability\_zones
* now sorting by project, then by group
* Launchpad automatic translations update
* Made a few tweaks to format of S3 service implementation
* Merged trunk
* First attempt to make all image services use similar schemas
* fix :returns: and add pep-0257
* Preliminary fix for issue, need more thorough testing before pushing to lp
* Launchpad automatic translations update
* More typos
* More typos
* More typos
* More typos
* More typos
* fixed exceptions import from python migrate
* Cast to host
* This fixes a lazy-load issue in describe-instances, which causes a crash.  The solution is to specifically load the network table when retrieving an instance
* added instance\_type\_purge() to actually remove records from db
* updated tests and added more error checking
* Merged trunk
* more error checking on inputs and better errors returned
* Added more columns to instance\_types tables
* Added LOG line to describe groups function to find out what's going
* joinedload network so describe\_instances continues to work
* zone api tests passing
* Create a new AMQP connection by default
* First, not all
* Merged to trunk and fixed merge conflict in Authors
* rough cut at zone api tests
* Following Rick and Jay's suggestions: - Fixed LOG.debug for translation - improved vm\_utils.VM\_Helper.ensure\_free\_mem
* Create a new AMQP connection by default
* after hours of tracking his prey, ken slowly crept behind the elusive wilderbeast test import hiding in the libvirt\_conn.py bushes and gutted it with his steely blade
* fixed destroy calls
* Forgot the metadata includes
* added get IPs by instance
* added resetnetwork to the XenAPIPlugin.dispatch dict
* Forgot the metadata includes
* Forgot the metadata includes
* Typo fixes and some stupidity about the models
* passing instance to reset\_network instead of vm\_ref, also not converting to an opaque ref before making plugin call
* Define sql\_idle\_timeout flag to be an integer
* forgot to add network\_get\_all\_by\_instance to db.api
* template adjusted to NOVA\_TOOLS, zone db & os api layers added
* Spawn from disk
* Some more cleanup
* sql\_idle\_timeout should be an integer
* merged model change: flavorid needs to unique in model
* testing refactor
* flavorid needs to unique in model
* Add forwarding rules for floating IPs to the OUTPUT chain on the network node in addition to the PREROUTING chain
* typo
* refactored api call to use instance\_types
* Use a NullPool for sqlite connections
* Get a fresh connection in rpc.cast rather than using a recycled one
* Make rpc.cast create a fresh amqp connection. Each API request has its own thread, and they don't multiplex well
* Only use NullPool when using sqlite
* Also add floating ip forwarding to OUTPUT chain
* trunk merge
* removed ZoneCommands from nova-manage
* Try using NullPool instead of SingletonPool
* Try setting isolation\_level=immediate
* This branch fixes bug #708347: RunInstances: Invalid instance type gives improper error message
* Wrap line to under 79 characters
* Launchpad automatic translations update
* adding myself to Authors file
* 1. Merged to rev654(?) 2. Fixed bug continuous request.    if user continuouslly send live-migration request to same host,    concurrent request to iptables occurs, and iptables complains.    This version add retry for this issue
* forgot to register new instance\_types table
* Plugin tidying and more migration implementation
* fixed overlooked mandatory changes in Xen
* Renamed migration plugin
* A lot of stuff
* - population of public and private addresses containers in openstack api - replacement of sqlalchemy model in instance stub with dict
* Fixes the ordering of init\_host commands so that iptables chains are created before they are used
* Pass timestamps to the db layer in fixed\_ip\_disassociate\_all\_by\_timeout rather than converting to strings ahead of time, otherwise comparison between timestamps would often fail
* Added support for 'SAN' style volumes.  A SAN's big difference is that the iSCSI target won't normally run on the same host as the volume service
* added support to pull list of ALL instance types even those that are marked deleted
* Indent args to ssh\_connect correctly
* Fix PEP8 violations
* Added myself to Authors
* 1) Moved tests for limiter to test\_common.py (from \_\_init\_\_.py) and expanded test suite to include bad inputs and tests for custom limits (#2)
* Added my mail alias (Part of an experiment in using github, which got messy fast...)
* Fixed pep8 error in vm\_utils.py
* Add my name to AUTHORS, remove parentheses from the substitution made in the previous commit
* Don't convert datetime objects to a string using .isoformat(). Leave it to sqlalchmeny (or pysqlite or whatever it is that does the magic) to work it out
* Added test case for 'not enough memory' Successfully ran  unit tests Fixed pep8 errors
* Give a better error message if the instance type specified is invalid
* Launchpad automatic translations update
* added testing for instance\_types.py and refactored nova-manage to use instance\_types.py instead of going directly to db
* added create and delete methods to instance\_types in preparation to call them from nova-manage
* added testing for nova-manage instance\_type
* additional error checking for nova-manage instance\_type
* Typos and primary keys
* Automates the setup for FlatDHCP regardless of whether the interface has an ip address
* add docstring and revert set\_ip changes as they are unnecessary
* Commas help
* Changes and bug fixes
* avoiding HOST\_UNAVAILABLE exception: if there is not enough free memory does not spawn the VM at all. instance state is set to "SHUTDOWN"
* merge lp:nova at revision #654
* merge with lp:nova
* Fixed pep8 errors Unit tests passed
* merge source and remove ifconfig
* fixes #713766 and probably #710959, please test the patch before committing it
* use route -n instead of route to avoid chopped names
* Updates to the multinode install doc based on Wayne's findings. Merged with trunk so should easily merge in
* Checks whether the instance id is a list or not before assignment. This is to fix a bug relating to nova/boto. The AWK-SDK libraries pass in a string, not a list. The euca tools pass in a list
* Launchpad automatic translations update
* Catching all socket errors in \_get\_my\_ip, since any socket error is likely enough to cause a failure in detection
* Catching all socket errors in \_get\_my\_ip, since any socket error is likely enough to cause a failure in detection
* blargh
* Some stuff
* added INSTANCE\_TYPES to test for compatibility with current tests
* Checking whether the instance id is a list or not before assignment. This is to fix a bug relating to nova/boto. The AWK-SDK libraries pass in a string, not a list. the euca tools pass in a list
* Added data\_transfer xapi plugin
* Another quick fix to multinode install doc
* Made updates to multinode install doc
* fixed instance\_types methods to use database backend
* require user context for most flavor/instance\_type read calls
* added network\_get\_all\_by\_instance(), call to reset\_network in vmops
* added new parameter --dhcp\_domain to set the used domain by dnsmasq in /etc/nova/nova.conf
* minor
* Fix for bug #714709
* A few changes
* fixed format according to PEP8
* replaced all calls to ifconfig with calls to ip
* added myself to the Authors file
* applied http://launchpadlibrarian.net/63698868/713434.patch
* Launchpad automatic translations update
* aliased flavor to instance\_types in nova-manage. will probably need to make flavor a full fledged class as users will want to list flavors by flavor name
* simplified instance\_types db calls to return entire row - we may need these extra columns for some features and there seems to be little downside in including them. still need to fix testing calls
* refactor to remove ugly code in flavors
* updated api.create to use instance\_type table
* added preliminary testing for bin/nova-manage while i am somewhat conflicted about the path these tests have taken, i think it is better than no tests at all
* rewrote nova-manage instance\_type to use correct db.api returned objects and have more robust error handling
* instance\_types should return in predicatable order (by name currently)
* flavorid and name need to be unique in the database for the ec2 and openstack apis, repectively
* corrected db.instance\_types to return expect dict instead of lists. updated openstack flavors to expect dicts instead of lists. added deleted column to returned dict
* converted openstack flavors over to use instance\_types table. a few pep changes
* added FIXME(kpepple) comments for all constant usage of INSTANCE\_TYPES. updated api/ec2/admin.py to use the new instance\_types db table
* Launchpad automatic translations update
* allow for bridge to be the public interface
* Removed (newly) unused exception variables
* Didn't mean to actually make changes to the glance plugin
* Added a bunch of stubbed out functionality
* Moved ssh\_execute to utils; moved comments to docstring
* Fixes for Vish & Devin's feedback
* Fixes https://bugs.launchpad.net/nova/+bug/681417
* Don't swallow exception stack traces by doing 'raise e'; just use 'raise'
* Implementation of 'SAN' volumes A SAN volume is 'special' because the volume service probably won't run on the iSCSI target. Initial support is for Solaris with COMSTAR (Solaris 11)
* merging
* Fixed PEP8 test problems, complaining about too many blank lines at line 51
* Adds logging.basicConfig() to run\_tests.py so that attempting to log debug messages from tests will work
* Launchpad automatic translations update
* flagged all INSTANCE\_TYPES usage with FIXME comment. Added basic usage to nova-manage (needs formatting). created api methods
* added seed data to migration
* Don't need a route for guests. Turns out the issue with routing from the guests was due to duplicate macs
* Changes the behavior of run\_test.sh so that pep8 is only run in the default case (when running all tests). It will no longer run when individual test cases are being given as in:
* open cactus
* some updates to HACKING to describe the docstrings
* Casting to the scheduler
* moves driver.init\_host into the base class so it happens before floating forwards and sets up proper iptables chains

2011.1
------

* Set FINAL = True in version.py
* Open Cactus development
* Set FINAL = True in version.py
* pass the set\_ip from ensure\_vlan\_bridge
* don't fail on ip add exists and recreate default route on ip move if needed
* initial support for dynamic instance\_types: db migration and model, stub tests and stub methods
* better setup for flatdhcp
* added to inject networking data into the xenstore
* forgot context param for network\_get\_all
* Fixes bug #709057
* Add and document the provider\_fw method in virt/FakeConnection
* Fix for LP Bug #709510
* merge trunk
* fix pep8 error :/
* Changed default handler for uncaughted exceptions. It uses logging instead print to stderr
* Launchpad automatic translations update
* rpartition sticks the rhs in [2]
* Fix for LP Bug #709510
* change ensure\_bridge so it doesn't overwrite existing ips
* Fix for LP Bug #709510
* Enabled modification of projects using the EC2 admin API
* Reorder insance rules for provider rules immediately after base, before secgroups
* Merged trunk
* Match the initial db version to the actual Austin release db schema
* 1. Discard nova-manage host list Reason: nova-manage service list can be replacement. Changes: nova-manage
* Only run pep8 after tests if running all the tests
* add logging.basicConfig() to tests
* fix austin->bexar db migration
* woops
* trivial cleanup for context.py
* Made adminclient get\_user return None instead of throwing EC2Exception if requested user not available
* pep8
* Added modify project to ec2 admin api
* incorporate feedback from devin - use sql consistently in instance\_destroy also, set deleted\_at
* Fixed whitespace
* Made adminclient get\_user return None instead of throwing EC2Exception if requested user not available
* OS-55: Fix typo for libvirt\_conn operation
* merge trunk
* remove extraneous line
* Fixed pep8 errors
* Changed default handler for uncaughted exceptions. Logging with level critical instead of print to stderr
* Disassociate all floating ips on terminate instance
* Fixes simple scheduler to able to be run\_instance by admins + availability zones
* Makes having sphinx to build docs a conditional thing - if you have it, you can get docs. If you don't, you can't
* Fixed a pep8 spacing issue
* fixes for bug #709057
* Working on api / manager / db support for zones
* Launchpad automatic translations update
* Adds security group output to describe\_instances
* Use firewall\_driver flag as expected with NWFilterFirewall.  This way, either you use NWFilterFirewall directly, or you use IptablesFirewall, which creates its own instance of NWFilterFirewall for the setup\_basic\_filtering command.  This removes the requirement that LibvirtConnection would always need to know about NWFirewallFilter, and cleans up the area where the flag is used for loading the firewall class
* simplify get and remove extra reference to import logging
* Added a test that checks for localized strings in the source code that contain position-based string formatting placeholders. If found, an exception message is generated that summarizes the problem, as well as the location of the problematic code. This will prevent future trunk commits from adding localized strings that cannot be properly translated
* Made changes based on code review
* makes sure that : is in the availability zone before it attempts to use it to send instances to a particular host
* Makes sure all instance and volume commands that raise not found are changed to show the ec2\_id instead of the internal id
* remove all floating addresses on terminate instance
* Merged in trunk changes
* Fixed formatting issues in current codebase
* Added the test for localized string formatting
* Fixes NotFound messages in api to show the ec2\_id
* Changed cpu limit to a static value of 100000 (100%) instead of using the vcpu value of 1. There is no weight/limit variable now so I see no other solution than the static max limit
* Make nova.virt.images fetch images from a Glance URL when Glance is used as the image service (rather than unconditionally fetch them from an S3/objectstore URL)
* Fixed spacing... AGAIN
* Make unit tests clean up their mess in /tmp after themselves
* Make xml namespace match the API version requested
* Missing import in xen plugin
* Shortened comment for 80char limt
* Added missing import
* Naive, low-regression-risk fix enabling Glance to work with libvirt/hyperv
* Add unit test for xmlns version matching request version
* Properly pulling the name attribute from security\_group
* adding testcode
* Fix Bug #703037. ra\_server is None
* Fix regression in s3 image service.  This should be a feature freeze exception
* I have a feeling if we try to migrate from imageId to id we'll be tracking it down a while
* more instanceId => id fixes
* Fix regression in imageId => id field rename in s3 image service
* Apply lp:707675 to this branch to be able to test
* merge trunk
* A couple of bugfixes
* Fixes a stupid mistake I made when I moved this method from a module into a class
* Add dan.prince to Authors
* Make xml namespace match the API version requested
* Fix issue in s3.py causing where '\_fix\_image\_id' is not defined
* added mapping parameter to write\_network\_config\_to\_xenstore
* OS-55: Added a test case for XenAPI file-based network injection OS-55: Stubbed out utils.execute for all XenAPI VM tests, including command simulation where necessary
* Simple little changes related to openstack api to work better with glance
* Merged trunk
* Cleaned up \_start() and \_shutdown()
* Added missing int to string conversion
* Simple little changes related to openstack api to work better with glance
* use 'ip addr change'
* Fix merge miss
* Changed method signature of create\_network
* merged r621
* Merged with http://bazaar.launchpad.net/~vishvananda/nova/lp703037
* Merged with vish branch
* Prefixed ending multi-line docstring with a newline
* Fixing documentation strings.  Second attempt at pep8
* Removal of image tempdir in test tearDown.  Also, reformatted a couple method comments to match the file's style
* Add DescribeInstanceTypes to admin api.  This lets the dashboard know what sizes can be launched (using the -t flag in euca-run-instances, for example) and what resources they provide
* Rename Mock, since it wasn't a Mock
* Add DescribeInstanceTypes to admin api (dashboard uses it)
* Fix for LP Bug #699654
* Change how libvirt firewall drivers work to have meaningful flags
* Fixed pep8 errors
* This branch updates docs to reflect the db sync addition.  It additionally adds some useful errors to nova-manage to help people that are using old guides.  It wraps sqlalchemy errors in generic DBError. Finally, it updates nova.sh to use current settings
* Added myself to the authors list
* fix pep8 issue (and my commit hook that didn't catch it)
* Add a host argument to virt drivers's init\_host method. It will be set to the name of host it's running on
* merged trunk
* Wraps the NotFound exception at the api layer to print the proper instance id.  Does the same for volume.  Note that euca-describe-volumes doesn't pass in volume ids properly, so you will get no error messages on euca-describe-volumes with improper ids.  We may also need to wrap a few other calls as well
* Fixes issue with SNATTING chain not getting created or added to POSTROUTING when nova-network starts
* Fix for bug #702237
* Moving init\_host before metadata\_forward, as metadata\_forward modifies prerouting rules
* another trunk merge
* Limit all lines to a maximum of 79 characters
* Perform same filtering for OUTPUT as FORWARD in iptables
* Fixed up a little image\_id return
* Trunk merged
* This patch:
* Trunk merged
* In instance chains and rules for ipv4 and ipv6, ACCEPT target was missing
* moved imageId change to s3 client
* Migration for provider firewall rules
* Updates for provider\_fw\_rules in admin api
* Adds driver.init\_host() call to flatdhcp driver
* Fixed pep8 errors
* Fixed pep8 errors
* No longer hard coding to "/tmp/nova/images/".   Using tempdir so tests run by different people on the same development machine pass
* Perform same filtering for OUTPUT as FORWARD in iptables. This removes a way around the filtering
* Fix pep-8 problem from prereq branch
* Add a host argument to virt driver's init\_host method. It will be set to the name of host it's running on
* updated authors since build is failing
* Adds conditional around sphinx inclusion
* merge with trunk
* Fixes project and role checking when a user's naming attribute is not uid
* I am new to nova, and wanted to fix a fairly trivial bug in order to understand the process
* Fix for LP Bug #707554
* Added iptables rule to IptablesFirewallDriver like in Hisaharu Ishii patch with some workaround
* Set the default number of IP's to to reserve for VPN to 0
* Merged with r606
* Properly fixed spacing issue for pep8
* Fixed spacing issue for pep8
* Fixed merge conflict
* Added myself to ./Authors file
* Switches from project\_get\_network to network\_get\_by\_instance, which actually works with all networking modes.  Also removes a couple duplicate lines from a bad merge
* Set the default number of IP's to to reserver for VPN to 0
* Localized strings that employ formatting should not use positional arguments, as they prevent the translator from re-ordering the translated text; instead, they should use mappings (i.e., dicts). This change replaces all localized formatted strings that use more than one formatting placeholder with a mapping version
* add ip and network to nwfilter test
* merged ntt branch
* use network\_get\_by\_instance
* Added myself (John Dewey) to Authors
* corrected nesting of the data dictionary
* Updated a couple data structures to pass pep8
* Added static cpu limit of 100000 (100%) to hyperv.py instead of using the vcpu value of 1
* PEP8 fixes
* Changes \_\_dn\_to\_uid to return the uid attribute from the user's object
* OS-55: PEP8 fixes
* merged branch to name net\_manager.create\_networks args
* the net\_managers expect different args to create\_networks, so nova-manage's call to net\_manager.create\_networks was changed to use named args to prevent argument mismatching
* OS-55: Post-merge fixes
* Fix describe\_regions by changing renamed flags.  Also added a test to catch future errors
* changed nova-manage to use named arguments to net\_manager.create\_networks
* Merged trunk
* Removed tabs form source. Merged trunk changes
* allow docs to build in virtualenv prevent setup.py from failing with sphinx in virtualenv
* fixes doc build and setup.py fail in virtualenv
* fix reversed assignment
* fixes and refactoring of smoketests
* remove extra print
* add test and fix describe regions
* merged trunk
* This patch skips VM shutdown if already in the halted state
* Use Glance to relate machine image with kernel and ramdisk
* Skip shutdown if already halted
* Refactoring \_destroy into steps
* i18n!
* merged trunk fixed whitespace in rst
* wrap sqlalchemy exceptions in a generic error
* Wrap instance at api layer to print the proper error.  Use same logic for volumes
* This patch adds two flags:
* Using new style logging
* Adding ability to remap VBD device
* Resolved trunk merge conflicts
* Adds gettext to pluginlib\_nova.py. Fixes #706029
* Adding getttext to pluginlib\_nova
* Add provider\_fw\_rules awareness to iptables firewall driver
* No longer chmod 0777 instance directories, since nova works just fine without them
* Updated docs for db sync requirements; merged with Vish's similar doc updates
* Change default log formats so that:  \* they include a timestamp (necessary to correlate logs)  \* no longer display version on every line (shorter lines)  \* use [-] instead of [N/A] (shorter lines, less scary-looking)  \* show level before logger name (better human-readability)
* OS55: pylint fixes
* OS-55: Added unit test for network injection via xenstore
* fixed typo
* OS-55: Fix current unit tests
* Fixed for pep8
* Merged with rev597
* No longer chmod 0777 instance directories
* Reverted log type from error to audit
* undid moving argument
* Fix for LP Bug #699654
* moved argument for label
* fixed the migration
* really added migration for networks label
* added default label to nova-manage and create\_networks
* syntax
* syntax error
* added plugin call for resetnetworking
* Fix metadata using versions other than /later.  Patch via ~ttx
* should be writing some kindof network info to the xenstore now, hopefully
* Use ttx's patch to be explict about paths, as urlmap doesn't work as I expected
* Doc changes for db sync
* Fixes issue with instance creation throwing errors when non-default groups are used
* Saving a database call by getting the security groups from the instance object
* Fixes issue with describe\_instances requiring an admin context
* OS-55: pylint fixes
* Fixing another instance of getting a list of ids instead of a list of objects
* Adds security group output to describe\_instances
* Finds and fixes remaining strings for i18n. Fixes bug #705186
* Pass a PluginManager to nose.config.Config(). This lets us use plugins like coverage, xcoverage, etc
* i18n's strings that were missed or have been added since initial i18n strings branch
* OS-55: Only modify Linux image with no or injection-incapable guest agent OS-55: Support network configuration via xenstore for Windows images
* A couple of copypasta errors
* Keep exception tracing as it was
* Pass a PluginManager to nose.config.Config(). This lets us use plugins like coverage, xcoverage, etc
* Also print version at nova-api startup, for consistency
* Add timestamp to default log format, invert name and level for better readability, log version once at startup
* When radvd is already running, not to hup, but to restart
* fix ipv6 conditional
* more smoketest fixes
* Passing in an elevated context instead of making the call non-elevated
* Added changes to make errors and recovery for volumes more graceful:
* Fetches the security group from ID, allowing the object to be used properly, later
* Changing service\_get\_all\_by\_host to not require admin context as it is used for describing instances, which any user in a project can do
* Exclude vcsversion.py from pep8 check. It's not compliant, but out of our control
* Exclude vcsversion.py from pep8 check. It's not compliant, but out of our control
* Include paste config in tarball
* Add etc/ directory to tarball
* Fixes for bugs:
* Return non-zero if either unit tests or pep8 fails
* Eagerly load fixed\_ip.network in instance\_get\_by\_id
* Add Rob Kost to Authors
* Return non-zero if either unit tests or pep8 fails
* Merged trunk
* merge trunk
* Add paste and paste.deploy installation to nova.sh, needed for api server
* Updated trunk changes to work with localization
* Implement provider-level firewall rules in nwfilter
* Whitespace (pep8) cleanups
* Exception string lacking 'G' for gigabytes unit
* Fixes \*\*params unpacking to ensure all kwargs are strings for compatibility with python 2.6.1
* make sure params have no unicode keys
* Removed unneeded line
* Merged trunk
* Refactor run\_tests.sh to allow us to run an extra command after the tests
* update the docs to reflect db sync as well
* add helpful error messages to nova-manage and update nova.sh
* Fixed unit tests
* Merged trunk
* fixed pep8 error
* Eagerly load instance's fixed\_ip.network attribute
* merged trunk changes
* minor code cleanup
* minor code cleanup
* remove blank from Authors
* .mailmap rewrite
* .mailmap updated
* Refactor run\_tests.sh to allow us to run an extra command after the tests
* Add an apply\_instance\_filter method to NWFilter driver
* PEP-8 fixes
* Revert Firewalldriver
* Replace an old use of ec2\_id with id in describe\_addresses
* various fixes to smoketests, including allowing admin tests to run as a user, better timing, and allowing volume tests to run on non-udev linux
* merged trunk
* replace old ec2\_id with proper id in describe\_addresses
* merge vish's changes (which merged trunk and fixed a pep8 problem)
* merged trunkand fixed conflicts and pep error
* get\_my\_linklocal raises exception
* Completed first pass at converting all localized strings with multiple format substitutions
* Allows moving from the Austin-style db to the Bexar-style
* move db sync into nosetests package-level fixtures so that the existing nosetests attempt in hudson will pass
* previous commit breaks volume.driver. fix it.
* per vish's feedback, allow admin to specify volume id in any of the acceptable manners (vol-, volume-, and int)
* Merged trunk
* Fixed unit tests
* Fix merge conflict
* add two more columns, set string lengths)
* Enable the use\_ipv6 flag in unit tests by default
* Fixed unit tests
* merge from upstream and fix small issues
* merged  to trunk rev572
* fixed based on reviewer's comment
* Basic stubbing throughout the stack
* Enable the use\_ipv6 flag in unit tests by default
* Add an apply\_instance\_filter method to NWFilter driver
* update status to 'error\_deleting' on volumes where deletion fails
* Merged trunk
* This disables ipv6 by default.  Most use cases will not need it on and it makes dependencies more complex
* The live\_migration branch ( https://code.launchpad.net/~nttdata/nova/live-migration/+merge/44940 ) was not ready to be merged
* merge from upstream to fix conflict
* Trunk merge
* s/cleanup/volume.  volume commands will need their own ns in the long run
* disable ipv6 by default
* Merged trunk
* Plug VBD to existing instance and minor cleanup
* fixes related to #701749.  Also, added nova-manage commands to recover from certain states:
* Implement support for streaming images from Glance when using the XenAPI virtualization backend, as per the bexar-xenapi-support-for-glance blueprint
* Works around the app-armor problem of requiring disks with backing files to be named appropriately by changing the name of our extra disks
* fix test to respect xml changes
* merged trunk
* Add refresh\_security\_group\_\* methods to nova/virt/fake.py, as FakeConnection is the reference for documentation and method signatures that should be implemented by virt connection drivers
* added paste pastedeploy to nova.sh
* authors needed for test
* revert live\_migration branch
* This removes the need for the custom udev rule for iscsi devices.  It instead attaches the device based on /dev/disk/by-path/ which should make the setup of nova-volume a little easier
* Merged trunk
* Risk of Regression: This patch don’t modify existing functionlities, but I have added some.     1. nova.db.service.sqlalchemy.model.Serivce (adding a column to database)     2. nova.service ( nova-compute needes to insert information defined by 1 above)
* Docstrings aren't guaranteed to exist, so split() can't automatically be called on a method without first checking for the method docstring's existence. Fixes Bug #704447
* Removes circular import issues from bin/stack and replaces utils.loads with json.loads. Fixes Bug#704424
* ComputeAPI -> compute.API in bin/nova-direct-api. Fixes LP#704422
* Fixed apply\_instance\_filter is not implemented in NWFilterFirewall
* pep8
* I might have gone overboard with documenting \_members
* Add rules to database, cast refresh message and trickle down to firewall driver
* Fixed error message in get\_my\_linklocal
* openstack api fixes for glance
* Stubbed-out code for working with provider-firewalls
* Merged trunk
* Merged with trunk revno 572
* Better shutdown handling
* Change where paste.deploy factories live and how they are called.  They are now in the nova.wsgi.Application/Middleware classes, and call the \_\_init\_\_ method of their class with kwargs of the local configuration of the paste file
* Further decouple api routing decisions and move into paste.deploy configuration.  This makes paste back the nova-api binary
* Clean up openstack api test fake
* Merged trunk
* Add Start/Shutdown support to XenAPI
* The Openstack API requires image metadata to be returned immediately after an image-create call
* merge trunk
* Fixing whitespace
* Returning image\_metadata from snapshot()
* Merging trunk
* Merged trunk
* merged trunk rev569
* merged to rev 561 and fixed based on reviewer's comment
* Adds a developer interface with direct access to the internal inter-service APIs and a command-line tool based on reflection to interact with them
* merge from upstream
* pep8 fixes... largely to things from trunk?
* merge from upstream
* pep8
* remove print statement
* This branch fixes two outstanding bugs in compute.  It also fixes a bad method signature in network and removes an unused method in cloud
* Re-removes TrialTestCase.  It was accidentally added in by some merges and causing issues with running tests individually
* removed rpc in cloud
* merged trial fix again
* fix bad function signature in create\_networks
* undo accidental removal of fake\_flags
* Merged trunk
* merged lp:~vishvananda/nova/lp703012
* remove TrialTestCase again and fix merge issues
* import re, remove extra call in cloud.py.  Move get\_console\_output to compute\_api
* Create and use a generic handler for RPC calls to compute
* Create and use a generic handler for RPC calls to compute
* Create and use a generic handler for RPC calls
* Merged trunk
* OS-55: Inject network settings in linux images
* Merged with trunk revno 565
* use .local and .rescue for disk images so they don't make app-armor puke
* Implements the blueprint for enabling the setting of the root/admin password on an instance
* OpenStack Compute (Nova) IPv4/IPv6 dual stack support http://wiki.openstack.org/BexarIpv6supportReadme
* Merged to rev.563
* This change introduces support for Sheepdog (distributed block storage system) which is proposed in https://blueprints.launchpad.net/nova/+spec/sheepdog-support
* Sort Authors
* Update Authors
* merge from upstream:
* pep8 fixes
* update migration script to add new tables since merge
* sort Authors
* Merged with r562
* This modifies libvirt to use CoW images instead of raw images.  This is much more efficient and allows us to use the snapshotting capabilities available for qcow2 images.  It also changes local storage to be a separate drive instead of a separate partition
* pep8.  Someday I'll remember 2 blank lines between module methods
* remove ">>>MERGE" iin nova/db/sqlalchemy/api.py
* checking based on pep8
* merged trunk
* Modified per sorens review
* Fix for Pep-8
* Merged with r561
* Moved commands which needs sudo to nova.sh
* Added netaddr for pip-requires
* Marking snapshots as private for now
* Merging Trunk
* Fixing Image ID workaround and typo
* Fixed based on the comments from code review. Merged to trunk rev 561
* Add a new method to firewall drivers to tell them to stop filtering a particular instance. Call it when an instance has been destroyed
* merged to trunk rev 561
* Merged trunk
* merge trunk rev560
* Fixes related to how EC2 ids are displayed and dealt with
* Get reviewed and fixed based on comments. Merged latest version
* Make libvirt and XenAPI play nice together
* Spelling is hard. Typing even moreso
* Revert changes to version.py
* Minor code cleanups
* Minor code cleanups
* Minor code cleanups
* Make driver calls compatible
* Merged trunk
* Stubbed out XenServer rescue/unrescue
* Added unit tests for the Diffie-Hellman class. Merged recent trunk changes
* Bring NWFilter driver up to speed on unfilter\_instance
* Replaced home-grown Diffie-Hellman implementation with the M2Crypto version supplied by Soren
* Instead of a set() to keep track of instances and security groups, use a dict(). \_\_eq\_\_ for stuff coming out of sqlalchemy does not do what I expected (probably due to our use of sessions)
* Fixes broken call to \_\_generate\_rc in auth manager
* Fixes bug #701055.  Moves code for instance termination inline so that the manager doesn't prematurely mark an instance as deleted.  Prematurely doing so causes find calls to fail, prevents instance data from being deleted, and also causes some other issues
* Revert r510 and r512 because Josh had already done the same work
* merged trunk
* Fixed Authors
* Merged with 557
* Fixed missing \_(). Fixed to follow logging to LOG changes. Fixed merge miss (get\_fixed\_ip was moved away). Update some missing comments
* merge from upstream and fix leaks in console tests
* make sure get\_all returns
* Fixes a typo in the name of a variable
* Fixes #701055.  Move instance termination code inline to prevent manager from prematurely marking it as destroyed
* fix invalid variable reference in cloud api
* fix indentation
* add support for database migration
* fix changed call to generate\_rc
* merged with r555
* fixed method signature of modify\_rules fixed unit\_test for ipv6
* standardize volume ids
* standardize volume ids
* standardize on hex for ids, allow configurable instance names
* correct volume ids for ec2
* correct formatting for volume ids
* Fix test failures on Python 2.7 by eagerly loading the fixed\_ip attribute on instances. No clue why it doesn't affect python 2.6, though
* Adding TODO to clarify status
* Merging trunk
* Do joinedload\_all('fixed\_ip.floating\_ips') instead of joinedload('fixed\_ip')
* Initialize logging in nova-manage so we don't see errors about missing handlers
* \_wait\_with\_callback was changed out from under suspend/resume. fixed
* Make rescue/unrescue available to API
* Stop error messages for logs when running nova-manage
* Fixing stub so tests pass
* Merging trunk
* Merging trunk, small fixes
* This branch adds a backend for using RBD (RADOS Block Device) volumes in nova via libvirt/qemu. This is described in the blueprint here: https://blueprints.launchpad.net/nova/+spec/ceph-block-driver
* Fix url matching for years 2010-forward
* Update config for launching logger with cleaner factory
* Update paste config for ec2 request logging
* merged changes from trunk
* cleaned up prior merge mess
* Merged trunk
* My previous modifications to novarc had CLOUDSERVER\_AUTH\_URL pointing to the ec2 api port. Now it's correctly pointing to os api port
* Check for whole pool name in check\_for\_setup\_error
* change novarc template from cc\_port to osapi\_port. Removed osapi\_port from bin scripts
* Start to add rescue/unrescue support
* fixed pause and resume
* Fixed another issue in \_stream\_disk, as it did never execute \_write\_partition. Fixed fake method accordingly. Fixed pep8 errors
* pep8 fixes
* Fixing the stub for \_stream\_disk as well
* Fix for \_stream\_disk
* Merged with r551
* Support IPv6 firewall with IptablesFirewallDriver
* Fixed syntax errors
* Check whether 'device\_path' has ':' before splitting it
* PEP8 fixes, and switch to using the new LOG in vm\_utils, matching what's just come in from trunk
* Merged with trunk
* Merged with Orlando's recent changes
* Added support of availability zones for compute. models.Service got additional field availability\_zone and was created ZoneScheduler that make decisions based on this field. Also replaced fake 'nova' zone in EC2 cloud api
* Eagerly load fixed\_ip property of instances
* Had to abandon the other branch (~annegentle/nova/newscript) because the diffs weren't working right for me. This is a fresh branch that should be merged correctly with trunk. Thanks for your patience. :)
* Added unit tests for the xenapi-glance integration.  This adds a glance simulator that can stub in place of glance.client.Client, and enhances the xapi simulator to add the additional calls that the Glance-specific path requires
* Merged with 549
* Change command to get link local address Remove superfluous code
* This branch adds web based serial console access.  Here is an overview of how it works (for libvirt):
* Merged with r548
* Fixed bug
* Add DescribeInstanceV6 for backward compatibility
* Fixed test environments. Fixed bugs in \_fetch\_image\_objecstore and \_lookup\_image\_objcestore (objectstore was broken!) Added tests for glance
* Fixed for pep8 Remove temporary debugging
* changed exception class
* Changing DN creation to do searches for entries
* Fixes bug #701575: run\_tests.sh fails with a meaningless error if virtualenv is not installed. Proposed fix tries to use easy\_install to install virtualenv if not present
* merge trunk, fix conflict
* more useful prefix and fix typo in string
* use by-path instead of custom udev script
* Quick bugfix.  Also make the error message more specific and unique in the equivalent code in the revoke method
* remove extra whitspaces
* Raise meaningful exception when there aren't enough params for a sec group rule
* bah - pep8 errors
* resolve pylint warnings
* Removing script file
* Read Full Spec for implementation details and notes on how to boot an instance using OS API. http://etherpad.openstack.org/B2RK0q1CYj
* Added my name to Authors list
* Changes per Edays comments
* Fixed a number of issues with the iptables firewall backend:  \* Port specifications for firewalls come back from the data store as integers, but were compared as strings.  \* --icmp-type was misspelled as --icmp\_type (underscore vs dash)  \* There weren't any unit tests for these issues
* merged trunk changes
* Removed unneeded SimpleDH code from agent plugin. Improved handling of plugin call failures
* Now tries to install virtualenv via easy\_install if not present
* Merging trunk
* fixed issue in pluginlib\_nova.py
* Trunk merge and conflcts resolved
* Implementation of xs-console blueprint (adds support for console proxies like xvp)
* Fixed a number of issues with the iptables firewall backend:  \* Port specifications for firewalls come back from the data store as integers, but were compared as strings.  \* --icmp-type was misspelled as --icmp\_type (underscore vs dash)  \* There weren't any unit tests for these issues
* Add support for EBS volumes to the live migration feature. Currently, only AoE is supported
* Changed shared\_ip\_group detail routing
* Changed shared\_ip\_group detail routing
* A few more changes to the smoeketests.  Allows smoketests to find the nova package from the checkout.  Adds smoketests for security groups.  Also fixes a couple of typos
* Fixes the metadata forwarding to work by default
* Adds support to nova-manage to modify projects
* Add glance to pip-requires, as we're now using the Glance client code from Nova
* Now removing kernel/ramdisk VDI after copy Code tested with PV and HVM guests Fixed pep8 errors
* merged trunk changes
* consolidate boto\_extensions.py and euca-get-ajax-console, fix bugs from previous trunk merge
* Fixed issues raised by reviews
* xenapi\_conn was not terminating utils/LoopingCall when an exception was occurring. This was causing the eventlet Event to have send\_exception() called more than once (a no-no)
* merge trunk
* whups, fix accidental change to nova-combined
* remove uneeded superclass
* Bugfix
* Adds the requisite infrastructure for automating translation templates import/export to Launchpad
* Added babel/gettext build support
* Can now correctly launch images with external kernels through glance
* re-merged in trunk to correct conflict
* Fix describe\_availablity\_zones versobse
* Typo fix
* merged changes from trunk
* Adding modify option for projects
* Fixes describe\_instances to filter by a list of instance\_ids
* Late import module for register\_models() so it doesn't create the db before flags are loaded
* Checks for existence of volume group using vgs instead of checking to see if /dev/nova-volumes exists.  The dev is created by udev and isn't always there even if the volume group does exist
* Add a new firewall backend for libvirt, based on iptables
* Create LibvirtConnection directly, rather than going through libvirt\_conn.get\_connection. This should remove the dependency on libvirt for tests
* Fixed xenapi\_conn wait\_for\_task to properly terminate LoopingCall on exception
* Fixed xenapi\_conn wait\_for\_task to properly terminate LoopingCall on exception
* Fixed xenapi\_conn wait\_for\_task to properly terminate LoopingCall on exception
* optimize to call get if instance\_id is specified since most of the time people will just be requesting one id
* fix describe instances + test
* Moved get\_my\_ip into flags because that is the only thing it is being used for and use it to set a new flag called my\_ip
* fixes Document make configuration by updating nova version mechanism to conform to rev530 update
* alphbetized Authors
* added myself to authors and fixed typo to follow standard
* typo correction
* fixed small glitch in \_fetch\_image\_glance  virtual\_size = imeta['size']
* fixed doc make process for new nova version (rev530) machanism
* late import module for register\_models() so it doesn't create the db before flags are loaded
* use safer vgs call
* Return proper region info in describe\_regions
* change API classname to match the way other API's are done
* small cleanups
* First cut at implementing partition-adding in combination with the Glance streaming.  Untested
* some small cleanups
* merged from upstream and made applicable changes
* Adds a mechanism to programmatically determine the version of Nova. The designated version is defined in nova/version.py. When running python setup.py from a bzr checkout, information about the bzr branch is put into nova/vcsversion.py which is conditionally imported in nova/version.py
* Return region info in the proper format
* Now that we aren't using twisted we can vgs to check for the existence of the volume group
* s/canonical\_version/canonical\_version\_string/g
* Fix indentation
* s/string\_with\_vcs/version\_string\_with\_vcs/g
* Some fixes to \_lookup\_image\_glance: fix the return value from lookup\_image, attach the disk read-only before running pygrub, and add some debug logging
* Reverted formatting change no longer necessary
* removed a merge conflict line I missed before
* merged trunk changes
* set the hostname factory in the service init
* incorporated changes suggested by eday
* Add copyright and license info to version.py
* Fixes issue in trunk with downloading s3 images for instance creation
* Fix pep8 errors
* Many fixes to the Glance integration
* Wrap logs so we can: \* use a "context" kwarg to track requests all the way through the system \* use a custom formatter so we get the data we want (configurable with flags) \* allow additional formatting for debug statements for easer debugging \* add an AUDIT level, useful for noticing changes to system components \* use named logs instead of the general logger where it makes sesnse
* pep8 fixes
* Bug #699910: Nova RPC layer silently swallows exceptions
* Bug #699912: When failing to connect to a data store, Nova doesn't log which data store it tried to connect to
* Bug #699910: Nova RPC layer silently swallows exceptions
* pv/hvm detection with pygrub updated for glance
* Bug #699912: When failing to connect to a data store, Nova doesn't log which data store it tried to connect to
* Resolved merge differences
* Additional cleanup prior to pushing
* Merged with trunk
* Fixing unescaped quote in nova-CC-install.sh script plus formatting fixes to multinode install
* getting ready to push for merge prop
* Fixing headers line by wrapping the headers in single quotes
* Less code generation
* grabbed the get\_info fix from my other branch
* merged changes from trunk
* Remove redundant import of nova.context. Use db instance attribute rather than module directly
* Merging trunk
* Removing some FIXMEs
* Reserving image before uploading
* merge
* Half-finished implementation of the streaming from Glance to a VDI through nova-compute
* Fix Nova not to immediately blow up when talking to Glance: we were using the wrong URL to get the image metadata, and ended up getting the whole image instead (and trying to parse it as json)
* another merge with trunk to remedy instance\_id issues
* merge
* Include date in API action query
* Review feedback
* This branch implements lock functionality. The lock is stored in the compute worker database. Decorators have been added to the openstack API actions which alter instances in any way
* Review feedback
* Review feedback
* Review feedback
* typo
* refers to instance\_id instead of instance\_ref[instance\_id]
* passing the correct parameters to decorated function
* accidentally left unlocked in there, it should have been locked
* various cleanup and fixes
* merged trunk
* pep8
* altered argument handling
* Got the basic 'set admin password' stuff working
* Include date in action query
* Let documentation get version from nova/version.py as well
* Add default version file for developers
* merge pep8 fixes from newlog2
* Track version info, and make available for logging
* pep8
* Merged trunk
* merge pep8 and tests from wsgirouter branch
* Remove test for removed class
* Pep8
* pep8 fix
* merged trunk changes
* commit before merging trunk
* Fixes format\_instances error by passing reservation\_id as a kwarg instead of an arg.  Also removes extraneous yields in test\_cloud that were causing tests to pass with broken code
* Remove module-level factory methods in favor of having a factory class-method on wsgi components themselves.  Local options from config are passed to the \_\_init\_\_ method of the component as kwargs
* fix the broken tests that allowed the breakage in format to happen
* Fix format\_run\_instances to pass in reservation id as a kwarg
* Add factories into the wsgi classes
* Add blank \_\_init\_\_ file for fixing importability.  The stale .pyc masked this error locally
* merged trunk changes
* Introduces basic support for spawning, rebooting and destroying vms when using Microsoft Hyper-V as the hypervisor. Images need to be in VHD format. Note that although Hyper-V doesn't accept kernel and ramdisk separate from the image, the nova objectstore api still expects an image to have an associated aki and ari. You can use dummy aki and ari images -- the hyper-v driver won't use them or try to download them. Requires Python's WMI module
* merged trunk changes
* Renamed 'set\_root\_password' to 'set\_admin\_password' globally
* merge with trunk
* renamed sharedipgroups to shared\_ip\_groups and fixed tests for display\_name
* Fix openstack api tests and add a FaultWrapper to turn exceptions to faults
* Fixed display\_name on create\_instance
* fix some glitches due to someone removing instanc.internal\_id (not that I mind) remove accidental change to nova-combined script
* Fixed trunk merge conflicts as spotted by dubs
* OS API parity: map image ID to numeric ID. Ensure all other OS operations are at least stubbed out and callable
* add in separate public hostname for console hosts. flesh out console api data
* allow smoketests to find nova package and add security rules
* Fix a bunch of pep8 stuff
* This addition to the docs clarifies that it is a requirement for contributors to be listed in the Authors file before their commits can be merged to trunk
* merge trunk
* another merge from trunk to the latest rev
* pulled changes from trunk added console api to openstack api
* Removed dependencies on nova server components for the admin client
* Remove stale doc files so the autogeneration extension for sphinx will work properly
* Add to Authors and mailmap
* Make test case work again
* This branch contains the internal API cleanup branches I had previously proposed, but combined together and with all the UUID key replacement ripped out. This allows multiple REST interfaces (or other tools) to use the internal API directly, rather than having the logic tied up in the ec2 cloud.py file
* socat will need to be added to our nova sudoers
* merged trunk changes
* intermediate work
* Created a XenAPI plugin that will allow nova code to read/write/delete from xenstore records for a given instance. Added the basic methods for working with xenstore data to the vmops script, as well as plugin support to xenapi\_conn.py
* Merged trunk
* Recover from a lost data store connection
* Updated register\_models() docstring
* simplify decorator into a wrapper fn
* add in xs-console worker and tests
* pep8 cleanup
* more fixes, docstrings
* fix injection and xml
* Fixing formatting problems with multinode install document
* Split internal API get calls to get and get\_all, where the former takes an ID and returns one resource, and the latter can optionally take a filter and return a list of resources
* missing \_()
* Fixed for pep8
* Fixed:Create instance fails when use\_ipv6=False
* Removed debug message which is not needed
* Fixed misspelled variable
* Fixed bug in nova\_project\_filter\_v6
* The \_update method in base Instance class overides dns\_name\_v6,so fixed it
* self.XENAPI..
* Changed Paused power state from Error to Paused
* fixed json syntax error
* stop using partitions and first pass at cow images
* Remove stale doc files
* pep8
* tests fixed up
* Better method for eventlet.wsgi.server logging
* Silence eventlet.wsgi.server so it doesn't go to stdout and pollute our logs
* Declare a flag for test to run in isolation
* Build app manually for test\_api since nova.ec2.API is gone
* Recover from a lost data store connection
* Added xenstore plugin changed
* merged changes from trunk
* some more cleanup
* need one more newline
* Redis dependency no longer needed
* Make test\_access use ec2.request instead of .controller and .action
* Revert some unneeded formatting since twistd is no longer used
* pep8 fixes
* Remove flags and unused API class from openstack api, since such things are specified in paste config now
* i18n logging and exception strings
* remove unused nova/api/\_\_init\_\_.py
* Make paste the default api pattern
* Rework how routing is done in ec2 endpoint
* Change all 2010 Copyright statements to 2010-2011 in doc source directory only
* rename easy to direct in the scripts
* fix typo in stack tool
* rename Easy API to Direct API
* Moved \_\_init\_\_ api code to api.py and changed allowed\_instances quota method argument to accept all type data, not just vcpu count
* Made the plugin output fully json-ified, so I could remove the exception handlers in vmops.py. Cleaned up some pep8 issues that weren't caught in earlier runs
* merged from trunk
* Renamed argument to represent possible types in volume\_utils
* Removed leftover UUID reference
* Removed UUID keys for instance and volume
* Merged trunk
* Final edits to multi-node doc and install script
* Merged trunk changes
* Some Bug Fix
* Fixed bug in libvirt
* Fixed bug
* Fixed for pep8
* Fixed conflict with r515
* Merged and fiexed conflicts with r515
* some fixes per vish's feedback
* Don't know where that LOG went..
* Final few log tweaks, i18n, levels, including contexts, etc
* Apply logging changes as a giant patch to work around the cloudpipe delete + add issue in the original patch
* dabo fix to update for password reset v2
* krm\_mapping.json sample file added
* dabo fix to update for password reset
* added cloudserver vars to novarc template
* Update Authors
* Add support for rbd volumes
* Fixes LP688545
* First pass at feature parity. Includes Image ID hash
* Fixing merge conflicts with new branch
* merged in trunk changes
* Fixing merge conflicts
* Fixes LP688545
* Make sure we point to the right PPA's everywhere
* Editing note about the database schema available on the wiki
* Modifying based on reviewer comments
* Uses paste.deploy to make application running configurable.  This includes the ability to swap out middlewares, define new endpoints, and generally move away from having code to build wsgi routers and middleware chains into a configurable, extensible method for running wsgi servers
* Modifications to the nova-CC-installer.sh based on review
* Adds the pool\_recycle option to the sql engine startup call.  This enables connection auto-timeout so that connection pooling will work properly.  The recommended setting (per sqlalchemy FAQ page) has been provided as a default for a new configuration flag.  What this means is that if a db connection sits idle for the configured # of seconds, the engine will automatically close the connection and return it to the available thread pool.  See Bug #690314 for info
* Add burnin support.  Services are now by default disabled, but can have instances and volumes run on them using availability\_zone = nova:HOSTNAME.  This lets the hardware be put through its paces without being put in the generally available pool of hardware.  There is a 'service' subcommand for nova-manage where you can enable, disable, and list statuses of services
* pep8 fixes
* Merged compute-api-cleanup branch
* Removed compute dependency in quota.py
* add timeout constant, set to 5 minutes
* removed extra whitespace chars at the end of the changed lines
* Several documentation corrections and formatting fixes
* Minor edits prior to merging changes to the script file
* add stubs for xen driver
* merge in trunk
* merged latest trunk
* merge trunk
* merge trunk
* temp
* Stop returning generators in the refresh\_security\_group\_{rules,members} methods
* Don't lie about which is the default firewall implementation
* Move a closing bracket
* Stub out init\_host in libvirt driver
* Adjust test suite to the split between base firewall rules provided by nwfilter and the security group filtering
* Fix a merge artifact
* Remove references to nova-core/ppa and openstack/ppa PPA's
* Updated the password generation code
* Add support for Sheepdog volumes
* Add support for various block device types (block, network, file)
* Added agent.py plugin. Merged xenstore plugin changes
* fixed pep8 issues
* Added OpenStack's copyright to the xenstore plugin
* fixed pep8 issues
* merged in trunk and xenstore-plugin changes
* Ignore CA/crl.pem
* Before merge with xenstore-plugin code
* Corrected the sloppy import in the xenstore plugin that was copied from other plugins
* Ignore CA/crl.pem
* Merged trunk
* Merged trunk
* deleting README.livemigration.txt and nova/livemigration\_test/\*
* Merged trunk
* Merged trunk
* 最新バージョンにマージ。変更点は以下の通り。 Authorsに自分の所属を追加 utils.pyのgenerate\_uidがおかしいのでインスタンスIDがオーバーフローしていたが、 その処理を一時撤廃。後で試験しなおしとすることにした。
* Merged trunk
* Auth Tokens assumed the user\_id was an int, not a string
* Removed dependencies on flags.py from adminclient
* Make InstanceActions and live diagnostics available through the Admin API
* Cleanup
* Improved test
* removed some debugging code left in previous push
* Converted the pool\_recycle setting to be a flag with a default of 3600 seconds
* completed the basic xenstore read/write/delete functionality
* Removed problematic test
* PEP8 fix
* \* Fix bad query in \_\_project\_to\_dn \* use \_\_find\_dns instead of \_\_find\_objects in \_\_uid\_to\_dn and \_\_project\_to\_dn
* Moved network operation code in ec2 api into a generic network API class. Removed a circular dependency with compute/quota
* Oopsies
* merge trunk
* merge trunk
* Make compute.api methods verbs
* Fail
* Review feedback
* Cleans up the output of run\_tests.sh to look closer to Trial
* change exit code
* Changing DN creation to do searches for entries
* Merged trunk
* Implemented review feedback
* This patch is beginning of XenServer snapshots in nova. It adds:
* Merged trunk
* Calling compute api directly from OpenStack image create
* Several documentation corrections
* merge recent revision(version of 2010/12/28) Change:    1. Use greenthread instead of defer at nova.virt.libvirt\_conn.live\_migration.    2. Move nova.scheduler.manager.live\_migration to nova.scheduler.driver    3. Move nova.scheduler.manager.has\_enough\_resource to nova.scheduler.driver    4. Any check routine in nova-manage.instance.live\_migration is moved to       nova.scheduler.driver.schedule\_live\_migration
* Merging trunk
* Note that contributors are required to be listed in Authors file before work can be merged into trunk
* Mention Authors and .mailmap files in Developer Guide
* pep 8
* remove cloudpipe from paste config
* Clean up how we determine IP to bind to
* Converted a few more ec2 calls to use compute api
* Cleaned up the compute API, mostly consistency with other parts of the system and renaming redundant module names
* fixed the compute lock test
* altered the compute lock test
* removed tests.api.openstack.test\_servers test\_lock, to hell with it. i'm not even sure if testing lock needs to be at this level
* fixed up the compute lock test, was failing because the context was always admin
* syntax error
* moved check lock decorator from the compute api to the come manager... when it rains it pours
* removed db.set\_lock, using update\_instance instead
* added some logging
* typo, trying to hurry.. look where that got me
* altered error exception/logging
* altered error exception/logging
* fixd variables being out of scope in lock decorator
* moved check lock decorator to compute api level. altered openstack.test\_servers according and wrote test for lock in tests.test\_compute
* Moved ec2 volume operations into a volume API interface for other components to use. Added attach/detach as compute.api methods, since they operate in the context of instances (and to avoid a dependency loop)
* pep8 fix, and add in flags that don't refernece my laptop
* apt-get install socat, which is used to connect to the console
* removed lock check from show and changed returning 404 to 405
* fix lp:695182, scheduler tests needed to DECLARE flag to run standalone
* removed () from if (can't believe i did that) and renamed checks\_lock decorator
* Add the pool\_recycle setting to enable connection pooling features for the sql engine.  The setting is hard-coded to 3600 seconds (one hour) per the recommendation provided on sqlalchemy's site
* i18n
* Pep-8 cleanup
* Fix scheduler testcase so it knows all flags and can run in isolation
* removed some code i didn't end up using
* fixed merge conflict with trunk
* pep8
* fixed up test for lock
* added tests for EC2 describe\_instances
* PEP8 cleanup
* This branch fixes an issue where VM creation fails because of a missing flag definition for 'injected\_network\_template'.  See Bug #695467 for more info
* Added tests
* added test for lock to os api
* refactor
* Re-added flag definition for injected\_network\_template.  Tested & verified fix in the same env as the original bug
* forgot import
* syntax error
* Merged trunk
* Added implementation availability\_zones to EC2 API
* Updating Authors
* merge
* Changes and error fixes to help ensure basic parity with the Rackspace API. Some features are still missing, such as shared ip groups, and will be added in a later patch set
* initial lock functionality commit
* Merged with trunk
* Additional edits in nova.concepts.rst while waiting for script changes
* Bug #694880: nova-compute now depends upon Cheetah even when not using libvirt
* add ajax console proxy to nova.sh
* merge trunk
* Fix pep8 violations
* add in unit tests
* removed superfluous line
* Address bug #695157 by using a blank request class and setting an empty request path
* Defualt services to enabled
* Address bug #695157 by using a blank request class and setting an empty request path
* Add flag --enable\_new\_services to toggle default state of service when created
* merge from trunk
* This commit introduces scripts to apply XenServer host networking protections
* Whoops
* merge from upstream and fix conflicts
* Update .mailmap with both email addresses for Ant and myself
* Make action log available through Admin API
* Merging trunk
* Add some basic snapshot tests
* Added get\_diagnostics placeholders to libvirt and fake
* Merged trunk
* Added InstanceAction DB functions
* merge trunk
* Bug #694890: run\_tests.sh sometimes doesn't pass arguments to nosetest
* Output of run\_tests.sh to be closer to trial
* I've added suspend along with a few changes to power state as well. I can't imagine suspend will be controversial but I've added a new power state for "suspended" to nova.compute.power\_states which libvirt doesn't use and updated the xenapi power mapping to use it for suspended state. I also updated the mappings in nova.api.openstack.servers to map PAUSED to "error" and SUSPENDED to "suspended". Thoughts there are that we don't currently (openstack API v1.0) use pause, so if somehow an instance were to be paused an error occurred somewhere, or someone did something in error. Either way asking the xenserver host for the status would show "paused". Support for more power states needs to be added to the next version of the openstack API
* fixed a line length
* Bug #694880: nova-compute now depends upon Cheetah even when not using libvirt
* Bug #694890: run\_tests.sh sometimes doesn't pass arguments to nosetest
* fix bug #lp694311
* Typo fix
* Renamed based on feedback from another branch
* Added stack command-line tool
* missed a couple of gettext \_()
* Cleans up nova.api.openstack.images and fix it to work with cloudservers api. Previously "cloudservers image-list" wouldn't work, now it will. There are mappings in place to handle s3 or glance/local image service. In the future when the local image service is working, we can probably drop the s3 mappings
* Fixing snapshots, pep8 fixes
* translate status was returning the wrong item
* Fixing bad merge
* Converted Volume model and operation to use UUIDs
* inst -> item
* syntax error
* renaming things to be a bit more descriptive
* Merging trunk
* Converted instance references to GUID type
* Added custom guid type so we can choose the most efficient backend DB type easily
* backup schedule changes
* Merged trunk
* Merging trunk, fixing failed tests
* A few fixes
* removed \
* Moving README to doc/networking.rst per recommendation from Jay Pipes
* Merged trunk
* couple of pep8s
* merge trunk
* Fixed after Jay's review. Integrated code from Soren (we now use the same 'magic number' for images without kernel & ramdisk
* Fixed pep8 errors
* launch\_at を前回コミット時に追加したが、lauched\_atというカラムが既に存在し、 紛らわしいのでlauched\_onにした。
* logs inner exception in nova/utils.py->import\_class
* Fix Bug #693963
* remove requirement of sudo on tests
* merge trunk
* Merge
* adding zones to api
* Support IPv6
* test commit
* テスト項目表を再び追加した状態でコミット
* テスト項目表をローカルから一度削除した状態でコミット
* テスト項目表がなぜか消えたので追加
* nova.compute.managerがこれまでの修正でデグレしていたので修正 CPUID, その他のチェックルーチンをnova.scheduler.manager.live\_migrationに追加
* nova.compute.managerがこれまでの修正でデグレしていたので修正 CPUID, その他のチェックルーチンをnova.scheduler.manager.live\_migrationに追加
*     Make nova work even when user has LANG or LC\_ALL configured
* merged trunk, resolved trivial conflict
* merged trunk, resolved conflict
* Faked out handling for shared ip groups so they return something
* another typo
* applied power state conversion to test
* trying again
* typo
* fixed the os api image test for glance
* updated the xenstore methods to reflect that they write to the param record of xenstore, not the actual xenstore itself
* fixed typo
* Merged with trunk All tests passed Could not fix some pep8 errors in nova/virt/libvirt\_conn.py
* fixed merge conflict
* updated since dietz moved the limited function
* fixed error occuring when tests used glance attributes, fixed docstrings
* Merged again from trunk
* fixed a few docstrings, added \_() for gettext
* added \_() for gettext and a couple of pep8s
* adds a reflection api
* unit test - should be reworked
* Moves implementation specific Openstack API code from the middleware to the drivers. Also cleans up a few areas and ensures all the API tests are passing again
* PEP8 fix
* One more time
* Pep8 cleanup
* Resolved merge conflict
* Merged trunk
* Trying to remove twisted dependencies, this gets everything working under nosetests
* Merged Monty's branch
* Merged trunk and resolved conflicts
* Working diagnostics API; removed diagnostics DB model - not needed
* merged trunk
* merged trunk
* Superfluous images include and added basic routes for shared ip groups
* Simplifies and improves ldap schema
* xenapi iscsi support + unittests
* Fixed trunk and PEP8 cleanup
* Merged trunk
* Added reference in setup.py so that python setup.py test works now
* merge lp:nova
* better bin name, and pep8
* pep8 fixes
* some pep8 fixes
* removing xen/uml specific switches.  If they need special treatment, we can add it
* add license
* delete xtra dir
* move euca-get-ajax-console up one directory
* merge trunk
* move port range for ajaxterm to flag
* more tweaks
* add in license
* some cleanup
* rewrite proxy to not use twisted
* added power state logging to nova.virt.xenapi.vm\_utils
* added suspend as a power state
* last merge trunk before push
*  merge trunk, fixed unittests, added i18n strings, cleanups etc etc
* And the common module
* minor notes, commit before rewriting proxy with eventlet
* There were a few unclaimed addresses in mailmap
* first merge after i18n
* remove some notes
* Add Ryan Lane as well
* added tests to ensure the easy api works as a backend for Compute API
* fix commits from Anthony and Vish that were committed with the wrong email
* remove some yields that snuck in
* merge from trunk
* Basic Easy API functionality
* Fixes reboot (and rescue) to work even if libvirt doesn't know about the instance and the network doesn't exist
* merged trunk
* Fixes reboot (and rescue) to work even if libvirt doesn't know about the instance and the network doesn't exist
* Adds a flag to use the X-Forwarded-For header to find the ip of the remote server.  This is needed when you have multiple api servers with a load balancing proxy in front.  It is a flag that defaults to False because if you don't have a sanitizing proxy in front, users could masquerade as other ips by passing in the header manually
* Got basic xenstore operations working
* Merged trunk
* Modified InstanceDiagnostics and truncate action
* removed extra files
* merged trunk
* Moves the ip allocation requests to the from the api host into calls to the network host made from the compute host
* pep8 fix
* merged trunk and fixed conflicts
* Accidentally yanked the datetime line in auth
* remove extra files that slipped in
* merged trunk
* add missing flag
* Optimize creation of nwfilter rules so they aren't constantly being recreated
* use libvirt python bindings instead of system call
* fixed more conflicts
* merged trunk again
* add in support of openstack api
* merge trunk and upgrade to cheetah templating
* Optimize nwfilter creation and project filter
* Merging trunk
* fixed conflicts
* Adding more comments regarding XS snapshots
* working connection security
* WSGI middleware for lockout after failed authentications of ec2 access key
* Modifies nova-network to recreate important data on start
* Puts the creation of nova iptables chains into the source code and cleans up rule creation.  This makes nova play more nicely with other iptables rules that may be created on the host
* Forgot the copyright info
* i18n support for xs-snaps
* Finished moving the middleware layers and fixed the API tests again
* Zone scheduler added
* Moved some things for testing
* Merging trunk
* Abstracted auth and ratelimiting more
* Getting Snapshots to work with cloudservers command-line tool
* merge trunk
* Minor bug fix
* Populate user\_data field from run-instances call parameter, default to empty string to avoid metadata base64 decoding failure, LP: #691598
* Adding myself and Antony Messerli to the Authors file
* Fixes per-project vpns (cloudpipe) and adds manage commands and support for certificate revocation
* merge trunk
* merge antonymesserli's changes, fixed some formatting, and added copyright notice
* merged i8n and fixed conflicts
* Added networking protections readme
* Moved xenapi into xenserver specific directory
* after trunk merge
* Fixes documentation builds for gettext..
* committing so that I can merge trunk changes
* Log all XenAPI actions to InstanceActions
* Merged trunk
* merging trunk
* merging trunk
* Fix doc building endpoint for gettext
* All merged with trunk and let's see if a new merge prop (with no pre-req) works.
* Problem was with a missplaced parentheses. ugh
* Adding me in the Authors file
* Populate user\_data field from run-instances call parameter, default to empty string to avoid metadata base64 decoding failure, LP: #691598
* connecting ajax proxy to rabbit to allow token based security
* remove a debugging line
* a few more fixes after merge with trunk
* merging in trunk
* move prototype code from api into compute worker
* Burnin support by specifying a specific host via availability\_zone for running instances and volumes on
* Merged trunk
* This stops the nova-network dhcp ip from being added to all of the compute hosts
* prototype works with kvm.  now moving call from api to compute
* Style correction
* fix reboot command to work even if a host is rebooted
* Filter templates and dom0 from list\_instances()
* removed unused import and fix docstring
* merge fakerabbit fix and turn fake back on for cloud unit tests
* Reworked fakerabbit backend so each connection has it's own. Moved queues and exchanges to be globals
* PEP8 cleanup
* Refactored duplicate rpc.cast() calls in nova/compute/api.py. Cleaned up some formatting issues
* Log all XenAPI actions
* correct xenapi resume call
* activate fake rabbit for debugging
* change virtualization to not get network through project
* update db/api.py as well
* don't allocate networks when getting vpn info
* Added InstanceDiagnostics and InstanceActions DB models
* PEP8 cleanup
* Merged trunk
* merge trunk
* 1) Merged from trunk 2) 'type' parameter in VMHelper.fetch\_image converted in enum 3) Fixed pep8 errors 4) Passed unit tests
* Remove ec2 config chain and move openstack versions to top-level application
* Use paste.deploy for running the api server
* pep8 and removed extra imports
* add missing greenthread import
* add a few extra joined objects to get instance
* remove extra print statements
* Tests pass after cleaning up allocation process
* Merging trunk
* Typo fix, stubbing out to use admin project for now
* Close devnull filehandle
* added suspend and resume
* Rewrite of vif\_rules.py to meet coding standards and be more pythonic in general.  Use absolute paths for iptables/ebtables/arptables in host-rules
* Add raw disk image support
* Add my @linux2go.dk address to .mailmap
* fixed some pep8 business
* directly copy ip allocation into compute
* Minor spellchecking fixes
* Adds support for Pause and Unpause of xenserver instances
* Make column names more generic
* don't add the ip to bridge on compute hosts
* PEP8 fixups
* Added InstanceActions DB model
* initial commit of xenserver host protections
* Merged trunk
* Fixed pep8 errors
* Integrated changes from Soren (raw-disk-images). Updated authors file. All tests passed
* pep8 (again again)
* pep8 (again)
* small clean up
* テストコードをレポジトリに追加 nova.compute.manager.pre\_live\_migration()について、異常終了しているのに正常終了の戻り値を返すことがあったため変更  - 正常終了の戻り値をTrueに変更  - fixed\_ipが見つからないときにはRemoteErrorをraiseする  - それに合わせてnova.compute.manager.live\_migrationも変更
* テストコードをレポジトリに追加 nova.compute.manager.pre\_live\_migration()について、異常終了しているのに正常終了の戻り値を返すことがあったため変更  - 正常終了の戻り値をTrueに変更  - fixed\_ipが見つからないときにはRemoteErrorをraiseする  - それに合わせてnova.compute.manager.live\_migrationも変更
* Support proxying api by using X-Forwarded-For
* eventlet merge updates
* Cleaned up TODOs, using flags now
* merge trunk and minor fix(for whatever reason validator\_unittest did not get removed from run\_test.py)
* fixed unittests and further clean-up post-eventlet merge
* All API tests finally pass
* Removing unneeded Trial specific code
* A few more tweaks to get the OS API tests passing
* Adding new install script plus changes to multinode install doc
* Removing unneeded Trial specific code
* Replaced the use of redis in fakeldap with a customized dict class. Auth unittests should now run fine without a redis server running, or without python-redis installed
* Adding Ed Leafe to Authors file
* Some tweaks
* Adding in Ed Leafe so we can land his remove-redis test branch
* Add wait\_for\_vhd\_coalesce
* Some typo fixes
* pep8 cleanup
* Fixed some old code that was merged incorrectly
* Replaced redis with a modified dict class
* bug fixes
* first revision after eventlet merge. Currently xenapi-unittests are broken, but everything else seems to be running okay
* Integrated eventlet\_merge patch
* Code reviewed
* XenAPI Snapshots first cut
* Fixed network test (thanks Vish!) and fixed run\_tests.sh
* First pass at converting run\_tests.py to nosetests. The network and objctstore tests don't yet work. Also, we need to manually remove the sqlite file between runs
* remerged for pep8
* pep8
* merged in project-vpns to get flag changes
* clean up use of iptables chains
* move some flags around
* add conditional bind to linux net
* make sure all network data is recreated when nova-network is rebooted
* merged trunk
* merged trunk, fixed conflicts and tests
* Added Instance Diagnostics DB model
* Put flags back in nova.virt.xenapi/vm\_utils
* Removed unnecessary blank lines
* Put flags back in vm\_utils
* This branch removes most of the dependencies on twisted and moves towards the plan described by https://blueprints.launchpad.net/nova/+spec/unified-service-architecture
* pep8 fixes for bin
* PEP8 cleanups
* use getent, update docstring
* pep8 fixes
* reviewed the FIXMEs, and spotted an uncaught exception in volume\_utils...yay!
* fixed a couple of more syntax errors
* Moved implementation specific stuff from the middleware into their respective modules
* typo
* fixed up openstack api images index and detail
* fake session clean-up
* Removed FakeInstance and introduced stubout for DB. Code clean-up
* removed extra stuff used for debugging
* Restore code which was changed for testing reasons to the original state. Kudos to Armando for spotting this
*   Make nova work even when user has LANG or LC\_ALL configured
* Merged changes from trunk into the branch
* Hostテーブルのカラム名を修正 FlatManager, FlatDHCPManagerに対応
* merged with trunk. fixed compute.pause test
* fixup after merge with trunk
* memcached requires strings not unicode
* Fix 688220 Added dependency on Twisted>=10.1.0 to pip-requires
* Make sure we properly close the bzr WorkingTree in our Authors up-to-datedness unit test
* fixes for xenapi (thanks sandywalsh)
* clean up tests and add overriden time method to utils
* merged from upstream
* add missing import
* Adding back in openssh-lpk schema, as keys will likely be stored in LDAP again
* basic conversion of xs-pause to eventlet done
* brougth clean-up from unittests branch and tests
* I made pep8 happy
* \* code cleanup \* revised unittest approach \* added stubout and a number of tests
* clean up code to use timeout instead of two keys
* final cleanup
* Restore alphabetical order in Authors file
* removed temporary comment lines
* Lots of PEP-8 work
* refresh\_security\_group renamed to refresh\_security\_group\_rules
* added volume tests and extended fake to support them
* Make sure the new, consolidated template gets included
* Make sure we unlock the bzr tree again in the authors unit test
* The ppa was moved.  This updates nova.sh to reflect that
* merged upstream
* remove some logging
* Merged from trunk and fixed merge issues. Also fixed pep8 issues
* Lockout middleware for ec2 api
* updates per review
* Initial work on i18n.  This adds the installation of the nova domain in gettext to all the "endpoints", which are all the bin/\* files and run\_tests.py
* For some reason, I forgot to commit the other endpoints..
* Remove default\_{kernel,ramdisk} flags. They are not used anymore
* Don't attempt to fiddle with partitions for whole-disk-images
* pep8
* Includes architecture on register. Additionally removes a couple lines of cruft
* nothing
* nothing
* nothing
* support for pv guests (in progress)
* merge trunk
* Now that we have a templating engine, let's use it. Consolidate all the libvirt templates into one, extending the unit tests to make sure I didn't mess up
* first cut of unittest framework for xenapi
* Added my contacts to Authors file
* final cleanup, after moving unittest work into another branch
* fixup after merge with trunk
* added callback param to fake\_conn
* added not implemented stubs for libvirt
* merge with trey tests
* Fixed power state update with Twisted callback
* simplified version using original logic
* moving xenapi unittests changes into another branch
* Adds support to the ec2 api for filtering describe volumes by volume\_ids
* Added LiveCD info as well as some changes to reflect consolidation of .conf files
* Fix exception throwing with wrong instance type
* Add myself
* removing imports that should have not been there
* second round for unit testing framework
* Added Twisted version dependency into pip-requires
* only needs work for distinguishing pv from hvm
* Move security group refresh logic into ComputeAPI
* Refactored smoketests to use novarc environment and to separate user and admin specific tests
* Changed OpenStack API auth layer to inject a RequestContext rather than building one everywhere we need it
* Elaborate a bit on ipsets comment
* Final round of marking translation strings
* First round of i18n-ifying strings in Nova
* Initial i18n commit for endpoints. All endpoints must install gettext, which injects the \_ function into the builtins
* Fixed spelling errors in index.rst
* fix pep8
* Includes kernel and ramdisk on register. Additinally removes a couple lines of cruft
* port new patches
* merge-a-tat-tat upstream to this branch
* Format fixes and modification of Vish's email address
* There is always the odd change that one forgets!
* \* pylint fixes \* code clean-up \* first cut for xenapi unit tests
* added pause and unpause to fake connection
* merged changes from sandy's branch
* added unittest for pause
* add back utils.default\_flagflie
* removed a few more references to twisted
* formatting and naming cleanup
* remove service and rename service\_eventlet to service
* get service unittests runnning again
* whitespace fix
* make nova binaries use eventlet
* Converted the instance table to use a uuid instead of a auto\_increment ID and a random internal\_id. I had to use a String(32) column with hex and not a String(16) with bytes because SQLAlchemy doesn't like non-unicode strings going in for String types. We could try another type, but I didn't want a primary\_key on blob types
* remove debug messages
* merge with trey
* pause and unpause code/tests in place. To the point it stuffs request in the queue
* import module and not classe directely as per Soren recommendation
* Make XenServer VM diagnostics available through nova.virt.xenapi
* Merged trunk
* Added exception handling to get\_rrd()
* Changed OpenStack API auth layer to inject a RequestContext rather than building one everywhere we need it
* changed resume to unpause
* Import module instead of function
* filter describe volumes by supplied ids.  Includes unittest
* merging sandy's branch
* Make get\_diagnostics async
* raw instances can now be launched in xenapi (only as hvm at the moment)
* pause from compute.manager <-> xenapi
* Merged Armando's XenAPI fix
* merge with trunk to pull in admin-api branch
* Flag to define which operations are exposed in the OpenStack API, disabling all others
* Fixed Authors conflict and re-merged with trunk
* fixes exception throwing with wrong instance type
* Ignore security group rules that reference foreign security groups
* fixed how the XenAPI library is loaded
* remove some unused files
* port volume manager to eventlet also
* intermediate commit to checkpoint progress
* some pylint caught changes to compute
* added to Authors
* adds bzr to the list of dependencies in pip-require so that upon checkout using run\_tests.sh succeeds
* merge conflict
* merged upstream changes
* add bzr to the dev dependencies
* Fixed docstrings
* Merged trunk
* Got get\_diagnostics in working order
* merged updates to trunk
* merge trunk
* typo fix
* removing extraneous config ilnes
* Finished cleaning up the openstack servers API, it no longer touches the database directly. Also cleaned up similar things in ec2 API and refactored a couple methods in nova.compute.api to accommodate this work
* Pushed terminate instance and network manager/topic methods into network.compute.api
* Merged trunk
* Moved the reboot/rescue methods into nova.compute.api
* PEP8 fixes
* Setting the default schema version to the new schema
* Adding support for choosing a schema version, so that users can more easily migrate from an old schema to the new schema
* merged with trunk. All clear!
* Removing novaProject from the schema. This change may look odd at first; here's how it works:
* test commit
* コメントを除去 README.live\_migration.txtのレビュー結果を修正
* This change adds better support for LDAP integration with pre-existing LDAP infrastructures. A new configuration option has been added to specify the LDAP driver should only modify/add/delete attributes for user entries
* More pep8 fixes to remove deprecated functions
* pep8 fix
* Clarifying previously commited exception message
* Raising an exception if the user doesn't exist before trying to modify its attributes
* Removing redundant check
* Added livecd instructions plus fixed references to .conf files
* pylint fixes
* Initial diagnostics import -- needs testing and cleanup
* Added a script to use OpenDJ as an LDAP server instead of OpenLDAP. Also modified nova.sh to add an USE\_OPENDJ option, that will be checked when USE\_LDAP is set
* Reverting last change
* a few more things ironed out
* Make sure Authors check also works for pending merges (otherwise stuff can get merged that will make the next merge fail this check)
* It looks like Soren fixed the author file, can I hit the commit button?
* merge trunk
* Make sure Authors check also works for pending merges (otherwise stuff can get merged that will make the next merge fail this check)
* Add a helpful error message to nova-manage in case of NoMoreNetworks
* Add Ryan Lucio to Authors
* Adding myself to the authors list
* Add Ryan Lucio to Authors
* Addresses bug 677475 by changing the DB column for internal\_id in the instances table to be unsigned
* importing XenAPI module loaded late
* Added docstring for get\_instances
* small fixes on Exception handling
* first test commit
* and yet another pylint fix
* fixed pylint violations that slipped out from a previous check
* \* merged with lp:~armando-migliaccio/nova/xenapi-refactoring \* fixed pylint score \* complied with HACKING guidelines
* addressed review comments, complied with HACKING guidelines
* adding README.livemigration.txt
* rev439ベースにライブマイグレーションの機能をマージ このバージョンはEBSなし、CPUフラグのチェックなし
* modified a few files
* Fixed conflicts with gundlach's fixes
* Remove dead test code
* Add iptables based security groups implementation
* Merged gundlach's fixes
* Don't wrap HTTPAccepted in a fault.  Correctly pass kwargs to update\_instance
* fixed import module in \_\_init\_\_.py
* minor changes to docstrings
* added interim solution for target discovery. Now info can either be passed via flags or discovered via iscsiadm. Long term solution is to add a few more fields to the db in the iscsi\_target table with the necessary info and modify the iscsi driver to set them
* merge with lp:~armando-migliaccio/nova/xenapi-refactoring
* merge trunk
* moved XenAPI namespace definition into xenapi/\_\_init\_\_.py
* pylint and pep8 fixes
* Decreased the maximum value for instance-id generation from uint32 to int32 to avoid truncation when being entered into the instance table.  Reverted fix to make internal\_id column a uint
* Finished cleaning up the openstack servers API, it no longer touches the database directly. Also cleaned up similar things in ec2 API and refactored a couple methods in nova.compute.api to accomodate this work
* Merged reboot-rescue into network-manager
* Merged trunk
* Fixes a missing step (nova-manage network create IP/nn n nn) in the single-node install guide
* Tired of seeing various test files in bzr stat
* Updated sqlalchemy model to make the internal\_id column of the instances table as unsigned integer
* \* Removes unused schema \* Removes MUST uid from novaUser \* Changes isAdmin to isNovaAdmin \* Adds two new configuration options: \*\* ldap\_user\_id\_attribute, with a default of uid \*\* ldap\_user\_name\_attribute, with a default of cn \* ldapdriver.py has been modified to use these changes
* Pushed terminate instance and network manager/topic methods into network.compute.api
* Fix bugs that prevented OpenStack API from supporting server rename
* pep8
* Use newfangled compute\_api
* Update tests to use proper id
* Fixing single node install doc
* Oops, update 'display\_name', not 'name'.  And un-extract-method
* Correctly translate instance ids to internal\_ids in some spots we neglected
* Added test files to be ignored
* Consolidated the start instance logic in the two API classes into a single method. This also cleans up a number of small discrepencies between the two
* Moved reboot/rescue methods into nova.compute.api
* Merged trunk and resolved conflicts. Again
* Instances are assigned a display\_name if one is not passed in -- and now, they're assigned a display\_name even if None is explicitly passed in (as the EC2 API does.)
* Merged trunk and resolved conflicts
* Default Instance.display\_name to a value even when None is explicitly passed in
* Refactor nwfilter code somewhat. For iptables based firewalls, I still want to leave it to nwfilter to protect against arp, mac, and ip spoofing, so it needed a bit of a split
* Add a helpful error message to nova-manage in case of NoMoreNetworks
* minor refactoring after merge
* merge lp:~armando-migliaccio/nova/refactoring
* merge trunk
* typo fix
* moved flags into xenapi/novadeps.py
* Add a simple abstraction for firewalls
* fix nova.sh to reflect new location of ppa
* Changed null\_kernel flag from aki-00000000 to nokernel
* Guarantee that the OpenStack API's Server-related responses will always contain a "name" value.  And get rid of a redundant field in models.py
* Going for a record commits per line changes ratio
* Oops, internal\_id isn't available until after a save.  This code saves twice; if I moved it into the DB layer we could do it in one save.  However, we're moving to one sqlite db per compute worker, so I'd rather have two saves in order to keep the logic in the right layer
* Todd points out that the API doesn't require a display\_name, so let's make a default.  That way the OpenStack API can rest assured that its server responses will always have a name key
* Adds in more documentation contributions from Citrix
* Remove duplicate field and make OpenStack API return server.name for EC2-API-created instances
* Move cc\_host and cc\_port flags into nova/network/linux\_net.py. They weren't used anywhere else
* Add include\_package\_data=True to setup.py
* With utils.default\_flagfile() in its old location, the flagfile isn't being read -- twistd.serve() loads flags earlier than that point.  Move the utils.default\_flagfile() call earlier so the flagfile is included
* Removed a blank line
* Broke parts of compute manager out into compute.api to separate what gets run on the API side vs the worker side
* Move default\_flagfile() call to where it will be parsed in time to load the flagfile
* minor refactoring
* Move cc\_host and cc\_port flags into nova/network/linux\_net.py. They weren't used anywhere else
* Added a script to use OpenDJ as an LDAP server instead of OpenLDAP. Also modified nova.sh to add an USE\_OPENDJ option, that will be checked when USE\_LDAP is set
* Fixed termie's tiny bits from the prior merge request
* Delete unused flag in nova.sh
* Moving the openldap schema out of nova.sh into it's own files, and adding sun (opends/opendj/sun directory server/fedora ds) schema files
* OpenStack API returns the wrong x-server-management-url.  Fix that
* Cleaned up pep8 errors
* brought latest changes from trunk
* iscsi volumes attach/detach complete. There is only one minor issue on how to discover targets from device\_path
* Fix unit tests
* Fix DescribeImages EC2 API call
* merged Justin Santa Barbara's raw-disk-image back into the latest trunk
* If only I weren't so lazy
* Rename imageSet variable to images
* remove FAKE\_subdomain reference
* Return the correct server\_management\_url
* Default flagfile moved in trunk recently.  This updates nova.sh to run properly with the new flagfile location
* Correctly handle imageId list passed to DescribeImages API call
* update of nova.sh because default flagfile moved
* merged trunk
* Add a templating mechanism in the flag parsing
* Adjust state\_path default setting so that api unit tests find things where they used to find them
* Import string instead of importing Template from string. This is how we do things
* brought the xenapi refactoring in plus trunk changes
* changes
* pep8 fixes and further round of refactoring
* Rename cloudServersFault to computeFault -- I missed this Rackspace branding when we renamed nova.api.rackspace to nova.api.openstack
* Make sure templated flags work across calls to ParseNewFlags
* Add include\_package\_data=True to setup.py
* fixed deps
* first cut of the refactoring of the XenAPIConnection class. Currently the class merged both the code for managing the XenAPI connection and the business logic for implementing Nova operations. If left like this, it would eventually become difficult to read, maintain and extend. The file was getting kind of big and cluttered, so a quick refactoring now will save a lot of headaches later
* other round of refactoring
* further refactoring
* typos and pep8 fixes
* first cut of the refactoring of the XenAPIConnection class. Currently the class merged both the code for managing the XenAPI connection and the business logic for implementing Nova operations. If left like this, it would  eventually become difficult to read, maintain and extend. The file was getting kind of big and cluttered, so a quick refactoring now will save a lot of headaches later
* PEP fixes
* Adding support for modification only of user accounts
* This modification should have occured in a different branch. Reverting
* added attach\_volume implementation
* work on attach\_volume, with a few things to iron out
* A few more changes:  \* Fixed up some flags  \* Put in an updated nova.sh  \* Broke out metadata forwarding so it will work in flatdhcp mode  \* Added descriptive docstrings explaining the networking modes in more detail
* small conflict resolution
* first cut of changes for the attach\_volume call
* The image server should throw not found errors, don't need to check in compute manager
* Consolidated the start instance logic in the two API classes into a single method. This also cleans up a number of small discrepencies between the two
* Setting "name" back to "cn", since id and name should be separate
* Adding support for modification only of user accounts
* don't error on edge case where vpn has been launched but fails to get a network
* Make sure all workers look for their flagfile in the same spot
* Fix typo "nova.util" -> "nova.utils"
* Fix typo "nova.util" -> "nova.utils"
* Added a .mailmap that maps addresses in bzr to people's real, preferred e-mail addresses. (I made a few guesses along the way, feel free to adjust according to what is actually the preferred e-mail)
* Add a placeholder in doc/build. Although bzr handles empty directories just fine, setuptools does not, so to actually ship this directory in the tarball, we need a file in it
* Add a placeholder in doc/build. Although bzr handles empty directories just fine, setuptools does not, so to actually ship this directory in the tarball, we need a file in it
* Merged trunk
* pep8
* merged trunk, added recent nova.sh
* fix typos in docstring
* docstrings, more flags, breakout of metadata forwarding
* doc/build was recently accidentally removed from VCS. This adds it back, which makes the docs build again
* Add doc/build dir back to bzr
* Make aws\_access\_key\_id and aws\_secret\_access\_key configurable
* add vpn ping and optimize vpn list
* Add an alias for Armando
* the serial returned by x509 is already formatted in hex
* Adding developer documentation - setting up dev environment and how to add to the OpenStack API
* Add a --logdir flag that will be prepended to the logfile setting. This makes it easier to share a flagfile between multiple workers while still having separate log files
* Address pep8 complaints
* Address PEP8 complaints
* Remove FAKE\_subdomain from docs
* Adding more polish
* Adding developer howtos
* Remove FAKE\_subdomain from docs
* Make aws\_access\_key\_id and aws\_secret\_access\_key configurable
* updated nova.sh
* added flat\_interface for flat\_dhcp binding
* changed bridge\_dev to vlan\_interface
* 
* Add a --logdir flag that will be prepended to the logfile setting. This makes it easier to share a flagfile between multiple workers while still having separate log files
* added svg files (state.svg is missing because its source is a screen snapshot)
* Unify the location of the default flagfile. Not all workers called utils.default\_flagfile, and nova-manage explicitly said to use the one in /etc/nova/nova-manage.conf
* Set and use AMQP retry interval and max retry FLAGS
* Incorporating security groups info
* Rename cloudServersFault (rackspace branding) to computeFault.  Fixes bug lp680285
* Use FLAGS instead of constants
* Incorporating more networking info
* Make time.sleep() non-blocking
* Removed unnecessary continue
* Update Authors and add a couple of names to .mailmap (from people who failed to set bzr whoami properly)
* Refactor AMQP retry loop
* Allows user to specify hosts to listen on for nova-api and -objectstore
* Make sure all the libvirt templates are included in the tarball (by replacing the explicitly listed set with a glob pattern)
* fixed pep8 violations
* Set and use AMQP retry interval and max retry constants
* pep8 violations fix
* added placeholders
* added test for invalid handles
* Make sure all templates are included (at least rescue tempaltes didn't used to be included)
* Check for running AMQP instances
* Use logging.exception instead
* Reverted some changes
* Added some comments
* Adds images (only links one in), start for a nova-manage man file, and also documents all nova-manage commands. Can we merge it in even though the man page build isn't working?
* Added some comments
* Check for running AMQP instances
* first cut of fixes for bug  #676128
* Removed .DS\_Store files everywhere, begone!
* Moves the EC2 API S3 image service into nova.service. There is still work to be done to make the APIs align, but this is the first step
* PEP8 fixes, 2 lines were too long
* First step to getting the image APIs consolidated. The EC2 API was using a one-off S3 image service wrapper, but this should be moved into the nova.image space and use the same interface as the others. There are still some mismatches between the various image service implementations, but this patch was getting large and wanted to keep it within a resonable size
* Improved Pylint Score
* Fixes improper display of api error messages that happen to be unicode
* Make sure that the response body is a string and not unicode
* Soren updated setup.py so that the man page builds. Will continue working on man pages for nova-compute and nova-network
* Overwrite build\_sphinx, making it run once for each of the html and man builders
* fixes flatdhcp, updates nova.sh, allows for empty bridge device
* Update version to 2011.1 as that is the version we expect to release next
* really adding images
* adding images
* Documenting all nova-manage commands
* Documenting all nova-manage commands
* Fixes eventlet race condition in cloud tests
* fix greenthread race conditions in trunk and floating ip leakage
* Testing man page build through conf.py
* Improved Pylint Score
* adjusting images size and bulleted list
* merged with trunk
* small edit
* Further editing and added images
* Update version to 2011.1 as that is the version we expect to release next
* ec2\_api commands for describe\_addresses and associate\_address are broken in trunk.  This happened during the switch to ec2\_id and internal\_id.  We clearly didn't have any unit tests for this, so I've added a couple in addition to the three line change to actually fix the bugs
* delete floating ips after tests
* remove extra line and ref. to LOG that doesn't exist
* fix leaking floating ip from network unittests and use of fakeldap driver
* Adds nova-debug to tools directory, for debugging of instances that lose networking
* fixes errors in describe address and associate address.  Adds test cases
* Ryan\_Lane's code to handle /etc/network not existing when we try to inject /etc/network/interfaces into an image
* pep8
* First dump of content related to Nova RPC and RabbitMQ
* Add docstrings to any methods I touch
* pep8
* PEP8 fixes
* added myself to Authors file. Enjoy spiders
* Changed from fine-grained operation control to binary admin on/off setting
* Changed from fine-grained operation control to binary admin on/off setting
* Lots of documentation and docstring updates
* The docs are just going to be wrong for now.  I'll file a bug upstream
* Change how wsgified doc wrapping happens to fix test
* merge to trunk
* pep8
* Adding contributors and names
* merge with trunk
* base commit
* saw a duplicate import ... statement in the code while reading through unit tests - this removes the dupe
* removed redundant unit test import
* add in bzr link
* adding a bit more networking documentation
* remove tab
* fix title
* tweak
* Fix heading
* merge in anne's changes
* tweak
* Just a few more edits, misspellings and the like
* fix spacing to enable block
* merge to remote
* unify env syntax
* Add sample puppet scripts
* fix install guide
* getting started
* create SPHINX\_DEBUG env var.  Setting this will disable aggressive autodoc generation.  Also provide some sample for P syntax
* fix conf file from earlier merge
* notes, and add code to enable sorted "..todo:: P[1-5] xyz" syntax
* merge in more networking docs - still a work in progress
* anne's changes to the networking documentation
* Updated Networking doc
* anne gentle's changes to community page
* merge in heckj's corrections  to multi-node install
* Added a .mailmap that maps addresses in bzr to people's real, preferred e-mail addresses. (I made a few guesses along the way, feel free to adjust according to what is actually the preferred e-mail)
* Updated community.rst to fix a link to the IRC logs
* merging in changes from ~anso/nova/trunkdoc
* fixed another spacing typo causing poor rendering
* fixed spacing typo causing poor rendering
* merge in anne's work
* add docs for ubuntu 4, 10, others
* Updated Cloud101 and admonition color
* merge heckj's multi install notes
* working on single node install
* updating install notes to reference Vish' nova.sh and installing in MYSQL
* Add Flat mode doc
* Add Flat mode doc
* Add Flat mode doc
* Add VLAN Mode doc
* Add VLAN Mode doc
* merge in anne's changes
* home page tweaks
* Updated CSS and community.rst file
* modifications and additions based on doc sprint
* incorporate some feedback from todd and anne
* merge in trunk
* working on novadoc structure
* add some info on authentication and keys
* Since we're autodocumenting from a sphinx ext, we can scrap it in Makefile
* Use the autodoc tools in the setup.py build\_sphinx toolchain
* Fix include paths so setup.py build\_sphinx works again
* Cleanups to doc process
* quieter doc building (less warnings)
* File moves from "merge" of termie's branch
* back out stacked merge
* Doc updates:   \* quieter build (fewer warnings)   \* move api reference out of root directory   \* auto glob api reference into a TOC   \* remove old dev entries for new-fangled auto-generated docs
* Normalization of Dev reference docs
* Switch to module-per-file for the module index
* Allow case-by-case overriding of autodocs
* add exec flags, apparently bzr shelve/unshelve does not keep track of them
* Build autodocs for all our libraries
* add dmz to flags and change a couple defaults
* Per-project vpns, certificates, and revocation
* remove finished todo
* Fix docstrings for wsigfied methods
* fix default twitter username
* shrink tweet text a bit
* Document nova.sh environment
* add twitter feed to the home page
* Community contact info
* small tweaks before context switch
* use include to grab todd's quickstart
* add in custom todo, and custom css
* Format TODO items for sphinx todo extension
* additions to home page
* Change order of secions so puppeting is last, add more initial setup tasks
* update types of services that may run on machines
* Change directory structure for great justice!
* Refactored smoketests to use novarc environment and to separate user and admin specific tests
* start adding info to multi-node admin guide
* document purpose of documentation
* Getting Started Guide
* Nova quickstart: move vish's novascript into contrib, and convert reademe.md to a quickstart.rst
* merge trunk
* Add a templating mechanism in the flag parsing.  Add a state\_path flag that will be used as the top-level dir for all other state (such as images, instances, buckets, networks, etc). This way you only need to change one flag to put all your state in e.g. /var/lib/nova
* add missing file
* Cleanup nova-manage section
* have "contents" look the same as other headings
* Enables the exclusive flag for DirectConsumer queues
* Ensures that keys for context from the queue are passed to the context constructor as strings.  This prevents hangs on older versions of python that can't handle unicode kwargs
* Fix for bug #640400, enables the exclusive flag on the temporary queues
* pep8 whitespace and line length fixes
* make sure context keys are not unicode so they can be passed as kwargs
* merged trunk
* merged source
* prettier theme
* Added an extra argument to the objectstore listen to separate out the listening host from the connecting host
* Change socket type in nova.utils.get\_my\_ip() to SOCK\_DGRAM. This way, we don't actually have to set up a connection. Also, change the destination host to an IP (chose one of Google's DNS's at random) rather than a hostname, so we avoid doing a DNS lookup
* Fix for bug#613264, allowing hosts to be specified for nova-api and objectstore listeners
* Fixes issue with security groups not being associated with instances
* Doc cleanups
* Fix flags help display
* Change socket type in nova.utils.get\_my\_ip() to SOCK\_DGRAM. This way, we don't actually have to set up a connection. Also, change the destination host to an IP (chose one of Google's DNS's at random) rather than a hostname, so we avoid doing a DNS lookup
* ISCSI Volume support
* merged
* more descriptive title for cloudpipe
* update of the architecture and fix some links
* Fixes after trunk merge
* removed some old instructions and updated concepts
* merge
* Documentation on Services, Managers, and Drivers
* Document final undocumented python modules
* merged trunk
* cloudpipe docs
* Fixed --help display for non-twisted bin/\* commands
* Adds support for multiple API ports, one for each API type (OS, EC2)
* Fixed tests to work with new default API argument
* Added support for OpenStack and EC2 APIs to run on different ports
* More docs
* Language change for conformity
* Add ec2 api docs
* Exceptions docs
* API endpoint documentation
* basics to get proxied ajaxterm working with virsh
* :noindex: on the fakes page for virt.fakes which is included in compute.rst
* Virt documentation
* Change retrieval of security groups from kwargs so they are associated properly and add test to verify
* don't check for vgroup in fake mode
* merged trunk, just in case
* Update compute/disk.py docs
* Change volume TODO list
* Volume documentation
* Remove fakes duplication
* Update database docs
* Add support for google analytics to only the hudson-produced docs
* Changes to conf.py
* Updated location of layout.html and change conf.py to use a build variable
* Update database page a bit
* Fakes cleanup (stop duplicate autodoc of FakeAOEDriver)
* Document Fakes
* Remove "nova Packages and Dependencies"
* Finished TODO item
* Pep-257
* Pep-257 cleanups
* Clean up todos and the like for docs
* A shell script for showing modules that aren't documented in .rst files
* merge trunkdoc
* link binaries section to concepts
* :func: links to python functions in the documentation
* Todo cleanups in docs
* cleanup todos
* fix title levels
* wip architecture, a few auth formatting fixes, binaries, and overview
* volume cleanups
* Remove objectstore, not referenced anywhere
* Clean up volumes / storage info
* Moves db writes into compute manager class. Cleans up sqlalchemy model/api to remove redundant calls for updating what is really a dict
* Another heading was too distracting, use <strong> instead
* Fix underlining -> heading in rst file
* Whitespace and docstring cleanups
* Remove outdated endpoint documentation
* Clean up indentation error by preformatting
* Add missing rst file
* clean up the compute documentation a bit
* Remove unused updated\_data variable
* Fix wiki link
* added nova-manage docs
* merged and fixed conflicts
* updates to auth, concepts, and network, fix of docstring
* cleanup rrd doc generation
* Doc skeleton from collaborative etherpad hack session
* OK, let's try this one more time
* Doc updates
* updates from review, fix models.get and note about exception raising
* Style cleanups and review from Eric
* New structure for documentation
* Fixes PEP8 violations from the last few merges
* More PEP8 fixes that were introduced in the last couple commits
* Adding Google Analytics code to nova.openstack.org
* Fixes service unit tests after tornado excision
* Added Google Analytics code
* renamed target\_id to iscsi\_target
* merged gundlach's excision
* Oops, didn't mean to check this one in.  Ninja-patch
* Delete BaseTestCase and with it the last reference to tornado
* fix completely broken ServiceTestCase
* Removes some cruft from sqlalchemy/models.py like unused imports and the unused str\_id method
* Adds rescue and unrescue commands
* actually remove the conditional
* fix tests by removing missed reference to prefix and unnecessary conditional in generate\_uid
* Making net injection create /etc/network if non-existant
* Documentation was missing; added
* Moving the openldap schema out of nova.sh into it's own files, and adding sun (opends/opendj/sun directory server/fedora ds) schema files
* validates device parameter for attach-volume
* add nova-debug to setup.py
* nova-debug, relaunch an instance with a serial console
* Remove the last vestigial bits of tornado code still in use
* pep8 cleanup
* print the exception on fail, because it doesn't seem to reraise it
* use libvirt connection for attaching disks and avoid the symlink
* update error message
* Exceptions in the OpenStack API will be converted to Faults as they should be, rather than barfing a stack trace to the user
* pep8
* pep8
* Duplicate the two trivial escaping functions remaining from tornado's code and remove the dependency
* more bugfixes, flag for local volumes
* fix bugs, describe volumes, detach on terminate
* ISCSI Volume support
* Removed unused imports and left over references to str\_id
* logging.warn not raise logging.Warn
* whitespace
* move create\_console to cloud.py from admin.py
* merge lp:nova
* add NotFound to fake.py and document it
* add in the xen rescue template
* pep 8 cleanup and typo in resize
* add methods to cloud for rescue and unrescue
* update tests
* merged trunk and fixed conflicts/changes
* part way through porting the codebase off of twisted
* Another pep8 cleanup branch for nova/tests, should be merged after lp:~eday/nova/pep8-fixes-other. After this, the pep8 violation count is 0!
* Changes block size for dd to a reasonable number
* Another pep8 cleanup branch for nova/api, should be merged after lp:~eday/nova/pep8-fixes

2010.1
------

* Created Authors file
* Actually adding Authors file
* Created Authors file and added to manifest for Austin Release
* speed up disk generation by increasing block size
* PEP8 cleanup in nova/tests, except for tests. There should be no functional changes here, just style changes to get violations down
* PEP8 cleanup in nova/\*, except for tests. There should be no functional changes here, just style changes to get violations down
* PEP8 cleanup in nova/db. There should be no functional changes here, just style changes to get violations down
* PEP8 cleanup in nova/api. There should be no functional changes here, just style changes to get violations down
* PEP8 and pylint cleanup. There should be no functional changes here, just style changes to get violations down
* Moves db writes into compute manager class. Cleans up sqlalchemy model/api to remove redundant calls for updating what is really a dict
* validate device in AttachDisk
* Cleanup of doc for dependencies (redis optional, remove tornado, etc). Please check for accuracy
* Delays the creation of the looping calls that that check the queue until startService is called
* Made updates based on review comments
* Authorize image access instead of just blindly giving it away
* Checks the pid of dnsmasq to make sure it is actually referring to the right process
* change boto version from 1.9b1 to 1.9b in pip-requires
* Check the pid to make sure it refers to the correct dnsmasq process
* make sure looping calls are created after service starts and add some tests to verify service delegation works
* fix typo in boto line of pip-requires
* Updated documentation
* Update version set in setup.py to 2010.1 in preparation for Austin release
* Also update version in docs
* Update version to 2010.1 in preparation for Austin release
* \* Fills out the Parallax/Glance API calls for update/create/delete and adds unit tests for them. \* Modifies the ImageController and GlanceImageService/LocalImageService calls to use index and detail routes to comply perfectly with the RS/OpenStack API
* Makes disk.partition resize root drive to 10G, unless it is m1.tiny which just leaves it as is.  Larger images are just used as is
* reverted python-boto version in pip-requires to 1.9b1
* Construct exception instead of raising a class
* Authorize Image before download
* Add unit test for XML requests converting errors to Faults
* Fixes https://bugs.launchpad.net/nova/+bug/663551 by catching exceptions at the top level of the API and turning them into Faults
* Adds reasonable default local storage gb to instance sizes
* reverted python-boto version in pip-requires to 1.9b1.\
* Fix typo in test case
* Remember to call limited() on detail() in image controller
* Makes nova-dhcpbridge notify nova-network on old network lease updates
* add reasonable gb to instance types
* it is flags.DEFINE\_integer, not FLAGS.define\_int
* Makes disk.partition resize root drive to 10G, unless it is m1.tiny which just leaves it as is.  Larger images are just used as is
* update leases on old leases as well
* Adds a simple nova-manage command called scrub to deallocate the network and remove security groups for a projeect
* Refresh MANIFEST.in to make the tarball include all the stuff that belongs in the tarball
* Added test case to reproduce bug #660668 and provided a fix by using the user\_id from the auth layer instead of the username header
* Add the last few things to MANIFEST.in
* Also add Xen template to manifest
* Fix two problems with get\_console\_log:  \* libvirt has this annoying "feature" where it chown()s your console to the uid running libvirt. That gets in the way of reading it. Add a call to "sudo chown ...." right before we read it to make sure it works out well.  \* We were looking in the wrong directory for console.log. \*blush\*
* This branch converts incoming data to the api into the proper type
* Fixes deprecated use of context in nova-manage network create
* Add a bunch of stuff to MANIFEST.in that has been added to the tree over the last couple of months
* Fix the --help flag for printing help on twistd-based services
* Fix two problems with get\_console\_log: libvirt has this annoying "feature" where it chown()s your console to the uid running libvirt. That gets in the way of reading it. We were looking in the wrong directory for console.log. \*blush\*
* Fix for bug 660818 by adding the resource ID argument
* Reorg the image services code to push glance stuff into its own directory
* Fix some unit tests:  \* One is a race due to the polling nature of rpc in eventlet based unit tests.  \* The other is a more real problem. It was caused by datastore.py being removed. It wasn't caught earlier because the .pyc file was still around on the tarmac box
* Add a greenthread.sleep(0.3) in get\_console\_output unit test. This is needed because, for eventlet based unit tests, rpc polls, and there's a bit of a race. We need to fix this properly later on
* Perform a redisectomy on bin/nova-dhcpbridge
* Removed 'and True' oddity
* use context for create\_networks
* Make Redis completely optional:
* make --help work for twistd-based services
* trivial style change
* prevent leakage of FLAGS changes across tests
* run\_tests.sh presents a prompt:
* Also accept 'y'
* A few more fixes for deprecations
* make run\_tests.sh's default perform as expected
* Added test case to reproduce bug #660668 and provided a fix by using the user\_id from the auth layer instead of the username header
* get flags for nova-manage and fix a couple more deprecations
* Fix for bug#660818, allows tests to pass since delete expects a resource ID
* This branch modifies the fixes all of the deprecation warnings about empty context.  It does this by adding the following fixes/features   \* promotes api/context.py to context.py because it is used by the whole system   \* adds more information to the context object   \* passes the context through rpc   \* adds a helper method for promoting to admin context (elevate())   \* modifies most checks to use context.project\_id instead of context.project.id to avoid     trips to the database
* timestamps are passed as unicode
* Removed stray spaces that were causing an unnecessary diff line
* merged trunk
* Minimized diff, fixed formatting
* remove nonexistent exception
* Merged with trunk, fixed broken stuff
* revert to generic exceptions
* fix indent
* Fixes LP Bug#660095
* Move Redis code into fakeldap, since it's the only thing that still uses it. Adjust auth unittests to skip fakeldap tests if Redis isn't around. Adjust auth unittests to actually run the fakeldap tests if Redis /is/ around
* fix nosetests
* Fixes a few concurrency issues with creating volumes and instances. Most importantly it adds retries to a number of the volume shell commands and it adds a unique constraint on export\_devices and a safe create so that there aren't multiple copies of export devices in the database
* unit tests and fix
* call stuff project\_id instead of project
* review fixes
* fix context in bin files
* add scrub command to clean up networks and sec groups
* merged trunk
* merged concurrency
* review comments
* Added a unit test but not integrated it
* merged trunk
* fix remaining tests
* cleaned up most of the issues
* remove accidental paste
* use context.project\_id because it is more efficient
* elevate in proper places, fix a couple of typos
* merged trunk
* Fixes bug 660115
* Address cerberus's comment
* Fix several problems keeping AuthMiddleware from functioning in the OpenStack API
* Implement the REST calls for create/update/delete in Glance
* Adds unit test for WSGI image controller for OpenStack API using Glance Service
* Fixes LP Bug#660095
* Xen support
* Adds flat networking + dhcpserver mode
* This patch removes the ugly network\_index that is used by VlanManager and turns network itself into a pool.  It adds support for creating the networks through an api command:     nova-manage network create # creates all of the networks defined by flags or     nova-manage network create 5 # create the first five networks
* Newlines again, reorder imports
* Remove extraneous newlines
* Fix typo, fix import
* merged upstream
* cleanup leftover addresses
* super teardown
* fix tests
* merged trunk
* merged trunk
* merged trunk
* merged trunk
* Revert the conversion to 64-bit ints stored in a PickleType column, because PickleType is incompatible with having a unique constraint
* Revert 64 bit storage and use 32 bit again.  I didn't notice that we verify that randomly created uids don't already exist in the DB, so the chance of collision isn't really an issue until we get to tens of thousands of machines.  Even then we should only expect a few retries before finding a free ID
* Add design doc, docstrings, document hyper-v wmi, python wmi usage. Adhere to pep-8 more closely
* This patch adds support for EC2 security groups using libvirt's nwfilter mechanism, which in turn uses iptables and ebtables on the individual compute nodes. This has a number of benefits:  \* Inter-VM network traffic can take the fastest route through the network without our having to worry about getting it through a central firewall.  \* Not relying on a central firewall also removes a potential SPOF.  \* The filtering load is distributed, offering great scalability
* Change internal\_id from a 32 bit int to a 64 bit int
* 32 bit internal\_ids become 64 bit.  Since there is no 64 bit native type in SqlAlchemy, we use PickleType which uses the Binary SqlAlchemy type under the hood
* Make Instance.name a string again instead of an integer
* Now that the ec2 id is not the same as the name of the instance, don't compare internal\_id [nee ec2\_id] to instance names provided by the virtualization driver.  Compare names directly instead
* Fix bug 659330
* Catch exception.NotFound when getting project VPN data
* Improve the virt unit tests
* Remove spurious project\_id addition to KeyPair model
* APIRequestContext.admin is no more.
* Rename ec2\_id\_list back to instance\_id to conform to EC2 argument spec
* Fix bug 657001 (rename all Rackspace references to OpenStack references)
* Extracts the kernel and ramdisk id from manifests and puts in into images' metadata
* Fix EC2 GetConsoleOutput method and add unit tests for it
* Rename rsapi to osapi, and make the default subdomain for OpenStack API calls be 'api' instead of 'rs'
* Fix bug 658444
* Adds --force option to run\_tests.sh to clear virtualenv. Useful when dependencies change
* If machine manifest includes a kernel and/or ramdisk id, include it in the image's metadata
* Rename ec2 get\_console\_output's instance ID argument to 'instance\_id'. It's passed as a kwarg, based on key in the http query, so it must be named this way
* if using local copy (use\_s3=false) we need to know where to find the image
* curl not available on Windows for s3 download. also os-agnostic local copy
* Register the Hyper-V module into the list of virt modules
* hyper-v driver created
* Twisted pidfile and other flag parameters simply do not function on Windows
* Renames every instance of "rackspace" in the API and test code base. Also includes a minor patch for the API Servers controller to use images correctly in the absence of Glance
* That's what I get for not using a good vimrc
* Mass renaming
* Start stripping out the translators
* Remove redis dependency from RS Images API
* Remove redis dependency from Images controller
* Since FLAGS.images\_path was not set for nova-compute, I could not launch instances due to an exception at \_fetch\_local\_image() trying to access to it. I think that this is the reason of Bug655217
* Imported images\_path from nova.objectstore for nova-compute. Without its setting, it fails to launch instances by exception at \_fetch\_local\_image
* Defined images\_path for nova-compute. Without its setting, it fails to launch instances by exception at \_fetch\_local\_image
* Cleans up a broken servers unit test
* Huge sweeping changes
* Adds stubs and tests for GlanceImageService and LocalImageService. Adds basic plumbing for ParallaxClient and TellerClient and hooks that into the GlanceImageService
* Typo
* Missed an ec2\_id conversion to internal\_id
* Cleanup around the rackspace API for the ec2 to internal\_id transition
* merge prop fixes
* A little more clean up
* Replace model.Instance.ec2\_id with an integer internal\_id so that both APIs can represent the ID to external users
* Fix clause comparing id to internal\_id
* Adds unit test for calling show() on a non-existing image. Changes return from real Parallax service per sirp's recommendation for actual returned dict() values
* Remove debugging code, and move import to the top
* Make (some) cloud unit tests run without a full-blown set up
* Stub out ec2.images.list() for unit tests
* Make rpc calls work in unit tests by adding extra declare\_consumer and consume methods on the FakeRabbit backend
* Add a connect\_to\_eventlet method
* Un-twistedify get\_console\_ouptut
* Create and destroy user appropriately. Remove security group related tests (since they haven't been merged yet)
* Run the virt tests by default
* Keep handles to loggers open after daemonizing
* merged trunk and fixed tests
* Cleans up the unit tests that are meant to be run with nosetests
* Update Parallax default port number to match Glance
* One last bad line
* merge from gundlach ec2 conversion
* Adds ParallaxClient and TellerClient plumbing for GlanceImageService.  Adds stubs FakeParallaxClient and unit tests for LocalImageService and GlanceImageService
* Fix broken unit tests
* Matches changes in the database / model layer with corresponding fixes to nova.virt.xenapi
* Replace the embarrasingly crude string based tests for to\_xml with some more sensible ElementTree based stuff
* A shiny, new Auth driver backed by SQLAlchemy. Read it and weep. I did
* Move manager\_class instantiation and db.service\_\* calls out of nova.service.Service.\_\_init\_\_ into a new  nova.service.Service.startService method which gets called by twisted. This delays opening db connections (and thus sqlite file creation) until after privileges have been shed by twisted
* Add pylint thingamajig for startService (name defined by Twisted)
* Revert r312
* Add a context of None to the call to db.instance\_get\_all
* Honour the --verbose flag by setting the logging level to DEBUG
* Accidentally renamed volume related stuff
* More clean up and conflict resolution
* Move manager\_class instantiation and db.service\_\* calls out of nova.service.Service.\_\_init\_\_ into a new  nova.service.Service.startService method which gets called by twisted. This delays opening db connections (and thus sqlite file creation) until after privileges have been shed by twisted
* Bug #653560: AttributeError in VlanManager.periodic\_tasks
* Bug #653534: NameError on session\_get in sqlalchemy.api.service\_update
* Fixes to address the following issues:
* s/APIRequestContext/get\_admin\_context/ <-- sudo for request contexts
* Bug #654034: nova-manage doesn't honour --verbose flag
* Bug #654025: nova-manage project zip and nova-manage vpn list broken by change in DB semantics when networks are missing
* Bug #654023: nova-manage vpn commands broken, resulting in erroneous "Wrong number of arguments supplied" message
* fix typo in setup\_compute\_network
* pack and unpack context
* add missing to\_dict
* Bug #653651: XenAPI support completely broken by orm-refactor merge
* Bug #653560: AttributeError in VlanManager.periodic\_tasks
* Bug #653534: NameError on session\_get in sqlalchemy.api.service\_update
* Adjust db api usage according to recent refactoring
* Make \_dhcp\_file ensure the existence of the directory containing the files it returns
* Keep handles to loggers open after daemonizing
* Adds BaseImageService and flag to control image service loading.  Adds unit test for local image service
* Cleans up the unit tests that are meant to be run with nosetests
* Refactor sqlalchemy api to perform contextual authorization
* automatically convert strings passed into the api into their respective original values
* Fix the deprecation warnings for passing no context
* Address a few comments from Todd
* Merged trunk
* Locked down fixed ips and improved network tests
* merged remove-network-index
* Fixed flat network manager with network index gone
* merged trunk
* show project ids for groups instead of user ids
* create a new manager for flat networking including dhcp
* First attempt at a uuid generator -- but we've lost a 'topic' input so i don't know what that did
* Find other places in the code that used ec2\_id or get\_instance\_by\_ec2\_id and use internal\_id as appropriate
* Convert EC2 cloud.py from assuming that EC2 IDs are stored directly in the database, to assuming that EC2 IDs should be converted to internal IDs
* Method cleanup and fixing the servers tests
* merged trunk, removed extra quotas
* Adds support for periodic\_tasks on manager that are regularly called by the service and recovers fixed\_ips that didn't get disassociated properly
* Replace database instance 'ec2\_id' with 'internal\_id' throughout the nova.db package. internal\_id is now an integer -- we need to figure out how to make this a bigint or something
* merged trunk
* refactoring
* refactoring
* Includes changes for creating instances via the Rackspace API. Utilizes much of the existing EC2 functionality to power the Rackspace side of things, at least for now
* Get rid of mention of mongo, since we are using openstack/swift
* Mongo bad, swift good
* Add a DB backend for auth manager
*   Bug #652103: NameError in exception handler in sqlalchemy API layer
* Bug #652103: NameError in exception handler in sqlalchemy API layer
* Bug #651887: xenapi list\_instances completely broken
* Grabbed the wrong copyright info
* Cleaned up db/api.py
* Refactored APIRequestContext
* Bug #651887: xenapi list\_instances completely broken
* Simplified authorization with decorators" "
* Removed deprecated bits from NovaBase
* Wired up context auth for keypairs
* Completed quota context auth
* Finished context auth for network
* Finished instance context auth
* Finished instance context auth
* Made network tests pass again
* Whoops, forgot the exception handling bit
* Missed a few attributes while mirroring the ec2 instance spin up
* pylint and pep8 cleanup
* Forgot the context module
* Some minor cleanup
* Servers stuff
* merge rsapi\_reboot from gundlach
* Wired up context auth for services
* Server creation up to, but not including, network configuration
* Progress on volumes Fixed foreign keys to respect deleted flag
* Support reboot in api.rackspace by extracting reboot function from api.ec2 into api.cloud
* Make Fault raiseable, and add a test to verify that
* Make Fault raiseable by inheriting from webob.exc.HTTPException
* Related: https://code.launchpad.net/~anso/nova/authupdate/+merge/36925
* Remove debuggish print statement
* Make update work correctly
* Server update name and password
* Support the pagination interface in RS API -- the &offset and &limit parameters are now recognized
* Update from trunk to handle one-line merge conflict
* Support fault notation in error messages in the RS API
* Limit entity lists by &offset and &limit
* After update from trunk, a few more exceptions that need to be converted to Faults
* fix ordering of rules to actually allow out and drop in
* fix the primary and secondary join
* autocreate the models and use security\_groups
* Began wiring up context authorization
* Apply patch from Vish to fix a hardcoded id in the unit tests
* removed a few extra items
* merged with soren's branch
* fix loading to ignore deleted items
* Add user-editable name & notes/description to volumes, instances, and images
* merged trunk
* patch for test
* fix join and misnamed method
* fix eagerload to be joins that filter by deleted == False
* \* Create an AuthManager#update\_user method to change keys and admin status. \* Refactor the auth\_unittest to not care about test order \* Expose the update\_user method via nova-manage
* Updates the fix-iptables branch with a number of bugfixes
* Fixes reversed arguments in nova-manage project environment
* Makes sure that multiple copies of nova-network don't create multiple copies of the same NetworkIndex
* Fix a few errors in api calls related to mistyped database methods for floating\_ips: specifically describe addresses and and associate address
* Merged Termie's branch that starts tornado removal and fixed rpc test cases for twisted. Nothing is testing the Eventlet version of rpc.call though yet
* Adds bpython support to nova-manage shell, because it is super sexy
* Adds a disabled flag to service model and check for it when scheduling instances and volumes
* Adds bpython support to nova-manage shell, because it is super sexy
* Added random ec2 style id's for volumes and instances
* fix security group revoke
* Fixed tests
* Removed str\_id from FixedIp references
* missed a comma
* improved commenting
* Fault support
* fix flag defaults
* typo s/boo/bool
* merged and removed duplicated methods
* fixed merge conflicts
* removed extra code that slipped in from a test branch
* Fixed name property on instance model
* Implementation of the Rackspace servers API controller
* Added checks for uniqueness for ec2 id
* fix test for editable image
* Add authorization info for cloud endpoints
* Remove TODO, since apparently newer boto doesn't die on extra fields
* add disabled column to services and check for it in scheduler
* Hook the AuthManger#modify\_user method into nova-manage commands
* Refactored adminclient to support multiple regions
* merged network-lease-fix
* merged floating-ips
* move default group creation to api
* Implemented random instance and volume strings for ec2 api
* Adds --force option to run\_tests.sh to clear virtualenv. Useful when dependencies change
* merge from trunk
* Instance & Image renaming fixes
* merge from gundlach
* Testing testing testing
* get rid of network indexes and make networks into a pool
* Add Serializer.deserialize(xml\_or\_json\_string)
* merged trunk
* return a value if possible from export\_device\_create\_safe
* merged floating-ip-by-project
* merged network-lease-fix
* merged trunk
* Stop trying to install nova-api-new (it's gone). Install nova-scheduler
* Call out to 'sudo kill' instead of using os.kill. dnsmasq runs as root or nobody, nova may or may not be running as root, so os.kill won't work
* Make sure we also start dnsmasq on startup if we're managing networks
* Improve unit tests for network filtering. It now tracks recursive filter dependencies, so even if we change the filter layering, it still correctly checks for the presence of the arp, mac, and ip spoofing filters
* Make sure arguments to string format are in the correct order
* Make the incoming blocking rules take precedence over the output accept rules
* db api call to get instances by user and user checking in each of the server actions
* More cleanup, backup\_schedules controller, server details and the beginnings of the servers action route
* This is getting ridiculous
* Power state mapping
* Set priority of security group rules to 300 to make sure they override the defaults
* Recreate ensure\_security\_group\_filter. Needed for refresh
* Clean up nwfilter code. Move our filters into the ipv4 chain
* If neither a security group nor a cidr has been passed, assume cidr=0.0.0.0/0
* More re-work around the ORM changes and testing
* Support content type detection in serializer
* If an instance never got scheduled for whatever reason, its host will turn up as None. Filter those out to make sure refresh works
* Only call \_on\_set\_network\_host on nova-network hosts
* Allow DHCP requests through, pass the IP of the gateway as the dhcp server
* Add a flag the specifies where to find nova-dhcpbridge
* Ensure dnsmasq can read updates to dnsmasq conffile
* Set up network at manager instantiation time to ensure we're ready to handle the networks we're already supposed to handle
* Add db api methods for retrieving the networks for which a host is the designated network host
* Apply IP configuration to bridge regardless of whether it existed before. The fixes a race condition on hosts running both compute and network where, if compute got there first, it would set up the bridge, but not do IP configuration (because that's meant to happen on the network host), and when network came around, it would see the interface already there and not configure it further
* Removed extra logging from debugging
* reorganize iptables clear and make sure use\_nova\_chains is a boolean
* allow in and out for network and compute hosts
* Modification of test stubbing to match new domain requirements for the router, and removal of the unnecessary rackspace base controller
* Minor changes to be committed so trunk can be merged in
* disable output drop for the moment because it is too restrictive
* add forwarding ACCEPT for outgoing packets on compute host
* fix a few missed calls to \_confirm\_rule and 80 char issues
* allow mgmt ip access to api
* flush the nova chains
* Test the AuthManager interface explicitly, in case the user/project wrappers fail or change at some point.  Those interfaces should be tested on their own
* Update auth manager to have a update\_user method and better tests
* add a reset command
* Merged Termie's branch and fixed rpc test cases for tesited. Nothing is testing the Eventlet version of rpc.call though yet
* improved the shell script for iptables
* Finished making admin client work for multi-region
* Install nova-scheduler
* nova-api-new is no more. Don't attempt to install it
* Add multi region support for adminclient
* Merging in changes from rs\_auth, since I needed something modern to develop on while waiting for Hudson to right itself
* whatever
* Put EC2 API -> eventlet back into trunk, fixing the bits that I missed when I put it into trunk on 9/21
* Apply vish's patch
* Applied vish's fixes
* Implementation of Rackspace token based authentication for the Openstack API
* fixed a few missing params from iptables rules
* removed extra line in manage
* made use of nova\_ chains a flag and fixed a few typos
* put setup\_iptables in the right dir
* Fixed rpc consumer to use unique return connection to prevent overlap. This could be reworked to share a connection, but it should be a wait operation and not a fast poll like it was before. We could also keep a cache of opened connections to be used between requests
* fixed a couple of typos
*  Re-added the ramdisk line I accidentally removed
* Added a primary\_key to AuthToken, fixed some unbound variables, and now all unit tests pass
* Missed the model include, and fixed a broken test after the merge
* Some more refactoring and another unit test
*  Refactored the auth branch based on review feedback
* Replaced the existing Rackspace Auth Mechanism with one that mirrors the implementation in the design document
* Merged gundlach's branch
* renamed ipchains to iptables
* merged trunk
* Fixed cloudpipe lib init
* merged fix-iptables
* When calculating timedeltas make sure both timestamps are in UTC. For people ahead of UTC, it makes the scheduler unit tests pass. For people behind UTC, it makes their services time out after 60 seconds without a heart beat rather than X hours and 60 seconds without a heart beat (where X is the number of hours they're behind UTC)
* Spot-fix endpoint reference
* Wrap WSGI container in server.serve to make it properly handle command line arguments as well as daemonise properly. Moved api and wsgi imports in the main() function to delay their inclusion until after python-daemon has closed all the file descriptors. Without this, eventlet's epoll fd gets opened before daemonize is called and thus its fd gets closed leading to very, very, very confusing errors
* Apply vish's patch
* Added FLAGS.FAKE\_subdomain letting you manually set the subdomain for testing on localhost
* Address Vishy's comments
* All timestamps should be in UTC. Without this patch, the scheduler unit tests fail for anyone sufficiently East of Greenwich
* Compare project\_id to '' using == (equality) rather than 'is' (identity). This is needed because '' isn't the same as u''
* Various loose ends for endpoint and tornado removal cleanup, including cloudpipe API addition, rpc.call() cleanup by removing tornado ioloop, and fixing bin/\* programs. Tornado still exists as part of some test cases and those should be reworked to not require it
* Re-add root and metadata request handlers to EC2 API
* Re-added the ramdisk line I accidentally removed
* Soren's patch to fix part of ec2
* Add user display fields to instances & volumes
* Responding to eday's feedback -- make a clearer inner wsgi app
* Added a primary\_key to AuthToken, fixed some unbound variables, and now all unit tests pass
* merge from trunk
* typo in instance\_get
* typo in instance\_get
* User updatable name & description for images
* merged trunk and fixed errors
* cleaned up exception handling for fixed\_ip\_get
* Added server index and detail differentiation
* merged trunk
* typo s/an/a
* Reenable access\_unittest now that it works with new rbac
* Rewrite rbac tests to use Authorizer middleware
* Missed the model include, and fixed a broke test after the merge
* Delete nova.endpoint module, which used Tornado to serve up the Amazon EC2 API. Replace it with nova.api.ec2 module, which serves up the same API via a WSGI app in Eventlet. Convert relevant unit tests from Twisted to eventlet
* Remove eventlet test, now that eventlet 0.9.10 has indeed been replaced by 0.9.12 per mtaylor
* In desperation, I'm raising eventlet.\_\_version\_\_ so I can see why the trunk tests are failing
* merged trunk
* bpython is amazing
* Fix quota unittest and don't run rbac unit tests for the moment
* merged trunk
* Some more refactoring and another unit test
* Implements quotas with overrides for instances, volumes, and floating ips
* Renamed cc\_ip flag to cc\_host
* Moves keypairs out of ldap and into the common datastore
* Fixes server error on get metadata when instances are started without keypairs
* allows api servers to have a list of regions, allowing multi-cluster support if you have a shared image store and user database
* Don't use something the shell will escape as a separator.  | is now =
* Added modify project command to auth manager to allow changing of project manager and description
* merged trunk
* merged trunk
* Refactored the auth branch based on review feedback
* Whitespace fixes
* Support querying version list, per the RS API spec.  Fixes bug 613117
* Undo run\_tests.py modification in the hopes of making this merge
* Add a RateLimitingMiddleware to the Rackspace API, implementing the rate limits as defined by the current Cloud Servers spec.  The Middleware can do rate counting in memory, or (for deployments that have more than one API Server) can offload to a rate limiting service
* Use assertRaises
* A small fix to the install\_venv program to allow us to run it on the tarmac box as part of the tarmac build
* Removes second copy of ProcessExecutionError that creeped in during a bad merge
* Adds an omitted yield in compute manager detach\_volume
* Move the code that extracts the console output into the virt drivers. Move the code that formats it up into the API layer. Add support for Xen console
* Add Xen template and use it by default if libvirt\_type=xen
* added rescue mode support and made reboot work from any state
* Adds timing fields to instances and volumes to track launch times and schedule times
* Fixes two errors in cloud.py in the nova\_orm branch: a) self.network is actually called network\_manager b) the logic for describe-instances check on is\_admin was reversed
* Adds timing fields to instances and volumes to track launch times and schedule times
* updated docstring
* add in a few comments
* s/\t/    /g, and add some comments
* add in support for ajaxterm console access
* add security and session timeout to ajaxterm
* initial commit of ajaxterm
* Replaced the existing Rackspace Auth Mechanism with one that mirrors the implementation in the design document
* Whitespace fixes
* Added missing masquerade rules
* Fix things not quite merged perfectly -- all tests now pass
* Better error message on the failure of a spawned process, and it's a ProcessExecutionException irrespective of how the process is run (twisted or not)
* Added iptables host initial configuration
* Added iptables host initial configuration
* Proposing merge to get feedback on orm refactoring.  I am very interested in feedback to all of these changes
* Support querying version list
* Add support for middleware proxying to a ratelimiting.WSGIApp, for deployments that use more than one API Server and thus can't store ratelimiting counters in memory
* Test the WSGIApp
* RateLimitingMiddleware tests
* Address a couple of the TODO's: We now have half-decent input validation for AuthorizeSecurityGroupIngress and RevokeDitto
* Clean up use of ORM to remove the need for scoped\_session
* Roll back my slightly over-zealous clean up work
* More ORM object cleanup
* Clean up use of objects coming out of the ORM
* RateLimitingMiddleware
* Add ratelimiting package into Nova.  After Austin it'll be pulled out into PyPI
* When destroying a VM using the XenAPI backend, if the VM is still running (the usual case) the destroy fails. It needs to be powered-off first
* Leave out the network setting from the interfaces template. It does not get passed anymore
* Network model has network\_str attribute
* Cast process input to a str. It must not be unicode, but stuff that comes out of the database might very well be unicode, so using such a value in a template makes the whole thing unicode
* Make refresh\_security\_groups play well with inlineCallbacks
* Fix up rule generation. It turns out nwfilter gets very, very wonky indeed if you mix <ip> rules and <tcp> rules. Setting a TCP rule adds an early rule to ebtables that ends up overriding the <ip> rules which are last in that table
* Add a bunch of TODO's to the API implementation
* Multiple security group support
* Remove power state constants that have ended up duplicated following a bad merge. They were moved from nova.compute.node.Instance into nova.compute.power\_state at the same time that Instance was moved into nova.compute.service. We've ended up with these constants in both places
* now we can run files - thanks vish
* Move vol.destroy() call out of the \_check method in test\_multiple\_volume\_race\_condition test and into a callback of the DeferredList. This should fix the intermittent failure of that test. I /think/ test\_too\_many\_volumes's failure was caused by test\_multiple\_volume\_race\_condition failure, since I have not been able to reproduce its failure after fixing this one
* Adds 'shell run' to nova manage, which spawns a shell with flags properly imported
* Finish pulling S3ImageService out of this mergeprop
* Pull S3ImageService out of this mergeprop
* Correctly pass ip\_address to templates
* Fix call to listNWFilters
* (Untested) Make changes to security group rules propagate to the relevant compute nodes
* Filters all get defined when running an instance
* added missing yield in detach\_volume
* multiple network controllers will not create duplicate indexes
* renamed \_get\_quota to get\_quota and moved int(size) into quota.py
* add a shell to nova-manage, which respects flags (taken from django)
* Move vol.destroy() call out of the \_check method in test\_multiple\_volume\_race\_condition test and into a callback of the DeferredList. This should fix the intermittent failure of that test. I /think/ test\_too\_many\_volumes's failure was caused by test\_multiple\_volume\_race\_condition failure, since I have not been able to reproduce its failure after fixing this one
* removed second copy of ProcessExecutionError
* move the warnings about leasing ips
* simplified query
* missed a space
* set leased = 0 as well on disassociate update
* speed up the query and make sure allocated is false
* workaround for mysql select in update
* Periodic callback for services and managers.  Added code to automatically disassociate stale ip addresses
* fixed typo
* flag for retries on volume commands
* auto all and start all exceptions should be ignored
* generalized retry into try\_execute
* more error handling in volume driver code
* handle exceptions thrown by vblade stop and vblade destroy
* merged trunk
* deleting is set by cloud
* re added missing volume update
* Integrity error is in a different exc file
* allow multiple volumes to run ensure\_blades without creating duplicates
* fixed name for unique constraint
* export devices unique
* merged instance time and added better concurrency
* make fixed\_ip\_get\_by\_address return the instance as well so we don't run into concurrency issues where it is disassociated in between
* disassociate floating is supposed to take floating\_address
* speed up generation of dhcp\_hosts and don't run into None errors if instance is deleted
* don't allocate the same floating ip multiple times
* don't allow deletion or attachment of volume unless it is available
* fixed reference to misnamed method
* manage command for project quotas
* merged trunk
* implement floating\_ip\_get\_all\_by\_project and renamed db methods that get more then one to get\_all\_by instead of get\_by
* fixed reversed args in nova-manage project environment
* merged scheduler
* fix instance time
* move volume to the scheduler
* tests for volumes work
* update query and test
* merged quotas
* use gigabytes and cores
* use a string version of key name when constructing mpi dict because None doesn't work well in lookup
* db not self.db
* Security Group API layer cleanup
* merged trunk
* added terminated\_at to volume and moved setting of terminated\_at into cloud
* remerged scheduler
* merged trunk
* merged trunk
* merged trunk
* merged trunk
* fixed reversed admin logic on describe instances
* fixed typo network => network\_manager in cloud.py
* fixed old key reference and made keypair name constistent -> key\_pair
* typo fixes, add flag to nova-dhcpbridge
* fixed tests, added a flag for updating dhcp on disassociate
* simplified network instance association
* fix network association issue
* merged trunk
* improved network error case handling for fixed ips
* it is called regionEndpoint, and use pipe as a separator
* move keypair generation out of auth and fix tests
* Fixed manager\_user reference in create\_project
* Finished security group / project refactor
* delete keypairs when a user is deleted
* remove keypair from driver
* moved keypairs to db using the same interface
* multi-region flag for describe regions
* make api error messages more readable
* Refactored to security group api to support projects
* set dnsName on describe
* merged orm and put instance in scheduling state
* just warn if an ip was already deallocated
* fix mpi 500 on fixed ip
* hostname should be string id
* dhcpbridge needed host instead of node name
* add a simple iterator to NovaBase to support converting into dictionary
* Adjust a few things to make the unit tests happy again
* First pass of nwfilter based security group implementation. It is not where it is supposed to be and it does not actually do anything yet
* couple more errors in metadata
* typo in metadata call
* fixed messed up call in metadata
* added modify project command to allow project manager and description to be updated
* Change "exn" to "exc" to fit with the common style
* Create and delete security groups works. Adding and revoking rules works. DescribeSecurityGroups returns the groups and rules. So, the API seems to be done. Yay
* merged describe\_speed
* merged scheduler
* set host when item is scheduled
* remove print statements
* removed extra quotes around instance\_type
* don't pass topic into schedule\_run\_instance
* added scheduled\_at to instances and volumes
* quotas working and tests passing
* address test almost works
* quota tests
* merged orm
* fix unittest
* merged orm
* fix rare condition where describe is called before instance has an ip
* merged orm
* make the db creates return refs instead of ids
* add missing files for quota
* kwargs don't work if you prepend an underscore
* merged orm, added database methods for getting volume and ip data for projects
* database support for quotas
* Correct style issues brought up in termie's review
* mocking out quotas
* don't need to pass instance\_id to network on associate
* floating\_address is the name for the cast
* merged support code from orm branch
* faster describe\_addresses
* added floating ip commands and launched\_at terminated\_at, deleted\_at for objects
* merged orm
* solution that works with this version
* fix describe addresses
* remove extraneous get\_host calls that were requiring an extra db trip
* pass volume['id'] instead of string id to delete volume
* fix volume delete issue and volume hostname display
* fix logging for scheduler to properly display method name
* fixed logic in set\_state code to stop endless loops
* Authorize and Revoke access now works
* list command for floating ips
* merged describe speed
* merged orm
* floating ip commands
* removed extraneous rollback
* speed up describe by loading fixed and floating ips
* AuthorizeSecurityGroupIngress now works
* switch to using utcnow
* Alright, first hole poked all the way through. We can now create security groups and read them back
* don't fail in db if context isn't a dict, since we're still using a class based context in the api
* logging for backend is now info instead of error
* merged orm
* merged orm
* set state everywhere
* put soren's fancy path code in scheduler bin as well
* missing deleted ref
* merged orm
* merged orm
* consistent naming for instance\_set\_state
* Tests turn things into inlineCallbacks
* Missed an instance of attach\_to\_tornado
* Remove tornado-related code from almost everything
* It's annoying and confusing to have to set PYTHONPATH to point to your development tree before you run any of the scripts
* deleted typo
* merged orm
* merged orm
* fixed missing paren
* merge orm
* make timestamps for instances and volumes, includes additions to get deleted objects from db using deleted flag
* merged orm
* remove end of line slashes from models.py
* Make the scripts in bin/ detect if they're being run from a bzr checkout or an extracted release tarball or whatever and adjust PYTHONPATH accordingly
* merged orm
* merged orm branch
* set state moved to db layer
* updated to the new orm code
* changed a few unused context to \_context
* a few formatting fixes and moved exception
* fixed a few bugs in volume handling
* merged trunk
* Last of cleanup, including removing fake\_storage flage
* more fixes from code review
* review db code cleanup
* review cleanup for compute manager
* first pass at cleanup rackspace/servers.py
* dhcpbridge fixes from review
* more fixes to session handling
* few typos in updates
* don't log all sql statements
* one more whitespace fix
* whitespace fixes
* fix for getting reference on service update
* clean up of session handling
* New version of eventlet handles Twisted & eventlet running at the same time
* fix docstrings and formatting
* Oops, APIRequestContext's signature has changed
* merged orm
* fix floating\_ip to follow standard create pattern
* Add stubbed out handler for AuthorizeSecurityGroupIngress EC2 API call
* merged orm\_deux
* Merged trunk
* Add a clean-traffic filterref to the libvirt templates to prevent spoofing and snooping attacks from the guests
* Lots of fixes to make the nova commands work properly and make datamodel work with mysql properly
* Bug #630640: Duplicated power state constants
* Bug #630636: XenAPI VM destroy fails when the VM is still running
* removed extra equals
* Just a couple of UML-only fixes:  \* Due to an issue with libvirt, we need to chown the disk image to root.  \* Just point UML's console directly at a file, and don't bother with the pty. It was only used for debugging
* removed extra file and updated sql note
* merged fixed format instances from orm
* fixed up format\_instances
* merged server.py change from orm branch
* reverting accidental search/replace change to server.py
* merged orm
* removed model from nova-manage
* merged orm branch
* removed references to compute.model
* send ultimate topic in to scheduler
* more scheduler tests
* test for too many instances work
* merged trunk
* fix service unit tests
* removed dangling files
* merged orm branch
* merged trunk and cleaned up test
* renamed daemon to service and update db on create and destroy
* pass all extra args from service to manager
* fix test to specify host
* inject host into manager
* Servers API remodeling and serialization handling
* Move nova.endpoint.images to api.ec2 and delete nova.endpoint
* Cloud tests pass
* OMG got api\_unittests to pass
* send requests to the main API instead of to the EC2 subset -- so that it can parse out the '/services/' prefix.  Also, oops, match on path\_info instead of path like we're supposed to
* Remove unused APIRequestContext.handler
* Use port that boto expects
* merged orm branch
* scheduler + unittests
* removed underscores from used context
* updated models a bit and removed service classes
* Small typos, plus rework api\_unittest to use WSGI instead of Tornado
* Replace an if/else with a dict lookup to a factory method
* Nurrr
* Abstractified generalization mechanism
* Revert the changes to the qemu libvirt template and make the appropriate changes in the UML template where they belong
* Create console.log ahead of time. This ensures that the user running nova-compute maintains read privileges
* This improves the changelog generated as part of "setup.py sdist". If you look at it now, it says that Tarmac has done everything and every little commit is listed. With this patch, it only logs the "top-most" commit and credits the author rather than the committer
* Fix simple errors to the point where we can run the tests [but not pass]
* notes -- conversion 'complete' except now the unit tests won't work and surely i have bugs :)
* Moved API tests into a sub-folder of the tests/ and added a stubbed-out test declarations to mirror existing API tickets
* Delete rbac.py, moving @rbac decorator knowledge into api.ec2.Authorizer WSGI middleware
* Break Router() into Router() and Executor(), and put Authorizer() (currently a stub) in between them
* Return error Responses properly, and don't muck with req.params -- make a copy instead
* merged orm branch
* pylint clean of manager and service
* pylint cleanup of db classes
* rename node\_name to host
* merged trunk
* Call getInfo() instead of getVersion() on the libvirt connection object. virConnectGetVersion was not exposed properly in the python bindings until quite recently, so this makes us rather more backwards compatible
* Better log formatter for Nova. It's just like gnuchangelog, but logs the author rather than the committer
* Remove all Twisted defer references from cloud.py
* Remove inlineCallbacks and yield from cloud.py, as eventlet doesn't need it
* Move cloudcontroller and admincontroller into new api
* Adjust setup.py to match nova-rsapi -> nova-api-new rename
* small import cleanup
* Get rid of some convoluted exception handling that we don't need in eventlet
* First steps in reworking EC2 APIRequestHandler into separate Authenticate() and Router() WSGI apps
* Call getInfo() instead of getVersion() on the libvirt connection object. virConnectGetVersion was not exposed properly in the python bindings until quite recently, so this makes us rather more backwards compatible
* Fix up setup.py to match nova-rsapi -> nova-api-new rename
* a little more cleanup in compute
* pylint cleanup of tests
* add missing manager classes
* volume cleanup
* more cleanup and pylint fixes
* more pep8
* more pep8
* pep8 cleanup
* add sqlalchemy to pip requires
* merged trunk, fixed a couple errors
* Delete \_\_init\_\_.py in prep for turning apirequesthandler into \_\_init\_\_
* Move APIRequestContext into its own file
* Move APIRequest into its own file
* run and terminate work
* Move class into its own file
* fix daemon get
* Notes for converting Tornado to Eventlet
* undo change to get\_my\_ip
* all tests pass again
* rollback on exit
* merged session from devin
* Added session.py
* Removed get\_backup\_schedules from the image test
* merged devin's sqlalchemy changes
* Making tests pass
* Reconnect to libvirt on broken connection
* pylint fixes for /nova/virt/connection.py
* pylint fixes for nova/objectstore/handler.py
* ip addresses work now
* Add Flavors controller supporting
* Resolve conflicts and merge trunk
* Detect if libvirt connection has been broken and reestablish it
* instance runs
* Dead code removal
* remove creation of volume groups on boot
* tests pass
* Making tests pass
* Making tests pass
* Refactored orm to support atomic actions
* moved network code into business layer
* move None context up into cloud
* split volume into service/manager/driver
* moved models.py
* removed the last few references to models.py
* chown disk images to root for uml. Due to libvirt dropping CAP\_DAC\_OVERRIDE for uml, root needs to have explicit access to the disk images for stuff to work
* Create console.log ahead of time. This ensures that the user running nova-compute maintains read privileges
* fixed service mox test cases
* Renamed test.py and moved a test as per merge proposal feedback
* fixed volume unit tests
* work endpoint/images.py into an S3ImageService.  The translation isn't perfect, but it's a start
* get to look like trunk
* Set UML guests to use a file as their console. This halfway fixes get-console-output for them
* network tests pass again
* Fixes issue with the same ip being assigned to multiple instances
* merged trunk and fixed tests
* Support GET /<controller>/detail
* Moved API tests into a sub-folder of the tests/ and added a stubbed-out test declarations to mirror existing API tickets
* Turn imageid translator into general translator for rackspace api ids
* move network\_type flag so it is accesible in data layer
* Use compute.instance\_types for flavor data instead of a FlavorService
* more data layer breakouts, lots of fixes to cloud.py
* merged jesse
* Initial support for Rackspace API /image requests.  They will eventually be backed by Glance
* Fix a pep8 violation
* improve the volume export - sleep & check export
* missing context and move volume\_update to before the export
* update volume create code
* A few small changes to install\_venv to let venv builds work on the tarmac box
* small tweaks
* move create volume to work like instances
* work towards volumes using db layer
* merge vish
* fix setup compute network
* merge vish
* merge vish
* use vlan for network type since it works
* merge vish
* more work on getting running instances to work
* merge vish
* more cleanup
* Flavors work
* pep8
* Delete unused directory
* Move imageservice to its own directory
* getting run/terminate/describe to work
* OK, break out ternary operator (good to know that it slowed you down to read it)
* Style fixes
* fix some errors with networking rules
* typo in release\_ip
* run instances works
* Ensure that --gid and --uid options work for both twisted and non-twisted daemons
* Fixes an error in setup\_compute\_network that was causing network setup to fail
* add back in the needed calls for dhcpbridge
* removed old imports and moved flags
* merge and fixes to creates to all return id
* bunch more fixes
* moving network code and fixing run\_instances
* jesse's run\_instances changes
* fix daemons and move network code
* Rework virt.xenapi's concurrency model.  There were many places where we were inadvertently blocking the reactor thread.  The reworking puts all calls to XenAPI on background threads, so that they won't block the reactor thread
* merged trunk and fixed merge errors
* Refactored network model access into data abstraction layer
* Get the output formatting correct
* Typo
* Don't serialize in Controller subclass now that wsgi.Controller handles it for us
* Move serialize() to wsgi.Controller so \_\_call\_\_ can serialize() action return values if they are dicts
* Serialize properly
* Support opaque id to rs int id as well
* License
* Moves auth.manager to the data layer
* Add db abstraction and unittets for service.py
* Clarified what the 'Mapped device not found' exception really means. Fixed TODO. Some formatting to be closer to 80 chars
* Added missing "self."
* Alphabetize the methods in the db layer
* fix concurrency issue with multiple instances getting the same ip
* small fixes to network
* Fixed typo
* Better error message on subprocess spawn fail, and it's a ProcessExecutionException irrespective of how the process is run
* Check exit codes when spawning processes by default Also pass --fail to curl so that it sets exit code when download fails
* PEP8/pylint cleanup in bin and nova/auth
* move volume code into datalayer and cleanup
* Complete the Image API against a LocalImageService until Glance's API exists (at which point we'll make a GlanceImageService and make the choice of ImageService plugin configurable.)
* Added unit tests for WSGI helpers and base WSGI API
* merged termies abstractions
* Move deferredToThread into utils, as suggested by termie
* Remove whitespace to match style guide
* Data abstraction for compute service
* this file isn't being used
* Cleaned up pep8/pylint style issues in nova/auth. There are still a few pylint warnings in manager.py, but the patch is already fairly large
* More pylintrc updates
* fix report state
* Removed old cloud\_topic queue setup, it is no longer used
* last few test fixes
* More bin/ pep8/pylint cleanup
* fixing more network issues
* Added '-' as possible charater in module rgx
* Merged with trunk
* Updated the tests to use webob, removed the 'called' thing and just use return values instead
* Fix unit test bug this uncovered: don't release\_ip that we haven't got from issue\_ip
* Fix to better reflect (my believed intent) as to the meaning of error\_ok (ignore stderr vs accept failure)
* Merged with trunk
* use with\_lockmode for concurrency issues
* First in a series of patches to port the API from Tornado to WSGI. Also includes a few small style fixes in the new API code
* Pull in ~eday/nova/api-port
* Merged trunk
* Merged api-port into api-port-1
* Since pylint=0.19 is our version, force everyone to use the disable-msg syntax
* Missed one
* Removed the 'controllers' directory under 'rackspace' due to full class name redundancy
* pep8 typo
* Changed our minds: keep pylint equal to Ubuntu Lucid version, and use disable-msg throughout
* Fixed typo
* Image API work
* Newest pylint supports 'disable=', not 'disable-msg='
* Fix pep8 violation
* tests pass
* network tests pass
* Added unittests for wsgi and api
* almost there
* progress on tests passing
* remove references to deleted files so tests run
* fix vpn access for auth
* merged trunk
* removed extra files
* network datamodel code
* In an effort to keep new and old API code separate, I've created a nova.api to put all new API code under. This means nova.endpoint only contains the old Tornado implementation. I also cleaned up a few pep8 and other style nits in the new API code
* No longer installs a virtualenv automatically and adds new options to bypass the interactive prompt
* Stylistic improvements
* Add documentation to spawn, reboot, and destroy stating that those functions should return Deferreds.  Update the fake implementations to do so (the libvirt ones already do, and making the xenapi ones do so is the subject of a current merge request)
* start with model code
* clean up linux\_net
* merged refresh from sleepsonthefloor
* See description of change... what's the difference between that message and this message again?
* Move eventlet-using class out of endpoint/\_\_init\_\_.py into its own submodule, so that twisted-related code using endpoint.[other stuff] wouldn't run eventlet and make unit tests throw crazy errors about eventlet 0.9.10 not playing nicely with twisted
* Remove duplicate definition of flag
* The file that I create automates this step in http://wiki.openstack.org/InstallationNova20100729 :
* Simpler installation, and, can run install\_venv from anywhere instead of just from checkout root
* Use the argument handler specified by twistd, if any
* Fixes quite a few style issues across the entire nova codebase bringing it much closer to the guide described in HACKING
* merge from trunk
* merged trunk
* merged trunk and fixed conflicts
* Fixes issues with allocation and deallocation of fixed and elastic addresses
* Added documentation for the nova.virt connection interface, a note about the need to chmod the objectstore script, and a reference for the XenAPI module
* Make individual disables for R0201 instead of file-level
* All controller actions receive a 'req' parameter containing the webob Request
* improve compatibility with ec2 clients
* PEP8 and name corrections
* rather comprehensive style fixes
* fix launching and describing instances to work with sqlalchemy
* Add new libvirt\_type option "uml" for user-mode-linux.. This switches the libvirt URI to uml:///system and uses a different template for the libvirt xml
* typos
* don't try to create and destroy lvs in fake mode
* refactoring volume and some cleanup in model and compute
* Add documentation to spawn, reboot, and destroy stating that those functions should return Deferreds.  Update the fake implementations to do so (the libvirt ones already do, and making the xenapi ones do so is the subject of a current merge request)
* Rework virt.xenapi's concurrency model.  There were many places where we were inadvertently blocking the reactor thread.  The reworking puts all calls to XenAPI on background threads, so that they won't block the reactor thread
* add refresh on model
* merge in latedt from vish
* Catches and logs exceptions for rpc calls and raises a RemoteError exception on the caller side
* Removes requirement of internet connectivity to run api server
* Fixed path to keys directory
* Update cloud\_unittest to match renamed internal function
* Removes the workaround for syslog-ng of removing newlines
* Fixes bug lp:616312 by reversing the order of args in nova-manage when it calls AuthManager.get\_credentials
* merged trunk
* Sets a hostname for instances that properly resolves and cleans up network classes
* merged fix-hostname and fixed conflict
* Implemented admin client / admin api for fetching user roles
* Improves pep8 compliance and pylint score in network code
* Bug #617776: DescribeImagesResponse contains type element, when it should be called imageType
* Bug 617913: RunInstances response doesn't meet EC2 specification
* remove more direct session interactions
* refactor to have base helper class with shared session and engine
* ComputeConnectionTestCase is almost working again
* more work on trying to get compute tests passing
* re-add redis clearing
* make the fake-ldap system work again
* got run\_tests.py to run (with many failed tests)
* Bug #617776: DescribeImagesResponse contains type element, when it should be called imageType
* initial commit for orm based models
* Add a few unit tests for libvirt\_conn
* Move interfaces template into virt/, too
* Refactor LibvirtConnection a little bit for easier testing
* Remove extra "uml" from os.type
* Fixes out of order arguments in get\_credentials
* pep8 and pylint cleanup
* Support JSON and XML in Serializer
* Added note regarding dependency upon XenAPI.py
* Added documentation to the nova.virt interface
* make rpc.call propogate exception info.  Includes tests
* Undo the changes to cloud.py that somehow diverged from trunk
* Mergeprop cleanup
* Mergeprop cleanup
* Make WSGI routing support routing to WSGI apps or to controller+action
* Make --libvirt\_type=uml do the right thing: Sets the correct libvirt URI and use a special template for the XML
* renamed missed reference to Address
* die classmethod
* merged fix-dhcpbridge
* remove class method
* typo allocated should be relased
* rename address stuff to avoid name collision and make the .all() iterator work again
* keep track of leasing state so we can delete ips that didn't ever get leased
* remove syslog-ng workaround
* Merged with trunk
* Implement the same fix as lp:~vishvananda/nova/fix-curl-project, but for virt.xenapi
* Fix exception in get\_info
* Move libvirt.xml template into nova/virt
* Parameterise libvirt URI
* Merged with trunk
* fix dhcpbridge issues
* Adapts the run\_tests.sh script to allow interactive or automated creation of virtualenv, or to run tests outside of a virtualenv
* Prototype implementation of Servers controller
* Working router that can target WSGI middleware or a standard controller+action
* Added a xapi plugin that can pull images from nova-objectstore, and use that to get a disk, kernel, and ramdisk for the VM
* Serializing in middleware after all... by tying to the router.  maybe a good idea?
* Merged with trunk
* Actually pass in hostname and create a proper model for data in network code
* Improved roles functionality (listing & improved test coverage)
* support a hostname that can be looked up
* updated virtualenv to add eventlet, which is now a requirement
* Changes the run\_tests.sh and /tools/install\_venv.py scripts to be more user-friendly and not depend on PIP while not in the virtual environment
* Fixed admin api for user roles
* Merged list\_roles
* fix spacing issue in ldapdriver
* Fixes bug lp:615857 by changing the name of the zip export method in nova-manage
* Wired up admin api for user roles
* change get\_roles to have a flag for project\_roles or not. Don't show 'projectmanager' in list of roles
* Throw exceptions for illegal roles on role add
* Adds get\_roles commands to manager and driver classes
* more pylint fixes
* Implement VIF creation in the xenapi module
* lots more pylint fixes
* work on a router that works with wsgi and non-wsgi routing
* Pylint clean of vpn.py
* Further pylint cleanup
* Oops, we need eventlet as well
* pylint cleanup
* pep8 cleanup
* merged trunk
* pylint fixes for nova/objectstore/handler.py
* rename create\_zip to zipfile so lazy match works
* Quick fix on location of printouts when trying to install virtualenv
* Changes the run\_tests.sh and /tools/install\_venv.py scripts to be more user-friendly and not depend on PIP while not in the virtual environment.  Running run\_tests.sh should not just work out of the box on all systems supporting easy\_install..
* 2 changes in doing PEP8 & Pylint cleaning:  \* adding pep8 and pylint to the PIP requirements files for Tools  \* light cleaning work (mostly formatting) on nova/endpoints/cloud.py
* More changes to volume to fix concurrency issues.  Also testing updates
* Merge
* Merged nova-tests-apitest into pylint
* Merged nova-virt-connection into nova-tests-apitest
* Pylint fixes for /nova/tests/api\_unittest.py
* pylint fixes for nova/virt/connection.py
* merged trunk, fixed an error with releasing ip
* fix releasing to work properly
* Add some useful features to our flags
* pylint fixes for /nova/test.py
* Fixes pylint issues in /nova/server.py
* importing merges from hudson branch
* fixing - removing unused imports per Eric & Jay review
* initial cleanup of tests for network
* Implement the same fix as lp:~vishvananda/nova/fix-curl-project, but for virt.xenapi
* Run correctly even if called while in tools/ directory, as 'python install\_venv.py'
* This branch builds off of Todd and Michael's API branches to rework the Rackspace API endpoint and WSGI layers
* separated scheduler types into own modules
* Fix up variable names instead of disabling pylint naming rule.  Makes variables able to be a single letter in pylintrc
* Disables warning about TODO in code comments in pylintrc
* More pylint/pep8 cleanup, this time in bin/\* files
* pylint fixes for nova/server.py
* remove duplicated report\_state that exists in the base class more pylint fixes
* Fixed docstring format per Jay's review
* pylint fixes for /nova/test.py
* Move the xenapi top level directory under plugins, as suggested by Jay Pipes
* Pull trunk merge through lp:~ewanmellor/nova/add-contains
* Pull trunk merge through lp:~ewanmellor/nova/xapi-plugin
* Merged with trunk again
* light cleanup - convention stuff mostly
* convention and variable naming cleanup for pylint/pep8
* Used new (clearer) flag names when calling processes
* Merged with trunk
* Greater compliance with pep8/pylint style checks
* removing what appears to be an unused try/except statement - nova.auth.manager.UserError doesn't exist in this codebase. Leftover? Something intended to be there but never added?
* variable name cleanup
* attempting some cleanup work
* adding pep8 and pylint for regular cleanup tasks
* Cleaned up pep8/pylint for bin/\* files. I did not fix rsapi since this is already cleaned up in another branch
* Merged trunk
* Reworked WSGI helper module and converted rackspace API endpoint to use it
* Changed the network imports to use new network layout
* merged with trunk
* Change nova/virt/images.py's \_fetch\_local\_image to accept 4 args, since fetch() tries to call it with that many
* Merged Todd and Michael's changes
* pep8 and pylint cleanups
* Some pylink and pep8 cleanups. Added a pylintrc file
* fix copyrights for new files, etc
* a few more commands were putting output on stderr.  In general, exceptions on stderr output seems like a bad idea
* Moved Scheduler classes into scheduler.py.  Created a way to specify scheduler class that the SchedulerService uses..
* Make network its own worker! This separates the network logic from the api server, allowing us to have multiple network controllers. There a lot of stuff in networking that is ugly and should be modified with the datamodel changes. I've attempted not to mess with those things too much to keep the changeset small(ha!)
* Fixed instance model associations to host (node) and added association to ip
* Fixed write authorization for public images
* Fixes a bug where if a user was removed from a group after he had a role, he could not be re-added
* fix search/replace error
* merged trunk
* Start breaking out scheduler classes..
* WsgiStack class, eventletserver.serve. Trying to work toward a simple API that anyone can use to start an eventlet-based server composed of several WSGI apps
* Use webob to simplify wsgi middleware
* Made group membership check only search group instead of subtree.  Roles in a group are removed when a user is removed from that group.  Added test
* Fixes bug#614090 -- nova.virt.images.\_fetch\_local\_image being called with 4 args but only has 3
* Fixed image modification authorization, API cleanup
* fixed doc string
* compute topic for a node is compute.node not compute:node!
* almost there on random scheduler.  not pushing to correct compute node topic, yet, apparently..
* First pass at making a file pass pep8 and pylint tests as an example
* merged trunk
* rename networkdata to vpn
* remove extra line accidentally added
* compute nodes should store total memory and disk space available for VMs
* merged from trunk
* added bin/nova-listinstances, which is mostly just a duplication of euca-describe-instances but doesn't go through the API
* Fixes various concurrency issues in volume worker
* Changed volumes to use a pool instead of globbing filesystem for concurrency reasons.  Fixed broken tests
* clean up nova-manage. If vpn data isn't set for user it skips it
* method is called set\_network\_host
* fixed circular reference and tests
* renamed Vpn to NetworkData, moved the creation of data to inside network
* fix rpc command line call, remove useless deferreds
* fix error on terminate instance relating to elastic ip
* Move the xenapi top level directory under plugins, as suggested by Jay Pipes
* fixed tests, moved compute network config call, added notes, made inject option into a boolean
* fix extra reference, method passing to network, various errors in elastic\_ips
* use iteritems
* reference to self.project instead of context.project + self.network\_model instead of network\_model
* fixes in get public address and extra references to self.network
* method should return network topic instead of  network host
* use deferreds in network
* don't \_\_ module methods
* inline commands use returnValue
* it helps to save files BEFORE committing
* Added note to README
* Fixes the curl to pass in the project properly
* Adds flag for libvirt type (hvm, qemu, etc)
* Fix deprecation warning in AuthManager. \_\_new\_\_ isn't allowed to take args
* created assocaition between project and host, modified commands to get host async, simplified calls to network
* use get to retrieve node\_name from initial\_state
* change network\_service flag to network\_type and don't take full class name
* vblade commands randomly toss stuff into stderr, ignore it
* delete instance doesn't fail if instances dir doesn't exist
* Huge network refactor, Round I
* Fixes boto imports to support both beta and older versions of boto
* Get IP doesn't fail of you not connected to the intetnet
* updated doc string and wrapper
* add copyright headers
* Fix exception in get\_info
* Implement VIF creation
* Define \_\_contains\_\_ on BasicModel, so that we can use "x in datamodel"
* Fixed instance model associations to host (node) and added association to ip
* Added a xapi plugin that can pull images from nova-objectstore, and use that to get a disk, kernel, and ramdisk for the VM.  The VM actually boots!
* Added project as parameter to admin client x509 zip file download
* Turn the private \_image\_url(path) into a public image\_url(image).  This will be used by virt.xenapi to instruct xapi as to which images to download
* Merged in configurable libvirt\_uri, and fixes to raw disk images from the virtualbox branch
* Fixed up some of the raw disk stuff that broke in the abstraction out of libvirt
* Merged with raw disk image
* Recognize 'magic' kernel value that means "don't use a kernel" - currently aki-00000000
* Fix Tests
* Fixes nova volumes.  The async commands yield properly.  Simplified the call to create volume in cloud.  Added some notes
* another try on fix boto
* use user.access instead of user.id
* Fixes access key passing in curl statement
* Accept a configurable libvirt\_uri
* Added Cheetah to pip-requires
* Removed duplicate toXml method
* Merged with trunk
* Merged with trunk, added note about suspicious behaviour
* Added exit code checking to process.py (twisted process utils).  A bit of class refactoring to make it work & cleaner. Also added some more instructive messages to install\_venv.py, because otherwise people that don't know what they're doing will install the wrong pip... i.e. I did :-)
* Make nodaemon twistd processes log to stdout
* Make nodaemon twistd processes log to stdout
* use the right tag
* flag for libvirt type
* boto.s3 no longer imports connection, so we need to explicitly import it
* Added project param to admin client zip download
* boto.utils import doesn't work with new boto, import boto instead
* fix imports in endpoint/images.py boto.s3 no longer imports connection, so we need to explicitly import it
* Added --fail argument to curl invocations, so that HTTP request fails get surfaced as non-zero exit codes
* Merged with trunk
* Merged with trunk
* strip out some useless imports
* Add some useful features to our flags
* Fixed pep8 in run\_test.py
* Blank commit to get tarmac merge to pick up the tags
* Fixed assertion "Someone released me too many times: too many tokens!"
* Replace the second singleton unit test, lost during a merge
* Merged with trunk to resolve merge conflicts
* oops retry and add extra exception check
* Fix deprecation warning in AuthManager. \_\_new\_\_ isn't allowed to take args
* Added ChangeLog generation
* Implemented admin api for rbac
* Move the reading of API parameters above the call to \_get\_image, so that they have a chance to take effect
* Move the reading of API parameters above the call to \_get\_image, so that they have a chance to take effect
* Adds initial support for XenAPI (not yet finished)
* More merges from trunk.  Not everything came over the first time
* Allow driver specification in AuthManager creation
* pep8
* Fixed pep8 issues in setup.py - thanks redbo
* Use default kernel and ramdisk properly by default
* Adds optional user param to the get projects command
* Ensures default redis keys are lowercase like they were in prior versions of the code
* Pass in environment to dnsmasq properly
* Releaed 0.9.0, now on 0.9.1
* Merged trunk
* Added ChangeLog generation
* Wired up get/add/remove project members
* Merged lp:~vishvananda/nova/lp609749
* Removes logging when associating a model to something that isn't a model class
* allow driver to be passed in to auth manager instead of depending solely on flag
* make redis name default to lower case
* Merged get-projects-by-user
* Merged trunk
* Fixed project api
* Specify a filter by user for get projects
* Create a model for storing session tokens
* Fixed a typo from the the refactor of auth code
* Makes ldap flags work again
* bzr merge lp:nova/trunk
* Tagged 0.9.0 and bumped the version to 0.9.1
* Silence logs when associated models aren't found.  Also document methods used ofr associating things.  And get rid of some duplicated code
* Fix dnsmasq commands to pass in environment properly

0.9.0
-----

* Got the tree set for debian packaging
* use default kernel and ramdisk and check for legal access
* import ldapdriver for flags
* Removed extra include
* Added the gitignore files back in for the folks who are still on the git
* Added a few more missing files to MANIFEST.in and added some placeholder files so that setup.py would carry the empty dir
* Updated setup.py file to install stuff on a python setup.py install command
* Removed gitignore files
* Made run\_tests.sh executable
* Put in a single MANIFEST.in file that takes care of things
* Changed Makefile to shell script. The Makefile approach completely broke debhelper's ability to figure out that this was a python package
* fixed typo from auth refactor
* Add sdist make target to build the MANIFEST.in file
* Removes debian dir from main tree. We'll add it back in in a different branch
* Merged trunk
* Wired up user:project auth calls
* Bump version to 0.9.0
* Makes the compute and volume daemon workers use a common base class called Service. Adds a NetworkService in preparation for splitting out networking code.  General cleanup and standardizarion of naming
* fixed path to keys directory
* Fixes Bug lp:610611: deleted project vlans are deleted from the datastore before they are reused
* Add a 'sdist' make target. It first generates a MANIFEST.in based on what's in bzr, then calls python setup.py sdist
* properly delete old vlans assigned to deleted projects
* Remove debian/ from main branch
* Bump version to 0.9.0. Change author to "OpenStack". Change author\_email to nova@lists.launchpad.net. Change url to http://www.openstack.org/. Change description to "cloud computing fabric controller"
* Make "make test" detect whether to use virtualenv or not, thus making virtualenv optional
* merged trunk
* Makes the objectstore require authorization, checks it properly, and makes nova-compute provide it when fetching images
* Automatically choose the correct type of test (virtualenv or system)
* Ensure that boto's config has a "Boto" section before attempting to set a value in it
* fixes buildpackage failing with dh\_install: missing files
* removed old reference from nova-common.install and fixed spacing
* Flag for SessionToken ttl setting
* resolving conflict w/ merge, cleaning up virtenv setups
* resolving conflict w/ merge, cleaning up virtenv setups
* Fixes bug#610140. Thanks to Vish and Muharem for the patch
* A few minor fixes to the virtualenv installer that were breaking on ubuntu
* Give SessionToken an is\_expired method
* Refactor of auth code
* Fixes bug#610140.  Thanks to Vish and Muharem for the patch
* Share my updates to the Rackspace API
* Fixes to the virtualenv installer
* Ensure consistent use of filename for dhcp bridge flag file
* renamed xxxservice to service
* Began wiring up rbac admin api
* fix auth\_driver flag to default to usable driver
* Adds support scripts for installing deps into a virtualenv
* In fact, it should delete them
* Lookup should only not return expired tokens
* Adds support scripts for installing deps into a virtualenv
* default flag file full path
* moved misnamed nova-dchp file
* Make \_fetch\_s3\_image pass proper AWS Authorization headers so that image downloads work again
* Make image downloads work again in S3 handler. Listing worked, but fetching the images failed because I wasn't clever enough to use twisted.web.static.File correctly
* Move virtualenv installation out of the makefile
* Expiry awareness for SessionToken
* class based singleton for SharedPool
* Basic standup of SessionToken model for shortlived auth tokens
* merged trunk
* merged trunk
* Updated doc layout to the Sphinx two-dir layout
* Replace hardcoded "nova" with FLAGS.control\_exchange
* Add a simple set of tests for S3 API (using boto)
* Fix references to image\_object. This caused an internal error when using euca-deregister
* Set durable=False on TopicPublisher
* Added missing import
* Replace hardcoded example URL, username, and password with flags called xenapi\_connection\_url, xenapi\_connection\_username, xenapi\_connection\_password
* Fix instance cleanup
* Fix references to image\_object.  This caused an internal error when using euca-deregister
* removed unused assignment
* More Cleanup of code
* Fix references to get\_argument, fixing internal error when calling euca-deregister
* Changes nova-volume to use twisted
* Fixes up Bucket to throw proper NotFound and NotEmpty exceptions in constructor and delete() method, and fixes up objectstore\_unittest to properly use assertRaises() to check for proper exceptions and remove the assert\_ calls
* Adds missing yield statement that was causing partitioning to intermittently fail
* Merged lp:~ewanmellor/nova/lp609792
* Merged lp:~ewanmellor/nova/lp609791
* Replace hardcoded "nova" with FLAGS.control\_exchange
* Set durable=False on TopicPublisher, so that it matches the flag on TopicConsumer.  This ensures that either redeclaration of the control\_exchange will use the same flag, and avoid AMQPChannelException
* Add an import so that nova-compute sees the images\_path flag, so that it can be used on the command line
* Return a 404 when attempting to access a bucket that does not exist
* Removed creation of process pools.  We don't use these any more now that we're using process.simple\_execute
* Fix assertion "Someone released me too many times: too many tokens!" when more than one process was running at the same time.  This was caused by the override of SharedPool.\_\_new\_\_ not stopping ProcessPool.\_\_init\_\_ from being run whenever process.simple\_execute is called
* Always make sure to set a Date headers, since it's needed to calculate the S3 Auth header
* Updated the README file
* Updated sphinx layout to a two-dir layout like swift. Updated a doc string to get rid of a Sphinx warning
* Updated URLs in the README file to point to current locations
* Add missing import following merge from trunk (cset 150)
* Merged with trunk, since a lot of useful things have gone in there recently
* fixed bug where partition code was sometimes failing due to initial dd not being yielded properly
* Fixed bug 608505 - was freeing the wrong address (should have freed 'secondaddress', was freeing 'address')
* renamed xxxnode to xxservice
* Add (completely untested) code to include an Authorization header for the S3 request to fetch an image
* Check signature for S3 requests
* Fixes problem with describe-addresses returning all public ips instead of the ones for just the user's project
* Fix for extra spaces in export statements in scripts relating to x509 certs
* Adds a Makefile to fill dependencies for testing
* Fix syslogging of exceptions by stripping newlines from the exception info
* Merged fix for bug 608505 so unit tests pass
* Check exit codes when spawning processes by default
* Nobody wants to take on this twisted cleanup.  It works for now, but could be much nicer if twisted has a nice hook-point for exception mapping
* syslog changes
* typo fixes and extra print statements removed
* added todo for ABC
* Fixed bug 608505 - was freeing the wrong address (should have freed 'secondaddress', was freeing 'address')
* Merged trunk, fixed extra references to fake\_users
* refactoring of imports for fakeldapdriver
* make nova-network executable
* refactor daemons to use common base class in preparation for network refactor
* reorder import statement and remove commented-out test case that is the same as api\_unittest in objectstore\_unittest
* Fixes up Bucket to throw proper NotFound and NotEmpty exceptions in constructor and delete() method, and fixes up objectstore\_unittest to properly use assertRaises() to check for proper exceptions and remove the assert\_ calls
* Fix bug 607501.  Raise 403, not exception if Authorization header not passed. Also added missing call to request.finish() & Python exception-handling style tweak
* merge with twisted-volume
* remove all of the unused saved return values from attach\_to\_twisted
* fix for describe addresses showing everyone's public ips
* update the logic for calculating network sizes
* Locally administered mac addresses have the second least significant bit of the most significant byte set. If this byte is set then udev on ubuntu doesn't set persistent net rules
* use a locally administered mac address so it isn't saved by udev
* Convert processpool to a singleton, and switch node.py calls to use it. (Replaces passing a processpool object around all the time.)
* Fixed the broken reference to
* remove spaces from export statements in scripts relating to certs
* Cleanups
* Able to set up DNS, and remove udev network rules
* Move self.ldap to global ldap to make changes easier if we ever implement settings
* Cleanup per suggestions
* network unittest clean up
* Test cleanup, make driver return dictionaries and construct objects in manager
* Able to boot without kernel or ramdisk.  libvirt.xml.template is now a Cheetah template
* Merged https://code.launchpad.net/~justin-fathomdb/nova/copy-error-handling
* Merged bug fixes
* Map exceptions to 404 / 403 codes, as was done before the move to twisted. However, I don't think this is the right way to do this in Twisted.  For example, exceptions thrown after the render method returns will not be mapped
* Merged lp:~justin-fathomdb/nova/bug607501
* Merged trunk. Fixed new references to UserManager
* I put the call to request.finish() in the wrong place. :-(
* More docstrings, don't autocreate projects
* Raise 401, not exception if Authorization header not passed.  Also minor fixes & Python exception-handling style tweak
* LdapDriver cleanup: docstrings and parameter ordering
* Ask curl to set exit code if resource was not found
* Fixes to dhcp lease code to use a flagfile
* merged trunk
* Massive refactor of users.py
* Hmm, serves me right for not understanding the request, eh? :) Now too\_many\_addresses test case is idempotent in regards to running in isolation and uses self.flags.network\_size instead of the magic number 32
* Redirect STDERR to output to an errlog file when running run\_tests.py
* Send message ack in rpc.call and make queues durable
* Fixed name change caused by remove-vendor merge
* Replace tornado objectstore with twisted web
* merged in trunk and fixed import merge errors
* First commit of XenAPI-specific code (i.e. connections to the open-source community project Xen Cloud Platform, or the open-source commercial product Citrix XenServer)
* Remove the tight coupling between nova.compute.monitor and libvirt.  The libvirt-specific code was placed in nova.virt.libvirt\_conn by the last changeset.  This greatly simplifies the monitor code, and puts the libvirt-specific XML record parsing in a libvirt-specific place
* In preparation for XenAPI support, refactor the interface between nova.compute and the hypervisor (i.e. libvirt)
* Fixed references to nova.utils that were broken by a change of import statement in the remove-vendor merge
* Remove s3\_internal\_port setting. Objectstore should be able to handle the beatings now. As such, nginx is no longer needed, so it's removed from the dependencies and the configuration files are removed
* Replace nova-objectstore with a twistd style wrapper. Add a get\_application method to objectstore handler
* Minor post-merge fixes
* Fixed \_redis\_name and \_redis\_key
* Add build\_sphinx support
* fix conf file to no longer have daemonize=1 because twistd daemonizes by default
* make nova-volume start with twisteds daemonize stuff
* Makin the queues non-durable by default
* Ack messages during call so rabbit leaks less
* simplify call to simple\_execute
* merge extra singleton-pool changes
* Added a config file to let setup.py drive building the sphinx docs
* make simple method wrapper for process pool simple\_execute
* change volume code to use twisted
* remove calls to runthis from node
* merge with singleton pool
* Removed unused Pool from process.py, added a singleton pool called SharedPool, changed calls in node to use singleton pool
* Fixes things that were not quite right after big merge party
* Make S3 API handler more idiomatic Twisted Web-y
* \_redis\_name wasn't picking up override\_type correctly, and \_redis\_key wasn't using it
* Quick fix to variable names for consistency in documentation..
* Adds a fix to the idempotency of the test\_too\_many\_addresses test case by adding a simple property to the BaseNetwork class and calculating the number of available IPs by asking the network class to tell the test how many static and preallocated IP addresses are in use before entering the loop to "blow up" the address allocation..
* Adds a flag to redirect STDERR when running run\_tests.py.  Defaults to a truncate-on-write logfile named run\_tests.err.log.  Adds ignore rule for generated errlog file
* no more print in storage unittest
* reorder imports spacing
* Fixes to dhcp lease code to use a flagfile
* merged trunk
* This branch fixes some unfortunate interaction between Nova and boto
* Make sure we pass str objects instead of unicode objects to boto as our credentials
* remove import of vendor since we have PPA now
* Updates the test suite to work
* Disabled a tmpdir cleanup
* remove vendor
* update copyrights
* Volume\_ID identifier needed a return in the property. Also looking for race conditions in the destructor
* bin to import images from canonical image store
* add logging import to datastore
* fix merge errors
* change default vpn ports and remove complex vpn ip iteration
* fix reference to BasicModel and imports
* Cleanups related to BasicModel (whitespace, names, etc)
* Updating buildbot address
* Fixed buildbot
* work on importing images
* When destroying an Instance, disassociate with Node
* Smiteme
* Smiteme
* Smiteme
* Smiteme
* Move BasicModel into datastore
* Smiteme
* Smiteme
* Whitespace change
* unhardcode the binary name
* Fooish
* Finish singletonizing UserManager usage
* Debian package additions for simple network template
* Foo
* Whitespace fix
* Remove debug statement
* Foo
* fix a typo
* Added build-deps to debian/control that are needed to run test suite. Fixed an error in a test case
* optimization to not load all instances when describe instances is called
* More buildbot testing
* More buildbot testing
* More buildbot testing
* More buildbot testing
* More buildbot testing
* More buildbot testing
* Addin buildbot
* Fix merge changelog and merge errors in utils.py
* Fixes from code review
* release 0.2.2-10
* fix for extra space in vblade-persist
* Avoid using s-expr, pkcs1-conv, and lsh-export-key
* release 0.2.2-9
* fixed bug in auth group\_exists
* Move nova related configuration files into /etc/nova/
* move check for none before get mpi data
* Refactored smoketests flags
* Fixes to smoketest flags
* Minor smoketest refactoring
* fixes from code review
* typo in exception in crypto
* datetime import typo
* added missing isotime method from utils
* release 0.2.2-8
* missed a comma
* release 0.2.2-7
* use a flag for cert subject
* whitespace fixes and header changes
* Fixed the os.environ patch (bogus)
* Fixes as per Vish review (whitespace, import statements)
* Off by one error in the allocation test (can someone check my subnet math?)
* Adding more tests, refactoring for dhcp logic
* Got dhcpleasor working, with test ENV for testing, and rpc.cast for real world
* Capture signals from dnsmasq and use them to update network state
* Relax the Twisted dependency to python-twisted-core (rather than the full stack)
* releasing version 0.3.0+really0.2.2-0ubuntu0ppa3
* If set, pass KernelId and RamdiskId from RunInstances call to the target compute node
* Add a default flag file for nova-manage to help it find the CA
* Ship the CA directory in nova-common
* Add a dependency on nginx from nova-objectsstore and install a suitable configuration file
* releasing version 0.3.0+really0.2.2-0ubuntu0ppa2
* Don't pass --daemonize=1 to nova-compute. It's already daemonising by default
* Add debian/nova-common.dirs to create var/lib/nova/{buckets,CA,images,instances,keys,networks}
* keeper\_path is really caled datastore\_path
* Fixed package version
* Move templates from python directories to /usr/share/nova
* Added --network\_path setting to nova-compute's flagfile
* releasing version 0.3.0+really0.2.2-0ubuntu0ppa1
* Use rmdir instead of rm -rf to remove a tempdir
* Set better defaults in flagfiles
* Fixes and add interface template
* Simple network injection
* Simple Network avoids vlans
* clean a few merge errors from network
* Add curl as a dependency of nova-compute
* getting started update
* getting started update
* Remove \_s errors from merge
* fix typos in node from merge
* remove spaces from default cert
* Make sure get\_assigned\_vlans and BaseNetwork.hosts always return a dict, even if the key is currently empty in the KVS
* Add \_s instance attribute to Instance class. It's referenced in a bunch of places, but is never set. This is unlikely to be the right fix (why have two attributes pointing to the same object?), but it seems to make ends meet
* Replace spaces in x509 cert subject with underscores. It ends up getting split(' ')'ed and passed to subprocess.Popen, so it needs to not have spaces in it, otherwise openssl gets very upset
* Expand somewhat on the short and long descriptions in debian/control
* Use separate configuration files for the different daemons
* Removed trailing whitespace from header
* Updated licenses
* Added flags to smoketests. General cleanup
* removed all references to keeper
* reformatting
* Vpn ips and ports use redis
* review reformat
* code review reformat
* We need to be able to look up Instance by Node (live migration)
* Get rid of RedisModel
* formatting fixes and refactoring from code review
* reformatting to fit within 80 characters
* simplified handling of tempdir for Fakes
* fix for multiple shelves for each volume node
* add object class violation exception to fakeldap
* remove spaces from default cert
* remove silly default from generate cert
* fix of fakeldap imports and exceptions
* More Comments, cleanup, and reformatting
* users.py cleanup for exception handling and typo
* Make fakeldap use redis
* Refactor network.Vlan to be a BasicModel, since it touched Redis
* bugfix: rename \_s to datamodel in Node in some places it was overlooked
* fix key injection script
* Fixes based on code review 27001
* added TODO
* Admin API + Worker Tracking
* fixed typo
* style cleanup
* add more info to vpn list
* Use flag for vpn key suffix instead of hardcoded string
* don't fail to create vpn key if dir exists
* Create Volume should only take an integer between 0 and 1000
* Placeholders for missing describe commands
* Set forward delay to zero (partial fix to bug #518)
* more comment reformatting
* fit comment within 80 lines
* removed extraneous reference to rpc in objectstore unit test
* Fix queue connection bugs
* Fix deletion of user when he is the last member of the group
* Fix error message for checking for projectmanager role
* Installer now creates global developer role
* Removed trailing whitespace from header
* added nova-instancemonitor debian config
* Updated licenses
* Added flags to smoketests. General cleanup
* A few missing files from the twisted patch
* Tweaks to get instancemonitor running
* Initial commit of nodemonitor
* Create DescribeImageAttribute api method
* release 0.2.2-6
* disk.py needed input for key injection to work
* release 2.2-5
* message checking callbacks only need to run 10 times a second
* release 2.2-4
* trackback formatting isn't logging correctly
* documentation updates
* fix missing tab in nova-manage
* Release 2.2-3
* use logger to print trace of unhandled exceptions
* add exit status to nova-manage
* fix fakeldap so it can use redis keeper
* fix is\_running failing because state was stored as a string
* more commands in nova-manage for projects and roles
* More volume test fixes
* typo in reboot instances
* Fix mount of drive for test image
* don't need sudo anymore
* Cleaning up smoketests
* boto uses instance\_type not size
* Fix to volume smoketests
* fix display of project name for admin in describe instances
* make sure to deexpress before we remove the host since deexpress uses the host
* fix error in disassociate address
* fixed reversed filtering logic
* filter keypairs for vpn keys
* allow multiple vpn connections with the same credentials
* Added admin command to restart networks
* hide vpn instances unless you are an admin and allow run\_instances to launch vpn image even if it is private
* typo in my ping call
* try to ping vpn instances
* sensible defaults for instance types
* add missing import to pipelib
* Give vpns the proper ip address
* Fix format addresses
* Release 0.2.2-2
* fix more casing errors and make attachment set print
* removed extraneous .volume\_id
* don't allow volumes to be attached to the same mountpoint
* fix case for volume attributes
* fix sectors off by one
* Don't use keeper for instances
* fix default state to be 0 instead of pending
* Release 0.2.2
* Fix for mpi cpu reporting
* fix detach volume
* fix status code printing in cloud
* add project ids to volumes
* add back accidentally removed bridge name. str is reserved, so don't use it as a variable name
* whitespace fixes and format instances set of object fixes
* Use instdir to iterate through instances
* fix bridge name
* Adding basic validation of volume size on creation, plus tests for it
* finished gutting keeper from volume
* First pass at validation unit tests. Haven't figured out class methods yet
* Removing keeper sludge
* Set volume status properly, first pass at validation decorators
* Adding missing default values and fixing bare Redis fetch for volume list
* one more handler typo
* fix objectstore handler typo
* fix modify image attribute typo
* NetworkNode doesn't exist anymore
* Added back in missing gateway property on networks
* Refactored Instance to get rid of \_s bits, and fixed some bugs in state management
* Delete instance files on shutdown
* Flush redis db in setup and teardown of tests
* Cleaning up my accidental merge of the docs branch
* change pipelib to work with projects
* Volumes support intermediate state. Don't have to cast to storage nodes for attach/detach anymore, just let node update redis with state
* Adding nojekyll for directories
* Fix for #437 (deleting attached volumes), plus some >9 blade\_id fixes
* fix instance iteration to use self.instdir.all instead of older iterators
* nasa ldap defaults
* sensible rbac defaults
* Tests for rbac code
* Patch to allow rbac
* Adding mpi data
* Adding cloudpipe and vpn data back in to network.py
* how we build our debs
* Revert "fix a bug with AOE number generation"
* re-added cloudpipe
* devin's smoketests
* tools to clean vlans and run our old install script
* fix a bug with AOE number generation
* Initial commit of nodemonitor
* Create DescribeImageAttribute api method
* Create DescribeImageAttribute api method
* More rackspace API
* git checkpoint commit post-wsgi
* update spacing
* implement image serving in objectstore so nginx isn't required in development
* update twitter username
* make a "Running" topic instead of having it flow under "Configuration"
* Make nginx config be in a code block
* More doc updates: nginx & pycurl
* Add a README, because GitHub loves them.  Update the getting started docs
* update spacing
* Commit what I have almost working before diverging
* first go at moving from tornado to twisted
* implement image serving in objectstore so nginx isn't required in development
* update twitter username
* Update documentation
* fix for reactor.spawnProcess sending deprecation warning
* patch from issue 4001
* Fix for LoopingCall failing Added in exception logging around amqp calls Creating deferred in receive before ack() message was causing IOError (interrupted system calls), probably because the same message was getting processed twice in some situations, causing the system calls to be doubled. Moving the ack() earlier fixed the problem. The code works now with an interval of 0 but that causes heavy processor usage. An interval of 0.01 keeps the cpu usage within reasonable limits
* get rid of anyjson in rpc and fix bad reference to rpc.Connection
* gateway undefined
* fix cloud instances method
* Various cloud fixes
* make get\_my\_ip return 127.0.0.1 for testing
* Adds a Twisted implementation of a process pool
* make a "Running" topic instead of having it flow under "Configuration"
* Make nginx config be in a code block
* More doc updates: nginx & pycurl
* Add a README, because GitHub loves them.  Update the getting started docs
* whitespace fixes for nova/utils.py
* Add project methods to nova-manage
* Fix novarc to use project when creating access key
* removed reference to nonexistent flag
* Josh's networking refactor, modified to work with projects
* Merged Vish's work on adding projects to nova
* missed the gitignore
* initial commit
